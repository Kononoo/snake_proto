syntax = "proto3";

package goat_game;

option go_package = "git.17zjh.com/snake/snake_proto/activity/goat_game";

import "snakecommon/config.proto";
import "snakecommon/task.proto";

// 获取玩法主页信息
message GetInfoReq {
}

message GetInfoRsp {
  string intro = 1; // 玩法介绍
  int64 start_time = 2; // 开始时间
  int64 end_time = 3; // 结束时间
  repeated string tips_pool = 4; // tips 随机库
  repeated string group_name_pool = 5; // 队名随机池
  repeated int32 skin_ids = 6; // 喜灰玩法皮肤列表
  repeated EventTaskInfo event_list = 7; // 彩蛋任务
  int32 total_pvp_count = 8;    // 双人模式总游戏局数
  int32 today_pvp_count = 9;    // 今日双人游戏局数
  string act_id = 10; // 活动 id
  repeated int32 s_skin_ids = 11; // S 级皮肤列表
  repeated int32 xiyangyang_skin_ids = 12;
  repeated int32 meiyangyang_skin_ids = 13;
  repeated int32 lanyangyang_skin_ids = 14;
  repeated int32 xiaohuihui_skin_ids = 15;
}

message EventTaskInfo{
  int32 event_id = 1; // 任务活动 id
  repeated snakecommon.EventTask task_list = 2; // 任务列表
}

// 领取任务奖励
message GetTaskRewardReq {
  int32 event_id = 1;
  int32 task_id = 2;
}

message GetTaskRewardRsp {
  repeated snakecommon.CRewardItem reward_list = 1;
}

// 获取游戏结果
message GetGoatResultReq {
  int64 rid = 1;
}

message GetGoatResultRsp {
  int32 win_team_id = 1;      // 胜利的阵营 id
  repeated GoatTeamScore team_scores = 2; // 阵营分数
  int64 pvp_count = 3;        // 当前玩家游戏局数（结算了才算）
  int64 today_pvp_count = 4; // 今日游戏局数
}

message GoatTeamScore {
  int32 team_id = 1;    // 阵营ID
  repeated GoatUserScore user_scores = 2; // 阵营成员分数
}

message GoatUserScore {
  string uid = 1;
  int32 score = 2;   // 分数
  int32 collect_bucket_count = 3;   // 获得空桶个数
  int32 kill_count = 4;  // 击杀个数
  int32 skin_id = 5;  // 穿戴皮肤 id
  string avatar = 6; // 头像
  string nickname = 7; // 昵称
  int64 show_value = 8; // 玩家 show 值
  bool is_followed = 9;  // 是否已关注当前玩家
  bool is_ai = 10; // 是否是 ai
  int32 length = 11; // 长度
  repeated snakecommon.CRewardItem reward_list = 12; // 奖励列表(服务器返回)
}

// 获取无尽宝箱彩蛋及用户信息
message GetEndlessChestInfoReq {

}

message GetEndlessChestInfoRsp {
  int64 start_time = 1;
  int64 end_time = 2;
  int32 show_percent = 3; // 出现概率(0-100)
  int32 show_day_limit = 4; // 每日次数限制
  EndlessChestReward reward = 5; // 奖励配置
  int64 totay_shown_count = 6; // 今日已出现次数
}

message EndlessChestReward {
    EndlessChestLengthReward length = 1;
    EndlessChestSkipChipReward skin_chip_reward = 2;
}

message EndlessChestLengthReward {
   int64 fixed = 1; // 固定长度
   int32 cur_length_percent = 2; // 当前长度百分比
}

message EndlessChestSkipChipReward {
  repeated int32 kind_range = 1; // 种类个数随机范围
  repeated EndlessChestSkipChipRewardItem items = 2; // 皮肤碎片配置
}

message EndlessChestSkipChipRewardItem {
  int32 item_id = 1; // 皮肤碎片 id
  int32 weight = 2; // 权重
  repeated int32 num_range = 3; // 数量随机范围
}