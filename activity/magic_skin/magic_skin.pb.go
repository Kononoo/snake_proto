// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.27.1
// 	protoc        v3.16.1
// source: activity/magic_skin/magic_skin.proto

package magic_skin

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// 组件
type Component struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Type int64  `protobuf:"varint,1,opt,name=type,proto3" json:"type,omitempty"` // 组件类型
	Name string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`  // 组件名称
}

func (x *Component) Reset() {
	*x = Component{}
	if protoimpl.UnsafeEnabled {
		mi := &file_activity_magic_skin_magic_skin_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Component) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Component) ProtoMessage() {}

func (x *Component) ProtoReflect() protoreflect.Message {
	mi := &file_activity_magic_skin_magic_skin_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Component.ProtoReflect.Descriptor instead.
func (*Component) Descriptor() ([]byte, []int) {
	return file_activity_magic_skin_magic_skin_proto_rawDescGZIP(), []int{0}
}

func (x *Component) GetType() int64 {
	if x != nil {
		return x.Type
	}
	return 0
}

func (x *Component) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

// 样式
type Section struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Component  *Component `protobuf:"bytes,1,opt,name=component,proto3" json:"component,omitempty"`                  // 组件类型
	Id         int64      `protobuf:"varint,2,opt,name=id,proto3" json:"id,omitempty"`                               // 样式id
	StyleName  string     `protobuf:"bytes,3,opt,name=style_name,json=styleName,proto3" json:"style_name,omitempty"` // 样式名
	WorthLevel int64      `protobuf:"varint,4,opt,name=worth_level,json=worthLevel,proto3" json:"worth_level,omitempty"`
	IsDefault  int64      `protobuf:"varint,5,opt,name=is_default,json=isDefault,proto3" json:"is_default,omitempty"` // 是否为默认样式
}

func (x *Section) Reset() {
	*x = Section{}
	if protoimpl.UnsafeEnabled {
		mi := &file_activity_magic_skin_magic_skin_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Section) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Section) ProtoMessage() {}

func (x *Section) ProtoReflect() protoreflect.Message {
	mi := &file_activity_magic_skin_magic_skin_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Section.ProtoReflect.Descriptor instead.
func (*Section) Descriptor() ([]byte, []int) {
	return file_activity_magic_skin_magic_skin_proto_rawDescGZIP(), []int{1}
}

func (x *Section) GetComponent() *Component {
	if x != nil {
		return x.Component
	}
	return nil
}

func (x *Section) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *Section) GetStyleName() string {
	if x != nil {
		return x.StyleName
	}
	return ""
}

func (x *Section) GetWorthLevel() int64 {
	if x != nil {
		return x.WorthLevel
	}
	return 0
}

func (x *Section) GetIsDefault() int64 {
	if x != nil {
		return x.IsDefault
	}
	return 0
}

type GetInfoReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ActId string `protobuf:"bytes,1,opt,name=act_id,json=actId,proto3" json:"act_id,omitempty"`
}

func (x *GetInfoReq) Reset() {
	*x = GetInfoReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_activity_magic_skin_magic_skin_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetInfoReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetInfoReq) ProtoMessage() {}

func (x *GetInfoReq) ProtoReflect() protoreflect.Message {
	mi := &file_activity_magic_skin_magic_skin_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetInfoReq.ProtoReflect.Descriptor instead.
func (*GetInfoReq) Descriptor() ([]byte, []int) {
	return file_activity_magic_skin_magic_skin_proto_rawDescGZIP(), []int{2}
}

func (x *GetInfoReq) GetActId() string {
	if x != nil {
		return x.ActId
	}
	return ""
}

type GetInfoRsp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Config        *GetInfoRsp_Config `protobuf:"bytes,1,opt,name=config,proto3" json:"config,omitempty"`                                            // 配置数据
	Coin          int64              `protobuf:"varint,2,opt,name=coin,proto3" json:"coin,omitempty"`                                               // 幻化币数量
	Crystal       int64              `protobuf:"varint,3,opt,name=crystal,proto3" json:"crystal,omitempty"`                                         // 水晶数量
	TopList       []*TopListItem     `protobuf:"bytes,4,rep,name=top_list,json=topList,proto3" json:"top_list,omitempty"`                           // 前几名的幻化排行信息
	TotalScore    int64              `protobuf:"varint,5,opt,name=total_score,json=totalScore,proto3" json:"total_score,omitempty"`                 // 累计幻化值
	SaveSkins     []*Skin            `protobuf:"bytes,6,rep,name=save_skins,json=saveSkins,proto3" json:"save_skins,omitempty"`                     // 保存的皮肤列表 数组长度为0代表没有保存过，数组最后一次为 上一次保存
	PendingSkin   *Skin              `protobuf:"bytes,7,opt,name=pending_skin,json=pendingSkin,proto3" json:"pending_skin,omitempty"`               // 待保存的皮肤
	LastSkin      *Skin              `protobuf:"bytes,8,opt,name=last_skin,json=lastSkin,proto3" json:"last_skin,omitempty"`                        // 上次幻化的皮肤
	LockedSection []int64            `protobuf:"varint,9,rep,packed,name=locked_section,json=lockedSection,proto3" json:"locked_section,omitempty"` // 已锁定的组件类型
	TransformCnt  int64              `protobuf:"varint,10,opt,name=transform_cnt,json=transformCnt,proto3" json:"transform_cnt,omitempty"`          //幻化次数
}

func (x *GetInfoRsp) Reset() {
	*x = GetInfoRsp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_activity_magic_skin_magic_skin_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetInfoRsp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetInfoRsp) ProtoMessage() {}

func (x *GetInfoRsp) ProtoReflect() protoreflect.Message {
	mi := &file_activity_magic_skin_magic_skin_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetInfoRsp.ProtoReflect.Descriptor instead.
func (*GetInfoRsp) Descriptor() ([]byte, []int) {
	return file_activity_magic_skin_magic_skin_proto_rawDescGZIP(), []int{3}
}

func (x *GetInfoRsp) GetConfig() *GetInfoRsp_Config {
	if x != nil {
		return x.Config
	}
	return nil
}

func (x *GetInfoRsp) GetCoin() int64 {
	if x != nil {
		return x.Coin
	}
	return 0
}

func (x *GetInfoRsp) GetCrystal() int64 {
	if x != nil {
		return x.Crystal
	}
	return 0
}

func (x *GetInfoRsp) GetTopList() []*TopListItem {
	if x != nil {
		return x.TopList
	}
	return nil
}

func (x *GetInfoRsp) GetTotalScore() int64 {
	if x != nil {
		return x.TotalScore
	}
	return 0
}

func (x *GetInfoRsp) GetSaveSkins() []*Skin {
	if x != nil {
		return x.SaveSkins
	}
	return nil
}

func (x *GetInfoRsp) GetPendingSkin() *Skin {
	if x != nil {
		return x.PendingSkin
	}
	return nil
}

func (x *GetInfoRsp) GetLastSkin() *Skin {
	if x != nil {
		return x.LastSkin
	}
	return nil
}

func (x *GetInfoRsp) GetLockedSection() []int64 {
	if x != nil {
		return x.LockedSection
	}
	return nil
}

func (x *GetInfoRsp) GetTransformCnt() int64 {
	if x != nil {
		return x.TransformCnt
	}
	return 0
}

type Skin struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id      int64      `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`          // 原生皮肤id
	Score   int64      `protobuf:"varint,2,opt,name=score,proto3" json:"score,omitempty"`    // 幻化值
	Number  int64      `protobuf:"varint,3,opt,name=number,proto3" json:"number,omitempty"`  // 藏品编号
	Section []*Section `protobuf:"bytes,4,rep,name=section,proto3" json:"section,omitempty"` // 样式列表，默认样式不传
}

func (x *Skin) Reset() {
	*x = Skin{}
	if protoimpl.UnsafeEnabled {
		mi := &file_activity_magic_skin_magic_skin_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Skin) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Skin) ProtoMessage() {}

func (x *Skin) ProtoReflect() protoreflect.Message {
	mi := &file_activity_magic_skin_magic_skin_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Skin.ProtoReflect.Descriptor instead.
func (*Skin) Descriptor() ([]byte, []int) {
	return file_activity_magic_skin_magic_skin_proto_rawDescGZIP(), []int{4}
}

func (x *Skin) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *Skin) GetScore() int64 {
	if x != nil {
		return x.Score
	}
	return 0
}

func (x *Skin) GetNumber() int64 {
	if x != nil {
		return x.Number
	}
	return 0
}

func (x *Skin) GetSection() []*Section {
	if x != nil {
		return x.Section
	}
	return nil
}

type TopListItem struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Uid      string `protobuf:"bytes,1,opt,name=uid,proto3" json:"uid,omitempty"`
	Nickname string `protobuf:"bytes,2,opt,name=nickname,proto3" json:"nickname,omitempty"`
	Avatar   string `protobuf:"bytes,3,opt,name=avatar,proto3" json:"avatar,omitempty"`
	BoxId    int64  `protobuf:"varint,4,opt,name=box_id,json=boxId,proto3" json:"box_id,omitempty"` // 头像框
	Score    int64  `protobuf:"varint,5,opt,name=score,proto3" json:"score,omitempty"`
	Skin     *Skin  `protobuf:"bytes,6,opt,name=skin,proto3" json:"skin,omitempty"`          // 皮肤信息
	Verified bool   `protobuf:"varint,7,opt,name=verified,proto3" json:"verified,omitempty"` // 是否认证
}

func (x *TopListItem) Reset() {
	*x = TopListItem{}
	if protoimpl.UnsafeEnabled {
		mi := &file_activity_magic_skin_magic_skin_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TopListItem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TopListItem) ProtoMessage() {}

func (x *TopListItem) ProtoReflect() protoreflect.Message {
	mi := &file_activity_magic_skin_magic_skin_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TopListItem.ProtoReflect.Descriptor instead.
func (*TopListItem) Descriptor() ([]byte, []int) {
	return file_activity_magic_skin_magic_skin_proto_rawDescGZIP(), []int{5}
}

func (x *TopListItem) GetUid() string {
	if x != nil {
		return x.Uid
	}
	return ""
}

func (x *TopListItem) GetNickname() string {
	if x != nil {
		return x.Nickname
	}
	return ""
}

func (x *TopListItem) GetAvatar() string {
	if x != nil {
		return x.Avatar
	}
	return ""
}

func (x *TopListItem) GetBoxId() int64 {
	if x != nil {
		return x.BoxId
	}
	return 0
}

func (x *TopListItem) GetScore() int64 {
	if x != nil {
		return x.Score
	}
	return 0
}

func (x *TopListItem) GetSkin() *Skin {
	if x != nil {
		return x.Skin
	}
	return nil
}

func (x *TopListItem) GetVerified() bool {
	if x != nil {
		return x.Verified
	}
	return false
}

type LockSectionReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SectionType int64  `protobuf:"varint,1,opt,name=section_type,json=sectionType,proto3" json:"section_type,omitempty"` // 组件类型
	IsLock      bool   `protobuf:"varint,2,opt,name=is_lock,json=isLock,proto3" json:"is_lock,omitempty"`                // 是否加锁
	ActId       string `protobuf:"bytes,3,opt,name=act_id,json=actId,proto3" json:"act_id,omitempty"`
}

func (x *LockSectionReq) Reset() {
	*x = LockSectionReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_activity_magic_skin_magic_skin_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LockSectionReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LockSectionReq) ProtoMessage() {}

func (x *LockSectionReq) ProtoReflect() protoreflect.Message {
	mi := &file_activity_magic_skin_magic_skin_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LockSectionReq.ProtoReflect.Descriptor instead.
func (*LockSectionReq) Descriptor() ([]byte, []int) {
	return file_activity_magic_skin_magic_skin_proto_rawDescGZIP(), []int{6}
}

func (x *LockSectionReq) GetSectionType() int64 {
	if x != nil {
		return x.SectionType
	}
	return 0
}

func (x *LockSectionReq) GetIsLock() bool {
	if x != nil {
		return x.IsLock
	}
	return false
}

func (x *LockSectionReq) GetActId() string {
	if x != nil {
		return x.ActId
	}
	return ""
}

type LockSectionRsp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *LockSectionRsp) Reset() {
	*x = LockSectionRsp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_activity_magic_skin_magic_skin_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LockSectionRsp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LockSectionRsp) ProtoMessage() {}

func (x *LockSectionRsp) ProtoReflect() protoreflect.Message {
	mi := &file_activity_magic_skin_magic_skin_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LockSectionRsp.ProtoReflect.Descriptor instead.
func (*LockSectionRsp) Descriptor() ([]byte, []int) {
	return file_activity_magic_skin_magic_skin_proto_rawDescGZIP(), []int{7}
}

type RefreshSkinReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ActId string `protobuf:"bytes,1,opt,name=act_id,json=actId,proto3" json:"act_id,omitempty"`
}

func (x *RefreshSkinReq) Reset() {
	*x = RefreshSkinReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_activity_magic_skin_magic_skin_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RefreshSkinReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RefreshSkinReq) ProtoMessage() {}

func (x *RefreshSkinReq) ProtoReflect() protoreflect.Message {
	mi := &file_activity_magic_skin_magic_skin_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RefreshSkinReq.ProtoReflect.Descriptor instead.
func (*RefreshSkinReq) Descriptor() ([]byte, []int) {
	return file_activity_magic_skin_magic_skin_proto_rawDescGZIP(), []int{8}
}

func (x *RefreshSkinReq) GetActId() string {
	if x != nil {
		return x.ActId
	}
	return ""
}

type RefreshSkinRsp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Skin *Skin `protobuf:"bytes,1,opt,name=skin,proto3" json:"skin,omitempty"`  //幻化后的皮肤id
	Coin int64 `protobuf:"varint,2,opt,name=coin,proto3" json:"coin,omitempty"` // 更新幻化币数量
}

func (x *RefreshSkinRsp) Reset() {
	*x = RefreshSkinRsp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_activity_magic_skin_magic_skin_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RefreshSkinRsp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RefreshSkinRsp) ProtoMessage() {}

func (x *RefreshSkinRsp) ProtoReflect() protoreflect.Message {
	mi := &file_activity_magic_skin_magic_skin_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RefreshSkinRsp.ProtoReflect.Descriptor instead.
func (*RefreshSkinRsp) Descriptor() ([]byte, []int) {
	return file_activity_magic_skin_magic_skin_proto_rawDescGZIP(), []int{9}
}

func (x *RefreshSkinRsp) GetSkin() *Skin {
	if x != nil {
		return x.Skin
	}
	return nil
}

func (x *RefreshSkinRsp) GetCoin() int64 {
	if x != nil {
		return x.Coin
	}
	return 0
}

type SaveSkinReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ActId string `protobuf:"bytes,1,opt,name=act_id,json=actId,proto3" json:"act_id,omitempty"`
}

func (x *SaveSkinReq) Reset() {
	*x = SaveSkinReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_activity_magic_skin_magic_skin_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SaveSkinReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SaveSkinReq) ProtoMessage() {}

func (x *SaveSkinReq) ProtoReflect() protoreflect.Message {
	mi := &file_activity_magic_skin_magic_skin_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SaveSkinReq.ProtoReflect.Descriptor instead.
func (*SaveSkinReq) Descriptor() ([]byte, []int) {
	return file_activity_magic_skin_magic_skin_proto_rawDescGZIP(), []int{10}
}

func (x *SaveSkinReq) GetActId() string {
	if x != nil {
		return x.ActId
	}
	return ""
}

type SaveSkinRsp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Crystal     int64 `protobuf:"varint,1,opt,name=crystal,proto3" json:"crystal,omitempty"`                           // 更新水晶数量
	CurrentSkin *Skin `protobuf:"bytes,2,opt,name=current_skin,json=currentSkin,proto3" json:"current_skin,omitempty"` // 更新当前皮肤信息
}

func (x *SaveSkinRsp) Reset() {
	*x = SaveSkinRsp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_activity_magic_skin_magic_skin_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SaveSkinRsp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SaveSkinRsp) ProtoMessage() {}

func (x *SaveSkinRsp) ProtoReflect() protoreflect.Message {
	mi := &file_activity_magic_skin_magic_skin_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SaveSkinRsp.ProtoReflect.Descriptor instead.
func (*SaveSkinRsp) Descriptor() ([]byte, []int) {
	return file_activity_magic_skin_magic_skin_proto_rawDescGZIP(), []int{11}
}

func (x *SaveSkinRsp) GetCrystal() int64 {
	if x != nil {
		return x.Crystal
	}
	return 0
}

func (x *SaveSkinRsp) GetCurrentSkin() *Skin {
	if x != nil {
		return x.CurrentSkin
	}
	return nil
}

type RestoreSkinReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ActId string `protobuf:"bytes,1,opt,name=act_id,json=actId,proto3" json:"act_id,omitempty"`
}

func (x *RestoreSkinReq) Reset() {
	*x = RestoreSkinReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_activity_magic_skin_magic_skin_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RestoreSkinReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RestoreSkinReq) ProtoMessage() {}

func (x *RestoreSkinReq) ProtoReflect() protoreflect.Message {
	mi := &file_activity_magic_skin_magic_skin_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RestoreSkinReq.ProtoReflect.Descriptor instead.
func (*RestoreSkinReq) Descriptor() ([]byte, []int) {
	return file_activity_magic_skin_magic_skin_proto_rawDescGZIP(), []int{12}
}

func (x *RestoreSkinReq) GetActId() string {
	if x != nil {
		return x.ActId
	}
	return ""
}

type RestoreSkinRsp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Coin int64 `protobuf:"varint,1,opt,name=coin,proto3" json:"coin,omitempty"` // 更新幻化币数量
}

func (x *RestoreSkinRsp) Reset() {
	*x = RestoreSkinRsp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_activity_magic_skin_magic_skin_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RestoreSkinRsp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RestoreSkinRsp) ProtoMessage() {}

func (x *RestoreSkinRsp) ProtoReflect() protoreflect.Message {
	mi := &file_activity_magic_skin_magic_skin_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RestoreSkinRsp.ProtoReflect.Descriptor instead.
func (*RestoreSkinRsp) Descriptor() ([]byte, []int) {
	return file_activity_magic_skin_magic_skin_proto_rawDescGZIP(), []int{13}
}

func (x *RestoreSkinRsp) GetCoin() int64 {
	if x != nil {
		return x.Coin
	}
	return 0
}

type GetTopListReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TopType int64  `protobuf:"varint,1,opt,name=top_type,json=topType,proto3" json:"top_type,omitempty"` // 1 皮肤幻化排行，2:累计幻化排行
	ActId   string `protobuf:"bytes,2,opt,name=act_id,json=actId,proto3" json:"act_id,omitempty"`
}

func (x *GetTopListReq) Reset() {
	*x = GetTopListReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_activity_magic_skin_magic_skin_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetTopListReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetTopListReq) ProtoMessage() {}

func (x *GetTopListReq) ProtoReflect() protoreflect.Message {
	mi := &file_activity_magic_skin_magic_skin_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetTopListReq.ProtoReflect.Descriptor instead.
func (*GetTopListReq) Descriptor() ([]byte, []int) {
	return file_activity_magic_skin_magic_skin_proto_rawDescGZIP(), []int{14}
}

func (x *GetTopListReq) GetTopType() int64 {
	if x != nil {
		return x.TopType
	}
	return 0
}

func (x *GetTopListReq) GetActId() string {
	if x != nil {
		return x.ActId
	}
	return ""
}

type GetTopListRsp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	List []*TopListItem `protobuf:"bytes,1,rep,name=list,proto3" json:"list,omitempty"`
}

func (x *GetTopListRsp) Reset() {
	*x = GetTopListRsp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_activity_magic_skin_magic_skin_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetTopListRsp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetTopListRsp) ProtoMessage() {}

func (x *GetTopListRsp) ProtoReflect() protoreflect.Message {
	mi := &file_activity_magic_skin_magic_skin_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetTopListRsp.ProtoReflect.Descriptor instead.
func (*GetTopListRsp) Descriptor() ([]byte, []int) {
	return file_activity_magic_skin_magic_skin_proto_rawDescGZIP(), []int{15}
}

func (x *GetTopListRsp) GetList() []*TopListItem {
	if x != nil {
		return x.List
	}
	return nil
}

type GetInfoRsp_DescItem struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Title   string `protobuf:"bytes,1,opt,name=title,proto3" json:"title,omitempty"`     // 标题
	Content string `protobuf:"bytes,2,opt,name=content,proto3" json:"content,omitempty"` // 内容
}

func (x *GetInfoRsp_DescItem) Reset() {
	*x = GetInfoRsp_DescItem{}
	if protoimpl.UnsafeEnabled {
		mi := &file_activity_magic_skin_magic_skin_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetInfoRsp_DescItem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetInfoRsp_DescItem) ProtoMessage() {}

func (x *GetInfoRsp_DescItem) ProtoReflect() protoreflect.Message {
	mi := &file_activity_magic_skin_magic_skin_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetInfoRsp_DescItem.ProtoReflect.Descriptor instead.
func (*GetInfoRsp_DescItem) Descriptor() ([]byte, []int) {
	return file_activity_magic_skin_magic_skin_proto_rawDescGZIP(), []int{3, 0}
}

func (x *GetInfoRsp_DescItem) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *GetInfoRsp_DescItem) GetContent() string {
	if x != nil {
		return x.Content
	}
	return ""
}

type GetInfoRsp_Link struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Title string `protobuf:"bytes,1,opt,name=title,proto3" json:"title,omitempty"` // 标题
	Link  string `protobuf:"bytes,2,opt,name=link,proto3" json:"link,omitempty"`   // 跳转链接
}

func (x *GetInfoRsp_Link) Reset() {
	*x = GetInfoRsp_Link{}
	if protoimpl.UnsafeEnabled {
		mi := &file_activity_magic_skin_magic_skin_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetInfoRsp_Link) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetInfoRsp_Link) ProtoMessage() {}

func (x *GetInfoRsp_Link) ProtoReflect() protoreflect.Message {
	mi := &file_activity_magic_skin_magic_skin_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetInfoRsp_Link.ProtoReflect.Descriptor instead.
func (*GetInfoRsp_Link) Descriptor() ([]byte, []int) {
	return file_activity_magic_skin_magic_skin_proto_rawDescGZIP(), []int{3, 1}
}

func (x *GetInfoRsp_Link) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *GetInfoRsp_Link) GetLink() string {
	if x != nil {
		return x.Link
	}
	return ""
}

type GetInfoRsp_Config struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	StartTime         int64                  `protobuf:"varint,1,opt,name=start_time,json=startTime,proto3" json:"start_time,omitempty"`                                                                                                         // 开始时间戳
	EndTime           int64                  `protobuf:"varint,2,opt,name=end_time,json=endTime,proto3" json:"end_time,omitempty"`                                                                                                               // 结束时间戳
	Desc              []*GetInfoRsp_DescItem `protobuf:"bytes,3,rep,name=desc,proto3" json:"desc,omitempty"`                                                                                                                                     // 活动说明
	CoinItemId        int64                  `protobuf:"varint,4,opt,name=coin_item_id,json=coinItemId,proto3" json:"coin_item_id,omitempty"`                                                                                                    // 幻化币道具id
	CrystalItemId     int64                  `protobuf:"varint,5,opt,name=crystal_item_id,json=crystalItemId,proto3" json:"crystal_item_id,omitempty"`                                                                                           // 幻化水晶道具id
	DefaultSkinId     int64                  `protobuf:"varint,6,opt,name=default_skin_id,json=defaultSkinId,proto3" json:"default_skin_id,omitempty"`                                                                                           // 本期活动指定的幻化皮肤id 原生
	MagicSkinId       int64                  `protobuf:"varint,7,opt,name=magic_skin_id,json=magicSkinId,proto3" json:"magic_skin_id,omitempty"`                                                                                                 // 本期活动指定的幻化皮肤id
	MagicSkinJumpLink string                 `protobuf:"bytes,8,opt,name=magic_skin_jump_link,json=magicSkinJumpLink,proto3" json:"magic_skin_jump_link,omitempty"`                                                                              // 获取幻化皮肤的活动跳转链接
	BaseCostCoin      int64                  `protobuf:"varint,9,opt,name=base_cost_coin,json=baseCostCoin,proto3" json:"base_cost_coin,omitempty"`                                                                                              // 基础的消耗幻化币数量
	ExchangeRate      int64                  `protobuf:"varint,10,opt,name=exchange_rate,json=exchangeRate,proto3" json:"exchange_rate,omitempty"`                                                                                               // 1幻化币价值多少苹果
	ExtraCostCoin     map[int64]int64        `protobuf:"bytes,11,rep,name=extra_cost_coin,json=extraCostCoin,proto3" json:"extra_cost_coin,omitempty" protobuf_key:"varint,1,opt,name=key,proto3" protobuf_val:"varint,2,opt,name=value,proto3"` // {锁定属性的个数:额外消耗的幻化币数量}
	UnlockSection     map[int64]int64        `protobuf:"bytes,12,rep,name=unlock_section,json=unlockSection,proto3" json:"unlock_section,omitempty" protobuf_key:"varint,1,opt,name=key,proto3" protobuf_val:"varint,2,opt,name=value,proto3"`   // {组件类型：激活所需幻化值}
	SaveSkinLimit     int64                  `protobuf:"varint,13,opt,name=save_skin_limit,json=saveSkinLimit,proto3" json:"save_skin_limit,omitempty"`                                                                                          // 保存藏品次数限制
	SaveCostCrystal   int64                  `protobuf:"varint,14,opt,name=save_cost_crystal,json=saveCostCrystal,proto3" json:"save_cost_crystal,omitempty"`                                                                                    // 每次保存藏品消耗的水晶数量
	Components        []*Component           `protobuf:"bytes,15,rep,name=components,proto3" json:"components,omitempty"`                                                                                                                        // 本期幻化皮肤组件列表
	Sections          []*Section             `protobuf:"bytes,16,rep,name=sections,proto3" json:"sections,omitempty"`                                                                                                                            // 本期活动幻化皮肤所有样式
	CoinGetLinks      []*GetInfoRsp_Link     `protobuf:"bytes,17,rep,name=CoinGetLinks,proto3" json:"CoinGetLinks,omitempty"`                                                                                                                    // 代币获取跳转链接
}

func (x *GetInfoRsp_Config) Reset() {
	*x = GetInfoRsp_Config{}
	if protoimpl.UnsafeEnabled {
		mi := &file_activity_magic_skin_magic_skin_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetInfoRsp_Config) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetInfoRsp_Config) ProtoMessage() {}

func (x *GetInfoRsp_Config) ProtoReflect() protoreflect.Message {
	mi := &file_activity_magic_skin_magic_skin_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetInfoRsp_Config.ProtoReflect.Descriptor instead.
func (*GetInfoRsp_Config) Descriptor() ([]byte, []int) {
	return file_activity_magic_skin_magic_skin_proto_rawDescGZIP(), []int{3, 2}
}

func (x *GetInfoRsp_Config) GetStartTime() int64 {
	if x != nil {
		return x.StartTime
	}
	return 0
}

func (x *GetInfoRsp_Config) GetEndTime() int64 {
	if x != nil {
		return x.EndTime
	}
	return 0
}

func (x *GetInfoRsp_Config) GetDesc() []*GetInfoRsp_DescItem {
	if x != nil {
		return x.Desc
	}
	return nil
}

func (x *GetInfoRsp_Config) GetCoinItemId() int64 {
	if x != nil {
		return x.CoinItemId
	}
	return 0
}

func (x *GetInfoRsp_Config) GetCrystalItemId() int64 {
	if x != nil {
		return x.CrystalItemId
	}
	return 0
}

func (x *GetInfoRsp_Config) GetDefaultSkinId() int64 {
	if x != nil {
		return x.DefaultSkinId
	}
	return 0
}

func (x *GetInfoRsp_Config) GetMagicSkinId() int64 {
	if x != nil {
		return x.MagicSkinId
	}
	return 0
}

func (x *GetInfoRsp_Config) GetMagicSkinJumpLink() string {
	if x != nil {
		return x.MagicSkinJumpLink
	}
	return ""
}

func (x *GetInfoRsp_Config) GetBaseCostCoin() int64 {
	if x != nil {
		return x.BaseCostCoin
	}
	return 0
}

func (x *GetInfoRsp_Config) GetExchangeRate() int64 {
	if x != nil {
		return x.ExchangeRate
	}
	return 0
}

func (x *GetInfoRsp_Config) GetExtraCostCoin() map[int64]int64 {
	if x != nil {
		return x.ExtraCostCoin
	}
	return nil
}

func (x *GetInfoRsp_Config) GetUnlockSection() map[int64]int64 {
	if x != nil {
		return x.UnlockSection
	}
	return nil
}

func (x *GetInfoRsp_Config) GetSaveSkinLimit() int64 {
	if x != nil {
		return x.SaveSkinLimit
	}
	return 0
}

func (x *GetInfoRsp_Config) GetSaveCostCrystal() int64 {
	if x != nil {
		return x.SaveCostCrystal
	}
	return 0
}

func (x *GetInfoRsp_Config) GetComponents() []*Component {
	if x != nil {
		return x.Components
	}
	return nil
}

func (x *GetInfoRsp_Config) GetSections() []*Section {
	if x != nil {
		return x.Sections
	}
	return nil
}

func (x *GetInfoRsp_Config) GetCoinGetLinks() []*GetInfoRsp_Link {
	if x != nil {
		return x.CoinGetLinks
	}
	return nil
}

var File_activity_magic_skin_magic_skin_proto protoreflect.FileDescriptor

var file_activity_magic_skin_magic_skin_proto_rawDesc = []byte{
	0x0a, 0x24, 0x61, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x2f, 0x6d, 0x61, 0x67, 0x69, 0x63,
	0x5f, 0x73, 0x6b, 0x69, 0x6e, 0x2f, 0x6d, 0x61, 0x67, 0x69, 0x63, 0x5f, 0x73, 0x6b, 0x69, 0x6e,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0a, 0x6d, 0x61, 0x67, 0x69, 0x63, 0x5f, 0x73, 0x6b,
	0x69, 0x6e, 0x22, 0x33, 0x0a, 0x09, 0x43, 0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x12,
	0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x74,
	0x79, 0x70, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x22, 0xad, 0x01, 0x0a, 0x07, 0x53, 0x65, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x12, 0x33, 0x0a, 0x09, 0x63, 0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x6d, 0x61, 0x67, 0x69, 0x63, 0x5f, 0x73,
	0x6b, 0x69, 0x6e, 0x2e, 0x43, 0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x52, 0x09, 0x63,
	0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x73, 0x74, 0x79, 0x6c,
	0x65, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x73, 0x74,
	0x79, 0x6c, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x77, 0x6f, 0x72, 0x74, 0x68,
	0x5f, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x77, 0x6f,
	0x72, 0x74, 0x68, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x12, 0x1d, 0x0a, 0x0a, 0x69, 0x73, 0x5f, 0x64,
	0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x69, 0x73,
	0x44, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x22, 0x23, 0x0a, 0x0a, 0x47, 0x65, 0x74, 0x49, 0x6e,
	0x66, 0x6f, 0x52, 0x65, 0x71, 0x12, 0x15, 0x0a, 0x06, 0x61, 0x63, 0x74, 0x5f, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x61, 0x63, 0x74, 0x49, 0x64, 0x22, 0xd5, 0x0b, 0x0a,
	0x0a, 0x47, 0x65, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x73, 0x70, 0x12, 0x35, 0x0a, 0x06, 0x63,
	0x6f, 0x6e, 0x66, 0x69, 0x67, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x6d, 0x61,
	0x67, 0x69, 0x63, 0x5f, 0x73, 0x6b, 0x69, 0x6e, 0x2e, 0x47, 0x65, 0x74, 0x49, 0x6e, 0x66, 0x6f,
	0x52, 0x73, 0x70, 0x2e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x06, 0x63, 0x6f, 0x6e, 0x66,
	0x69, 0x67, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x69, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x04, 0x63, 0x6f, 0x69, 0x6e, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x72, 0x79, 0x73, 0x74, 0x61,
	0x6c, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x63, 0x72, 0x79, 0x73, 0x74, 0x61, 0x6c,
	0x12, 0x32, 0x0a, 0x08, 0x74, 0x6f, 0x70, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x04, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x17, 0x2e, 0x6d, 0x61, 0x67, 0x69, 0x63, 0x5f, 0x73, 0x6b, 0x69, 0x6e, 0x2e,
	0x54, 0x6f, 0x70, 0x4c, 0x69, 0x73, 0x74, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x07, 0x74, 0x6f, 0x70,
	0x4c, 0x69, 0x73, 0x74, 0x12, 0x1f, 0x0a, 0x0b, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x5f, 0x73, 0x63,
	0x6f, 0x72, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x74, 0x6f, 0x74, 0x61, 0x6c,
	0x53, 0x63, 0x6f, 0x72, 0x65, 0x12, 0x2f, 0x0a, 0x0a, 0x73, 0x61, 0x76, 0x65, 0x5f, 0x73, 0x6b,
	0x69, 0x6e, 0x73, 0x18, 0x06, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x6d, 0x61, 0x67, 0x69,
	0x63, 0x5f, 0x73, 0x6b, 0x69, 0x6e, 0x2e, 0x53, 0x6b, 0x69, 0x6e, 0x52, 0x09, 0x73, 0x61, 0x76,
	0x65, 0x53, 0x6b, 0x69, 0x6e, 0x73, 0x12, 0x33, 0x0a, 0x0c, 0x70, 0x65, 0x6e, 0x64, 0x69, 0x6e,
	0x67, 0x5f, 0x73, 0x6b, 0x69, 0x6e, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x6d,
	0x61, 0x67, 0x69, 0x63, 0x5f, 0x73, 0x6b, 0x69, 0x6e, 0x2e, 0x53, 0x6b, 0x69, 0x6e, 0x52, 0x0b,
	0x70, 0x65, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x53, 0x6b, 0x69, 0x6e, 0x12, 0x2d, 0x0a, 0x09, 0x6c,
	0x61, 0x73, 0x74, 0x5f, 0x73, 0x6b, 0x69, 0x6e, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x10,
	0x2e, 0x6d, 0x61, 0x67, 0x69, 0x63, 0x5f, 0x73, 0x6b, 0x69, 0x6e, 0x2e, 0x53, 0x6b, 0x69, 0x6e,
	0x52, 0x08, 0x6c, 0x61, 0x73, 0x74, 0x53, 0x6b, 0x69, 0x6e, 0x12, 0x25, 0x0a, 0x0e, 0x6c, 0x6f,
	0x63, 0x6b, 0x65, 0x64, 0x5f, 0x73, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x09, 0x20, 0x03,
	0x28, 0x03, 0x52, 0x0d, 0x6c, 0x6f, 0x63, 0x6b, 0x65, 0x64, 0x53, 0x65, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x12, 0x23, 0x0a, 0x0d, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x6f, 0x72, 0x6d, 0x5f, 0x63,
	0x6e, 0x74, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0c, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x66,
	0x6f, 0x72, 0x6d, 0x43, 0x6e, 0x74, 0x1a, 0x3a, 0x0a, 0x08, 0x44, 0x65, 0x73, 0x63, 0x49, 0x74,
	0x65, 0x6d, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x6f, 0x6e, 0x74,
	0x65, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65,
	0x6e, 0x74, 0x1a, 0x30, 0x0a, 0x04, 0x4c, 0x69, 0x6e, 0x6b, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x69,
	0x74, 0x6c, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65,
	0x12, 0x12, 0x0a, 0x04, 0x6c, 0x69, 0x6e, 0x6b, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x6c, 0x69, 0x6e, 0x6b, 0x1a, 0xbd, 0x07, 0x0a, 0x06, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12,
	0x1d, 0x0a, 0x0a, 0x73, 0x74, 0x61, 0x72, 0x74, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x09, 0x73, 0x74, 0x61, 0x72, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x19,
	0x0a, 0x08, 0x65, 0x6e, 0x64, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x07, 0x65, 0x6e, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x33, 0x0a, 0x04, 0x64, 0x65, 0x73,
	0x63, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x6d, 0x61, 0x67, 0x69, 0x63, 0x5f,
	0x73, 0x6b, 0x69, 0x6e, 0x2e, 0x47, 0x65, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x73, 0x70, 0x2e,
	0x44, 0x65, 0x73, 0x63, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x04, 0x64, 0x65, 0x73, 0x63, 0x12, 0x20,
	0x0a, 0x0c, 0x63, 0x6f, 0x69, 0x6e, 0x5f, 0x69, 0x74, 0x65, 0x6d, 0x5f, 0x69, 0x64, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x63, 0x6f, 0x69, 0x6e, 0x49, 0x74, 0x65, 0x6d, 0x49, 0x64,
	0x12, 0x26, 0x0a, 0x0f, 0x63, 0x72, 0x79, 0x73, 0x74, 0x61, 0x6c, 0x5f, 0x69, 0x74, 0x65, 0x6d,
	0x5f, 0x69, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0d, 0x63, 0x72, 0x79, 0x73, 0x74,
	0x61, 0x6c, 0x49, 0x74, 0x65, 0x6d, 0x49, 0x64, 0x12, 0x26, 0x0a, 0x0f, 0x64, 0x65, 0x66, 0x61,
	0x75, 0x6c, 0x74, 0x5f, 0x73, 0x6b, 0x69, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x0d, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x53, 0x6b, 0x69, 0x6e, 0x49, 0x64,
	0x12, 0x22, 0x0a, 0x0d, 0x6d, 0x61, 0x67, 0x69, 0x63, 0x5f, 0x73, 0x6b, 0x69, 0x6e, 0x5f, 0x69,
	0x64, 0x18, 0x07, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0b, 0x6d, 0x61, 0x67, 0x69, 0x63, 0x53, 0x6b,
	0x69, 0x6e, 0x49, 0x64, 0x12, 0x2f, 0x0a, 0x14, 0x6d, 0x61, 0x67, 0x69, 0x63, 0x5f, 0x73, 0x6b,
	0x69, 0x6e, 0x5f, 0x6a, 0x75, 0x6d, 0x70, 0x5f, 0x6c, 0x69, 0x6e, 0x6b, 0x18, 0x08, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x11, 0x6d, 0x61, 0x67, 0x69, 0x63, 0x53, 0x6b, 0x69, 0x6e, 0x4a, 0x75, 0x6d,
	0x70, 0x4c, 0x69, 0x6e, 0x6b, 0x12, 0x24, 0x0a, 0x0e, 0x62, 0x61, 0x73, 0x65, 0x5f, 0x63, 0x6f,
	0x73, 0x74, 0x5f, 0x63, 0x6f, 0x69, 0x6e, 0x18, 0x09, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0c, 0x62,
	0x61, 0x73, 0x65, 0x43, 0x6f, 0x73, 0x74, 0x43, 0x6f, 0x69, 0x6e, 0x12, 0x23, 0x0a, 0x0d, 0x65,
	0x78, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x5f, 0x72, 0x61, 0x74, 0x65, 0x18, 0x0a, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x0c, 0x65, 0x78, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x52, 0x61, 0x74, 0x65,
	0x12, 0x58, 0x0a, 0x0f, 0x65, 0x78, 0x74, 0x72, 0x61, 0x5f, 0x63, 0x6f, 0x73, 0x74, 0x5f, 0x63,
	0x6f, 0x69, 0x6e, 0x18, 0x0b, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x30, 0x2e, 0x6d, 0x61, 0x67, 0x69,
	0x63, 0x5f, 0x73, 0x6b, 0x69, 0x6e, 0x2e, 0x47, 0x65, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x73,
	0x70, 0x2e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2e, 0x45, 0x78, 0x74, 0x72, 0x61, 0x43, 0x6f,
	0x73, 0x74, 0x43, 0x6f, 0x69, 0x6e, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x0d, 0x65, 0x78, 0x74,
	0x72, 0x61, 0x43, 0x6f, 0x73, 0x74, 0x43, 0x6f, 0x69, 0x6e, 0x12, 0x57, 0x0a, 0x0e, 0x75, 0x6e,
	0x6c, 0x6f, 0x63, 0x6b, 0x5f, 0x73, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x0c, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x30, 0x2e, 0x6d, 0x61, 0x67, 0x69, 0x63, 0x5f, 0x73, 0x6b, 0x69, 0x6e, 0x2e,
	0x47, 0x65, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x73, 0x70, 0x2e, 0x43, 0x6f, 0x6e, 0x66, 0x69,
	0x67, 0x2e, 0x55, 0x6e, 0x6c, 0x6f, 0x63, 0x6b, 0x53, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x45,
	0x6e, 0x74, 0x72, 0x79, 0x52, 0x0d, 0x75, 0x6e, 0x6c, 0x6f, 0x63, 0x6b, 0x53, 0x65, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x12, 0x26, 0x0a, 0x0f, 0x73, 0x61, 0x76, 0x65, 0x5f, 0x73, 0x6b, 0x69, 0x6e,
	0x5f, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0d, 0x73, 0x61,
	0x76, 0x65, 0x53, 0x6b, 0x69, 0x6e, 0x4c, 0x69, 0x6d, 0x69, 0x74, 0x12, 0x2a, 0x0a, 0x11, 0x73,
	0x61, 0x76, 0x65, 0x5f, 0x63, 0x6f, 0x73, 0x74, 0x5f, 0x63, 0x72, 0x79, 0x73, 0x74, 0x61, 0x6c,
	0x18, 0x0e, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0f, 0x73, 0x61, 0x76, 0x65, 0x43, 0x6f, 0x73, 0x74,
	0x43, 0x72, 0x79, 0x73, 0x74, 0x61, 0x6c, 0x12, 0x35, 0x0a, 0x0a, 0x63, 0x6f, 0x6d, 0x70, 0x6f,
	0x6e, 0x65, 0x6e, 0x74, 0x73, 0x18, 0x0f, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x6d, 0x61,
	0x67, 0x69, 0x63, 0x5f, 0x73, 0x6b, 0x69, 0x6e, 0x2e, 0x43, 0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65,
	0x6e, 0x74, 0x52, 0x0a, 0x63, 0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x73, 0x12, 0x2f,
	0x0a, 0x08, 0x73, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x10, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x13, 0x2e, 0x6d, 0x61, 0x67, 0x69, 0x63, 0x5f, 0x73, 0x6b, 0x69, 0x6e, 0x2e, 0x53, 0x65,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x08, 0x73, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12,
	0x3f, 0x0a, 0x0c, 0x43, 0x6f, 0x69, 0x6e, 0x47, 0x65, 0x74, 0x4c, 0x69, 0x6e, 0x6b, 0x73, 0x18,
	0x11, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x6d, 0x61, 0x67, 0x69, 0x63, 0x5f, 0x73, 0x6b,
	0x69, 0x6e, 0x2e, 0x47, 0x65, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x73, 0x70, 0x2e, 0x4c, 0x69,
	0x6e, 0x6b, 0x52, 0x0c, 0x43, 0x6f, 0x69, 0x6e, 0x47, 0x65, 0x74, 0x4c, 0x69, 0x6e, 0x6b, 0x73,
	0x1a, 0x40, 0x0a, 0x12, 0x45, 0x78, 0x74, 0x72, 0x61, 0x43, 0x6f, 0x73, 0x74, 0x43, 0x6f, 0x69,
	0x6e, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02,
	0x38, 0x01, 0x1a, 0x40, 0x0a, 0x12, 0x55, 0x6e, 0x6c, 0x6f, 0x63, 0x6b, 0x53, 0x65, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61,
	0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65,
	0x3a, 0x02, 0x38, 0x01, 0x22, 0x73, 0x0a, 0x04, 0x53, 0x6b, 0x69, 0x6e, 0x12, 0x0e, 0x0a, 0x02,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x14, 0x0a, 0x05,
	0x73, 0x63, 0x6f, 0x72, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x73, 0x63, 0x6f,
	0x72, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x06, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x2d, 0x0a, 0x07, 0x73, 0x65,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x6d, 0x61,
	0x67, 0x69, 0x63, 0x5f, 0x73, 0x6b, 0x69, 0x6e, 0x2e, 0x53, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x52, 0x07, 0x73, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0xc2, 0x01, 0x0a, 0x0b, 0x54, 0x6f,
	0x70, 0x4c, 0x69, 0x73, 0x74, 0x49, 0x74, 0x65, 0x6d, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x75, 0x69, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x6e,
	0x69, 0x63, 0x6b, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6e,
	0x69, 0x63, 0x6b, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x61, 0x76, 0x61, 0x74, 0x61,
	0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x61, 0x76, 0x61, 0x74, 0x61, 0x72, 0x12,
	0x15, 0x0a, 0x06, 0x62, 0x6f, 0x78, 0x5f, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x05, 0x62, 0x6f, 0x78, 0x49, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x73, 0x63, 0x6f, 0x72, 0x65, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x73, 0x63, 0x6f, 0x72, 0x65, 0x12, 0x24, 0x0a, 0x04,
	0x73, 0x6b, 0x69, 0x6e, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x6d, 0x61, 0x67,
	0x69, 0x63, 0x5f, 0x73, 0x6b, 0x69, 0x6e, 0x2e, 0x53, 0x6b, 0x69, 0x6e, 0x52, 0x04, 0x73, 0x6b,
	0x69, 0x6e, 0x12, 0x1a, 0x0a, 0x08, 0x76, 0x65, 0x72, 0x69, 0x66, 0x69, 0x65, 0x64, 0x18, 0x07,
	0x20, 0x01, 0x28, 0x08, 0x52, 0x08, 0x76, 0x65, 0x72, 0x69, 0x66, 0x69, 0x65, 0x64, 0x22, 0x63,
	0x0a, 0x0e, 0x4c, 0x6f, 0x63, 0x6b, 0x53, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71,
	0x12, 0x21, 0x0a, 0x0c, 0x73, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x74, 0x79, 0x70, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0b, 0x73, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x54,
	0x79, 0x70, 0x65, 0x12, 0x17, 0x0a, 0x07, 0x69, 0x73, 0x5f, 0x6c, 0x6f, 0x63, 0x6b, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x69, 0x73, 0x4c, 0x6f, 0x63, 0x6b, 0x12, 0x15, 0x0a, 0x06,
	0x61, 0x63, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x61, 0x63,
	0x74, 0x49, 0x64, 0x22, 0x10, 0x0a, 0x0e, 0x4c, 0x6f, 0x63, 0x6b, 0x53, 0x65, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x52, 0x73, 0x70, 0x22, 0x27, 0x0a, 0x0e, 0x52, 0x65, 0x66, 0x72, 0x65, 0x73, 0x68,
	0x53, 0x6b, 0x69, 0x6e, 0x52, 0x65, 0x71, 0x12, 0x15, 0x0a, 0x06, 0x61, 0x63, 0x74, 0x5f, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x61, 0x63, 0x74, 0x49, 0x64, 0x22, 0x4a,
	0x0a, 0x0e, 0x52, 0x65, 0x66, 0x72, 0x65, 0x73, 0x68, 0x53, 0x6b, 0x69, 0x6e, 0x52, 0x73, 0x70,
	0x12, 0x24, 0x0a, 0x04, 0x73, 0x6b, 0x69, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x10,
	0x2e, 0x6d, 0x61, 0x67, 0x69, 0x63, 0x5f, 0x73, 0x6b, 0x69, 0x6e, 0x2e, 0x53, 0x6b, 0x69, 0x6e,
	0x52, 0x04, 0x73, 0x6b, 0x69, 0x6e, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x69, 0x6e, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x63, 0x6f, 0x69, 0x6e, 0x22, 0x24, 0x0a, 0x0b, 0x53, 0x61,
	0x76, 0x65, 0x53, 0x6b, 0x69, 0x6e, 0x52, 0x65, 0x71, 0x12, 0x15, 0x0a, 0x06, 0x61, 0x63, 0x74,
	0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x61, 0x63, 0x74, 0x49, 0x64,
	0x22, 0x5c, 0x0a, 0x0b, 0x53, 0x61, 0x76, 0x65, 0x53, 0x6b, 0x69, 0x6e, 0x52, 0x73, 0x70, 0x12,
	0x18, 0x0a, 0x07, 0x63, 0x72, 0x79, 0x73, 0x74, 0x61, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x07, 0x63, 0x72, 0x79, 0x73, 0x74, 0x61, 0x6c, 0x12, 0x33, 0x0a, 0x0c, 0x63, 0x75, 0x72,
	0x72, 0x65, 0x6e, 0x74, 0x5f, 0x73, 0x6b, 0x69, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x10, 0x2e, 0x6d, 0x61, 0x67, 0x69, 0x63, 0x5f, 0x73, 0x6b, 0x69, 0x6e, 0x2e, 0x53, 0x6b, 0x69,
	0x6e, 0x52, 0x0b, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x53, 0x6b, 0x69, 0x6e, 0x22, 0x27,
	0x0a, 0x0e, 0x52, 0x65, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x53, 0x6b, 0x69, 0x6e, 0x52, 0x65, 0x71,
	0x12, 0x15, 0x0a, 0x06, 0x61, 0x63, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x05, 0x61, 0x63, 0x74, 0x49, 0x64, 0x22, 0x24, 0x0a, 0x0e, 0x52, 0x65, 0x73, 0x74, 0x6f,
	0x72, 0x65, 0x53, 0x6b, 0x69, 0x6e, 0x52, 0x73, 0x70, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x69,
	0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x63, 0x6f, 0x69, 0x6e, 0x22, 0x41, 0x0a,
	0x0d, 0x47, 0x65, 0x74, 0x54, 0x6f, 0x70, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x12, 0x19,
	0x0a, 0x08, 0x74, 0x6f, 0x70, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x07, 0x74, 0x6f, 0x70, 0x54, 0x79, 0x70, 0x65, 0x12, 0x15, 0x0a, 0x06, 0x61, 0x63, 0x74,
	0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x61, 0x63, 0x74, 0x49, 0x64,
	0x22, 0x3c, 0x0a, 0x0d, 0x47, 0x65, 0x74, 0x54, 0x6f, 0x70, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x73,
	0x70, 0x12, 0x2b, 0x0a, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x17, 0x2e, 0x6d, 0x61, 0x67, 0x69, 0x63, 0x5f, 0x73, 0x6b, 0x69, 0x6e, 0x2e, 0x54, 0x6f, 0x70,
	0x4c, 0x69, 0x73, 0x74, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x42, 0x35,
	0x5a, 0x33, 0x67, 0x69, 0x74, 0x2e, 0x31, 0x37, 0x7a, 0x6a, 0x68, 0x2e, 0x63, 0x6f, 0x6d, 0x2f,
	0x73, 0x6e, 0x61, 0x6b, 0x65, 0x2f, 0x73, 0x6e, 0x61, 0x6b, 0x65, 0x5f, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x2f, 0x61, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x2f, 0x6d, 0x61, 0x67, 0x69, 0x63,
	0x5f, 0x73, 0x6b, 0x69, 0x6e, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_activity_magic_skin_magic_skin_proto_rawDescOnce sync.Once
	file_activity_magic_skin_magic_skin_proto_rawDescData = file_activity_magic_skin_magic_skin_proto_rawDesc
)

func file_activity_magic_skin_magic_skin_proto_rawDescGZIP() []byte {
	file_activity_magic_skin_magic_skin_proto_rawDescOnce.Do(func() {
		file_activity_magic_skin_magic_skin_proto_rawDescData = protoimpl.X.CompressGZIP(file_activity_magic_skin_magic_skin_proto_rawDescData)
	})
	return file_activity_magic_skin_magic_skin_proto_rawDescData
}

var file_activity_magic_skin_magic_skin_proto_msgTypes = make([]protoimpl.MessageInfo, 21)
var file_activity_magic_skin_magic_skin_proto_goTypes = []interface{}{
	(*Component)(nil),           // 0: magic_skin.Component
	(*Section)(nil),             // 1: magic_skin.Section
	(*GetInfoReq)(nil),          // 2: magic_skin.GetInfoReq
	(*GetInfoRsp)(nil),          // 3: magic_skin.GetInfoRsp
	(*Skin)(nil),                // 4: magic_skin.Skin
	(*TopListItem)(nil),         // 5: magic_skin.TopListItem
	(*LockSectionReq)(nil),      // 6: magic_skin.LockSectionReq
	(*LockSectionRsp)(nil),      // 7: magic_skin.LockSectionRsp
	(*RefreshSkinReq)(nil),      // 8: magic_skin.RefreshSkinReq
	(*RefreshSkinRsp)(nil),      // 9: magic_skin.RefreshSkinRsp
	(*SaveSkinReq)(nil),         // 10: magic_skin.SaveSkinReq
	(*SaveSkinRsp)(nil),         // 11: magic_skin.SaveSkinRsp
	(*RestoreSkinReq)(nil),      // 12: magic_skin.RestoreSkinReq
	(*RestoreSkinRsp)(nil),      // 13: magic_skin.RestoreSkinRsp
	(*GetTopListReq)(nil),       // 14: magic_skin.GetTopListReq
	(*GetTopListRsp)(nil),       // 15: magic_skin.GetTopListRsp
	(*GetInfoRsp_DescItem)(nil), // 16: magic_skin.GetInfoRsp.DescItem
	(*GetInfoRsp_Link)(nil),     // 17: magic_skin.GetInfoRsp.Link
	(*GetInfoRsp_Config)(nil),   // 18: magic_skin.GetInfoRsp.Config
	nil,                         // 19: magic_skin.GetInfoRsp.Config.ExtraCostCoinEntry
	nil,                         // 20: magic_skin.GetInfoRsp.Config.UnlockSectionEntry
}
var file_activity_magic_skin_magic_skin_proto_depIdxs = []int32{
	0,  // 0: magic_skin.Section.component:type_name -> magic_skin.Component
	18, // 1: magic_skin.GetInfoRsp.config:type_name -> magic_skin.GetInfoRsp.Config
	5,  // 2: magic_skin.GetInfoRsp.top_list:type_name -> magic_skin.TopListItem
	4,  // 3: magic_skin.GetInfoRsp.save_skins:type_name -> magic_skin.Skin
	4,  // 4: magic_skin.GetInfoRsp.pending_skin:type_name -> magic_skin.Skin
	4,  // 5: magic_skin.GetInfoRsp.last_skin:type_name -> magic_skin.Skin
	1,  // 6: magic_skin.Skin.section:type_name -> magic_skin.Section
	4,  // 7: magic_skin.TopListItem.skin:type_name -> magic_skin.Skin
	4,  // 8: magic_skin.RefreshSkinRsp.skin:type_name -> magic_skin.Skin
	4,  // 9: magic_skin.SaveSkinRsp.current_skin:type_name -> magic_skin.Skin
	5,  // 10: magic_skin.GetTopListRsp.list:type_name -> magic_skin.TopListItem
	16, // 11: magic_skin.GetInfoRsp.Config.desc:type_name -> magic_skin.GetInfoRsp.DescItem
	19, // 12: magic_skin.GetInfoRsp.Config.extra_cost_coin:type_name -> magic_skin.GetInfoRsp.Config.ExtraCostCoinEntry
	20, // 13: magic_skin.GetInfoRsp.Config.unlock_section:type_name -> magic_skin.GetInfoRsp.Config.UnlockSectionEntry
	0,  // 14: magic_skin.GetInfoRsp.Config.components:type_name -> magic_skin.Component
	1,  // 15: magic_skin.GetInfoRsp.Config.sections:type_name -> magic_skin.Section
	17, // 16: magic_skin.GetInfoRsp.Config.CoinGetLinks:type_name -> magic_skin.GetInfoRsp.Link
	17, // [17:17] is the sub-list for method output_type
	17, // [17:17] is the sub-list for method input_type
	17, // [17:17] is the sub-list for extension type_name
	17, // [17:17] is the sub-list for extension extendee
	0,  // [0:17] is the sub-list for field type_name
}

func init() { file_activity_magic_skin_magic_skin_proto_init() }
func file_activity_magic_skin_magic_skin_proto_init() {
	if File_activity_magic_skin_magic_skin_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_activity_magic_skin_magic_skin_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Component); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_activity_magic_skin_magic_skin_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Section); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_activity_magic_skin_magic_skin_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetInfoReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_activity_magic_skin_magic_skin_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetInfoRsp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_activity_magic_skin_magic_skin_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Skin); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_activity_magic_skin_magic_skin_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TopListItem); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_activity_magic_skin_magic_skin_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LockSectionReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_activity_magic_skin_magic_skin_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LockSectionRsp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_activity_magic_skin_magic_skin_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RefreshSkinReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_activity_magic_skin_magic_skin_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RefreshSkinRsp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_activity_magic_skin_magic_skin_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SaveSkinReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_activity_magic_skin_magic_skin_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SaveSkinRsp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_activity_magic_skin_magic_skin_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RestoreSkinReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_activity_magic_skin_magic_skin_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RestoreSkinRsp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_activity_magic_skin_magic_skin_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetTopListReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_activity_magic_skin_magic_skin_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetTopListRsp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_activity_magic_skin_magic_skin_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetInfoRsp_DescItem); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_activity_magic_skin_magic_skin_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetInfoRsp_Link); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_activity_magic_skin_magic_skin_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetInfoRsp_Config); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_activity_magic_skin_magic_skin_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   21,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_activity_magic_skin_magic_skin_proto_goTypes,
		DependencyIndexes: file_activity_magic_skin_magic_skin_proto_depIdxs,
		MessageInfos:      file_activity_magic_skin_magic_skin_proto_msgTypes,
	}.Build()
	File_activity_magic_skin_magic_skin_proto = out.File
	file_activity_magic_skin_magic_skin_proto_rawDesc = nil
	file_activity_magic_skin_magic_skin_proto_goTypes = nil
	file_activity_magic_skin_magic_skin_proto_depIdxs = nil
}
