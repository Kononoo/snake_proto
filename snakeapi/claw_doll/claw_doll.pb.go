// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.30.0
// 	protoc        v3.21.12
// source: snakeapi/claw_doll/claw_doll.proto

package claw_doll

import (
	snakeapi "git.17zjh.com/snake/snake_proto/snakeapi"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	descriptorpb "google.golang.org/protobuf/types/descriptorpb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type ClawDollRoute int32

const (
	ClawDollRoute_cdUndef                          ClawDollRoute = 0
	ClawDollRoute_share_claw_doll_config           ClawDollRoute = 1
	ClawDollRoute_share_claw_doll_get_info         ClawDollRoute = 2
	ClawDollRoute_share_claw_doll_do_claw          ClawDollRoute = 3
	ClawDollRoute_share_claw_doll_open_gift_box    ClawDollRoute = 4
	ClawDollRoute_share_claw_doll_clas_history     ClawDollRoute = 5
	ClawDollRoute_share_claw_doll_buy_claw_coin    ClawDollRoute = 6
	ClawDollRoute_share_claw_doll_get_ad_rewards   ClawDollRoute = 7
	ClawDollRoute_share_claw_doll_get_task_info    ClawDollRoute = 8
	ClawDollRoute_share_claw_doll_get_task_rewards ClawDollRoute = 9
)

// Enum value maps for ClawDollRoute.
var (
	ClawDollRoute_name = map[int32]string{
		0: "cdUndef",
		1: "share_claw_doll_config",
		2: "share_claw_doll_get_info",
		3: "share_claw_doll_do_claw",
		4: "share_claw_doll_open_gift_box",
		5: "share_claw_doll_clas_history",
		6: "share_claw_doll_buy_claw_coin",
		7: "share_claw_doll_get_ad_rewards",
		8: "share_claw_doll_get_task_info",
		9: "share_claw_doll_get_task_rewards",
	}
	ClawDollRoute_value = map[string]int32{
		"cdUndef":                          0,
		"share_claw_doll_config":           1,
		"share_claw_doll_get_info":         2,
		"share_claw_doll_do_claw":          3,
		"share_claw_doll_open_gift_box":    4,
		"share_claw_doll_clas_history":     5,
		"share_claw_doll_buy_claw_coin":    6,
		"share_claw_doll_get_ad_rewards":   7,
		"share_claw_doll_get_task_info":    8,
		"share_claw_doll_get_task_rewards": 9,
	}
)

func (x ClawDollRoute) Enum() *ClawDollRoute {
	p := new(ClawDollRoute)
	*p = x
	return p
}

func (x ClawDollRoute) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ClawDollRoute) Descriptor() protoreflect.EnumDescriptor {
	return file_snakeapi_claw_doll_claw_doll_proto_enumTypes[0].Descriptor()
}

func (ClawDollRoute) Type() protoreflect.EnumType {
	return &file_snakeapi_claw_doll_claw_doll_proto_enumTypes[0]
}

func (x ClawDollRoute) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ClawDollRoute.Descriptor instead.
func (ClawDollRoute) EnumDescriptor() ([]byte, []int) {
	return file_snakeapi_claw_doll_claw_doll_proto_rawDescGZIP(), []int{0}
}

// 新手标记位
type BeginnerState int32

const (
	BeginnerState_Beginner BeginnerState = 0 // 纯新手
	BeginnerState_Clawed   BeginnerState = 1 // 已经抓取过
	BeginnerState_Opened   BeginnerState = 2 // 已经打开了礼盒
)

// Enum value maps for BeginnerState.
var (
	BeginnerState_name = map[int32]string{
		0: "Beginner",
		1: "Clawed",
		2: "Opened",
	}
	BeginnerState_value = map[string]int32{
		"Beginner": 0,
		"Clawed":   1,
		"Opened":   2,
	}
)

func (x BeginnerState) Enum() *BeginnerState {
	p := new(BeginnerState)
	*p = x
	return p
}

func (x BeginnerState) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (BeginnerState) Descriptor() protoreflect.EnumDescriptor {
	return file_snakeapi_claw_doll_claw_doll_proto_enumTypes[1].Descriptor()
}

func (BeginnerState) Type() protoreflect.EnumType {
	return &file_snakeapi_claw_doll_claw_doll_proto_enumTypes[1]
}

func (x BeginnerState) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use BeginnerState.Descriptor instead.
func (BeginnerState) EnumDescriptor() ([]byte, []int) {
	return file_snakeapi_claw_doll_claw_doll_proto_rawDescGZIP(), []int{1}
}

// 奖励状态
type RewardState int32

const (
	RewardState_Undef     RewardState = 0
	RewardState_Available RewardState = 1 // 可抓取
	RewardState_Restock   RewardState = 2 // 补货中
	RewardState_NotOnline RewardState = 3 // 等待上线
	RewardState_Got       RewardState = 4 // 已获得
)

// Enum value maps for RewardState.
var (
	RewardState_name = map[int32]string{
		0: "Undef",
		1: "Available",
		2: "Restock",
		3: "NotOnline",
		4: "Got",
	}
	RewardState_value = map[string]int32{
		"Undef":     0,
		"Available": 1,
		"Restock":   2,
		"NotOnline": 3,
		"Got":       4,
	}
)

func (x RewardState) Enum() *RewardState {
	p := new(RewardState)
	*p = x
	return p
}

func (x RewardState) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (RewardState) Descriptor() protoreflect.EnumDescriptor {
	return file_snakeapi_claw_doll_claw_doll_proto_enumTypes[2].Descriptor()
}

func (RewardState) Type() protoreflect.EnumType {
	return &file_snakeapi_claw_doll_claw_doll_proto_enumTypes[2]
}

func (x RewardState) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use RewardState.Descriptor instead.
func (RewardState) EnumDescriptor() ([]byte, []int) {
	return file_snakeapi_claw_doll_claw_doll_proto_rawDescGZIP(), []int{2}
}

type ConfigReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ConfigVersion int64 `protobuf:"varint,1,opt,name=config_version,json=configVersion,proto3" json:"config_version,omitempty"`
}

func (x *ConfigReq) Reset() {
	*x = ConfigReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_snakeapi_claw_doll_claw_doll_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ConfigReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ConfigReq) ProtoMessage() {}

func (x *ConfigReq) ProtoReflect() protoreflect.Message {
	mi := &file_snakeapi_claw_doll_claw_doll_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ConfigReq.ProtoReflect.Descriptor instead.
func (*ConfigReq) Descriptor() ([]byte, []int) {
	return file_snakeapi_claw_doll_claw_doll_proto_rawDescGZIP(), []int{0}
}

func (x *ConfigReq) GetConfigVersion() int64 {
	if x != nil {
		return x.ConfigVersion
	}
	return 0
}

type ConfigResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Config        string `protobuf:"bytes,1,opt,name=config,proto3" json:"config,omitempty"`
	ConfigVersion int64  `protobuf:"varint,2,opt,name=config_version,json=configVersion,proto3" json:"config_version,omitempty"`
}

func (x *ConfigResp) Reset() {
	*x = ConfigResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_snakeapi_claw_doll_claw_doll_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ConfigResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ConfigResp) ProtoMessage() {}

func (x *ConfigResp) ProtoReflect() protoreflect.Message {
	mi := &file_snakeapi_claw_doll_claw_doll_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ConfigResp.ProtoReflect.Descriptor instead.
func (*ConfigResp) Descriptor() ([]byte, []int) {
	return file_snakeapi_claw_doll_claw_doll_proto_rawDescGZIP(), []int{1}
}

func (x *ConfigResp) GetConfig() string {
	if x != nil {
		return x.Config
	}
	return ""
}

func (x *ConfigResp) GetConfigVersion() int64 {
	if x != nil {
		return x.ConfigVersion
	}
	return 0
}

type GetInfoReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *GetInfoReq) Reset() {
	*x = GetInfoReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_snakeapi_claw_doll_claw_doll_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetInfoReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetInfoReq) ProtoMessage() {}

func (x *GetInfoReq) ProtoReflect() protoreflect.Message {
	mi := &file_snakeapi_claw_doll_claw_doll_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetInfoReq.ProtoReflect.Descriptor instead.
func (*GetInfoReq) Descriptor() ([]byte, []int) {
	return file_snakeapi_claw_doll_claw_doll_proto_rawDescGZIP(), []int{2}
}

type GetInfoResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DiamondCount    int64                 `protobuf:"varint,1,opt,name=diamond_count,json=diamondCount,proto3" json:"diamond_count,omitempty"`              // 苹果数量
	ClawCoinCount   int64                 `protobuf:"varint,2,opt,name=claw_coin_count,json=clawCoinCount,proto3" json:"claw_coin_count,omitempty"`         // 娃娃币数量
	ClawProgress    int32                 `protobuf:"varint,3,opt,name=claw_progress,json=clawProgress,proto3" json:"claw_progress,omitempty"`              // 抓取进度(0~100)
	LastGiftBoxTime int64                 `protobuf:"varint,4,opt,name=last_gift_box_time,json=lastGiftBoxTime,proto3" json:"last_gift_box_time,omitempty"` // 上一次领取礼物盒的时间
	BeltRewards     []*ClawBeltRewardItem `protobuf:"bytes,5,rep,name=belt_rewards,json=beltRewards,proto3" json:"belt_rewards,omitempty"`                  // 传送带上的奖励情况
	AdWatchCnt      int64                 `protobuf:"varint,6,opt,name=ad_watch_cnt,json=adWatchCnt,proto3" json:"ad_watch_cnt,omitempty"`                  // 广告已看次数
	Begin           BeginnerState         `protobuf:"varint,7,opt,name=begin,proto3,enum=class_doll.BeginnerState" json:"begin,omitempty"`                  // 新手引导完成状态
	BigRewardList   []*ClawBigRewardItem  `protobuf:"bytes,8,rep,name=big_reward_list,json=bigRewardList,proto3" json:"big_reward_list,omitempty"`          // 奖励大赏列表
	TotalPvpCount   int32                 `protobuf:"varint,9,opt,name=total_pvp_count,json=totalPvpCount,proto3" json:"total_pvp_count,omitempty"`         // 双人模式总游戏局数
	TodayPvpCount   int32                 `protobuf:"varint,10,opt,name=today_pvp_count,json=todayPvpCount,proto3" json:"today_pvp_count,omitempty"`        // 今日双人游戏局数
	PackList        []*snakeapi.Pack      `protobuf:"bytes,11,rep,name=pack_list,json=packList,proto3" json:"pack_list,omitempty"`                          // 苹果礼包列表
}

func (x *GetInfoResp) Reset() {
	*x = GetInfoResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_snakeapi_claw_doll_claw_doll_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetInfoResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetInfoResp) ProtoMessage() {}

func (x *GetInfoResp) ProtoReflect() protoreflect.Message {
	mi := &file_snakeapi_claw_doll_claw_doll_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetInfoResp.ProtoReflect.Descriptor instead.
func (*GetInfoResp) Descriptor() ([]byte, []int) {
	return file_snakeapi_claw_doll_claw_doll_proto_rawDescGZIP(), []int{3}
}

func (x *GetInfoResp) GetDiamondCount() int64 {
	if x != nil {
		return x.DiamondCount
	}
	return 0
}

func (x *GetInfoResp) GetClawCoinCount() int64 {
	if x != nil {
		return x.ClawCoinCount
	}
	return 0
}

func (x *GetInfoResp) GetClawProgress() int32 {
	if x != nil {
		return x.ClawProgress
	}
	return 0
}

func (x *GetInfoResp) GetLastGiftBoxTime() int64 {
	if x != nil {
		return x.LastGiftBoxTime
	}
	return 0
}

func (x *GetInfoResp) GetBeltRewards() []*ClawBeltRewardItem {
	if x != nil {
		return x.BeltRewards
	}
	return nil
}

func (x *GetInfoResp) GetAdWatchCnt() int64 {
	if x != nil {
		return x.AdWatchCnt
	}
	return 0
}

func (x *GetInfoResp) GetBegin() BeginnerState {
	if x != nil {
		return x.Begin
	}
	return BeginnerState_Beginner
}

func (x *GetInfoResp) GetBigRewardList() []*ClawBigRewardItem {
	if x != nil {
		return x.BigRewardList
	}
	return nil
}

func (x *GetInfoResp) GetTotalPvpCount() int32 {
	if x != nil {
		return x.TotalPvpCount
	}
	return 0
}

func (x *GetInfoResp) GetTodayPvpCount() int32 {
	if x != nil {
		return x.TodayPvpCount
	}
	return 0
}

func (x *GetInfoResp) GetPackList() []*snakeapi.Pack {
	if x != nil {
		return x.PackList
	}
	return nil
}

type ClawBeltRewardItem struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RewardId    int32       `protobuf:"varint,1,opt,name=reward_id,json=rewardId,proto3" json:"reward_id,omitempty"`                                      // 奖励序号，每个奖励有一个唯一序号
	RewardState RewardState `protobuf:"varint,2,opt,name=reward_state,json=rewardState,proto3,enum=class_doll.RewardState" json:"reward_state,omitempty"` //  奖励的状态
	EndTime     int64       `protobuf:"varint,3,opt,name=end_time,json=endTime,proto3" json:"end_time,omitempty"`                                         //  下次补货时间、预售开启时间
}

func (x *ClawBeltRewardItem) Reset() {
	*x = ClawBeltRewardItem{}
	if protoimpl.UnsafeEnabled {
		mi := &file_snakeapi_claw_doll_claw_doll_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ClawBeltRewardItem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ClawBeltRewardItem) ProtoMessage() {}

func (x *ClawBeltRewardItem) ProtoReflect() protoreflect.Message {
	mi := &file_snakeapi_claw_doll_claw_doll_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ClawBeltRewardItem.ProtoReflect.Descriptor instead.
func (*ClawBeltRewardItem) Descriptor() ([]byte, []int) {
	return file_snakeapi_claw_doll_claw_doll_proto_rawDescGZIP(), []int{4}
}

func (x *ClawBeltRewardItem) GetRewardId() int32 {
	if x != nil {
		return x.RewardId
	}
	return 0
}

func (x *ClawBeltRewardItem) GetRewardState() RewardState {
	if x != nil {
		return x.RewardState
	}
	return RewardState_Undef
}

func (x *ClawBeltRewardItem) GetEndTime() int64 {
	if x != nil {
		return x.EndTime
	}
	return 0
}

type ClawBigRewardItem struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Level      int32                 `protobuf:"varint,1,opt,name=level,proto3" json:"level,omitempty"`
	Got        int32                 `protobuf:"varint,2,opt,name=got,proto3" json:"got,omitempty"`
	All        int32                 `protobuf:"varint,3,opt,name=all,proto3" json:"all,omitempty"`
	RewardList []*ClawBeltRewardItem `protobuf:"bytes,4,rep,name=reward_list,json=rewardList,proto3" json:"reward_list,omitempty"`
}

func (x *ClawBigRewardItem) Reset() {
	*x = ClawBigRewardItem{}
	if protoimpl.UnsafeEnabled {
		mi := &file_snakeapi_claw_doll_claw_doll_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ClawBigRewardItem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ClawBigRewardItem) ProtoMessage() {}

func (x *ClawBigRewardItem) ProtoReflect() protoreflect.Message {
	mi := &file_snakeapi_claw_doll_claw_doll_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ClawBigRewardItem.ProtoReflect.Descriptor instead.
func (*ClawBigRewardItem) Descriptor() ([]byte, []int) {
	return file_snakeapi_claw_doll_claw_doll_proto_rawDescGZIP(), []int{5}
}

func (x *ClawBigRewardItem) GetLevel() int32 {
	if x != nil {
		return x.Level
	}
	return 0
}

func (x *ClawBigRewardItem) GetGot() int32 {
	if x != nil {
		return x.Got
	}
	return 0
}

func (x *ClawBigRewardItem) GetAll() int32 {
	if x != nil {
		return x.All
	}
	return 0
}

func (x *ClawBigRewardItem) GetRewardList() []*ClawBeltRewardItem {
	if x != nil {
		return x.RewardList
	}
	return nil
}

type DoClawReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RewardId int32 `protobuf:"varint,1,opt,name=reward_id,json=rewardId,proto3" json:"reward_id,omitempty"` // 夹中的奖励id，未夹中传0
}

func (x *DoClawReq) Reset() {
	*x = DoClawReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_snakeapi_claw_doll_claw_doll_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DoClawReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DoClawReq) ProtoMessage() {}

func (x *DoClawReq) ProtoReflect() protoreflect.Message {
	mi := &file_snakeapi_claw_doll_claw_doll_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DoClawReq.ProtoReflect.Descriptor instead.
func (*DoClawReq) Descriptor() ([]byte, []int) {
	return file_snakeapi_claw_doll_claw_doll_proto_rawDescGZIP(), []int{6}
}

func (x *DoClawReq) GetRewardId() int32 {
	if x != nil {
		return x.RewardId
	}
	return 0
}

type DoClawResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ClawProgress  int32               `protobuf:"varint,1,opt,name=claw_progress,json=clawProgress,proto3" json:"claw_progress,omitempty"`      // 抓取进度(0~100)
	ClawCoinCount int32               `protobuf:"varint,2,opt,name=claw_coin_count,json=clawCoinCount,proto3" json:"claw_coin_count,omitempty"` // 玩家剩余娃娃币
	BeltReward    *ClawBeltRewardItem `protobuf:"bytes,3,opt,name=belt_reward,json=beltReward,proto3" json:"belt_reward,omitempty"`             // 夹中的位置的奖励新信息
}

func (x *DoClawResp) Reset() {
	*x = DoClawResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_snakeapi_claw_doll_claw_doll_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DoClawResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DoClawResp) ProtoMessage() {}

func (x *DoClawResp) ProtoReflect() protoreflect.Message {
	mi := &file_snakeapi_claw_doll_claw_doll_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DoClawResp.ProtoReflect.Descriptor instead.
func (*DoClawResp) Descriptor() ([]byte, []int) {
	return file_snakeapi_claw_doll_claw_doll_proto_rawDescGZIP(), []int{7}
}

func (x *DoClawResp) GetClawProgress() int32 {
	if x != nil {
		return x.ClawProgress
	}
	return 0
}

func (x *DoClawResp) GetClawCoinCount() int32 {
	if x != nil {
		return x.ClawCoinCount
	}
	return 0
}

func (x *DoClawResp) GetBeltReward() *ClawBeltRewardItem {
	if x != nil {
		return x.BeltReward
	}
	return nil
}

type OpenGiftBoxReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *OpenGiftBoxReq) Reset() {
	*x = OpenGiftBoxReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_snakeapi_claw_doll_claw_doll_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OpenGiftBoxReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OpenGiftBoxReq) ProtoMessage() {}

func (x *OpenGiftBoxReq) ProtoReflect() protoreflect.Message {
	mi := &file_snakeapi_claw_doll_claw_doll_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OpenGiftBoxReq.ProtoReflect.Descriptor instead.
func (*OpenGiftBoxReq) Descriptor() ([]byte, []int) {
	return file_snakeapi_claw_doll_claw_doll_proto_rawDescGZIP(), []int{8}
}

type OpenGiftBoxResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RewardItem      *snakeapi.RewardItem `protobuf:"bytes,1,opt,name=reward_item,json=rewardItem,proto3" json:"reward_item,omitempty"`                     // 奖励
	LastGiftBoxTime int64                `protobuf:"varint,2,opt,name=last_gift_box_time,json=lastGiftBoxTime,proto3" json:"last_gift_box_time,omitempty"` // 上一次领取礼物盒的时间
}

func (x *OpenGiftBoxResp) Reset() {
	*x = OpenGiftBoxResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_snakeapi_claw_doll_claw_doll_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OpenGiftBoxResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OpenGiftBoxResp) ProtoMessage() {}

func (x *OpenGiftBoxResp) ProtoReflect() protoreflect.Message {
	mi := &file_snakeapi_claw_doll_claw_doll_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OpenGiftBoxResp.ProtoReflect.Descriptor instead.
func (*OpenGiftBoxResp) Descriptor() ([]byte, []int) {
	return file_snakeapi_claw_doll_claw_doll_proto_rawDescGZIP(), []int{9}
}

func (x *OpenGiftBoxResp) GetRewardItem() *snakeapi.RewardItem {
	if x != nil {
		return x.RewardItem
	}
	return nil
}

func (x *OpenGiftBoxResp) GetLastGiftBoxTime() int64 {
	if x != nil {
		return x.LastGiftBoxTime
	}
	return 0
}

type HistoryReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *HistoryReq) Reset() {
	*x = HistoryReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_snakeapi_claw_doll_claw_doll_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HistoryReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HistoryReq) ProtoMessage() {}

func (x *HistoryReq) ProtoReflect() protoreflect.Message {
	mi := &file_snakeapi_claw_doll_claw_doll_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HistoryReq.ProtoReflect.Descriptor instead.
func (*HistoryReq) Descriptor() ([]byte, []int) {
	return file_snakeapi_claw_doll_claw_doll_proto_rawDescGZIP(), []int{10}
}

type HistoryResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	History []*History `protobuf:"bytes,1,rep,name=history,proto3" json:"history,omitempty"`
}

func (x *HistoryResp) Reset() {
	*x = HistoryResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_snakeapi_claw_doll_claw_doll_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HistoryResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HistoryResp) ProtoMessage() {}

func (x *HistoryResp) ProtoReflect() protoreflect.Message {
	mi := &file_snakeapi_claw_doll_claw_doll_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HistoryResp.ProtoReflect.Descriptor instead.
func (*HistoryResp) Descriptor() ([]byte, []int) {
	return file_snakeapi_claw_doll_claw_doll_proto_rawDescGZIP(), []int{11}
}

func (x *HistoryResp) GetHistory() []*History {
	if x != nil {
		return x.History
	}
	return nil
}

type History struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Timestamp int64 `protobuf:"varint,1,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	RewardId  int32 `protobuf:"varint,2,opt,name=reward_id,json=rewardId,proto3" json:"reward_id,omitempty"`
	ToastId   int32 `protobuf:"varint,3,opt,name=toast_id,json=toastId,proto3" json:"toast_id,omitempty"`
}

func (x *History) Reset() {
	*x = History{}
	if protoimpl.UnsafeEnabled {
		mi := &file_snakeapi_claw_doll_claw_doll_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *History) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*History) ProtoMessage() {}

func (x *History) ProtoReflect() protoreflect.Message {
	mi := &file_snakeapi_claw_doll_claw_doll_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use History.ProtoReflect.Descriptor instead.
func (*History) Descriptor() ([]byte, []int) {
	return file_snakeapi_claw_doll_claw_doll_proto_rawDescGZIP(), []int{12}
}

func (x *History) GetTimestamp() int64 {
	if x != nil {
		return x.Timestamp
	}
	return 0
}

func (x *History) GetRewardId() int32 {
	if x != nil {
		return x.RewardId
	}
	return 0
}

func (x *History) GetToastId() int32 {
	if x != nil {
		return x.ToastId
	}
	return 0
}

type BuyClawCoinReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PackId int32 `protobuf:"varint,2,opt,name=PackId,proto3" json:"PackId,omitempty"` // 苹果礼包id
}

func (x *BuyClawCoinReq) Reset() {
	*x = BuyClawCoinReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_snakeapi_claw_doll_claw_doll_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BuyClawCoinReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BuyClawCoinReq) ProtoMessage() {}

func (x *BuyClawCoinReq) ProtoReflect() protoreflect.Message {
	mi := &file_snakeapi_claw_doll_claw_doll_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BuyClawCoinReq.ProtoReflect.Descriptor instead.
func (*BuyClawCoinReq) Descriptor() ([]byte, []int) {
	return file_snakeapi_claw_doll_claw_doll_proto_rawDescGZIP(), []int{13}
}

func (x *BuyClawCoinReq) GetPackId() int32 {
	if x != nil {
		return x.PackId
	}
	return 0
}

type BuyClawCoinResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DiamondCount  int64 `protobuf:"varint,1,opt,name=diamond_count,json=diamondCount,proto3" json:"diamond_count,omitempty"`      // 苹果数量
	ClawCoinCount int64 `protobuf:"varint,2,opt,name=claw_coin_count,json=clawCoinCount,proto3" json:"claw_coin_count,omitempty"` // 玩家剩余娃娃币
}

func (x *BuyClawCoinResp) Reset() {
	*x = BuyClawCoinResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_snakeapi_claw_doll_claw_doll_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BuyClawCoinResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BuyClawCoinResp) ProtoMessage() {}

func (x *BuyClawCoinResp) ProtoReflect() protoreflect.Message {
	mi := &file_snakeapi_claw_doll_claw_doll_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BuyClawCoinResp.ProtoReflect.Descriptor instead.
func (*BuyClawCoinResp) Descriptor() ([]byte, []int) {
	return file_snakeapi_claw_doll_claw_doll_proto_rawDescGZIP(), []int{14}
}

func (x *BuyClawCoinResp) GetDiamondCount() int64 {
	if x != nil {
		return x.DiamondCount
	}
	return 0
}

func (x *BuyClawCoinResp) GetClawCoinCount() int64 {
	if x != nil {
		return x.ClawCoinCount
	}
	return 0
}

type GetAdRewardsReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *GetAdRewardsReq) Reset() {
	*x = GetAdRewardsReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_snakeapi_claw_doll_claw_doll_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetAdRewardsReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAdRewardsReq) ProtoMessage() {}

func (x *GetAdRewardsReq) ProtoReflect() protoreflect.Message {
	mi := &file_snakeapi_claw_doll_claw_doll_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAdRewardsReq.ProtoReflect.Descriptor instead.
func (*GetAdRewardsReq) Descriptor() ([]byte, []int) {
	return file_snakeapi_claw_doll_claw_doll_proto_rawDescGZIP(), []int{15}
}

type GetAdRewardsResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Rewards       []*snakeapi.RewardItem `protobuf:"bytes,1,rep,name=rewards,proto3" json:"rewards,omitempty"`                                     // 奖励列表
	ClawCoinCount int64                  `protobuf:"varint,2,opt,name=claw_coin_count,json=clawCoinCount,proto3" json:"claw_coin_count,omitempty"` // 娃娃币数量
	RemainAdCnt   int64                  `protobuf:"varint,3,opt,name=remain_ad_cnt,json=remainAdCnt,proto3" json:"remain_ad_cnt,omitempty"`       // 剩余广告观看次数
}

func (x *GetAdRewardsResp) Reset() {
	*x = GetAdRewardsResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_snakeapi_claw_doll_claw_doll_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetAdRewardsResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAdRewardsResp) ProtoMessage() {}

func (x *GetAdRewardsResp) ProtoReflect() protoreflect.Message {
	mi := &file_snakeapi_claw_doll_claw_doll_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAdRewardsResp.ProtoReflect.Descriptor instead.
func (*GetAdRewardsResp) Descriptor() ([]byte, []int) {
	return file_snakeapi_claw_doll_claw_doll_proto_rawDescGZIP(), []int{16}
}

func (x *GetAdRewardsResp) GetRewards() []*snakeapi.RewardItem {
	if x != nil {
		return x.Rewards
	}
	return nil
}

func (x *GetAdRewardsResp) GetClawCoinCount() int64 {
	if x != nil {
		return x.ClawCoinCount
	}
	return 0
}

func (x *GetAdRewardsResp) GetRemainAdCnt() int64 {
	if x != nil {
		return x.RemainAdCnt
	}
	return 0
}

type GetTaskInfoReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *GetTaskInfoReq) Reset() {
	*x = GetTaskInfoReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_snakeapi_claw_doll_claw_doll_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetTaskInfoReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetTaskInfoReq) ProtoMessage() {}

func (x *GetTaskInfoReq) ProtoReflect() protoreflect.Message {
	mi := &file_snakeapi_claw_doll_claw_doll_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetTaskInfoReq.ProtoReflect.Descriptor instead.
func (*GetTaskInfoReq) Descriptor() ([]byte, []int) {
	return file_snakeapi_claw_doll_claw_doll_proto_rawDescGZIP(), []int{17}
}

type GetTaskInfoResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TaskInfos     []*snakeapi.EventTask `protobuf:"bytes,1,rep,name=task_infos,json=taskInfos,proto3" json:"task_infos,omitempty"`                // 任务信息
	ClawCoinCount int64                 `protobuf:"varint,2,opt,name=claw_coin_count,json=clawCoinCount,proto3" json:"claw_coin_count,omitempty"` // 娃娃币数量
}

func (x *GetTaskInfoResp) Reset() {
	*x = GetTaskInfoResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_snakeapi_claw_doll_claw_doll_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetTaskInfoResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetTaskInfoResp) ProtoMessage() {}

func (x *GetTaskInfoResp) ProtoReflect() protoreflect.Message {
	mi := &file_snakeapi_claw_doll_claw_doll_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetTaskInfoResp.ProtoReflect.Descriptor instead.
func (*GetTaskInfoResp) Descriptor() ([]byte, []int) {
	return file_snakeapi_claw_doll_claw_doll_proto_rawDescGZIP(), []int{18}
}

func (x *GetTaskInfoResp) GetTaskInfos() []*snakeapi.EventTask {
	if x != nil {
		return x.TaskInfos
	}
	return nil
}

func (x *GetTaskInfoResp) GetClawCoinCount() int64 {
	if x != nil {
		return x.ClawCoinCount
	}
	return 0
}

type GetTaskRewardsReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	EventId int32 `protobuf:"varint,1,opt,name=event_id,json=eventId,proto3" json:"event_id,omitempty"` // 任务活动id
	TaskId  int32 `protobuf:"varint,2,opt,name=task_id,json=taskId,proto3" json:"task_id,omitempty"`    // 任务id
}

func (x *GetTaskRewardsReq) Reset() {
	*x = GetTaskRewardsReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_snakeapi_claw_doll_claw_doll_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetTaskRewardsReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetTaskRewardsReq) ProtoMessage() {}

func (x *GetTaskRewardsReq) ProtoReflect() protoreflect.Message {
	mi := &file_snakeapi_claw_doll_claw_doll_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetTaskRewardsReq.ProtoReflect.Descriptor instead.
func (*GetTaskRewardsReq) Descriptor() ([]byte, []int) {
	return file_snakeapi_claw_doll_claw_doll_proto_rawDescGZIP(), []int{19}
}

func (x *GetTaskRewardsReq) GetEventId() int32 {
	if x != nil {
		return x.EventId
	}
	return 0
}

func (x *GetTaskRewardsReq) GetTaskId() int32 {
	if x != nil {
		return x.TaskId
	}
	return 0
}

type GetTaskRewardsResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Rewards       []*snakeapi.RewardItem `protobuf:"bytes,1,rep,name=rewards,proto3" json:"rewards,omitempty"`                                     // 奖励列表
	ClawCoinCount int64                  `protobuf:"varint,2,opt,name=claw_coin_count,json=clawCoinCount,proto3" json:"claw_coin_count,omitempty"` // 娃娃币数量
}

func (x *GetTaskRewardsResp) Reset() {
	*x = GetTaskRewardsResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_snakeapi_claw_doll_claw_doll_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetTaskRewardsResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetTaskRewardsResp) ProtoMessage() {}

func (x *GetTaskRewardsResp) ProtoReflect() protoreflect.Message {
	mi := &file_snakeapi_claw_doll_claw_doll_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetTaskRewardsResp.ProtoReflect.Descriptor instead.
func (*GetTaskRewardsResp) Descriptor() ([]byte, []int) {
	return file_snakeapi_claw_doll_claw_doll_proto_rawDescGZIP(), []int{20}
}

func (x *GetTaskRewardsResp) GetRewards() []*snakeapi.RewardItem {
	if x != nil {
		return x.Rewards
	}
	return nil
}

func (x *GetTaskRewardsResp) GetClawCoinCount() int64 {
	if x != nil {
		return x.ClawCoinCount
	}
	return 0
}

var file_snakeapi_claw_doll_claw_doll_proto_extTypes = []protoimpl.ExtensionInfo{
	{
		ExtendedType:  (*descriptorpb.EnumValueOptions)(nil),
		ExtensionType: (*string)(nil),
		Field:         123456789,
		Name:          "class_doll.string_name",
		Tag:           "bytes,123456789,opt,name=string_name",
		Filename:      "snakeapi/claw_doll/claw_doll.proto",
	},
}

// Extension fields to descriptorpb.EnumValueOptions.
var (
	// optional string string_name = 123456789;
	E_StringName = &file_snakeapi_claw_doll_claw_doll_proto_extTypes[0]
)

var File_snakeapi_claw_doll_claw_doll_proto protoreflect.FileDescriptor

var file_snakeapi_claw_doll_claw_doll_proto_rawDesc = []byte{
	0x0a, 0x22, 0x73, 0x6e, 0x61, 0x6b, 0x65, 0x61, 0x70, 0x69, 0x2f, 0x63, 0x6c, 0x61, 0x77, 0x5f,
	0x64, 0x6f, 0x6c, 0x6c, 0x2f, 0x63, 0x6c, 0x61, 0x77, 0x5f, 0x64, 0x6f, 0x6c, 0x6c, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0a, 0x63, 0x6c, 0x61, 0x73, 0x73, 0x5f, 0x64, 0x6f, 0x6c, 0x6c,
	0x1a, 0x13, 0x73, 0x6e, 0x61, 0x6b, 0x65, 0x61, 0x70, 0x69, 0x2f, 0x62, 0x61, 0x73, 0x65, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x20, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x6f,
	0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x32, 0x0a, 0x09, 0x43, 0x6f, 0x6e, 0x66, 0x69,
	0x67, 0x52, 0x65, 0x71, 0x12, 0x25, 0x0a, 0x0e, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x5f, 0x76,
	0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0d, 0x63, 0x6f,
	0x6e, 0x66, 0x69, 0x67, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x22, 0x4b, 0x0a, 0x0a, 0x43,
	0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x65, 0x73, 0x70, 0x12, 0x16, 0x0a, 0x06, 0x63, 0x6f, 0x6e,
	0x66, 0x69, 0x67, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x63, 0x6f, 0x6e, 0x66, 0x69,
	0x67, 0x12, 0x25, 0x0a, 0x0e, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x5f, 0x76, 0x65, 0x72, 0x73,
	0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0d, 0x63, 0x6f, 0x6e, 0x66, 0x69,
	0x67, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x22, 0x0c, 0x0a, 0x0a, 0x47, 0x65, 0x74, 0x49,
	0x6e, 0x66, 0x6f, 0x52, 0x65, 0x71, 0x22, 0x86, 0x04, 0x0a, 0x0b, 0x47, 0x65, 0x74, 0x49, 0x6e,
	0x66, 0x6f, 0x52, 0x65, 0x73, 0x70, 0x12, 0x23, 0x0a, 0x0d, 0x64, 0x69, 0x61, 0x6d, 0x6f, 0x6e,
	0x64, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0c, 0x64,
	0x69, 0x61, 0x6d, 0x6f, 0x6e, 0x64, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x26, 0x0a, 0x0f, 0x63,
	0x6c, 0x61, 0x77, 0x5f, 0x63, 0x6f, 0x69, 0x6e, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x0d, 0x63, 0x6c, 0x61, 0x77, 0x43, 0x6f, 0x69, 0x6e, 0x43, 0x6f,
	0x75, 0x6e, 0x74, 0x12, 0x23, 0x0a, 0x0d, 0x63, 0x6c, 0x61, 0x77, 0x5f, 0x70, 0x72, 0x6f, 0x67,
	0x72, 0x65, 0x73, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0c, 0x63, 0x6c, 0x61, 0x77,
	0x50, 0x72, 0x6f, 0x67, 0x72, 0x65, 0x73, 0x73, 0x12, 0x2b, 0x0a, 0x12, 0x6c, 0x61, 0x73, 0x74,
	0x5f, 0x67, 0x69, 0x66, 0x74, 0x5f, 0x62, 0x6f, 0x78, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x0f, 0x6c, 0x61, 0x73, 0x74, 0x47, 0x69, 0x66, 0x74, 0x42, 0x6f,
	0x78, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x41, 0x0a, 0x0c, 0x62, 0x65, 0x6c, 0x74, 0x5f, 0x72, 0x65,
	0x77, 0x61, 0x72, 0x64, 0x73, 0x18, 0x05, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x63, 0x6c,
	0x61, 0x73, 0x73, 0x5f, 0x64, 0x6f, 0x6c, 0x6c, 0x2e, 0x43, 0x6c, 0x61, 0x77, 0x42, 0x65, 0x6c,
	0x74, 0x52, 0x65, 0x77, 0x61, 0x72, 0x64, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x0b, 0x62, 0x65, 0x6c,
	0x74, 0x52, 0x65, 0x77, 0x61, 0x72, 0x64, 0x73, 0x12, 0x20, 0x0a, 0x0c, 0x61, 0x64, 0x5f, 0x77,
	0x61, 0x74, 0x63, 0x68, 0x5f, 0x63, 0x6e, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a,
	0x61, 0x64, 0x57, 0x61, 0x74, 0x63, 0x68, 0x43, 0x6e, 0x74, 0x12, 0x2f, 0x0a, 0x05, 0x62, 0x65,
	0x67, 0x69, 0x6e, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x19, 0x2e, 0x63, 0x6c, 0x61, 0x73,
	0x73, 0x5f, 0x64, 0x6f, 0x6c, 0x6c, 0x2e, 0x42, 0x65, 0x67, 0x69, 0x6e, 0x6e, 0x65, 0x72, 0x53,
	0x74, 0x61, 0x74, 0x65, 0x52, 0x05, 0x62, 0x65, 0x67, 0x69, 0x6e, 0x12, 0x45, 0x0a, 0x0f, 0x62,
	0x69, 0x67, 0x5f, 0x72, 0x65, 0x77, 0x61, 0x72, 0x64, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x08,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x63, 0x6c, 0x61, 0x73, 0x73, 0x5f, 0x64, 0x6f, 0x6c,
	0x6c, 0x2e, 0x43, 0x6c, 0x61, 0x77, 0x42, 0x69, 0x67, 0x52, 0x65, 0x77, 0x61, 0x72, 0x64, 0x49,
	0x74, 0x65, 0x6d, 0x52, 0x0d, 0x62, 0x69, 0x67, 0x52, 0x65, 0x77, 0x61, 0x72, 0x64, 0x4c, 0x69,
	0x73, 0x74, 0x12, 0x26, 0x0a, 0x0f, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x5f, 0x70, 0x76, 0x70, 0x5f,
	0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x09, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0d, 0x74, 0x6f, 0x74,
	0x61, 0x6c, 0x50, 0x76, 0x70, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x26, 0x0a, 0x0f, 0x74, 0x6f,
	0x64, 0x61, 0x79, 0x5f, 0x70, 0x76, 0x70, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x0a, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x0d, 0x74, 0x6f, 0x64, 0x61, 0x79, 0x50, 0x76, 0x70, 0x43, 0x6f, 0x75,
	0x6e, 0x74, 0x12, 0x2b, 0x0a, 0x09, 0x70, 0x61, 0x63, 0x6b, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x18,
	0x0b, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x73, 0x6e, 0x61, 0x6b, 0x65, 0x61, 0x70, 0x69,
	0x2e, 0x50, 0x61, 0x63, 0x6b, 0x52, 0x08, 0x70, 0x61, 0x63, 0x6b, 0x4c, 0x69, 0x73, 0x74, 0x22,
	0x88, 0x01, 0x0a, 0x12, 0x43, 0x6c, 0x61, 0x77, 0x42, 0x65, 0x6c, 0x74, 0x52, 0x65, 0x77, 0x61,
	0x72, 0x64, 0x49, 0x74, 0x65, 0x6d, 0x12, 0x1b, 0x0a, 0x09, 0x72, 0x65, 0x77, 0x61, 0x72, 0x64,
	0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x72, 0x65, 0x77, 0x61, 0x72,
	0x64, 0x49, 0x64, 0x12, 0x3a, 0x0a, 0x0c, 0x72, 0x65, 0x77, 0x61, 0x72, 0x64, 0x5f, 0x73, 0x74,
	0x61, 0x74, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x17, 0x2e, 0x63, 0x6c, 0x61, 0x73,
	0x73, 0x5f, 0x64, 0x6f, 0x6c, 0x6c, 0x2e, 0x52, 0x65, 0x77, 0x61, 0x72, 0x64, 0x53, 0x74, 0x61,
	0x74, 0x65, 0x52, 0x0b, 0x72, 0x65, 0x77, 0x61, 0x72, 0x64, 0x53, 0x74, 0x61, 0x74, 0x65, 0x12,
	0x19, 0x0a, 0x08, 0x65, 0x6e, 0x64, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x07, 0x65, 0x6e, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x22, 0x8e, 0x01, 0x0a, 0x11, 0x43,
	0x6c, 0x61, 0x77, 0x42, 0x69, 0x67, 0x52, 0x65, 0x77, 0x61, 0x72, 0x64, 0x49, 0x74, 0x65, 0x6d,
	0x12, 0x14, 0x0a, 0x05, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x05, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x12, 0x10, 0x0a, 0x03, 0x67, 0x6f, 0x74, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x03, 0x67, 0x6f, 0x74, 0x12, 0x10, 0x0a, 0x03, 0x61, 0x6c, 0x6c, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x03, 0x61, 0x6c, 0x6c, 0x12, 0x3f, 0x0a, 0x0b, 0x72, 0x65,
	0x77, 0x61, 0x72, 0x64, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x1e, 0x2e, 0x63, 0x6c, 0x61, 0x73, 0x73, 0x5f, 0x64, 0x6f, 0x6c, 0x6c, 0x2e, 0x43, 0x6c, 0x61,
	0x77, 0x42, 0x65, 0x6c, 0x74, 0x52, 0x65, 0x77, 0x61, 0x72, 0x64, 0x49, 0x74, 0x65, 0x6d, 0x52,
	0x0a, 0x72, 0x65, 0x77, 0x61, 0x72, 0x64, 0x4c, 0x69, 0x73, 0x74, 0x22, 0x28, 0x0a, 0x09, 0x44,
	0x6f, 0x43, 0x6c, 0x61, 0x77, 0x52, 0x65, 0x71, 0x12, 0x1b, 0x0a, 0x09, 0x72, 0x65, 0x77, 0x61,
	0x72, 0x64, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x72, 0x65, 0x77,
	0x61, 0x72, 0x64, 0x49, 0x64, 0x22, 0x9a, 0x01, 0x0a, 0x0a, 0x44, 0x6f, 0x43, 0x6c, 0x61, 0x77,
	0x52, 0x65, 0x73, 0x70, 0x12, 0x23, 0x0a, 0x0d, 0x63, 0x6c, 0x61, 0x77, 0x5f, 0x70, 0x72, 0x6f,
	0x67, 0x72, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0c, 0x63, 0x6c, 0x61,
	0x77, 0x50, 0x72, 0x6f, 0x67, 0x72, 0x65, 0x73, 0x73, 0x12, 0x26, 0x0a, 0x0f, 0x63, 0x6c, 0x61,
	0x77, 0x5f, 0x63, 0x6f, 0x69, 0x6e, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x0d, 0x63, 0x6c, 0x61, 0x77, 0x43, 0x6f, 0x69, 0x6e, 0x43, 0x6f, 0x75, 0x6e,
	0x74, 0x12, 0x3f, 0x0a, 0x0b, 0x62, 0x65, 0x6c, 0x74, 0x5f, 0x72, 0x65, 0x77, 0x61, 0x72, 0x64,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x63, 0x6c, 0x61, 0x73, 0x73, 0x5f, 0x64,
	0x6f, 0x6c, 0x6c, 0x2e, 0x43, 0x6c, 0x61, 0x77, 0x42, 0x65, 0x6c, 0x74, 0x52, 0x65, 0x77, 0x61,
	0x72, 0x64, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x0a, 0x62, 0x65, 0x6c, 0x74, 0x52, 0x65, 0x77, 0x61,
	0x72, 0x64, 0x22, 0x10, 0x0a, 0x0e, 0x4f, 0x70, 0x65, 0x6e, 0x47, 0x69, 0x66, 0x74, 0x42, 0x6f,
	0x78, 0x52, 0x65, 0x71, 0x22, 0x75, 0x0a, 0x0f, 0x4f, 0x70, 0x65, 0x6e, 0x47, 0x69, 0x66, 0x74,
	0x42, 0x6f, 0x78, 0x52, 0x65, 0x73, 0x70, 0x12, 0x35, 0x0a, 0x0b, 0x72, 0x65, 0x77, 0x61, 0x72,
	0x64, 0x5f, 0x69, 0x74, 0x65, 0x6d, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x73,
	0x6e, 0x61, 0x6b, 0x65, 0x61, 0x70, 0x69, 0x2e, 0x52, 0x65, 0x77, 0x61, 0x72, 0x64, 0x49, 0x74,
	0x65, 0x6d, 0x52, 0x0a, 0x72, 0x65, 0x77, 0x61, 0x72, 0x64, 0x49, 0x74, 0x65, 0x6d, 0x12, 0x2b,
	0x0a, 0x12, 0x6c, 0x61, 0x73, 0x74, 0x5f, 0x67, 0x69, 0x66, 0x74, 0x5f, 0x62, 0x6f, 0x78, 0x5f,
	0x74, 0x69, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0f, 0x6c, 0x61, 0x73, 0x74,
	0x47, 0x69, 0x66, 0x74, 0x42, 0x6f, 0x78, 0x54, 0x69, 0x6d, 0x65, 0x22, 0x0c, 0x0a, 0x0a, 0x48,
	0x69, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x52, 0x65, 0x71, 0x22, 0x3c, 0x0a, 0x0b, 0x48, 0x69, 0x73,
	0x74, 0x6f, 0x72, 0x79, 0x52, 0x65, 0x73, 0x70, 0x12, 0x2d, 0x0a, 0x07, 0x68, 0x69, 0x73, 0x74,
	0x6f, 0x72, 0x79, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x63, 0x6c, 0x61, 0x73,
	0x73, 0x5f, 0x64, 0x6f, 0x6c, 0x6c, 0x2e, 0x48, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x52, 0x07,
	0x68, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x22, 0x5f, 0x0a, 0x07, 0x48, 0x69, 0x73, 0x74, 0x6f,
	0x72, 0x79, 0x12, 0x1c, 0x0a, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70,
	0x12, 0x1b, 0x0a, 0x09, 0x72, 0x65, 0x77, 0x61, 0x72, 0x64, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x08, 0x72, 0x65, 0x77, 0x61, 0x72, 0x64, 0x49, 0x64, 0x12, 0x19, 0x0a,
	0x08, 0x74, 0x6f, 0x61, 0x73, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x07, 0x74, 0x6f, 0x61, 0x73, 0x74, 0x49, 0x64, 0x22, 0x28, 0x0a, 0x0e, 0x42, 0x75, 0x79, 0x43,
	0x6c, 0x61, 0x77, 0x43, 0x6f, 0x69, 0x6e, 0x52, 0x65, 0x71, 0x12, 0x16, 0x0a, 0x06, 0x50, 0x61,
	0x63, 0x6b, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x50, 0x61, 0x63, 0x6b,
	0x49, 0x64, 0x22, 0x5e, 0x0a, 0x0f, 0x42, 0x75, 0x79, 0x43, 0x6c, 0x61, 0x77, 0x43, 0x6f, 0x69,
	0x6e, 0x52, 0x65, 0x73, 0x70, 0x12, 0x23, 0x0a, 0x0d, 0x64, 0x69, 0x61, 0x6d, 0x6f, 0x6e, 0x64,
	0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0c, 0x64, 0x69,
	0x61, 0x6d, 0x6f, 0x6e, 0x64, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x26, 0x0a, 0x0f, 0x63, 0x6c,
	0x61, 0x77, 0x5f, 0x63, 0x6f, 0x69, 0x6e, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x0d, 0x63, 0x6c, 0x61, 0x77, 0x43, 0x6f, 0x69, 0x6e, 0x43, 0x6f, 0x75,
	0x6e, 0x74, 0x22, 0x11, 0x0a, 0x0f, 0x47, 0x65, 0x74, 0x41, 0x64, 0x52, 0x65, 0x77, 0x61, 0x72,
	0x64, 0x73, 0x52, 0x65, 0x71, 0x22, 0x8e, 0x01, 0x0a, 0x10, 0x47, 0x65, 0x74, 0x41, 0x64, 0x52,
	0x65, 0x77, 0x61, 0x72, 0x64, 0x73, 0x52, 0x65, 0x73, 0x70, 0x12, 0x2e, 0x0a, 0x07, 0x72, 0x65,
	0x77, 0x61, 0x72, 0x64, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x73, 0x6e,
	0x61, 0x6b, 0x65, 0x61, 0x70, 0x69, 0x2e, 0x52, 0x65, 0x77, 0x61, 0x72, 0x64, 0x49, 0x74, 0x65,
	0x6d, 0x52, 0x07, 0x72, 0x65, 0x77, 0x61, 0x72, 0x64, 0x73, 0x12, 0x26, 0x0a, 0x0f, 0x63, 0x6c,
	0x61, 0x77, 0x5f, 0x63, 0x6f, 0x69, 0x6e, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x0d, 0x63, 0x6c, 0x61, 0x77, 0x43, 0x6f, 0x69, 0x6e, 0x43, 0x6f, 0x75,
	0x6e, 0x74, 0x12, 0x22, 0x0a, 0x0d, 0x72, 0x65, 0x6d, 0x61, 0x69, 0x6e, 0x5f, 0x61, 0x64, 0x5f,
	0x63, 0x6e, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0b, 0x72, 0x65, 0x6d, 0x61, 0x69,
	0x6e, 0x41, 0x64, 0x43, 0x6e, 0x74, 0x22, 0x10, 0x0a, 0x0e, 0x47, 0x65, 0x74, 0x54, 0x61, 0x73,
	0x6b, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x71, 0x22, 0x6d, 0x0a, 0x0f, 0x47, 0x65, 0x74, 0x54,
	0x61, 0x73, 0x6b, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x73, 0x70, 0x12, 0x32, 0x0a, 0x0a, 0x74,
	0x61, 0x73, 0x6b, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x13, 0x2e, 0x73, 0x6e, 0x61, 0x6b, 0x65, 0x61, 0x70, 0x69, 0x2e, 0x45, 0x76, 0x65, 0x6e, 0x74,
	0x54, 0x61, 0x73, 0x6b, 0x52, 0x09, 0x74, 0x61, 0x73, 0x6b, 0x49, 0x6e, 0x66, 0x6f, 0x73, 0x12,
	0x26, 0x0a, 0x0f, 0x63, 0x6c, 0x61, 0x77, 0x5f, 0x63, 0x6f, 0x69, 0x6e, 0x5f, 0x63, 0x6f, 0x75,
	0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0d, 0x63, 0x6c, 0x61, 0x77, 0x43, 0x6f,
	0x69, 0x6e, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x22, 0x47, 0x0a, 0x11, 0x47, 0x65, 0x74, 0x54, 0x61,
	0x73, 0x6b, 0x52, 0x65, 0x77, 0x61, 0x72, 0x64, 0x73, 0x52, 0x65, 0x71, 0x12, 0x19, 0x0a, 0x08,
	0x65, 0x76, 0x65, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07,
	0x65, 0x76, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x17, 0x0a, 0x07, 0x74, 0x61, 0x73, 0x6b, 0x5f,
	0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x74, 0x61, 0x73, 0x6b, 0x49, 0x64,
	0x22, 0x6c, 0x0a, 0x12, 0x47, 0x65, 0x74, 0x54, 0x61, 0x73, 0x6b, 0x52, 0x65, 0x77, 0x61, 0x72,
	0x64, 0x73, 0x52, 0x65, 0x73, 0x70, 0x12, 0x2e, 0x0a, 0x07, 0x72, 0x65, 0x77, 0x61, 0x72, 0x64,
	0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x73, 0x6e, 0x61, 0x6b, 0x65, 0x61,
	0x70, 0x69, 0x2e, 0x52, 0x65, 0x77, 0x61, 0x72, 0x64, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x07, 0x72,
	0x65, 0x77, 0x61, 0x72, 0x64, 0x73, 0x12, 0x26, 0x0a, 0x0f, 0x63, 0x6c, 0x61, 0x77, 0x5f, 0x63,
	0x6f, 0x69, 0x6e, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x0d, 0x63, 0x6c, 0x61, 0x77, 0x43, 0x6f, 0x69, 0x6e, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x2a, 0xe7,
	0x02, 0x0a, 0x0d, 0x43, 0x6c, 0x61, 0x77, 0x44, 0x6f, 0x6c, 0x6c, 0x52, 0x6f, 0x75, 0x74, 0x65,
	0x12, 0x0b, 0x0a, 0x07, 0x63, 0x64, 0x55, 0x6e, 0x64, 0x65, 0x66, 0x10, 0x00, 0x12, 0x39, 0x0a,
	0x16, 0x73, 0x68, 0x61, 0x72, 0x65, 0x5f, 0x63, 0x6c, 0x61, 0x77, 0x5f, 0x64, 0x6f, 0x6c, 0x6c,
	0x5f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x10, 0x01, 0x1a, 0x1d, 0xaa, 0xd1, 0xf9, 0xd6, 0x03,
	0x17, 0x2f, 0x73, 0x68, 0x61, 0x72, 0x65, 0x2f, 0x63, 0x6c, 0x61, 0x77, 0x2f, 0x64, 0x6f, 0x6c,
	0x6c, 0x2f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12, 0x1c, 0x0a, 0x18, 0x73, 0x68, 0x61, 0x72,
	0x65, 0x5f, 0x63, 0x6c, 0x61, 0x77, 0x5f, 0x64, 0x6f, 0x6c, 0x6c, 0x5f, 0x67, 0x65, 0x74, 0x5f,
	0x69, 0x6e, 0x66, 0x6f, 0x10, 0x02, 0x12, 0x1b, 0x0a, 0x17, 0x73, 0x68, 0x61, 0x72, 0x65, 0x5f,
	0x63, 0x6c, 0x61, 0x77, 0x5f, 0x64, 0x6f, 0x6c, 0x6c, 0x5f, 0x64, 0x6f, 0x5f, 0x63, 0x6c, 0x61,
	0x77, 0x10, 0x03, 0x12, 0x21, 0x0a, 0x1d, 0x73, 0x68, 0x61, 0x72, 0x65, 0x5f, 0x63, 0x6c, 0x61,
	0x77, 0x5f, 0x64, 0x6f, 0x6c, 0x6c, 0x5f, 0x6f, 0x70, 0x65, 0x6e, 0x5f, 0x67, 0x69, 0x66, 0x74,
	0x5f, 0x62, 0x6f, 0x78, 0x10, 0x04, 0x12, 0x20, 0x0a, 0x1c, 0x73, 0x68, 0x61, 0x72, 0x65, 0x5f,
	0x63, 0x6c, 0x61, 0x77, 0x5f, 0x64, 0x6f, 0x6c, 0x6c, 0x5f, 0x63, 0x6c, 0x61, 0x73, 0x5f, 0x68,
	0x69, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x10, 0x05, 0x12, 0x21, 0x0a, 0x1d, 0x73, 0x68, 0x61, 0x72,
	0x65, 0x5f, 0x63, 0x6c, 0x61, 0x77, 0x5f, 0x64, 0x6f, 0x6c, 0x6c, 0x5f, 0x62, 0x75, 0x79, 0x5f,
	0x63, 0x6c, 0x61, 0x77, 0x5f, 0x63, 0x6f, 0x69, 0x6e, 0x10, 0x06, 0x12, 0x22, 0x0a, 0x1e, 0x73,
	0x68, 0x61, 0x72, 0x65, 0x5f, 0x63, 0x6c, 0x61, 0x77, 0x5f, 0x64, 0x6f, 0x6c, 0x6c, 0x5f, 0x67,
	0x65, 0x74, 0x5f, 0x61, 0x64, 0x5f, 0x72, 0x65, 0x77, 0x61, 0x72, 0x64, 0x73, 0x10, 0x07, 0x12,
	0x21, 0x0a, 0x1d, 0x73, 0x68, 0x61, 0x72, 0x65, 0x5f, 0x63, 0x6c, 0x61, 0x77, 0x5f, 0x64, 0x6f,
	0x6c, 0x6c, 0x5f, 0x67, 0x65, 0x74, 0x5f, 0x74, 0x61, 0x73, 0x6b, 0x5f, 0x69, 0x6e, 0x66, 0x6f,
	0x10, 0x08, 0x12, 0x24, 0x0a, 0x20, 0x73, 0x68, 0x61, 0x72, 0x65, 0x5f, 0x63, 0x6c, 0x61, 0x77,
	0x5f, 0x64, 0x6f, 0x6c, 0x6c, 0x5f, 0x67, 0x65, 0x74, 0x5f, 0x74, 0x61, 0x73, 0x6b, 0x5f, 0x72,
	0x65, 0x77, 0x61, 0x72, 0x64, 0x73, 0x10, 0x09, 0x2a, 0x35, 0x0a, 0x0d, 0x42, 0x65, 0x67, 0x69,
	0x6e, 0x6e, 0x65, 0x72, 0x53, 0x74, 0x61, 0x74, 0x65, 0x12, 0x0c, 0x0a, 0x08, 0x42, 0x65, 0x67,
	0x69, 0x6e, 0x6e, 0x65, 0x72, 0x10, 0x00, 0x12, 0x0a, 0x0a, 0x06, 0x43, 0x6c, 0x61, 0x77, 0x65,
	0x64, 0x10, 0x01, 0x12, 0x0a, 0x0a, 0x06, 0x4f, 0x70, 0x65, 0x6e, 0x65, 0x64, 0x10, 0x02, 0x2a,
	0x4c, 0x0a, 0x0b, 0x52, 0x65, 0x77, 0x61, 0x72, 0x64, 0x53, 0x74, 0x61, 0x74, 0x65, 0x12, 0x09,
	0x0a, 0x05, 0x55, 0x6e, 0x64, 0x65, 0x66, 0x10, 0x00, 0x12, 0x0d, 0x0a, 0x09, 0x41, 0x76, 0x61,
	0x69, 0x6c, 0x61, 0x62, 0x6c, 0x65, 0x10, 0x01, 0x12, 0x0b, 0x0a, 0x07, 0x52, 0x65, 0x73, 0x74,
	0x6f, 0x63, 0x6b, 0x10, 0x02, 0x12, 0x0d, 0x0a, 0x09, 0x4e, 0x6f, 0x74, 0x4f, 0x6e, 0x6c, 0x69,
	0x6e, 0x65, 0x10, 0x03, 0x12, 0x07, 0x0a, 0x03, 0x47, 0x6f, 0x74, 0x10, 0x04, 0x3a, 0x48, 0x0a,
	0x0b, 0x73, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x21, 0x2e, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45,
	0x6e, 0x75, 0x6d, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18,
	0x95, 0x9a, 0xef, 0x3a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x73, 0x74, 0x72, 0x69, 0x6e, 0x67,
	0x4e, 0x61, 0x6d, 0x65, 0x88, 0x01, 0x01, 0x42, 0x34, 0x5a, 0x32, 0x67, 0x69, 0x74, 0x2e, 0x31,
	0x37, 0x7a, 0x6a, 0x68, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x73, 0x6e, 0x61, 0x6b, 0x65, 0x2f, 0x73,
	0x6e, 0x61, 0x6b, 0x65, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x73, 0x6e, 0x61, 0x6b, 0x65,
	0x61, 0x70, 0x69, 0x2f, 0x63, 0x6c, 0x61, 0x77, 0x5f, 0x64, 0x6f, 0x6c, 0x6c, 0x62, 0x06, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_snakeapi_claw_doll_claw_doll_proto_rawDescOnce sync.Once
	file_snakeapi_claw_doll_claw_doll_proto_rawDescData = file_snakeapi_claw_doll_claw_doll_proto_rawDesc
)

func file_snakeapi_claw_doll_claw_doll_proto_rawDescGZIP() []byte {
	file_snakeapi_claw_doll_claw_doll_proto_rawDescOnce.Do(func() {
		file_snakeapi_claw_doll_claw_doll_proto_rawDescData = protoimpl.X.CompressGZIP(file_snakeapi_claw_doll_claw_doll_proto_rawDescData)
	})
	return file_snakeapi_claw_doll_claw_doll_proto_rawDescData
}

var file_snakeapi_claw_doll_claw_doll_proto_enumTypes = make([]protoimpl.EnumInfo, 3)
var file_snakeapi_claw_doll_claw_doll_proto_msgTypes = make([]protoimpl.MessageInfo, 21)
var file_snakeapi_claw_doll_claw_doll_proto_goTypes = []interface{}{
	(ClawDollRoute)(0),                    // 0: class_doll.ClawDollRoute
	(BeginnerState)(0),                    // 1: class_doll.BeginnerState
	(RewardState)(0),                      // 2: class_doll.RewardState
	(*ConfigReq)(nil),                     // 3: class_doll.ConfigReq
	(*ConfigResp)(nil),                    // 4: class_doll.ConfigResp
	(*GetInfoReq)(nil),                    // 5: class_doll.GetInfoReq
	(*GetInfoResp)(nil),                   // 6: class_doll.GetInfoResp
	(*ClawBeltRewardItem)(nil),            // 7: class_doll.ClawBeltRewardItem
	(*ClawBigRewardItem)(nil),             // 8: class_doll.ClawBigRewardItem
	(*DoClawReq)(nil),                     // 9: class_doll.DoClawReq
	(*DoClawResp)(nil),                    // 10: class_doll.DoClawResp
	(*OpenGiftBoxReq)(nil),                // 11: class_doll.OpenGiftBoxReq
	(*OpenGiftBoxResp)(nil),               // 12: class_doll.OpenGiftBoxResp
	(*HistoryReq)(nil),                    // 13: class_doll.HistoryReq
	(*HistoryResp)(nil),                   // 14: class_doll.HistoryResp
	(*History)(nil),                       // 15: class_doll.History
	(*BuyClawCoinReq)(nil),                // 16: class_doll.BuyClawCoinReq
	(*BuyClawCoinResp)(nil),               // 17: class_doll.BuyClawCoinResp
	(*GetAdRewardsReq)(nil),               // 18: class_doll.GetAdRewardsReq
	(*GetAdRewardsResp)(nil),              // 19: class_doll.GetAdRewardsResp
	(*GetTaskInfoReq)(nil),                // 20: class_doll.GetTaskInfoReq
	(*GetTaskInfoResp)(nil),               // 21: class_doll.GetTaskInfoResp
	(*GetTaskRewardsReq)(nil),             // 22: class_doll.GetTaskRewardsReq
	(*GetTaskRewardsResp)(nil),            // 23: class_doll.GetTaskRewardsResp
	(*snakeapi.Pack)(nil),                 // 24: snakeapi.Pack
	(*snakeapi.RewardItem)(nil),           // 25: snakeapi.RewardItem
	(*snakeapi.EventTask)(nil),            // 26: snakeapi.EventTask
	(*descriptorpb.EnumValueOptions)(nil), // 27: google.protobuf.EnumValueOptions
}
var file_snakeapi_claw_doll_claw_doll_proto_depIdxs = []int32{
	7,  // 0: class_doll.GetInfoResp.belt_rewards:type_name -> class_doll.ClawBeltRewardItem
	1,  // 1: class_doll.GetInfoResp.begin:type_name -> class_doll.BeginnerState
	8,  // 2: class_doll.GetInfoResp.big_reward_list:type_name -> class_doll.ClawBigRewardItem
	24, // 3: class_doll.GetInfoResp.pack_list:type_name -> snakeapi.Pack
	2,  // 4: class_doll.ClawBeltRewardItem.reward_state:type_name -> class_doll.RewardState
	7,  // 5: class_doll.ClawBigRewardItem.reward_list:type_name -> class_doll.ClawBeltRewardItem
	7,  // 6: class_doll.DoClawResp.belt_reward:type_name -> class_doll.ClawBeltRewardItem
	25, // 7: class_doll.OpenGiftBoxResp.reward_item:type_name -> snakeapi.RewardItem
	15, // 8: class_doll.HistoryResp.history:type_name -> class_doll.History
	25, // 9: class_doll.GetAdRewardsResp.rewards:type_name -> snakeapi.RewardItem
	26, // 10: class_doll.GetTaskInfoResp.task_infos:type_name -> snakeapi.EventTask
	25, // 11: class_doll.GetTaskRewardsResp.rewards:type_name -> snakeapi.RewardItem
	27, // 12: class_doll.string_name:extendee -> google.protobuf.EnumValueOptions
	13, // [13:13] is the sub-list for method output_type
	13, // [13:13] is the sub-list for method input_type
	13, // [13:13] is the sub-list for extension type_name
	12, // [12:13] is the sub-list for extension extendee
	0,  // [0:12] is the sub-list for field type_name
}

func init() { file_snakeapi_claw_doll_claw_doll_proto_init() }
func file_snakeapi_claw_doll_claw_doll_proto_init() {
	if File_snakeapi_claw_doll_claw_doll_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_snakeapi_claw_doll_claw_doll_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ConfigReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_snakeapi_claw_doll_claw_doll_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ConfigResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_snakeapi_claw_doll_claw_doll_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetInfoReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_snakeapi_claw_doll_claw_doll_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetInfoResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_snakeapi_claw_doll_claw_doll_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ClawBeltRewardItem); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_snakeapi_claw_doll_claw_doll_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ClawBigRewardItem); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_snakeapi_claw_doll_claw_doll_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DoClawReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_snakeapi_claw_doll_claw_doll_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DoClawResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_snakeapi_claw_doll_claw_doll_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OpenGiftBoxReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_snakeapi_claw_doll_claw_doll_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OpenGiftBoxResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_snakeapi_claw_doll_claw_doll_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*HistoryReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_snakeapi_claw_doll_claw_doll_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*HistoryResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_snakeapi_claw_doll_claw_doll_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*History); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_snakeapi_claw_doll_claw_doll_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BuyClawCoinReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_snakeapi_claw_doll_claw_doll_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BuyClawCoinResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_snakeapi_claw_doll_claw_doll_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetAdRewardsReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_snakeapi_claw_doll_claw_doll_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetAdRewardsResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_snakeapi_claw_doll_claw_doll_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetTaskInfoReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_snakeapi_claw_doll_claw_doll_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetTaskInfoResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_snakeapi_claw_doll_claw_doll_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetTaskRewardsReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_snakeapi_claw_doll_claw_doll_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetTaskRewardsResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_snakeapi_claw_doll_claw_doll_proto_rawDesc,
			NumEnums:      3,
			NumMessages:   21,
			NumExtensions: 1,
			NumServices:   0,
		},
		GoTypes:           file_snakeapi_claw_doll_claw_doll_proto_goTypes,
		DependencyIndexes: file_snakeapi_claw_doll_claw_doll_proto_depIdxs,
		EnumInfos:         file_snakeapi_claw_doll_claw_doll_proto_enumTypes,
		MessageInfos:      file_snakeapi_claw_doll_claw_doll_proto_msgTypes,
		ExtensionInfos:    file_snakeapi_claw_doll_claw_doll_proto_extTypes,
	}.Build()
	File_snakeapi_claw_doll_claw_doll_proto = out.File
	file_snakeapi_claw_doll_claw_doll_proto_rawDesc = nil
	file_snakeapi_claw_doll_claw_doll_proto_goTypes = nil
	file_snakeapi_claw_doll_claw_doll_proto_depIdxs = nil
}
