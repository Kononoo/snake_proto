// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.27.1
// 	protoc        v3.16.1
// source: snakeapi/goat_game/goat_game.proto

package goat_game

import (
	snakeapi "git.17zjh.com/snake/snake_proto/snakeapi"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// 获取玩法主页信息
type GetInfoReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *GetInfoReq) Reset() {
	*x = GetInfoReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_snakeapi_goat_game_goat_game_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetInfoReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetInfoReq) ProtoMessage() {}

func (x *GetInfoReq) ProtoReflect() protoreflect.Message {
	mi := &file_snakeapi_goat_game_goat_game_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetInfoReq.ProtoReflect.Descriptor instead.
func (*GetInfoReq) Descriptor() ([]byte, []int) {
	return file_snakeapi_goat_game_goat_game_proto_rawDescGZIP(), []int{0}
}

type GetInfoResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Intro         string           `protobuf:"bytes,1,opt,name=intro,proto3" json:"intro,omitempty"`                                         // 玩法介绍
	StartTime     int64            `protobuf:"varint,2,opt,name=start_time,json=startTime,proto3" json:"start_time,omitempty"`               // 开始时间
	EndTime       int64            `protobuf:"varint,3,opt,name=end_time,json=endTime,proto3" json:"end_time,omitempty"`                     // 结束时间
	TipsPool      []string         `protobuf:"bytes,4,rep,name=tips_pool,json=tipsPool,proto3" json:"tips_pool,omitempty"`                   // tips 随机库
	GroupNamePool []string         `protobuf:"bytes,5,rep,name=group_name_pool,json=groupNamePool,proto3" json:"group_name_pool,omitempty"`  // 队名随机池
	SkinIds       []int32          `protobuf:"varint,6,rep,packed,name=skin_ids,json=skinIds,proto3" json:"skin_ids,omitempty"`              // 喜灰玩法皮肤列表
	EventList     []*EventTaskInfo `protobuf:"bytes,7,rep,name=event_list,json=eventList,proto3" json:"event_list,omitempty"`                // 彩蛋任务
	TotalPvpCount int32            `protobuf:"varint,8,opt,name=total_pvp_count,json=totalPvpCount,proto3" json:"total_pvp_count,omitempty"` // 双人模式总游戏局数
	TodayPvpCount int32            `protobuf:"varint,9,opt,name=today_pvp_count,json=todayPvpCount,proto3" json:"today_pvp_count,omitempty"` // 今日双人游戏局数
}

func (x *GetInfoResp) Reset() {
	*x = GetInfoResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_snakeapi_goat_game_goat_game_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetInfoResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetInfoResp) ProtoMessage() {}

func (x *GetInfoResp) ProtoReflect() protoreflect.Message {
	mi := &file_snakeapi_goat_game_goat_game_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetInfoResp.ProtoReflect.Descriptor instead.
func (*GetInfoResp) Descriptor() ([]byte, []int) {
	return file_snakeapi_goat_game_goat_game_proto_rawDescGZIP(), []int{1}
}

func (x *GetInfoResp) GetIntro() string {
	if x != nil {
		return x.Intro
	}
	return ""
}

func (x *GetInfoResp) GetStartTime() int64 {
	if x != nil {
		return x.StartTime
	}
	return 0
}

func (x *GetInfoResp) GetEndTime() int64 {
	if x != nil {
		return x.EndTime
	}
	return 0
}

func (x *GetInfoResp) GetTipsPool() []string {
	if x != nil {
		return x.TipsPool
	}
	return nil
}

func (x *GetInfoResp) GetGroupNamePool() []string {
	if x != nil {
		return x.GroupNamePool
	}
	return nil
}

func (x *GetInfoResp) GetSkinIds() []int32 {
	if x != nil {
		return x.SkinIds
	}
	return nil
}

func (x *GetInfoResp) GetEventList() []*EventTaskInfo {
	if x != nil {
		return x.EventList
	}
	return nil
}

func (x *GetInfoResp) GetTotalPvpCount() int32 {
	if x != nil {
		return x.TotalPvpCount
	}
	return 0
}

func (x *GetInfoResp) GetTodayPvpCount() int32 {
	if x != nil {
		return x.TodayPvpCount
	}
	return 0
}

type EventTaskInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	EventId  int32                 `protobuf:"varint,1,opt,name=event_id,json=eventId,proto3" json:"event_id,omitempty"`   // 任务活动 id
	TaskList []*snakeapi.EventTask `protobuf:"bytes,2,rep,name=task_list,json=taskList,proto3" json:"task_list,omitempty"` // 任务列表
}

func (x *EventTaskInfo) Reset() {
	*x = EventTaskInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_snakeapi_goat_game_goat_game_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EventTaskInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EventTaskInfo) ProtoMessage() {}

func (x *EventTaskInfo) ProtoReflect() protoreflect.Message {
	mi := &file_snakeapi_goat_game_goat_game_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EventTaskInfo.ProtoReflect.Descriptor instead.
func (*EventTaskInfo) Descriptor() ([]byte, []int) {
	return file_snakeapi_goat_game_goat_game_proto_rawDescGZIP(), []int{2}
}

func (x *EventTaskInfo) GetEventId() int32 {
	if x != nil {
		return x.EventId
	}
	return 0
}

func (x *EventTaskInfo) GetTaskList() []*snakeapi.EventTask {
	if x != nil {
		return x.TaskList
	}
	return nil
}

// 领取任务奖励
type GetTaskRewardReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	EventId int32 `protobuf:"varint,1,opt,name=event_id,json=eventId,proto3" json:"event_id,omitempty"`
	TaskId  int32 `protobuf:"varint,2,opt,name=task_id,json=taskId,proto3" json:"task_id,omitempty"`
}

func (x *GetTaskRewardReq) Reset() {
	*x = GetTaskRewardReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_snakeapi_goat_game_goat_game_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetTaskRewardReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetTaskRewardReq) ProtoMessage() {}

func (x *GetTaskRewardReq) ProtoReflect() protoreflect.Message {
	mi := &file_snakeapi_goat_game_goat_game_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetTaskRewardReq.ProtoReflect.Descriptor instead.
func (*GetTaskRewardReq) Descriptor() ([]byte, []int) {
	return file_snakeapi_goat_game_goat_game_proto_rawDescGZIP(), []int{3}
}

func (x *GetTaskRewardReq) GetEventId() int32 {
	if x != nil {
		return x.EventId
	}
	return 0
}

func (x *GetTaskRewardReq) GetTaskId() int32 {
	if x != nil {
		return x.TaskId
	}
	return 0
}

type GetTaskRewardResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RewardList []*snakeapi.RewardItem `protobuf:"bytes,1,rep,name=reward_list,json=rewardList,proto3" json:"reward_list,omitempty"`
}

func (x *GetTaskRewardResp) Reset() {
	*x = GetTaskRewardResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_snakeapi_goat_game_goat_game_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetTaskRewardResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetTaskRewardResp) ProtoMessage() {}

func (x *GetTaskRewardResp) ProtoReflect() protoreflect.Message {
	mi := &file_snakeapi_goat_game_goat_game_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetTaskRewardResp.ProtoReflect.Descriptor instead.
func (*GetTaskRewardResp) Descriptor() ([]byte, []int) {
	return file_snakeapi_goat_game_goat_game_proto_rawDescGZIP(), []int{4}
}

func (x *GetTaskRewardResp) GetRewardList() []*snakeapi.RewardItem {
	if x != nil {
		return x.RewardList
	}
	return nil
}

// 获取游戏结果
type GetGoatResultReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Rid int64 `protobuf:"varint,1,opt,name=rid,proto3" json:"rid,omitempty"`
}

func (x *GetGoatResultReq) Reset() {
	*x = GetGoatResultReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_snakeapi_goat_game_goat_game_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetGoatResultReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetGoatResultReq) ProtoMessage() {}

func (x *GetGoatResultReq) ProtoReflect() protoreflect.Message {
	mi := &file_snakeapi_goat_game_goat_game_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetGoatResultReq.ProtoReflect.Descriptor instead.
func (*GetGoatResultReq) Descriptor() ([]byte, []int) {
	return file_snakeapi_goat_game_goat_game_proto_rawDescGZIP(), []int{5}
}

func (x *GetGoatResultReq) GetRid() int64 {
	if x != nil {
		return x.Rid
	}
	return 0
}

type GetGoatResultResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	WinTeamId  int32            `protobuf:"varint,1,opt,name=win_team_id,json=winTeamId,proto3" json:"win_team_id,omitempty"` // 胜利的阵营 id
	TeamScores []*GoatTeamScore `protobuf:"bytes,2,rep,name=team_scores,json=teamScores,proto3" json:"team_scores,omitempty"` // 阵营分数
}

func (x *GetGoatResultResp) Reset() {
	*x = GetGoatResultResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_snakeapi_goat_game_goat_game_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetGoatResultResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetGoatResultResp) ProtoMessage() {}

func (x *GetGoatResultResp) ProtoReflect() protoreflect.Message {
	mi := &file_snakeapi_goat_game_goat_game_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetGoatResultResp.ProtoReflect.Descriptor instead.
func (*GetGoatResultResp) Descriptor() ([]byte, []int) {
	return file_snakeapi_goat_game_goat_game_proto_rawDescGZIP(), []int{6}
}

func (x *GetGoatResultResp) GetWinTeamId() int32 {
	if x != nil {
		return x.WinTeamId
	}
	return 0
}

func (x *GetGoatResultResp) GetTeamScores() []*GoatTeamScore {
	if x != nil {
		return x.TeamScores
	}
	return nil
}

type GoatTeamScore struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TeamId     int32            `protobuf:"varint,1,opt,name=team_id,json=teamId,proto3" json:"team_id,omitempty"`            // 阵营ID
	UserScores []*GoatUserScore `protobuf:"bytes,2,rep,name=user_scores,json=userScores,proto3" json:"user_scores,omitempty"` // 阵营成员分数
}

func (x *GoatTeamScore) Reset() {
	*x = GoatTeamScore{}
	if protoimpl.UnsafeEnabled {
		mi := &file_snakeapi_goat_game_goat_game_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GoatTeamScore) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GoatTeamScore) ProtoMessage() {}

func (x *GoatTeamScore) ProtoReflect() protoreflect.Message {
	mi := &file_snakeapi_goat_game_goat_game_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GoatTeamScore.ProtoReflect.Descriptor instead.
func (*GoatTeamScore) Descriptor() ([]byte, []int) {
	return file_snakeapi_goat_game_goat_game_proto_rawDescGZIP(), []int{7}
}

func (x *GoatTeamScore) GetTeamId() int32 {
	if x != nil {
		return x.TeamId
	}
	return 0
}

func (x *GoatTeamScore) GetUserScores() []*GoatUserScore {
	if x != nil {
		return x.UserScores
	}
	return nil
}

type GoatUserScore struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Uid                string                 `protobuf:"bytes,1,opt,name=uid,proto3" json:"uid,omitempty"`
	Score              int32                  `protobuf:"varint,2,opt,name=score,proto3" json:"score,omitempty"`                                                       // 分数
	CollectBucketCount int32                  `protobuf:"varint,3,opt,name=collect_bucket_count,json=collectBucketCount,proto3" json:"collect_bucket_count,omitempty"` // 获得空桶个数
	KillCount          int32                  `protobuf:"varint,4,opt,name=kill_count,json=killCount,proto3" json:"kill_count,omitempty"`                              // 击杀个数
	SkinId             int32                  `protobuf:"varint,5,opt,name=skin_id,json=skinId,proto3" json:"skin_id,omitempty"`                                       // 穿戴皮肤 id
	Avatar             string                 `protobuf:"bytes,6,opt,name=avatar,proto3" json:"avatar,omitempty"`                                                      // 头像
	Nickname           string                 `protobuf:"bytes,7,opt,name=nickname,proto3" json:"nickname,omitempty"`                                                  // 昵称
	ShowValue          int64                  `protobuf:"varint,8,opt,name=show_value,json=showValue,proto3" json:"show_value,omitempty"`                              // 玩家 show 值
	IsFollowed         bool                   `protobuf:"varint,9,opt,name=is_followed,json=isFollowed,proto3" json:"is_followed,omitempty"`                           // 是否已关注当前玩家
	IsAi               bool                   `protobuf:"varint,10,opt,name=is_ai,json=isAi,proto3" json:"is_ai,omitempty"`                                            // 是否是 ai
	Length             int32                  `protobuf:"varint,11,opt,name=length,proto3" json:"length,omitempty"`                                                    // 长度
	RewardList         []*snakeapi.RewardItem `protobuf:"bytes,12,rep,name=reward_list,json=rewardList,proto3" json:"reward_list,omitempty"`                           // 奖励列表(服务器返回)
}

func (x *GoatUserScore) Reset() {
	*x = GoatUserScore{}
	if protoimpl.UnsafeEnabled {
		mi := &file_snakeapi_goat_game_goat_game_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GoatUserScore) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GoatUserScore) ProtoMessage() {}

func (x *GoatUserScore) ProtoReflect() protoreflect.Message {
	mi := &file_snakeapi_goat_game_goat_game_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GoatUserScore.ProtoReflect.Descriptor instead.
func (*GoatUserScore) Descriptor() ([]byte, []int) {
	return file_snakeapi_goat_game_goat_game_proto_rawDescGZIP(), []int{8}
}

func (x *GoatUserScore) GetUid() string {
	if x != nil {
		return x.Uid
	}
	return ""
}

func (x *GoatUserScore) GetScore() int32 {
	if x != nil {
		return x.Score
	}
	return 0
}

func (x *GoatUserScore) GetCollectBucketCount() int32 {
	if x != nil {
		return x.CollectBucketCount
	}
	return 0
}

func (x *GoatUserScore) GetKillCount() int32 {
	if x != nil {
		return x.KillCount
	}
	return 0
}

func (x *GoatUserScore) GetSkinId() int32 {
	if x != nil {
		return x.SkinId
	}
	return 0
}

func (x *GoatUserScore) GetAvatar() string {
	if x != nil {
		return x.Avatar
	}
	return ""
}

func (x *GoatUserScore) GetNickname() string {
	if x != nil {
		return x.Nickname
	}
	return ""
}

func (x *GoatUserScore) GetShowValue() int64 {
	if x != nil {
		return x.ShowValue
	}
	return 0
}

func (x *GoatUserScore) GetIsFollowed() bool {
	if x != nil {
		return x.IsFollowed
	}
	return false
}

func (x *GoatUserScore) GetIsAi() bool {
	if x != nil {
		return x.IsAi
	}
	return false
}

func (x *GoatUserScore) GetLength() int32 {
	if x != nil {
		return x.Length
	}
	return 0
}

func (x *GoatUserScore) GetRewardList() []*snakeapi.RewardItem {
	if x != nil {
		return x.RewardList
	}
	return nil
}

var File_snakeapi_goat_game_goat_game_proto protoreflect.FileDescriptor

var file_snakeapi_goat_game_goat_game_proto_rawDesc = []byte{
	0x0a, 0x22, 0x73, 0x6e, 0x61, 0x6b, 0x65, 0x61, 0x70, 0x69, 0x2f, 0x67, 0x6f, 0x61, 0x74, 0x5f,
	0x67, 0x61, 0x6d, 0x65, 0x2f, 0x67, 0x6f, 0x61, 0x74, 0x5f, 0x67, 0x61, 0x6d, 0x65, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x12, 0x09, 0x67, 0x6f, 0x61, 0x74, 0x5f, 0x67, 0x61, 0x6d, 0x65, 0x1a,
	0x13, 0x73, 0x6e, 0x61, 0x6b, 0x65, 0x61, 0x70, 0x69, 0x2f, 0x62, 0x61, 0x73, 0x65, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x22, 0x0c, 0x0a, 0x0a, 0x47, 0x65, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x52,
	0x65, 0x71, 0x22, 0xc6, 0x02, 0x0a, 0x0b, 0x47, 0x65, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65,
	0x73, 0x70, 0x12, 0x14, 0x0a, 0x05, 0x69, 0x6e, 0x74, 0x72, 0x6f, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x05, 0x69, 0x6e, 0x74, 0x72, 0x6f, 0x12, 0x1d, 0x0a, 0x0a, 0x73, 0x74, 0x61, 0x72,
	0x74, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x73, 0x74,
	0x61, 0x72, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x19, 0x0a, 0x08, 0x65, 0x6e, 0x64, 0x5f, 0x74,
	0x69, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x65, 0x6e, 0x64, 0x54, 0x69,
	0x6d, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x74, 0x69, 0x70, 0x73, 0x5f, 0x70, 0x6f, 0x6f, 0x6c, 0x18,
	0x04, 0x20, 0x03, 0x28, 0x09, 0x52, 0x08, 0x74, 0x69, 0x70, 0x73, 0x50, 0x6f, 0x6f, 0x6c, 0x12,
	0x26, 0x0a, 0x0f, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x5f, 0x70, 0x6f,
	0x6f, 0x6c, 0x18, 0x05, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0d, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x4e,
	0x61, 0x6d, 0x65, 0x50, 0x6f, 0x6f, 0x6c, 0x12, 0x19, 0x0a, 0x08, 0x73, 0x6b, 0x69, 0x6e, 0x5f,
	0x69, 0x64, 0x73, 0x18, 0x06, 0x20, 0x03, 0x28, 0x05, 0x52, 0x07, 0x73, 0x6b, 0x69, 0x6e, 0x49,
	0x64, 0x73, 0x12, 0x37, 0x0a, 0x0a, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x5f, 0x6c, 0x69, 0x73, 0x74,
	0x18, 0x07, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x67, 0x6f, 0x61, 0x74, 0x5f, 0x67, 0x61,
	0x6d, 0x65, 0x2e, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x54, 0x61, 0x73, 0x6b, 0x49, 0x6e, 0x66, 0x6f,
	0x52, 0x09, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x26, 0x0a, 0x0f, 0x74,
	0x6f, 0x74, 0x61, 0x6c, 0x5f, 0x70, 0x76, 0x70, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x08,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x0d, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x50, 0x76, 0x70, 0x43, 0x6f,
	0x75, 0x6e, 0x74, 0x12, 0x26, 0x0a, 0x0f, 0x74, 0x6f, 0x64, 0x61, 0x79, 0x5f, 0x70, 0x76, 0x70,
	0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x09, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0d, 0x74, 0x6f,
	0x64, 0x61, 0x79, 0x50, 0x76, 0x70, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x22, 0x5c, 0x0a, 0x0d, 0x45,
	0x76, 0x65, 0x6e, 0x74, 0x54, 0x61, 0x73, 0x6b, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x19, 0x0a, 0x08,
	0x65, 0x76, 0x65, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07,
	0x65, 0x76, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x30, 0x0a, 0x09, 0x74, 0x61, 0x73, 0x6b, 0x5f,
	0x6c, 0x69, 0x73, 0x74, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x73, 0x6e, 0x61,
	0x6b, 0x65, 0x61, 0x70, 0x69, 0x2e, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x54, 0x61, 0x73, 0x6b, 0x52,
	0x08, 0x74, 0x61, 0x73, 0x6b, 0x4c, 0x69, 0x73, 0x74, 0x22, 0x46, 0x0a, 0x10, 0x47, 0x65, 0x74,
	0x54, 0x61, 0x73, 0x6b, 0x52, 0x65, 0x77, 0x61, 0x72, 0x64, 0x52, 0x65, 0x71, 0x12, 0x19, 0x0a,
	0x08, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x07, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x17, 0x0a, 0x07, 0x74, 0x61, 0x73, 0x6b,
	0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x74, 0x61, 0x73, 0x6b, 0x49,
	0x64, 0x22, 0x4a, 0x0a, 0x11, 0x47, 0x65, 0x74, 0x54, 0x61, 0x73, 0x6b, 0x52, 0x65, 0x77, 0x61,
	0x72, 0x64, 0x52, 0x65, 0x73, 0x70, 0x12, 0x35, 0x0a, 0x0b, 0x72, 0x65, 0x77, 0x61, 0x72, 0x64,
	0x5f, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x73, 0x6e,
	0x61, 0x6b, 0x65, 0x61, 0x70, 0x69, 0x2e, 0x52, 0x65, 0x77, 0x61, 0x72, 0x64, 0x49, 0x74, 0x65,
	0x6d, 0x52, 0x0a, 0x72, 0x65, 0x77, 0x61, 0x72, 0x64, 0x4c, 0x69, 0x73, 0x74, 0x22, 0x24, 0x0a,
	0x10, 0x47, 0x65, 0x74, 0x47, 0x6f, 0x61, 0x74, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x52, 0x65,
	0x71, 0x12, 0x10, 0x0a, 0x03, 0x72, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x03,
	0x72, 0x69, 0x64, 0x22, 0x6e, 0x0a, 0x11, 0x47, 0x65, 0x74, 0x47, 0x6f, 0x61, 0x74, 0x52, 0x65,
	0x73, 0x75, 0x6c, 0x74, 0x52, 0x65, 0x73, 0x70, 0x12, 0x1e, 0x0a, 0x0b, 0x77, 0x69, 0x6e, 0x5f,
	0x74, 0x65, 0x61, 0x6d, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x77,
	0x69, 0x6e, 0x54, 0x65, 0x61, 0x6d, 0x49, 0x64, 0x12, 0x39, 0x0a, 0x0b, 0x74, 0x65, 0x61, 0x6d,
	0x5f, 0x73, 0x63, 0x6f, 0x72, 0x65, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x18, 0x2e,
	0x67, 0x6f, 0x61, 0x74, 0x5f, 0x67, 0x61, 0x6d, 0x65, 0x2e, 0x47, 0x6f, 0x61, 0x74, 0x54, 0x65,
	0x61, 0x6d, 0x53, 0x63, 0x6f, 0x72, 0x65, 0x52, 0x0a, 0x74, 0x65, 0x61, 0x6d, 0x53, 0x63, 0x6f,
	0x72, 0x65, 0x73, 0x22, 0x63, 0x0a, 0x0d, 0x47, 0x6f, 0x61, 0x74, 0x54, 0x65, 0x61, 0x6d, 0x53,
	0x63, 0x6f, 0x72, 0x65, 0x12, 0x17, 0x0a, 0x07, 0x74, 0x65, 0x61, 0x6d, 0x5f, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x74, 0x65, 0x61, 0x6d, 0x49, 0x64, 0x12, 0x39, 0x0a,
	0x0b, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x73, 0x63, 0x6f, 0x72, 0x65, 0x73, 0x18, 0x02, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x18, 0x2e, 0x67, 0x6f, 0x61, 0x74, 0x5f, 0x67, 0x61, 0x6d, 0x65, 0x2e, 0x47,
	0x6f, 0x61, 0x74, 0x55, 0x73, 0x65, 0x72, 0x53, 0x63, 0x6f, 0x72, 0x65, 0x52, 0x0a, 0x75, 0x73,
	0x65, 0x72, 0x53, 0x63, 0x6f, 0x72, 0x65, 0x73, 0x22, 0xf9, 0x02, 0x0a, 0x0d, 0x47, 0x6f, 0x61,
	0x74, 0x55, 0x73, 0x65, 0x72, 0x53, 0x63, 0x6f, 0x72, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x75, 0x69, 0x64, 0x12, 0x14, 0x0a, 0x05,
	0x73, 0x63, 0x6f, 0x72, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x73, 0x63, 0x6f,
	0x72, 0x65, 0x12, 0x30, 0x0a, 0x14, 0x63, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x5f, 0x62, 0x75,
	0x63, 0x6b, 0x65, 0x74, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x12, 0x63, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x42, 0x75, 0x63, 0x6b, 0x65, 0x74, 0x43,
	0x6f, 0x75, 0x6e, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x6b, 0x69, 0x6c, 0x6c, 0x5f, 0x63, 0x6f, 0x75,
	0x6e, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x6b, 0x69, 0x6c, 0x6c, 0x43, 0x6f,
	0x75, 0x6e, 0x74, 0x12, 0x17, 0x0a, 0x07, 0x73, 0x6b, 0x69, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x73, 0x6b, 0x69, 0x6e, 0x49, 0x64, 0x12, 0x16, 0x0a, 0x06,
	0x61, 0x76, 0x61, 0x74, 0x61, 0x72, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x61, 0x76,
	0x61, 0x74, 0x61, 0x72, 0x12, 0x1a, 0x0a, 0x08, 0x6e, 0x69, 0x63, 0x6b, 0x6e, 0x61, 0x6d, 0x65,
	0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6e, 0x69, 0x63, 0x6b, 0x6e, 0x61, 0x6d, 0x65,
	0x12, 0x1d, 0x0a, 0x0a, 0x73, 0x68, 0x6f, 0x77, 0x5f, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x08,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x73, 0x68, 0x6f, 0x77, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x12,
	0x1f, 0x0a, 0x0b, 0x69, 0x73, 0x5f, 0x66, 0x6f, 0x6c, 0x6c, 0x6f, 0x77, 0x65, 0x64, 0x18, 0x09,
	0x20, 0x01, 0x28, 0x08, 0x52, 0x0a, 0x69, 0x73, 0x46, 0x6f, 0x6c, 0x6c, 0x6f, 0x77, 0x65, 0x64,
	0x12, 0x13, 0x0a, 0x05, 0x69, 0x73, 0x5f, 0x61, 0x69, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x08, 0x52,
	0x04, 0x69, 0x73, 0x41, 0x69, 0x12, 0x16, 0x0a, 0x06, 0x6c, 0x65, 0x6e, 0x67, 0x74, 0x68, 0x18,
	0x0b, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x6c, 0x65, 0x6e, 0x67, 0x74, 0x68, 0x12, 0x35, 0x0a,
	0x0b, 0x72, 0x65, 0x77, 0x61, 0x72, 0x64, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x0c, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x14, 0x2e, 0x73, 0x6e, 0x61, 0x6b, 0x65, 0x61, 0x70, 0x69, 0x2e, 0x52, 0x65,
	0x77, 0x61, 0x72, 0x64, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x0a, 0x72, 0x65, 0x77, 0x61, 0x72, 0x64,
	0x4c, 0x69, 0x73, 0x74, 0x42, 0x34, 0x5a, 0x32, 0x67, 0x69, 0x74, 0x2e, 0x31, 0x37, 0x7a, 0x6a,
	0x68, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x73, 0x6e, 0x61, 0x6b, 0x65, 0x2f, 0x73, 0x6e, 0x61, 0x6b,
	0x65, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x73, 0x6e, 0x61, 0x6b, 0x65, 0x61, 0x70, 0x69,
	0x2f, 0x67, 0x6f, 0x61, 0x74, 0x5f, 0x67, 0x61, 0x6d, 0x65, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x33,
}

var (
	file_snakeapi_goat_game_goat_game_proto_rawDescOnce sync.Once
	file_snakeapi_goat_game_goat_game_proto_rawDescData = file_snakeapi_goat_game_goat_game_proto_rawDesc
)

func file_snakeapi_goat_game_goat_game_proto_rawDescGZIP() []byte {
	file_snakeapi_goat_game_goat_game_proto_rawDescOnce.Do(func() {
		file_snakeapi_goat_game_goat_game_proto_rawDescData = protoimpl.X.CompressGZIP(file_snakeapi_goat_game_goat_game_proto_rawDescData)
	})
	return file_snakeapi_goat_game_goat_game_proto_rawDescData
}

var file_snakeapi_goat_game_goat_game_proto_msgTypes = make([]protoimpl.MessageInfo, 9)
var file_snakeapi_goat_game_goat_game_proto_goTypes = []interface{}{
	(*GetInfoReq)(nil),          // 0: goat_game.GetInfoReq
	(*GetInfoResp)(nil),         // 1: goat_game.GetInfoResp
	(*EventTaskInfo)(nil),       // 2: goat_game.EventTaskInfo
	(*GetTaskRewardReq)(nil),    // 3: goat_game.GetTaskRewardReq
	(*GetTaskRewardResp)(nil),   // 4: goat_game.GetTaskRewardResp
	(*GetGoatResultReq)(nil),    // 5: goat_game.GetGoatResultReq
	(*GetGoatResultResp)(nil),   // 6: goat_game.GetGoatResultResp
	(*GoatTeamScore)(nil),       // 7: goat_game.GoatTeamScore
	(*GoatUserScore)(nil),       // 8: goat_game.GoatUserScore
	(*snakeapi.EventTask)(nil),  // 9: snakeapi.EventTask
	(*snakeapi.RewardItem)(nil), // 10: snakeapi.RewardItem
}
var file_snakeapi_goat_game_goat_game_proto_depIdxs = []int32{
	2,  // 0: goat_game.GetInfoResp.event_list:type_name -> goat_game.EventTaskInfo
	9,  // 1: goat_game.EventTaskInfo.task_list:type_name -> snakeapi.EventTask
	10, // 2: goat_game.GetTaskRewardResp.reward_list:type_name -> snakeapi.RewardItem
	7,  // 3: goat_game.GetGoatResultResp.team_scores:type_name -> goat_game.GoatTeamScore
	8,  // 4: goat_game.GoatTeamScore.user_scores:type_name -> goat_game.GoatUserScore
	10, // 5: goat_game.GoatUserScore.reward_list:type_name -> snakeapi.RewardItem
	6,  // [6:6] is the sub-list for method output_type
	6,  // [6:6] is the sub-list for method input_type
	6,  // [6:6] is the sub-list for extension type_name
	6,  // [6:6] is the sub-list for extension extendee
	0,  // [0:6] is the sub-list for field type_name
}

func init() { file_snakeapi_goat_game_goat_game_proto_init() }
func file_snakeapi_goat_game_goat_game_proto_init() {
	if File_snakeapi_goat_game_goat_game_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_snakeapi_goat_game_goat_game_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetInfoReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_snakeapi_goat_game_goat_game_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetInfoResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_snakeapi_goat_game_goat_game_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EventTaskInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_snakeapi_goat_game_goat_game_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetTaskRewardReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_snakeapi_goat_game_goat_game_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetTaskRewardResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_snakeapi_goat_game_goat_game_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetGoatResultReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_snakeapi_goat_game_goat_game_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetGoatResultResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_snakeapi_goat_game_goat_game_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GoatTeamScore); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_snakeapi_goat_game_goat_game_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GoatUserScore); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_snakeapi_goat_game_goat_game_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   9,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_snakeapi_goat_game_goat_game_proto_goTypes,
		DependencyIndexes: file_snakeapi_goat_game_goat_game_proto_depIdxs,
		MessageInfos:      file_snakeapi_goat_game_goat_game_proto_msgTypes,
	}.Build()
	File_snakeapi_goat_game_goat_game_proto = out.File
	file_snakeapi_goat_game_goat_game_proto_rawDesc = nil
	file_snakeapi_goat_game_goat_game_proto_goTypes = nil
	file_snakeapi_goat_game_goat_game_proto_depIdxs = nil
}
