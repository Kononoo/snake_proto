// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.27.1
// 	protoc        v3.16.1
// source: snakeapi/kuromi/kuromi.proto

package kuromi

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// 获取游戏结果
type GetKuromiResultReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Rid int64 `protobuf:"varint,1,opt,name=rid,proto3" json:"rid,omitempty"`
}

func (x *GetKuromiResultReq) Reset() {
	*x = GetKuromiResultReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_snakeapi_kuromi_kuromi_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetKuromiResultReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetKuromiResultReq) ProtoMessage() {}

func (x *GetKuromiResultReq) ProtoReflect() protoreflect.Message {
	mi := &file_snakeapi_kuromi_kuromi_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetKuromiResultReq.ProtoReflect.Descriptor instead.
func (*GetKuromiResultReq) Descriptor() ([]byte, []int) {
	return file_snakeapi_kuromi_kuromi_proto_rawDescGZIP(), []int{0}
}

func (x *GetKuromiResultReq) GetRid() int64 {
	if x != nil {
		return x.Rid
	}
	return 0
}

type GetKuromiResultResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	WinTeamId     int32              `protobuf:"varint,1,opt,name=win_team_id,json=winTeamId,proto3" json:"win_team_id,omitempty"`             // 胜利的阵营 id
	ClawCoinCount int64              `protobuf:"varint,2,opt,name=claw_coin_count,json=clawCoinCount,proto3" json:"claw_coin_count,omitempty"` // 当前玩家娃娃币数量
	PvpCount      int64              `protobuf:"varint,3,opt,name=pvp_count,json=pvpCount,proto3" json:"pvp_count,omitempty"`                  // 当前玩家游戏局数（结算了才算）
	TeamScores    []*KuromiTeamScore `protobuf:"bytes,4,rep,name=team_scores,json=teamScores,proto3" json:"team_scores,omitempty"`             // 阵营分数
}

func (x *GetKuromiResultResp) Reset() {
	*x = GetKuromiResultResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_snakeapi_kuromi_kuromi_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetKuromiResultResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetKuromiResultResp) ProtoMessage() {}

func (x *GetKuromiResultResp) ProtoReflect() protoreflect.Message {
	mi := &file_snakeapi_kuromi_kuromi_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetKuromiResultResp.ProtoReflect.Descriptor instead.
func (*GetKuromiResultResp) Descriptor() ([]byte, []int) {
	return file_snakeapi_kuromi_kuromi_proto_rawDescGZIP(), []int{1}
}

func (x *GetKuromiResultResp) GetWinTeamId() int32 {
	if x != nil {
		return x.WinTeamId
	}
	return 0
}

func (x *GetKuromiResultResp) GetClawCoinCount() int64 {
	if x != nil {
		return x.ClawCoinCount
	}
	return 0
}

func (x *GetKuromiResultResp) GetPvpCount() int64 {
	if x != nil {
		return x.PvpCount
	}
	return 0
}

func (x *GetKuromiResultResp) GetTeamScores() []*KuromiTeamScore {
	if x != nil {
		return x.TeamScores
	}
	return nil
}

type KuromiTeamScore struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TeamId     int32              `protobuf:"varint,1,opt,name=team_id,json=teamId,proto3" json:"team_id,omitempty"`            // 阵营ID
	UserScores []*KuromiUserScore `protobuf:"bytes,2,rep,name=user_scores,json=userScores,proto3" json:"user_scores,omitempty"` // 阵营成员分数
}

func (x *KuromiTeamScore) Reset() {
	*x = KuromiTeamScore{}
	if protoimpl.UnsafeEnabled {
		mi := &file_snakeapi_kuromi_kuromi_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *KuromiTeamScore) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*KuromiTeamScore) ProtoMessage() {}

func (x *KuromiTeamScore) ProtoReflect() protoreflect.Message {
	mi := &file_snakeapi_kuromi_kuromi_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use KuromiTeamScore.ProtoReflect.Descriptor instead.
func (*KuromiTeamScore) Descriptor() ([]byte, []int) {
	return file_snakeapi_kuromi_kuromi_proto_rawDescGZIP(), []int{2}
}

func (x *KuromiTeamScore) GetTeamId() int32 {
	if x != nil {
		return x.TeamId
	}
	return 0
}

func (x *KuromiTeamScore) GetUserScores() []*KuromiUserScore {
	if x != nil {
		return x.UserScores
	}
	return nil
}

type KuromiUserScore struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Uid           string   `protobuf:"bytes,1,opt,name=uid,proto3" json:"uid,omitempty"`
	FragmentScore int32    `protobuf:"varint,2,opt,name=fragment_score,json=fragmentScore,proto3" json:"fragment_score,omitempty"` // 碎片分数
	TreasureCount int32    `protobuf:"varint,3,opt,name=treasure_count,json=treasureCount,proto3" json:"treasure_count,omitempty"` // 获得宝藏个数
	KillCount     int32    `protobuf:"varint,4,opt,name=kill_count,json=killCount,proto3" json:"kill_count,omitempty"`             // 击杀个数
	EventIds      []string `protobuf:"bytes,5,rep,name=event_ids,json=eventIds,proto3" json:"event_ids,omitempty"`                 // 游戏评价
	SkinId        int32    `protobuf:"varint,6,opt,name=skin_id,json=skinId,proto3" json:"skin_id,omitempty"`                      // 穿戴皮肤 id
	Avatar        string   `protobuf:"bytes,7,opt,name=avatar,proto3" json:"avatar,omitempty"`                                     // 头像
	Nickname      string   `protobuf:"bytes,8,opt,name=nickname,proto3" json:"nickname,omitempty"`                                 // 昵称
	ShowValue     int64    `protobuf:"varint,9,opt,name=show_value,json=showValue,proto3" json:"show_value,omitempty"`             // 玩家 show 值
	AddClawCoin   int64    `protobuf:"varint,10,opt,name=add_claw_coin,json=addClawCoin,proto3" json:"add_claw_coin,omitempty"`    // 本局获得的娃娃币数量
	IsFollowed    bool     `protobuf:"varint,11,opt,name=is_followed,json=isFollowed,proto3" json:"is_followed,omitempty"`         // 是否已关注当前玩家
}

func (x *KuromiUserScore) Reset() {
	*x = KuromiUserScore{}
	if protoimpl.UnsafeEnabled {
		mi := &file_snakeapi_kuromi_kuromi_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *KuromiUserScore) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*KuromiUserScore) ProtoMessage() {}

func (x *KuromiUserScore) ProtoReflect() protoreflect.Message {
	mi := &file_snakeapi_kuromi_kuromi_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use KuromiUserScore.ProtoReflect.Descriptor instead.
func (*KuromiUserScore) Descriptor() ([]byte, []int) {
	return file_snakeapi_kuromi_kuromi_proto_rawDescGZIP(), []int{3}
}

func (x *KuromiUserScore) GetUid() string {
	if x != nil {
		return x.Uid
	}
	return ""
}

func (x *KuromiUserScore) GetFragmentScore() int32 {
	if x != nil {
		return x.FragmentScore
	}
	return 0
}

func (x *KuromiUserScore) GetTreasureCount() int32 {
	if x != nil {
		return x.TreasureCount
	}
	return 0
}

func (x *KuromiUserScore) GetKillCount() int32 {
	if x != nil {
		return x.KillCount
	}
	return 0
}

func (x *KuromiUserScore) GetEventIds() []string {
	if x != nil {
		return x.EventIds
	}
	return nil
}

func (x *KuromiUserScore) GetSkinId() int32 {
	if x != nil {
		return x.SkinId
	}
	return 0
}

func (x *KuromiUserScore) GetAvatar() string {
	if x != nil {
		return x.Avatar
	}
	return ""
}

func (x *KuromiUserScore) GetNickname() string {
	if x != nil {
		return x.Nickname
	}
	return ""
}

func (x *KuromiUserScore) GetShowValue() int64 {
	if x != nil {
		return x.ShowValue
	}
	return 0
}

func (x *KuromiUserScore) GetAddClawCoin() int64 {
	if x != nil {
		return x.AddClawCoin
	}
	return 0
}

func (x *KuromiUserScore) GetIsFollowed() bool {
	if x != nil {
		return x.IsFollowed
	}
	return false
}

// 获取最近 3 天一起玩过的队友，只保留 100 人
type GetKuromiRecentPlayerListReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ListVersion int32 `protobuf:"zigzag32,1,opt,name=list_version,json=listVersion,proto3" json:"list_version,omitempty"` // 最近队友列表的 version，如果
}

func (x *GetKuromiRecentPlayerListReq) Reset() {
	*x = GetKuromiRecentPlayerListReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_snakeapi_kuromi_kuromi_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetKuromiRecentPlayerListReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetKuromiRecentPlayerListReq) ProtoMessage() {}

func (x *GetKuromiRecentPlayerListReq) ProtoReflect() protoreflect.Message {
	mi := &file_snakeapi_kuromi_kuromi_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetKuromiRecentPlayerListReq.ProtoReflect.Descriptor instead.
func (*GetKuromiRecentPlayerListReq) Descriptor() ([]byte, []int) {
	return file_snakeapi_kuromi_kuromi_proto_rawDescGZIP(), []int{4}
}

func (x *GetKuromiRecentPlayerListReq) GetListVersion() int32 {
	if x != nil {
		return x.ListVersion
	}
	return 0
}

type GetKuromiRecentPlayerResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	List []*RecentPlayer `protobuf:"bytes,1,rep,name=list,proto3" json:"list,omitempty"`
}

func (x *GetKuromiRecentPlayerResp) Reset() {
	*x = GetKuromiRecentPlayerResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_snakeapi_kuromi_kuromi_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetKuromiRecentPlayerResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetKuromiRecentPlayerResp) ProtoMessage() {}

func (x *GetKuromiRecentPlayerResp) ProtoReflect() protoreflect.Message {
	mi := &file_snakeapi_kuromi_kuromi_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetKuromiRecentPlayerResp.ProtoReflect.Descriptor instead.
func (*GetKuromiRecentPlayerResp) Descriptor() ([]byte, []int) {
	return file_snakeapi_kuromi_kuromi_proto_rawDescGZIP(), []int{5}
}

func (x *GetKuromiRecentPlayerResp) GetList() []*RecentPlayer {
	if x != nil {
		return x.List
	}
	return nil
}

type RecentPlayer struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Uid        string `protobuf:"bytes,1,opt,name=uid,proto3" json:"uid,omitempty"`
	Nickname   string `protobuf:"bytes,2,opt,name=nickname,proto3" json:"nickname,omitempty"`
	Avatar     string `protobuf:"bytes,3,opt,name=avatar,proto3" json:"avatar,omitempty"`
	Gender     int32  `protobuf:"varint,4,opt,name=gender,proto3" json:"gender,omitempty"`
	BoxId      int32  `protobuf:"varint,5,opt,name=box_id,json=boxId,proto3" json:"box_id,omitempty"`
	Star       int32  `protobuf:"varint,6,opt,name=star,proto3" json:"star,omitempty"`
	Ultimate   int32  `protobuf:"varint,7,opt,name=ultimate,proto3" json:"ultimate,omitempty"` // 是否王者，0：否，1：是
	IsPartner  int32  `protobuf:"varint,8,opt,name=is_partner,json=isPartner,proto3" json:"is_partner,omitempty"`
	Desc       string `protobuf:"bytes,9,opt,name=desc,proto3" json:"desc,omitempty"`
	Verified   int32  `protobuf:"varint,10,opt,name=verified,proto3" json:"verified,omitempty"`
	IsFollowed bool   `protobuf:"varint,11,opt,name=is_followed,json=isFollowed,proto3" json:"is_followed,omitempty"` // 是否已关注
}

func (x *RecentPlayer) Reset() {
	*x = RecentPlayer{}
	if protoimpl.UnsafeEnabled {
		mi := &file_snakeapi_kuromi_kuromi_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RecentPlayer) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RecentPlayer) ProtoMessage() {}

func (x *RecentPlayer) ProtoReflect() protoreflect.Message {
	mi := &file_snakeapi_kuromi_kuromi_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RecentPlayer.ProtoReflect.Descriptor instead.
func (*RecentPlayer) Descriptor() ([]byte, []int) {
	return file_snakeapi_kuromi_kuromi_proto_rawDescGZIP(), []int{6}
}

func (x *RecentPlayer) GetUid() string {
	if x != nil {
		return x.Uid
	}
	return ""
}

func (x *RecentPlayer) GetNickname() string {
	if x != nil {
		return x.Nickname
	}
	return ""
}

func (x *RecentPlayer) GetAvatar() string {
	if x != nil {
		return x.Avatar
	}
	return ""
}

func (x *RecentPlayer) GetGender() int32 {
	if x != nil {
		return x.Gender
	}
	return 0
}

func (x *RecentPlayer) GetBoxId() int32 {
	if x != nil {
		return x.BoxId
	}
	return 0
}

func (x *RecentPlayer) GetStar() int32 {
	if x != nil {
		return x.Star
	}
	return 0
}

func (x *RecentPlayer) GetUltimate() int32 {
	if x != nil {
		return x.Ultimate
	}
	return 0
}

func (x *RecentPlayer) GetIsPartner() int32 {
	if x != nil {
		return x.IsPartner
	}
	return 0
}

func (x *RecentPlayer) GetDesc() string {
	if x != nil {
		return x.Desc
	}
	return ""
}

func (x *RecentPlayer) GetVerified() int32 {
	if x != nil {
		return x.Verified
	}
	return 0
}

func (x *RecentPlayer) GetIsFollowed() bool {
	if x != nil {
		return x.IsFollowed
	}
	return false
}

var File_snakeapi_kuromi_kuromi_proto protoreflect.FileDescriptor

var file_snakeapi_kuromi_kuromi_proto_rawDesc = []byte{
	0x0a, 0x1c, 0x73, 0x6e, 0x61, 0x6b, 0x65, 0x61, 0x70, 0x69, 0x2f, 0x6b, 0x75, 0x72, 0x6f, 0x6d,
	0x69, 0x2f, 0x6b, 0x75, 0x72, 0x6f, 0x6d, 0x69, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x06,
	0x6b, 0x75, 0x72, 0x6f, 0x6d, 0x69, 0x22, 0x26, 0x0a, 0x12, 0x47, 0x65, 0x74, 0x4b, 0x75, 0x72,
	0x6f, 0x6d, 0x69, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x52, 0x65, 0x71, 0x12, 0x10, 0x0a, 0x03,
	0x72, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x03, 0x72, 0x69, 0x64, 0x22, 0xb4,
	0x01, 0x0a, 0x13, 0x47, 0x65, 0x74, 0x4b, 0x75, 0x72, 0x6f, 0x6d, 0x69, 0x52, 0x65, 0x73, 0x75,
	0x6c, 0x74, 0x52, 0x65, 0x73, 0x70, 0x12, 0x1e, 0x0a, 0x0b, 0x77, 0x69, 0x6e, 0x5f, 0x74, 0x65,
	0x61, 0x6d, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x77, 0x69, 0x6e,
	0x54, 0x65, 0x61, 0x6d, 0x49, 0x64, 0x12, 0x26, 0x0a, 0x0f, 0x63, 0x6c, 0x61, 0x77, 0x5f, 0x63,
	0x6f, 0x69, 0x6e, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x0d, 0x63, 0x6c, 0x61, 0x77, 0x43, 0x6f, 0x69, 0x6e, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x1b,
	0x0a, 0x09, 0x70, 0x76, 0x70, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x08, 0x70, 0x76, 0x70, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x38, 0x0a, 0x0b, 0x74,
	0x65, 0x61, 0x6d, 0x5f, 0x73, 0x63, 0x6f, 0x72, 0x65, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x17, 0x2e, 0x6b, 0x75, 0x72, 0x6f, 0x6d, 0x69, 0x2e, 0x4b, 0x75, 0x72, 0x6f, 0x6d, 0x69,
	0x54, 0x65, 0x61, 0x6d, 0x53, 0x63, 0x6f, 0x72, 0x65, 0x52, 0x0a, 0x74, 0x65, 0x61, 0x6d, 0x53,
	0x63, 0x6f, 0x72, 0x65, 0x73, 0x22, 0x64, 0x0a, 0x0f, 0x4b, 0x75, 0x72, 0x6f, 0x6d, 0x69, 0x54,
	0x65, 0x61, 0x6d, 0x53, 0x63, 0x6f, 0x72, 0x65, 0x12, 0x17, 0x0a, 0x07, 0x74, 0x65, 0x61, 0x6d,
	0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x74, 0x65, 0x61, 0x6d, 0x49,
	0x64, 0x12, 0x38, 0x0a, 0x0b, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x73, 0x63, 0x6f, 0x72, 0x65, 0x73,
	0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x6b, 0x75, 0x72, 0x6f, 0x6d, 0x69, 0x2e,
	0x4b, 0x75, 0x72, 0x6f, 0x6d, 0x69, 0x55, 0x73, 0x65, 0x72, 0x53, 0x63, 0x6f, 0x72, 0x65, 0x52,
	0x0a, 0x75, 0x73, 0x65, 0x72, 0x53, 0x63, 0x6f, 0x72, 0x65, 0x73, 0x22, 0xde, 0x02, 0x0a, 0x0f,
	0x4b, 0x75, 0x72, 0x6f, 0x6d, 0x69, 0x55, 0x73, 0x65, 0x72, 0x53, 0x63, 0x6f, 0x72, 0x65, 0x12,
	0x10, 0x0a, 0x03, 0x75, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x75, 0x69,
	0x64, 0x12, 0x25, 0x0a, 0x0e, 0x66, 0x72, 0x61, 0x67, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x73, 0x63,
	0x6f, 0x72, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0d, 0x66, 0x72, 0x61, 0x67, 0x6d,
	0x65, 0x6e, 0x74, 0x53, 0x63, 0x6f, 0x72, 0x65, 0x12, 0x25, 0x0a, 0x0e, 0x74, 0x72, 0x65, 0x61,
	0x73, 0x75, 0x72, 0x65, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x0d, 0x74, 0x72, 0x65, 0x61, 0x73, 0x75, 0x72, 0x65, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12,
	0x1d, 0x0a, 0x0a, 0x6b, 0x69, 0x6c, 0x6c, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x09, 0x6b, 0x69, 0x6c, 0x6c, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x1b,
	0x0a, 0x09, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x73, 0x18, 0x05, 0x20, 0x03, 0x28,
	0x09, 0x52, 0x08, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x73, 0x12, 0x17, 0x0a, 0x07, 0x73,
	0x6b, 0x69, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x73, 0x6b,
	0x69, 0x6e, 0x49, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x61, 0x76, 0x61, 0x74, 0x61, 0x72, 0x18, 0x07,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x61, 0x76, 0x61, 0x74, 0x61, 0x72, 0x12, 0x1a, 0x0a, 0x08,
	0x6e, 0x69, 0x63, 0x6b, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08,
	0x6e, 0x69, 0x63, 0x6b, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x73, 0x68, 0x6f, 0x77,
	0x5f, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x73, 0x68,
	0x6f, 0x77, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x22, 0x0a, 0x0d, 0x61, 0x64, 0x64, 0x5f, 0x63,
	0x6c, 0x61, 0x77, 0x5f, 0x63, 0x6f, 0x69, 0x6e, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0b,
	0x61, 0x64, 0x64, 0x43, 0x6c, 0x61, 0x77, 0x43, 0x6f, 0x69, 0x6e, 0x12, 0x1f, 0x0a, 0x0b, 0x69,
	0x73, 0x5f, 0x66, 0x6f, 0x6c, 0x6c, 0x6f, 0x77, 0x65, 0x64, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x08,
	0x52, 0x0a, 0x69, 0x73, 0x46, 0x6f, 0x6c, 0x6c, 0x6f, 0x77, 0x65, 0x64, 0x22, 0x41, 0x0a, 0x1c,
	0x47, 0x65, 0x74, 0x4b, 0x75, 0x72, 0x6f, 0x6d, 0x69, 0x52, 0x65, 0x63, 0x65, 0x6e, 0x74, 0x50,
	0x6c, 0x61, 0x79, 0x65, 0x72, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x12, 0x21, 0x0a, 0x0c,
	0x6c, 0x69, 0x73, 0x74, 0x5f, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x11, 0x52, 0x0b, 0x6c, 0x69, 0x73, 0x74, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x22,
	0x45, 0x0a, 0x19, 0x47, 0x65, 0x74, 0x4b, 0x75, 0x72, 0x6f, 0x6d, 0x69, 0x52, 0x65, 0x63, 0x65,
	0x6e, 0x74, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x12, 0x28, 0x0a, 0x04,
	0x6c, 0x69, 0x73, 0x74, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x6b, 0x75, 0x72,
	0x6f, 0x6d, 0x69, 0x2e, 0x52, 0x65, 0x63, 0x65, 0x6e, 0x74, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72,
	0x52, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x22, 0xa3, 0x02, 0x0a, 0x0c, 0x52, 0x65, 0x63, 0x65, 0x6e,
	0x74, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x75, 0x69, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x6e, 0x69, 0x63,
	0x6b, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6e, 0x69, 0x63,
	0x6b, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x61, 0x76, 0x61, 0x74, 0x61, 0x72, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x61, 0x76, 0x61, 0x74, 0x61, 0x72, 0x12, 0x16, 0x0a,
	0x06, 0x67, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x67,
	0x65, 0x6e, 0x64, 0x65, 0x72, 0x12, 0x15, 0x0a, 0x06, 0x62, 0x6f, 0x78, 0x5f, 0x69, 0x64, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x62, 0x6f, 0x78, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04,
	0x73, 0x74, 0x61, 0x72, 0x18, 0x06, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x73, 0x74, 0x61, 0x72,
	0x12, 0x1a, 0x0a, 0x08, 0x75, 0x6c, 0x74, 0x69, 0x6d, 0x61, 0x74, 0x65, 0x18, 0x07, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x08, 0x75, 0x6c, 0x74, 0x69, 0x6d, 0x61, 0x74, 0x65, 0x12, 0x1d, 0x0a, 0x0a,
	0x69, 0x73, 0x5f, 0x70, 0x61, 0x72, 0x74, 0x6e, 0x65, 0x72, 0x18, 0x08, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x09, 0x69, 0x73, 0x50, 0x61, 0x72, 0x74, 0x6e, 0x65, 0x72, 0x12, 0x12, 0x0a, 0x04, 0x64,
	0x65, 0x73, 0x63, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x64, 0x65, 0x73, 0x63, 0x12,
	0x1a, 0x0a, 0x08, 0x76, 0x65, 0x72, 0x69, 0x66, 0x69, 0x65, 0x64, 0x18, 0x0a, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x08, 0x76, 0x65, 0x72, 0x69, 0x66, 0x69, 0x65, 0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x69,
	0x73, 0x5f, 0x66, 0x6f, 0x6c, 0x6c, 0x6f, 0x77, 0x65, 0x64, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x08,
	0x52, 0x0a, 0x69, 0x73, 0x46, 0x6f, 0x6c, 0x6c, 0x6f, 0x77, 0x65, 0x64, 0x42, 0x31, 0x5a, 0x2f,
	0x67, 0x69, 0x74, 0x2e, 0x31, 0x37, 0x7a, 0x6a, 0x68, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x73, 0x6e,
	0x61, 0x6b, 0x65, 0x2f, 0x73, 0x6e, 0x61, 0x6b, 0x65, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f,
	0x73, 0x6e, 0x61, 0x6b, 0x65, 0x61, 0x70, 0x69, 0x2f, 0x6b, 0x75, 0x72, 0x6f, 0x6d, 0x69, 0x62,
	0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_snakeapi_kuromi_kuromi_proto_rawDescOnce sync.Once
	file_snakeapi_kuromi_kuromi_proto_rawDescData = file_snakeapi_kuromi_kuromi_proto_rawDesc
)

func file_snakeapi_kuromi_kuromi_proto_rawDescGZIP() []byte {
	file_snakeapi_kuromi_kuromi_proto_rawDescOnce.Do(func() {
		file_snakeapi_kuromi_kuromi_proto_rawDescData = protoimpl.X.CompressGZIP(file_snakeapi_kuromi_kuromi_proto_rawDescData)
	})
	return file_snakeapi_kuromi_kuromi_proto_rawDescData
}

var file_snakeapi_kuromi_kuromi_proto_msgTypes = make([]protoimpl.MessageInfo, 7)
var file_snakeapi_kuromi_kuromi_proto_goTypes = []interface{}{
	(*GetKuromiResultReq)(nil),           // 0: kuromi.GetKuromiResultReq
	(*GetKuromiResultResp)(nil),          // 1: kuromi.GetKuromiResultResp
	(*KuromiTeamScore)(nil),              // 2: kuromi.KuromiTeamScore
	(*KuromiUserScore)(nil),              // 3: kuromi.KuromiUserScore
	(*GetKuromiRecentPlayerListReq)(nil), // 4: kuromi.GetKuromiRecentPlayerListReq
	(*GetKuromiRecentPlayerResp)(nil),    // 5: kuromi.GetKuromiRecentPlayerResp
	(*RecentPlayer)(nil),                 // 6: kuromi.RecentPlayer
}
var file_snakeapi_kuromi_kuromi_proto_depIdxs = []int32{
	2, // 0: kuromi.GetKuromiResultResp.team_scores:type_name -> kuromi.KuromiTeamScore
	3, // 1: kuromi.KuromiTeamScore.user_scores:type_name -> kuromi.KuromiUserScore
	6, // 2: kuromi.GetKuromiRecentPlayerResp.list:type_name -> kuromi.RecentPlayer
	3, // [3:3] is the sub-list for method output_type
	3, // [3:3] is the sub-list for method input_type
	3, // [3:3] is the sub-list for extension type_name
	3, // [3:3] is the sub-list for extension extendee
	0, // [0:3] is the sub-list for field type_name
}

func init() { file_snakeapi_kuromi_kuromi_proto_init() }
func file_snakeapi_kuromi_kuromi_proto_init() {
	if File_snakeapi_kuromi_kuromi_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_snakeapi_kuromi_kuromi_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetKuromiResultReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_snakeapi_kuromi_kuromi_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetKuromiResultResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_snakeapi_kuromi_kuromi_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*KuromiTeamScore); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_snakeapi_kuromi_kuromi_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*KuromiUserScore); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_snakeapi_kuromi_kuromi_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetKuromiRecentPlayerListReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_snakeapi_kuromi_kuromi_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetKuromiRecentPlayerResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_snakeapi_kuromi_kuromi_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RecentPlayer); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_snakeapi_kuromi_kuromi_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   7,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_snakeapi_kuromi_kuromi_proto_goTypes,
		DependencyIndexes: file_snakeapi_kuromi_kuromi_proto_depIdxs,
		MessageInfos:      file_snakeapi_kuromi_kuromi_proto_msgTypes,
	}.Build()
	File_snakeapi_kuromi_kuromi_proto = out.File
	file_snakeapi_kuromi_kuromi_proto_rawDesc = nil
	file_snakeapi_kuromi_kuromi_proto_goTypes = nil
	file_snakeapi_kuromi_kuromi_proto_depIdxs = nil
}
