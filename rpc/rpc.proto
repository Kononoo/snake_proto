syntax = "proto3";

package rpc;

option go_package = "git.17zjh.com/snake/snake_proto/rpc";

// 客户端忽略

message userAttr {
  string uid = 1;
  string version = 2;
  string device_id = 3;
  string market = 4;
  int32 rid = 5; //请求头上的rid字段
  int32 platform = 6;
  int64 enter_effects = 7; // 用户入场特效
  int64 userinfo_bg = 8; // 用户个人资料背景
}

message empty {
}

// 内部rpc请求参数，对应pb/rq_commonMsg
message rpcReqParam {
  int32 op_type = 1;
  int32 rid = 2;
  bytes body = 3;
  userAttr user = 4;
}

// 内部rpc返回值，对应pb/rs_commonMsg
message rpcRspData {
  int32 code = 1; // 一般200成功，500失败
  string msg = 2; // 失败的msg
  bytes body = 3;
}

message userStateReq {
  string uid = 1;
}

message userStateRsp {
  int32 rid = 2;
}

message playMusicReq {
  int64 music_id = 1;
  int32 rid = 2;
  string music_name = 3;
  string artist = 4;
  int32 status = 6; //1：播放，2:暂停，3:停止
  string music = 7; //音乐链接
  string accompaniment = 8; //伴奏链接
  int32 music_duration = 9; //音乐时长（秒）
  int32 accompaniment_duration = 10; //伴奏时长（秒）
  string uploader = 11; //上传者uid
  string uploader_name = 12; //上传者昵称
}
message playMusicRsp {
}

message playTencentCloudMusicReq {
  string id = 1; //歌曲id
  int32 rid = 2;
  string title = 3; //歌曲名称
  repeated string singers = 4;//歌手名称列表
  int32 duration = 5; //播放时长
  int32 status = 6;//播放状态
}
message playTencentCloudMusicRsp {
}

message noticeOfflineReq {
  string uid = 1;
}

service VoiceRoomServer {
  rpc commonReq (rpcReqParam) returns (rpcRspData) {
  }
  rpc checkUserState (userStateReq) returns (userStateRsp) {
  }
  rpc playMusic (playMusicReq) returns (playMusicRsp) {
  }
  rpc noticeOffline (noticeOfflineReq) returns (empty) {
  }
  rpc playTencentCloudMusic (playTencentCloudMusicReq) returns (playTencentCloudMusicRsp) {
  }
}

service MusicServer {
  rpc commonReq (rpcReqParam) returns (rpcRspData) {
  }
}

service SnakeApiServer {
  rpc commonReq (rpcReqParam) returns (rpcRspData) {
  }
}