syntax = "proto3";

option go_package="../snakemini";
option objc_class_prefix = "PROTO";


package pb;

// 聊天频道类型
enum ChannelType {
    UnkownChannelType = 0; // 未知
    World = 1; // 世界频道
    Single = 2; // 私聊
    Room = 3; // 赛后频道
    TmpTeam = 4; // 临时小队频道
    AreaTop = 5; // 地域榜
}

// 消息类型
enum MessageType {
    UnkownMessageType = 0; // 未知
    SystemMessage = 1; // 系统消息
    TextMessage = 2; // 文本消息
    EmojiMessage = 3; // 表情消息
    InviteMessage =4; // 组队邀请消息
    GiftMessage = 5; // 礼物消息
    TmpTeamInviteMessage =6; // 临时小队邀请消息
}

enum MessageSubType {
    DefaultSubType = 0; // 默认
    Quik = 1; // 快捷语
    Hello=2; // 打招呼,对sender不可见
}

message Message {
    string messageId = 1; // 消息ID，全局唯一
    int64 sender = 2; // 发送人uid
    MessageType messageType = 3; // 消息类型
    bytes content = 4; // 根据 messageType 确定为不同的 Content 序列化
    int64 time = 6; // 消息发送时间，unix微秒时间戳
    MessageSubType messageSubType = 7; // 消息子类型
}

// 系统消息
message SystemContent {
    string value = 1; // 文本内容
}

// 普通文本消息
message TextContent {
    string value = 1; // 文本内容
}

message EmojiContent {
    string emojiId = 1; // 表情ID
}

message InviteContent {
    int64 groupId = 1; // 队伍ID
    int32 gameMode = 2; // 游戏模式
    int64 modeVersion = 3; // 游戏版本，不同版本需屏蔽
    int32 state = 4;// 队伍状态 1 组队中 2 匹配中 3 解散(过期)
    int32 limit =5;// 人数上限
    int32 count =6; // 当前人数
    int64 expireTs = 7; // 邀请过期时间，毫秒
    int64 owner = 8; // 房主
}

message GiftContent {
    int64 sendUid = 1; // 送礼人uid
    int64 receiveUid = 2; // 收礼人uid
    string sendNickname = 3; // 送礼人昵称
    string receiveNickname = 4; // 收礼人昵称
    int32 giftId = 5; // 礼物ID
    string giftName = 6; // 礼物名称
    int32 count = 7; // 送礼个数
    string dedication = 8; // 送礼赠言
}

message TmpTeamInviteContent {
    int64 teamId = 1; // 队伍ID
    int32 limit =5;// 人数上限
    int32 count =6; // 当前人数
    int64 expireTs = 7; // 邀请过期时间，毫秒
    int64 owner = 8; // 房主
}

// commandId=sendmsg
message SendMessageReq {// 发送消息
    ChannelType channelType = 1; // 频道类型
    string target = 2; // 发送目标，私聊为目标用户uid，其余不填
    MessageType messageType = 3; // 消息类型
    bytes content = 4; // 消息内容，用对应MessageType的Content解析
    MessageSubType messageSubType = 6; // 消息子类型
}

message SendMessageResp {
    string messageId = 1; // 消息ID
}

// commandId=getmsglist
message GetMessageListReq {// 拉取消息列表
    ChannelType channelType = 1; // 频道类型
    string target = 2; // 发送目标，私聊为目标用户uid，其余不填
    int64 maxMsgTime =3; // 最新一条消息时间戳，默认0，翻看历史记录
    int64 page = 21;
    int64 pageSize = 22;
}

message GetMessageListResp {
    repeated Message messageList = 1;
}

// commandId=newmessage
message PushNewMessage {
    Message message = 1; // 消息内容
    ChannelType channelType = 2; // 频道类型
    string channelId = 3; // 发送频道ID，私聊为目标用户uid，赛后为房间ID
    ChatUserInfo senderInfo = 4; // 发送人信息
}

message SingleChat {
    int64 targetUid = 1; // 目标用户uid
}

// commandId=singlechatlist
message GetSingleChatListReq {
    int64 cursor =1; // 扫描游标，默认从0开始
    int32 page_size =2; // 单页返回数量，默认100
} // 获取全部私聊列表

message GetSingleChatListResp {
    repeated SingleChat singleChatList = 1;
    int64 cursor =2; // 扫描游标，下次请求时带上此值，如果是0则结束了
}

// commandId=createsinglechat
message CreateSingleChatReq {// 创建私聊
    int64 targetUid = 1; // 目标用户uid
}

message CreateSingleChatResp {}

// commandId=deletesinglechat
message DeleteSingleChatReq {// 删除私聊
    int64 targetUid = 1; // 目标用户uid
}

message DeleteSingleChatResp {}


// commandId=leaveroomchat
message LeaveRoomChatReq { // 退出赛后频道
    int64 roomId = 1; // 房间ID
}

message LeaveRoomChatResp {}

// commandId=createroomchat
message PushCreateRoomChat {
    int64 rid =1; // 房间ID
    repeated int64 uidList=2; // 用户列表
}

// commandId=deleteroomchat
message PushDeleteRoomChat {
    int64 rid =1; // 房间ID
}

// commandId=updateinvite
message PushUpdateInvite {
    int64 groupId = 1; // 队伍ID
    int32 gameMode = 2; // 游戏模式
    int64 modeVersion = 3; // 游戏版本，不同版本需屏蔽
    int32 state = 4;// 队伍状态 1 组队中 2 匹配中 3 解散(过期)
    int32 limit =5;// 人数上限
    int32 count =6; // 当前人数
    int64 expireTs = 7; // 邀请过期时间，毫秒
    int64 Owner =8; // 房主
    string messageId=9;// 消息ID
}

// commandId=invitelist
message InviteListReq {
}

message InviteListRsp {
    repeated PushUpdateInvite groupInfoList = 2; // 队伍信息列表
}

// 聊天窗口显示的用户信息
message ChatUserInfo {
    int64 uid = 1; // 用户uid
    string nickname = 2; // 用户昵称
    string avatar = 3; // 用户头像
    int32 gender = 4; // 用户性别
    int64 show  = 5; // show值
    int32 box_id = 6; // 头像框
    string area = 7; // 用户地区
    int64  charm = 8; // 魅力值
    int64  star = 9; // 段位
    int32  chat_bubble_id = 10; // 聊天气泡
}


