// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.27.1
// 	protoc        v3.16.1
// source: snakemini/export.proto

package snakemini

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type SendGiftCost int32

const (
	SendGiftCost_Free          SendGiftCost = 0 // 免费，比如点赞
	SendGiftCost_Coin          SendGiftCost = 1 //金币
	SendGiftCost_Diamond       SendGiftCost = 2 // 苹果
	SendGiftCost_Ad            SendGiftCost = 3 // 广告
	SendGiftCost_Share         SendGiftCost = 4 // 分享
	SendGiftCost_DouyinDiamond SendGiftCost = 5 // 抖音钻石
)

// Enum value maps for SendGiftCost.
var (
	SendGiftCost_name = map[int32]string{
		0: "Free",
		1: "Coin",
		2: "Diamond",
		3: "Ad",
		4: "Share",
		5: "DouyinDiamond",
	}
	SendGiftCost_value = map[string]int32{
		"Free":          0,
		"Coin":          1,
		"Diamond":       2,
		"Ad":            3,
		"Share":         4,
		"DouyinDiamond": 5,
	}
)

func (x SendGiftCost) Enum() *SendGiftCost {
	p := new(SendGiftCost)
	*p = x
	return p
}

func (x SendGiftCost) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (SendGiftCost) Descriptor() protoreflect.EnumDescriptor {
	return file_snakemini_export_proto_enumTypes[0].Descriptor()
}

func (SendGiftCost) Type() protoreflect.EnumType {
	return &file_snakemini_export_proto_enumTypes[0]
}

func (x SendGiftCost) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use SendGiftCost.Descriptor instead.
func (SendGiftCost) EnumDescriptor() ([]byte, []int) {
	return file_snakemini_export_proto_rawDescGZIP(), []int{0}
}

type SendGiftSource int32

const (
	SendGiftSource_UnknownSource        SendGiftSource = 0
	SendGiftSource_QualifyingMVPPage    SendGiftSource = 1 // 团战MVP页
	SendGiftSource_QualifyingSettlePage SendGiftSource = 2 // 团战结算页
	SendGiftSource_UserHomePage         SendGiftSource = 3 // 个人资料页
)

// Enum value maps for SendGiftSource.
var (
	SendGiftSource_name = map[int32]string{
		0: "UnknownSource",
		1: "QualifyingMVPPage",
		2: "QualifyingSettlePage",
		3: "UserHomePage",
	}
	SendGiftSource_value = map[string]int32{
		"UnknownSource":        0,
		"QualifyingMVPPage":    1,
		"QualifyingSettlePage": 2,
		"UserHomePage":         3,
	}
)

func (x SendGiftSource) Enum() *SendGiftSource {
	p := new(SendGiftSource)
	*p = x
	return p
}

func (x SendGiftSource) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (SendGiftSource) Descriptor() protoreflect.EnumDescriptor {
	return file_snakemini_export_proto_enumTypes[1].Descriptor()
}

func (SendGiftSource) Type() protoreflect.EnumType {
	return &file_snakemini_export_proto_enumTypes[1]
}

func (x SendGiftSource) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use SendGiftSource.Descriptor instead.
func (SendGiftSource) EnumDescriptor() ([]byte, []int) {
	return file_snakemini_export_proto_rawDescGZIP(), []int{1}
}

type PushMsg struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CmdId   string  `protobuf:"bytes,1,opt,name=cmdId,proto3" json:"cmdId,omitempty"`
	UidList []int64 `protobuf:"varint,2,rep,packed,name=uid_list,json=uidList,proto3" json:"uid_list,omitempty"`
	Payload string  `protobuf:"bytes,3,opt,name=payload,proto3" json:"payload,omitempty"`
}

func (x *PushMsg) Reset() {
	*x = PushMsg{}
	if protoimpl.UnsafeEnabled {
		mi := &file_snakemini_export_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PushMsg) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PushMsg) ProtoMessage() {}

func (x *PushMsg) ProtoReflect() protoreflect.Message {
	mi := &file_snakemini_export_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PushMsg.ProtoReflect.Descriptor instead.
func (*PushMsg) Descriptor() ([]byte, []int) {
	return file_snakemini_export_proto_rawDescGZIP(), []int{0}
}

func (x *PushMsg) GetCmdId() string {
	if x != nil {
		return x.CmdId
	}
	return ""
}

func (x *PushMsg) GetUidList() []int64 {
	if x != nil {
		return x.UidList
	}
	return nil
}

func (x *PushMsg) GetPayload() string {
	if x != nil {
		return x.Payload
	}
	return ""
}

type UidList struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UidList []int64 `protobuf:"varint,1,rep,packed,name=uid_list,json=uidList,proto3" json:"uid_list,omitempty"`
}

func (x *UidList) Reset() {
	*x = UidList{}
	if protoimpl.UnsafeEnabled {
		mi := &file_snakemini_export_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UidList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UidList) ProtoMessage() {}

func (x *UidList) ProtoReflect() protoreflect.Message {
	mi := &file_snakemini_export_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UidList.ProtoReflect.Descriptor instead.
func (*UidList) Descriptor() ([]byte, []int) {
	return file_snakemini_export_proto_rawDescGZIP(), []int{1}
}

func (x *UidList) GetUidList() []int64 {
	if x != nil {
		return x.UidList
	}
	return nil
}

// ----------------------------------------- tool definition ------------------------------------------------
type RequestHeader struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PacketId  int32  `protobuf:"varint,1,opt,name=packet_id,json=packetId,proto3" json:"packet_id,omitempty"`
	CommandId string `protobuf:"bytes,2,opt,name=command_id,json=commandId,proto3" json:"command_id,omitempty"`
	Uid       int64  `protobuf:"varint,3,opt,name=uid,proto3" json:"uid,omitempty"`
	UserType  int32  `protobuf:"varint,4,opt,name=user_type,json=userType,proto3" json:"user_type,omitempty"`
}

func (x *RequestHeader) Reset() {
	*x = RequestHeader{}
	if protoimpl.UnsafeEnabled {
		mi := &file_snakemini_export_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RequestHeader) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RequestHeader) ProtoMessage() {}

func (x *RequestHeader) ProtoReflect() protoreflect.Message {
	mi := &file_snakemini_export_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RequestHeader.ProtoReflect.Descriptor instead.
func (*RequestHeader) Descriptor() ([]byte, []int) {
	return file_snakemini_export_proto_rawDescGZIP(), []int{2}
}

func (x *RequestHeader) GetPacketId() int32 {
	if x != nil {
		return x.PacketId
	}
	return 0
}

func (x *RequestHeader) GetCommandId() string {
	if x != nil {
		return x.CommandId
	}
	return ""
}

func (x *RequestHeader) GetUid() int64 {
	if x != nil {
		return x.Uid
	}
	return 0
}

func (x *RequestHeader) GetUserType() int32 {
	if x != nil {
		return x.UserType
	}
	return 0
}

type ResponseHeader struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PacketId  int32  `protobuf:"varint,1,opt,name=packet_id,json=packetId,proto3" json:"packet_id,omitempty"`
	CommandId string `protobuf:"bytes,2,opt,name=command_id,json=commandId,proto3" json:"command_id,omitempty"`
	ErrCode   int32  `protobuf:"varint,3,opt,name=err_code,json=errCode,proto3" json:"err_code,omitempty"`
	ErrMsg    string `protobuf:"bytes,4,opt,name=err_msg,json=errMsg,proto3" json:"err_msg,omitempty"`
}

func (x *ResponseHeader) Reset() {
	*x = ResponseHeader{}
	if protoimpl.UnsafeEnabled {
		mi := &file_snakemini_export_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ResponseHeader) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResponseHeader) ProtoMessage() {}

func (x *ResponseHeader) ProtoReflect() protoreflect.Message {
	mi := &file_snakemini_export_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResponseHeader.ProtoReflect.Descriptor instead.
func (*ResponseHeader) Descriptor() ([]byte, []int) {
	return file_snakemini_export_proto_rawDescGZIP(), []int{3}
}

func (x *ResponseHeader) GetPacketId() int32 {
	if x != nil {
		return x.PacketId
	}
	return 0
}

func (x *ResponseHeader) GetCommandId() string {
	if x != nil {
		return x.CommandId
	}
	return ""
}

func (x *ResponseHeader) GetErrCode() int32 {
	if x != nil {
		return x.ErrCode
	}
	return 0
}

func (x *ResponseHeader) GetErrMsg() string {
	if x != nil {
		return x.ErrMsg
	}
	return ""
}

type PushHeader struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CommandId string `protobuf:"bytes,1,opt,name=command_id,json=commandId,proto3" json:"command_id,omitempty"`
	Time      int64  `protobuf:"varint,2,opt,name=time,proto3" json:"time,omitempty"`
}

func (x *PushHeader) Reset() {
	*x = PushHeader{}
	if protoimpl.UnsafeEnabled {
		mi := &file_snakemini_export_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PushHeader) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PushHeader) ProtoMessage() {}

func (x *PushHeader) ProtoReflect() protoreflect.Message {
	mi := &file_snakemini_export_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PushHeader.ProtoReflect.Descriptor instead.
func (*PushHeader) Descriptor() ([]byte, []int) {
	return file_snakemini_export_proto_rawDescGZIP(), []int{4}
}

func (x *PushHeader) GetCommandId() string {
	if x != nil {
		return x.CommandId
	}
	return ""
}

func (x *PushHeader) GetTime() int64 {
	if x != nil {
		return x.Time
	}
	return 0
}

type PbRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Header *RequestHeader `protobuf:"bytes,1,opt,name=header,proto3" json:"header,omitempty"`
	Body   string         `protobuf:"bytes,2,opt,name=body,proto3" json:"body,omitempty"`
}

func (x *PbRequest) Reset() {
	*x = PbRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_snakemini_export_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PbRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PbRequest) ProtoMessage() {}

func (x *PbRequest) ProtoReflect() protoreflect.Message {
	mi := &file_snakemini_export_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PbRequest.ProtoReflect.Descriptor instead.
func (*PbRequest) Descriptor() ([]byte, []int) {
	return file_snakemini_export_proto_rawDescGZIP(), []int{5}
}

func (x *PbRequest) GetHeader() *RequestHeader {
	if x != nil {
		return x.Header
	}
	return nil
}

func (x *PbRequest) GetBody() string {
	if x != nil {
		return x.Body
	}
	return ""
}

type PbResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Header *ResponseHeader `protobuf:"bytes,1,opt,name=header,proto3" json:"header,omitempty"`
	Body   string          `protobuf:"bytes,2,opt,name=body,proto3" json:"body,omitempty"`
}

func (x *PbResponse) Reset() {
	*x = PbResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_snakemini_export_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PbResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PbResponse) ProtoMessage() {}

func (x *PbResponse) ProtoReflect() protoreflect.Message {
	mi := &file_snakemini_export_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PbResponse.ProtoReflect.Descriptor instead.
func (*PbResponse) Descriptor() ([]byte, []int) {
	return file_snakemini_export_proto_rawDescGZIP(), []int{6}
}

func (x *PbResponse) GetHeader() *ResponseHeader {
	if x != nil {
		return x.Header
	}
	return nil
}

func (x *PbResponse) GetBody() string {
	if x != nil {
		return x.Body
	}
	return ""
}

type PbPush struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Header *PushHeader `protobuf:"bytes,1,opt,name=header,proto3" json:"header,omitempty"`
	Body   string      `protobuf:"bytes,2,opt,name=body,proto3" json:"body,omitempty"`
}

func (x *PbPush) Reset() {
	*x = PbPush{}
	if protoimpl.UnsafeEnabled {
		mi := &file_snakemini_export_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PbPush) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PbPush) ProtoMessage() {}

func (x *PbPush) ProtoReflect() protoreflect.Message {
	mi := &file_snakemini_export_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PbPush.ProtoReflect.Descriptor instead.
func (*PbPush) Descriptor() ([]byte, []int) {
	return file_snakemini_export_proto_rawDescGZIP(), []int{7}
}

func (x *PbPush) GetHeader() *PushHeader {
	if x != nil {
		return x.Header
	}
	return nil
}

func (x *PbPush) GetBody() string {
	if x != nil {
		return x.Body
	}
	return ""
}

type ErrInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ErrCode    int32  `protobuf:"varint,1,opt,name=err_code,json=errCode,proto3" json:"err_code,omitempty"`
	ErrMessage string `protobuf:"bytes,2,opt,name=err_message,json=errMessage,proto3" json:"err_message,omitempty"`
}

func (x *ErrInfo) Reset() {
	*x = ErrInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_snakemini_export_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ErrInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ErrInfo) ProtoMessage() {}

func (x *ErrInfo) ProtoReflect() protoreflect.Message {
	mi := &file_snakemini_export_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ErrInfo.ProtoReflect.Descriptor instead.
func (*ErrInfo) Descriptor() ([]byte, []int) {
	return file_snakemini_export_proto_rawDescGZIP(), []int{8}
}

func (x *ErrInfo) GetErrCode() int32 {
	if x != nil {
		return x.ErrCode
	}
	return 0
}

func (x *ErrInfo) GetErrMessage() string {
	if x != nil {
		return x.ErrMessage
	}
	return ""
}

type ReplyEmpty struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Err *ErrInfo `protobuf:"bytes,1,opt,name=err,proto3" json:"err,omitempty"`
}

func (x *ReplyEmpty) Reset() {
	*x = ReplyEmpty{}
	if protoimpl.UnsafeEnabled {
		mi := &file_snakemini_export_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReplyEmpty) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReplyEmpty) ProtoMessage() {}

func (x *ReplyEmpty) ProtoReflect() protoreflect.Message {
	mi := &file_snakemini_export_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReplyEmpty.ProtoReflect.Descriptor instead.
func (*ReplyEmpty) Descriptor() ([]byte, []int) {
	return file_snakemini_export_proto_rawDescGZIP(), []int{9}
}

func (x *ReplyEmpty) GetErr() *ErrInfo {
	if x != nil {
		return x.Err
	}
	return nil
}

type PbUdpRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CommandId string                 `protobuf:"bytes,1,opt,name=command_id,json=commandId,proto3" json:"command_id,omitempty"`
	Action    *RelayUdpActionRequest `protobuf:"bytes,2,opt,name=action,proto3" json:"action,omitempty"`
}

func (x *PbUdpRequest) Reset() {
	*x = PbUdpRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_snakemini_export_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PbUdpRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PbUdpRequest) ProtoMessage() {}

func (x *PbUdpRequest) ProtoReflect() protoreflect.Message {
	mi := &file_snakemini_export_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PbUdpRequest.ProtoReflect.Descriptor instead.
func (*PbUdpRequest) Descriptor() ([]byte, []int) {
	return file_snakemini_export_proto_rawDescGZIP(), []int{10}
}

func (x *PbUdpRequest) GetCommandId() string {
	if x != nil {
		return x.CommandId
	}
	return ""
}

func (x *PbUdpRequest) GetAction() *RelayUdpActionRequest {
	if x != nil {
		return x.Action
	}
	return nil
}

type PbUdpPush struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CommandId string      `protobuf:"bytes,1,opt,name=command_id,json=commandId,proto3" json:"command_id,omitempty"`
	Puaction  *PushAction `protobuf:"bytes,2,opt,name=puaction,proto3" json:"puaction,omitempty"`
}

func (x *PbUdpPush) Reset() {
	*x = PbUdpPush{}
	if protoimpl.UnsafeEnabled {
		mi := &file_snakemini_export_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PbUdpPush) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PbUdpPush) ProtoMessage() {}

func (x *PbUdpPush) ProtoReflect() protoreflect.Message {
	mi := &file_snakemini_export_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PbUdpPush.ProtoReflect.Descriptor instead.
func (*PbUdpPush) Descriptor() ([]byte, []int) {
	return file_snakemini_export_proto_rawDescGZIP(), []int{11}
}

func (x *PbUdpPush) GetCommandId() string {
	if x != nil {
		return x.CommandId
	}
	return ""
}

func (x *PbUdpPush) GetPuaction() *PushAction {
	if x != nil {
		return x.Puaction
	}
	return nil
}

// 绑定
type BindRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Uid      int64  `protobuf:"varint,1,opt,name=uid,proto3" json:"uid,omitempty"`
	Sid      string `protobuf:"bytes,2,opt,name=sid,proto3" json:"sid,omitempty"`
	Version  string `protobuf:"bytes,3,opt,name=version,proto3" json:"version,omitempty"`
	Platform int32  `protobuf:"varint,4,opt,name=platform,proto3" json:"platform,omitempty"`
	UserType int32  `protobuf:"varint,5,opt,name=user_type,json=userType,proto3" json:"user_type,omitempty"`
}

func (x *BindRequest) Reset() {
	*x = BindRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_snakemini_export_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BindRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BindRequest) ProtoMessage() {}

func (x *BindRequest) ProtoReflect() protoreflect.Message {
	mi := &file_snakemini_export_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BindRequest.ProtoReflect.Descriptor instead.
func (*BindRequest) Descriptor() ([]byte, []int) {
	return file_snakemini_export_proto_rawDescGZIP(), []int{12}
}

func (x *BindRequest) GetUid() int64 {
	if x != nil {
		return x.Uid
	}
	return 0
}

func (x *BindRequest) GetSid() string {
	if x != nil {
		return x.Sid
	}
	return ""
}

func (x *BindRequest) GetVersion() string {
	if x != nil {
		return x.Version
	}
	return ""
}

func (x *BindRequest) GetPlatform() int32 {
	if x != nil {
		return x.Platform
	}
	return 0
}

func (x *BindRequest) GetUserType() int32 {
	if x != nil {
		return x.UserType
	}
	return 0
}

type BindResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Info string `protobuf:"bytes,1,opt,name=info,proto3" json:"info,omitempty"`
}

func (x *BindResponse) Reset() {
	*x = BindResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_snakemini_export_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BindResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BindResponse) ProtoMessage() {}

func (x *BindResponse) ProtoReflect() protoreflect.Message {
	mi := &file_snakemini_export_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BindResponse.ProtoReflect.Descriptor instead.
func (*BindResponse) Descriptor() ([]byte, []int) {
	return file_snakemini_export_proto_rawDescGZIP(), []int{13}
}

func (x *BindResponse) GetInfo() string {
	if x != nil {
		return x.Info
	}
	return ""
}

type BindMatchInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	State     int32      `protobuf:"varint,1,opt,name=state,proto3" json:"state,omitempty"`
	GroupInfo *GroupInfo `protobuf:"bytes,2,opt,name=group_info,json=groupInfo,proto3" json:"group_info,omitempty"`
	MatchInfo *MatchInfo `protobuf:"bytes,3,opt,name=match_info,json=matchInfo,proto3" json:"match_info,omitempty"`
}

func (x *BindMatchInfo) Reset() {
	*x = BindMatchInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_snakemini_export_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BindMatchInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BindMatchInfo) ProtoMessage() {}

func (x *BindMatchInfo) ProtoReflect() protoreflect.Message {
	mi := &file_snakemini_export_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BindMatchInfo.ProtoReflect.Descriptor instead.
func (*BindMatchInfo) Descriptor() ([]byte, []int) {
	return file_snakemini_export_proto_rawDescGZIP(), []int{14}
}

func (x *BindMatchInfo) GetState() int32 {
	if x != nil {
		return x.State
	}
	return 0
}

func (x *BindMatchInfo) GetGroupInfo() *GroupInfo {
	if x != nil {
		return x.GroupInfo
	}
	return nil
}

func (x *BindMatchInfo) GetMatchInfo() *MatchInfo {
	if x != nil {
		return x.MatchInfo
	}
	return nil
}

type UidRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Uid    int64            `protobuf:"varint,1,opt,name=uid,proto3" json:"uid,omitempty"`
	CmdMap map[string]int32 `protobuf:"bytes,2,rep,name=cmdMap,proto3" json:"cmdMap,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"varint,2,opt,name=value,proto3"`
}

func (x *UidRequest) Reset() {
	*x = UidRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_snakemini_export_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UidRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UidRequest) ProtoMessage() {}

func (x *UidRequest) ProtoReflect() protoreflect.Message {
	mi := &file_snakemini_export_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UidRequest.ProtoReflect.Descriptor instead.
func (*UidRequest) Descriptor() ([]byte, []int) {
	return file_snakemini_export_proto_rawDescGZIP(), []int{15}
}

func (x *UidRequest) GetUid() int64 {
	if x != nil {
		return x.Uid
	}
	return 0
}

func (x *UidRequest) GetCmdMap() map[string]int32 {
	if x != nil {
		return x.CmdMap
	}
	return nil
}

type HeartBeartRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ClientTime int64 `protobuf:"varint,1,opt,name=client_time,json=clientTime,proto3" json:"client_time,omitempty"`
}

func (x *HeartBeartRequest) Reset() {
	*x = HeartBeartRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_snakemini_export_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HeartBeartRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HeartBeartRequest) ProtoMessage() {}

func (x *HeartBeartRequest) ProtoReflect() protoreflect.Message {
	mi := &file_snakemini_export_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HeartBeartRequest.ProtoReflect.Descriptor instead.
func (*HeartBeartRequest) Descriptor() ([]byte, []int) {
	return file_snakemini_export_proto_rawDescGZIP(), []int{16}
}

func (x *HeartBeartRequest) GetClientTime() int64 {
	if x != nil {
		return x.ClientTime
	}
	return 0
}

type HeartBeartResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ClientTime int64 `protobuf:"varint,1,opt,name=client_time,json=clientTime,proto3" json:"client_time,omitempty"`
	ServerTime int64 `protobuf:"varint,2,opt,name=server_time,json=serverTime,proto3" json:"server_time,omitempty"`
}

func (x *HeartBeartResponse) Reset() {
	*x = HeartBeartResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_snakemini_export_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HeartBeartResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HeartBeartResponse) ProtoMessage() {}

func (x *HeartBeartResponse) ProtoReflect() protoreflect.Message {
	mi := &file_snakemini_export_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HeartBeartResponse.ProtoReflect.Descriptor instead.
func (*HeartBeartResponse) Descriptor() ([]byte, []int) {
	return file_snakemini_export_proto_rawDescGZIP(), []int{17}
}

func (x *HeartBeartResponse) GetClientTime() int64 {
	if x != nil {
		return x.ClientTime
	}
	return 0
}

func (x *HeartBeartResponse) GetServerTime() int64 {
	if x != nil {
		return x.ServerTime
	}
	return 0
}

// matchServer判断是否在房间中和游戏中
type InGameStateReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Err           *ErrInfo `protobuf:"bytes,1,opt,name=err,proto3" json:"err,omitempty"`
	Gid           int32    `protobuf:"varint,2,opt,name=gid,proto3" json:"gid,omitempty"`
	Rid           int32    `protobuf:"varint,3,opt,name=rid,proto3" json:"rid,omitempty"`
	RelayServerId int32    `protobuf:"varint,4,opt,name=relay_server_id,json=relayServerId,proto3" json:"relay_server_id,omitempty"`
	RelayHost     string   `protobuf:"bytes,5,opt,name=relay_host,json=relayHost,proto3" json:"relay_host,omitempty"`
}

func (x *InGameStateReply) Reset() {
	*x = InGameStateReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_snakemini_export_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *InGameStateReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InGameStateReply) ProtoMessage() {}

func (x *InGameStateReply) ProtoReflect() protoreflect.Message {
	mi := &file_snakemini_export_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InGameStateReply.ProtoReflect.Descriptor instead.
func (*InGameStateReply) Descriptor() ([]byte, []int) {
	return file_snakemini_export_proto_rawDescGZIP(), []int{18}
}

func (x *InGameStateReply) GetErr() *ErrInfo {
	if x != nil {
		return x.Err
	}
	return nil
}

func (x *InGameStateReply) GetGid() int32 {
	if x != nil {
		return x.Gid
	}
	return 0
}

func (x *InGameStateReply) GetRid() int32 {
	if x != nil {
		return x.Rid
	}
	return 0
}

func (x *InGameStateReply) GetRelayServerId() int32 {
	if x != nil {
		return x.RelayServerId
	}
	return 0
}

func (x *InGameStateReply) GetRelayHost() string {
	if x != nil {
		return x.RelayHost
	}
	return ""
}

type MatchUserInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Uid            int64  `protobuf:"varint,1,opt,name=uid,proto3" json:"uid,omitempty"`
	Openid         string `protobuf:"bytes,2,opt,name=openid,proto3" json:"openid,omitempty"`
	Version        string `protobuf:"bytes,3,opt,name=version,proto3" json:"version,omitempty"`
	GameMode       int32  `protobuf:"varint,4,opt,name=game_mode,json=gameMode,proto3" json:"game_mode,omitempty"`
	ModeVersion    int32  `protobuf:"varint,5,opt,name=mode_version,json=modeVersion,proto3" json:"mode_version,omitempty"`
	SkinId         int32  `protobuf:"varint,6,opt,name=skin_id,json=skinId,proto3" json:"skin_id,omitempty"`
	UserType       int32  `protobuf:"varint,7,opt,name=user_type,json=userType,proto3" json:"user_type,omitempty"`
	Platform       int32  `protobuf:"varint,8,opt,name=platform,proto3" json:"platform,omitempty"`
	Rank           int32  `protobuf:"varint,9,opt,name=rank,proto3" json:"rank,omitempty"`
	HistoryMaxStar int32  `protobuf:"varint,10,opt,name=history_max_star,json=historyMaxStar,proto3" json:"history_max_star,omitempty"`
	HasMagnet      int32  `protobuf:"varint,11,opt,name=has_magnet,json=hasMagnet,proto3" json:"has_magnet,omitempty"`
	KillId         int32  `protobuf:"varint,12,opt,name=kill_id,json=killId,proto3" json:"kill_id,omitempty"`
}

func (x *MatchUserInfo) Reset() {
	*x = MatchUserInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_snakemini_export_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MatchUserInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MatchUserInfo) ProtoMessage() {}

func (x *MatchUserInfo) ProtoReflect() protoreflect.Message {
	mi := &file_snakemini_export_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MatchUserInfo.ProtoReflect.Descriptor instead.
func (*MatchUserInfo) Descriptor() ([]byte, []int) {
	return file_snakemini_export_proto_rawDescGZIP(), []int{19}
}

func (x *MatchUserInfo) GetUid() int64 {
	if x != nil {
		return x.Uid
	}
	return 0
}

func (x *MatchUserInfo) GetOpenid() string {
	if x != nil {
		return x.Openid
	}
	return ""
}

func (x *MatchUserInfo) GetVersion() string {
	if x != nil {
		return x.Version
	}
	return ""
}

func (x *MatchUserInfo) GetGameMode() int32 {
	if x != nil {
		return x.GameMode
	}
	return 0
}

func (x *MatchUserInfo) GetModeVersion() int32 {
	if x != nil {
		return x.ModeVersion
	}
	return 0
}

func (x *MatchUserInfo) GetSkinId() int32 {
	if x != nil {
		return x.SkinId
	}
	return 0
}

func (x *MatchUserInfo) GetUserType() int32 {
	if x != nil {
		return x.UserType
	}
	return 0
}

func (x *MatchUserInfo) GetPlatform() int32 {
	if x != nil {
		return x.Platform
	}
	return 0
}

func (x *MatchUserInfo) GetRank() int32 {
	if x != nil {
		return x.Rank
	}
	return 0
}

func (x *MatchUserInfo) GetHistoryMaxStar() int32 {
	if x != nil {
		return x.HistoryMaxStar
	}
	return 0
}

func (x *MatchUserInfo) GetHasMagnet() int32 {
	if x != nil {
		return x.HasMagnet
	}
	return 0
}

func (x *MatchUserInfo) GetKillId() int32 {
	if x != nil {
		return x.KillId
	}
	return 0
}

// 创建队伍
type CreateGroupRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserInfo *MatchUserInfo `protobuf:"bytes,1,opt,name=user_info,json=userInfo,proto3" json:"user_info,omitempty"`
}

func (x *CreateGroupRequest) Reset() {
	*x = CreateGroupRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_snakemini_export_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateGroupRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateGroupRequest) ProtoMessage() {}

func (x *CreateGroupRequest) ProtoReflect() protoreflect.Message {
	mi := &file_snakemini_export_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateGroupRequest.ProtoReflect.Descriptor instead.
func (*CreateGroupRequest) Descriptor() ([]byte, []int) {
	return file_snakemini_export_proto_rawDescGZIP(), []int{20}
}

func (x *CreateGroupRequest) GetUserInfo() *MatchUserInfo {
	if x != nil {
		return x.UserInfo
	}
	return nil
}

type CreateGroupResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Gid int32 `protobuf:"varint,1,opt,name=gid,proto3" json:"gid,omitempty"`
}

func (x *CreateGroupResponse) Reset() {
	*x = CreateGroupResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_snakemini_export_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateGroupResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateGroupResponse) ProtoMessage() {}

func (x *CreateGroupResponse) ProtoReflect() protoreflect.Message {
	mi := &file_snakemini_export_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateGroupResponse.ProtoReflect.Descriptor instead.
func (*CreateGroupResponse) Descriptor() ([]byte, []int) {
	return file_snakemini_export_proto_rawDescGZIP(), []int{21}
}

func (x *CreateGroupResponse) GetGid() int32 {
	if x != nil {
		return x.Gid
	}
	return 0
}

// 加入队伍
type JoinGroupRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserInfo  *MatchUserInfo `protobuf:"bytes,1,opt,name=user_info,json=userInfo,proto3" json:"user_info,omitempty"`
	InviteUid int64          `protobuf:"varint,2,opt,name=invite_uid,json=inviteUid,proto3" json:"invite_uid,omitempty"`
}

func (x *JoinGroupRequest) Reset() {
	*x = JoinGroupRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_snakemini_export_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *JoinGroupRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*JoinGroupRequest) ProtoMessage() {}

func (x *JoinGroupRequest) ProtoReflect() protoreflect.Message {
	mi := &file_snakemini_export_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use JoinGroupRequest.ProtoReflect.Descriptor instead.
func (*JoinGroupRequest) Descriptor() ([]byte, []int) {
	return file_snakemini_export_proto_rawDescGZIP(), []int{22}
}

func (x *JoinGroupRequest) GetUserInfo() *MatchUserInfo {
	if x != nil {
		return x.UserInfo
	}
	return nil
}

func (x *JoinGroupRequest) GetInviteUid() int64 {
	if x != nil {
		return x.InviteUid
	}
	return 0
}

type JoinGroupResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	GroupInfo *GroupInfo `protobuf:"bytes,1,opt,name=group_info,json=groupInfo,proto3" json:"group_info,omitempty"`
}

func (x *JoinGroupResponse) Reset() {
	*x = JoinGroupResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_snakemini_export_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *JoinGroupResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*JoinGroupResponse) ProtoMessage() {}

func (x *JoinGroupResponse) ProtoReflect() protoreflect.Message {
	mi := &file_snakemini_export_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use JoinGroupResponse.ProtoReflect.Descriptor instead.
func (*JoinGroupResponse) Descriptor() ([]byte, []int) {
	return file_snakemini_export_proto_rawDescGZIP(), []int{23}
}

func (x *JoinGroupResponse) GetGroupInfo() *GroupInfo {
	if x != nil {
		return x.GroupInfo
	}
	return nil
}

// 退出队伍
type ExitGroupRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Uid int64 `protobuf:"varint,1,opt,name=uid,proto3" json:"uid,omitempty"`
}

func (x *ExitGroupRequest) Reset() {
	*x = ExitGroupRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_snakemini_export_proto_msgTypes[24]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ExitGroupRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExitGroupRequest) ProtoMessage() {}

func (x *ExitGroupRequest) ProtoReflect() protoreflect.Message {
	mi := &file_snakemini_export_proto_msgTypes[24]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExitGroupRequest.ProtoReflect.Descriptor instead.
func (*ExitGroupRequest) Descriptor() ([]byte, []int) {
	return file_snakemini_export_proto_rawDescGZIP(), []int{24}
}

func (x *ExitGroupRequest) GetUid() int64 {
	if x != nil {
		return x.Uid
	}
	return 0
}

type ExitGroupResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *ExitGroupResponse) Reset() {
	*x = ExitGroupResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_snakemini_export_proto_msgTypes[25]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ExitGroupResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExitGroupResponse) ProtoMessage() {}

func (x *ExitGroupResponse) ProtoReflect() protoreflect.Message {
	mi := &file_snakemini_export_proto_msgTypes[25]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExitGroupResponse.ProtoReflect.Descriptor instead.
func (*ExitGroupResponse) Descriptor() ([]byte, []int) {
	return file_snakemini_export_proto_rawDescGZIP(), []int{25}
}

// 踢出队伍
type KickRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Uid     int64 `protobuf:"varint,1,opt,name=uid,proto3" json:"uid,omitempty"`
	KickUid int64 `protobuf:"varint,2,opt,name=kick_uid,json=kickUid,proto3" json:"kick_uid,omitempty"`
}

func (x *KickRequest) Reset() {
	*x = KickRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_snakemini_export_proto_msgTypes[26]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *KickRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*KickRequest) ProtoMessage() {}

func (x *KickRequest) ProtoReflect() protoreflect.Message {
	mi := &file_snakemini_export_proto_msgTypes[26]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use KickRequest.ProtoReflect.Descriptor instead.
func (*KickRequest) Descriptor() ([]byte, []int) {
	return file_snakemini_export_proto_rawDescGZIP(), []int{26}
}

func (x *KickRequest) GetUid() int64 {
	if x != nil {
		return x.Uid
	}
	return 0
}

func (x *KickRequest) GetKickUid() int64 {
	if x != nil {
		return x.KickUid
	}
	return 0
}

type KickResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *KickResponse) Reset() {
	*x = KickResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_snakemini_export_proto_msgTypes[27]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *KickResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*KickResponse) ProtoMessage() {}

func (x *KickResponse) ProtoReflect() protoreflect.Message {
	mi := &file_snakemini_export_proto_msgTypes[27]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use KickResponse.ProtoReflect.Descriptor instead.
func (*KickResponse) Descriptor() ([]byte, []int) {
	return file_snakemini_export_proto_rawDescGZIP(), []int{27}
}

type GroupInfoPush struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	GroupInfo *GroupInfo `protobuf:"bytes,1,opt,name=group_info,json=groupInfo,proto3" json:"group_info,omitempty"`
}

func (x *GroupInfoPush) Reset() {
	*x = GroupInfoPush{}
	if protoimpl.UnsafeEnabled {
		mi := &file_snakemini_export_proto_msgTypes[28]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GroupInfoPush) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GroupInfoPush) ProtoMessage() {}

func (x *GroupInfoPush) ProtoReflect() protoreflect.Message {
	mi := &file_snakemini_export_proto_msgTypes[28]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GroupInfoPush.ProtoReflect.Descriptor instead.
func (*GroupInfoPush) Descriptor() ([]byte, []int) {
	return file_snakemini_export_proto_rawDescGZIP(), []int{28}
}

func (x *GroupInfoPush) GetGroupInfo() *GroupInfo {
	if x != nil {
		return x.GroupInfo
	}
	return nil
}

type GroupStatePush struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	State  int32 `protobuf:"varint,1,opt,name=state,proto3" json:"state,omitempty"`
	Cancel int32 `protobuf:"varint,2,opt,name=cancel,proto3" json:"cancel,omitempty"`
}

func (x *GroupStatePush) Reset() {
	*x = GroupStatePush{}
	if protoimpl.UnsafeEnabled {
		mi := &file_snakemini_export_proto_msgTypes[29]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GroupStatePush) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GroupStatePush) ProtoMessage() {}

func (x *GroupStatePush) ProtoReflect() protoreflect.Message {
	mi := &file_snakemini_export_proto_msgTypes[29]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GroupStatePush.ProtoReflect.Descriptor instead.
func (*GroupStatePush) Descriptor() ([]byte, []int) {
	return file_snakemini_export_proto_rawDescGZIP(), []int{29}
}

func (x *GroupStatePush) GetState() int32 {
	if x != nil {
		return x.State
	}
	return 0
}

func (x *GroupStatePush) GetCancel() int32 {
	if x != nil {
		return x.Cancel
	}
	return 0
}

type GroupInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Gid         int32            `protobuf:"varint,1,opt,name=gid,proto3" json:"gid,omitempty"`
	Owner       int64            `protobuf:"varint,2,opt,name=owner,proto3" json:"owner,omitempty"`
	UidList     []int64          `protobuf:"varint,3,rep,packed,name=uid_list,json=uidList,proto3" json:"uid_list,omitempty"`
	GameMode    int32            `protobuf:"varint,4,opt,name=game_mode,json=gameMode,proto3" json:"game_mode,omitempty"`
	ModeVersion int32            `protobuf:"varint,5,opt,name=mode_version,json=modeVersion,proto3" json:"mode_version,omitempty"`
	UserInfos   []*GroupUserInfo `protobuf:"bytes,6,rep,name=user_infos,json=userInfos,proto3" json:"user_infos,omitempty"`
}

func (x *GroupInfo) Reset() {
	*x = GroupInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_snakemini_export_proto_msgTypes[30]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GroupInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GroupInfo) ProtoMessage() {}

func (x *GroupInfo) ProtoReflect() protoreflect.Message {
	mi := &file_snakemini_export_proto_msgTypes[30]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GroupInfo.ProtoReflect.Descriptor instead.
func (*GroupInfo) Descriptor() ([]byte, []int) {
	return file_snakemini_export_proto_rawDescGZIP(), []int{30}
}

func (x *GroupInfo) GetGid() int32 {
	if x != nil {
		return x.Gid
	}
	return 0
}

func (x *GroupInfo) GetOwner() int64 {
	if x != nil {
		return x.Owner
	}
	return 0
}

func (x *GroupInfo) GetUidList() []int64 {
	if x != nil {
		return x.UidList
	}
	return nil
}

func (x *GroupInfo) GetGameMode() int32 {
	if x != nil {
		return x.GameMode
	}
	return 0
}

func (x *GroupInfo) GetModeVersion() int32 {
	if x != nil {
		return x.ModeVersion
	}
	return 0
}

func (x *GroupInfo) GetUserInfos() []*GroupUserInfo {
	if x != nil {
		return x.UserInfos
	}
	return nil
}

type GroupUserInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Uid    int64 `protobuf:"varint,1,opt,name=uid,proto3" json:"uid,omitempty"`
	SkinId int32 `protobuf:"varint,2,opt,name=skin_id,json=skinId,proto3" json:"skin_id,omitempty"`
}

func (x *GroupUserInfo) Reset() {
	*x = GroupUserInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_snakemini_export_proto_msgTypes[31]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GroupUserInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GroupUserInfo) ProtoMessage() {}

func (x *GroupUserInfo) ProtoReflect() protoreflect.Message {
	mi := &file_snakemini_export_proto_msgTypes[31]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GroupUserInfo.ProtoReflect.Descriptor instead.
func (*GroupUserInfo) Descriptor() ([]byte, []int) {
	return file_snakemini_export_proto_rawDescGZIP(), []int{31}
}

func (x *GroupUserInfo) GetUid() int64 {
	if x != nil {
		return x.Uid
	}
	return 0
}

func (x *GroupUserInfo) GetSkinId() int32 {
	if x != nil {
		return x.SkinId
	}
	return 0
}

// 开始匹配
type StartMatchRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserInfo *MatchUserInfo `protobuf:"bytes,1,opt,name=user_info,json=userInfo,proto3" json:"user_info,omitempty"`
}

func (x *StartMatchRequest) Reset() {
	*x = StartMatchRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_snakemini_export_proto_msgTypes[32]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StartMatchRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StartMatchRequest) ProtoMessage() {}

func (x *StartMatchRequest) ProtoReflect() protoreflect.Message {
	mi := &file_snakemini_export_proto_msgTypes[32]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StartMatchRequest.ProtoReflect.Descriptor instead.
func (*StartMatchRequest) Descriptor() ([]byte, []int) {
	return file_snakemini_export_proto_rawDescGZIP(), []int{32}
}

func (x *StartMatchRequest) GetUserInfo() *MatchUserInfo {
	if x != nil {
		return x.UserInfo
	}
	return nil
}

type StartMatchResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Gid     int32 `protobuf:"varint,1,opt,name=gid,proto3" json:"gid,omitempty"`
	Timeout int32 `protobuf:"varint,2,opt,name=timeout,proto3" json:"timeout,omitempty"` // 匹配超时时间
}

func (x *StartMatchResponse) Reset() {
	*x = StartMatchResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_snakemini_export_proto_msgTypes[33]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StartMatchResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StartMatchResponse) ProtoMessage() {}

func (x *StartMatchResponse) ProtoReflect() protoreflect.Message {
	mi := &file_snakemini_export_proto_msgTypes[33]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StartMatchResponse.ProtoReflect.Descriptor instead.
func (*StartMatchResponse) Descriptor() ([]byte, []int) {
	return file_snakemini_export_proto_rawDescGZIP(), []int{33}
}

func (x *StartMatchResponse) GetGid() int32 {
	if x != nil {
		return x.Gid
	}
	return 0
}

func (x *StartMatchResponse) GetTimeout() int32 {
	if x != nil {
		return x.Timeout
	}
	return 0
}

// 取消匹配
type CancelMatchRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Uid       int64 `protobuf:"varint,1,opt,name=uid,proto3" json:"uid,omitempty"`
	IsTimeout int32 `protobuf:"varint,2,opt,name=is_timeout,json=isTimeout,proto3" json:"is_timeout,omitempty"` // 是否超时取消
}

func (x *CancelMatchRequest) Reset() {
	*x = CancelMatchRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_snakemini_export_proto_msgTypes[34]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CancelMatchRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CancelMatchRequest) ProtoMessage() {}

func (x *CancelMatchRequest) ProtoReflect() protoreflect.Message {
	mi := &file_snakemini_export_proto_msgTypes[34]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CancelMatchRequest.ProtoReflect.Descriptor instead.
func (*CancelMatchRequest) Descriptor() ([]byte, []int) {
	return file_snakemini_export_proto_rawDescGZIP(), []int{34}
}

func (x *CancelMatchRequest) GetUid() int64 {
	if x != nil {
		return x.Uid
	}
	return 0
}

func (x *CancelMatchRequest) GetIsTimeout() int32 {
	if x != nil {
		return x.IsTimeout
	}
	return 0
}

type MatchSucPush struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MatchInfo *MatchInfo `protobuf:"bytes,1,opt,name=match_info,json=matchInfo,proto3" json:"match_info,omitempty"`
}

func (x *MatchSucPush) Reset() {
	*x = MatchSucPush{}
	if protoimpl.UnsafeEnabled {
		mi := &file_snakemini_export_proto_msgTypes[35]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MatchSucPush) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MatchSucPush) ProtoMessage() {}

func (x *MatchSucPush) ProtoReflect() protoreflect.Message {
	mi := &file_snakemini_export_proto_msgTypes[35]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MatchSucPush.ProtoReflect.Descriptor instead.
func (*MatchSucPush) Descriptor() ([]byte, []int) {
	return file_snakemini_export_proto_rawDescGZIP(), []int{35}
}

func (x *MatchSucPush) GetMatchInfo() *MatchInfo {
	if x != nil {
		return x.MatchInfo
	}
	return nil
}

type MatchInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Rid            int32            `protobuf:"varint,1,opt,name=rid,proto3" json:"rid,omitempty"`
	AccessInfo     string           `protobuf:"bytes,2,opt,name=access_info,json=accessInfo,proto3" json:"access_info,omitempty"`
	UidList        []int64          `protobuf:"varint,3,rep,packed,name=uid_list,json=uidList,proto3" json:"uid_list,omitempty"`
	TeamId         int32            `protobuf:"varint,4,opt,name=team_id,json=teamId,proto3" json:"team_id,omitempty"`
	TeamIdList     []int32          `protobuf:"varint,5,rep,packed,name=team_id_list,json=teamIdList,proto3" json:"team_id_list,omitempty"`
	TimeLimit      int32            `protobuf:"varint,6,opt,name=time_limit,json=timeLimit,proto3" json:"time_limit,omitempty"`
	MatchTime      int64            `protobuf:"varint,7,opt,name=match_time,json=matchTime,proto3" json:"match_time,omitempty"`
	Num            int32            `protobuf:"varint,8,opt,name=num,proto3" json:"num,omitempty"`
	GameMode       int32            `protobuf:"varint,9,opt,name=game_mode,json=gameMode,proto3" json:"game_mode,omitempty"`
	ModeVersion    int32            `protobuf:"varint,10,opt,name=mode_version,json=modeVersion,proto3" json:"mode_version,omitempty"`
	MaxPlayerCount int32            `protobuf:"varint,11,opt,name=max_player_count,json=maxPlayerCount,proto3" json:"max_player_count,omitempty"`
	TeamSkinIdList []int32          `protobuf:"varint,12,rep,packed,name=team_skin_id_list,json=teamSkinIdList,proto3" json:"team_skin_id_list,omitempty"`
	UserAttr       []*UserAttribute `protobuf:"bytes,13,rep,name=user_attr,json=userAttr,proto3" json:"user_attr,omitempty"`
	Seed           int32            `protobuf:"varint,14,opt,name=seed,proto3" json:"seed,omitempty"`
	RelaySign      []byte           `protobuf:"bytes,15,opt,name=relay_sign,json=relaySign,proto3" json:"relay_sign,omitempty"`
	UdpHost        string           `protobuf:"bytes,16,opt,name=udp_host,json=udpHost,proto3" json:"udp_host,omitempty"`
	UdpPort        int32            `protobuf:"varint,17,opt,name=udp_port,json=udpPort,proto3" json:"udp_port,omitempty"`
	ConfigVersion  int32            `protobuf:"varint,18,opt,name=config_version,json=configVersion,proto3" json:"config_version,omitempty"`
	WsAddr         string           `protobuf:"bytes,19,opt,name=ws_addr,json=wsAddr,proto3" json:"ws_addr,omitempty"`
}

func (x *MatchInfo) Reset() {
	*x = MatchInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_snakemini_export_proto_msgTypes[36]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MatchInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MatchInfo) ProtoMessage() {}

func (x *MatchInfo) ProtoReflect() protoreflect.Message {
	mi := &file_snakemini_export_proto_msgTypes[36]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MatchInfo.ProtoReflect.Descriptor instead.
func (*MatchInfo) Descriptor() ([]byte, []int) {
	return file_snakemini_export_proto_rawDescGZIP(), []int{36}
}

func (x *MatchInfo) GetRid() int32 {
	if x != nil {
		return x.Rid
	}
	return 0
}

func (x *MatchInfo) GetAccessInfo() string {
	if x != nil {
		return x.AccessInfo
	}
	return ""
}

func (x *MatchInfo) GetUidList() []int64 {
	if x != nil {
		return x.UidList
	}
	return nil
}

func (x *MatchInfo) GetTeamId() int32 {
	if x != nil {
		return x.TeamId
	}
	return 0
}

func (x *MatchInfo) GetTeamIdList() []int32 {
	if x != nil {
		return x.TeamIdList
	}
	return nil
}

func (x *MatchInfo) GetTimeLimit() int32 {
	if x != nil {
		return x.TimeLimit
	}
	return 0
}

func (x *MatchInfo) GetMatchTime() int64 {
	if x != nil {
		return x.MatchTime
	}
	return 0
}

func (x *MatchInfo) GetNum() int32 {
	if x != nil {
		return x.Num
	}
	return 0
}

func (x *MatchInfo) GetGameMode() int32 {
	if x != nil {
		return x.GameMode
	}
	return 0
}

func (x *MatchInfo) GetModeVersion() int32 {
	if x != nil {
		return x.ModeVersion
	}
	return 0
}

func (x *MatchInfo) GetMaxPlayerCount() int32 {
	if x != nil {
		return x.MaxPlayerCount
	}
	return 0
}

func (x *MatchInfo) GetTeamSkinIdList() []int32 {
	if x != nil {
		return x.TeamSkinIdList
	}
	return nil
}

func (x *MatchInfo) GetUserAttr() []*UserAttribute {
	if x != nil {
		return x.UserAttr
	}
	return nil
}

func (x *MatchInfo) GetSeed() int32 {
	if x != nil {
		return x.Seed
	}
	return 0
}

func (x *MatchInfo) GetRelaySign() []byte {
	if x != nil {
		return x.RelaySign
	}
	return nil
}

func (x *MatchInfo) GetUdpHost() string {
	if x != nil {
		return x.UdpHost
	}
	return ""
}

func (x *MatchInfo) GetUdpPort() int32 {
	if x != nil {
		return x.UdpPort
	}
	return 0
}

func (x *MatchInfo) GetConfigVersion() int32 {
	if x != nil {
		return x.ConfigVersion
	}
	return 0
}

func (x *MatchInfo) GetWsAddr() string {
	if x != nil {
		return x.WsAddr
	}
	return ""
}

type UserAttribute struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Uid       int64 `protobuf:"varint,1,opt,name=uid,proto3" json:"uid,omitempty"`
	TeamId    int32 `protobuf:"varint,2,opt,name=team_id,json=teamId,proto3" json:"team_id,omitempty"`
	SkinId    int32 `protobuf:"varint,3,opt,name=skin_id,json=skinId,proto3" json:"skin_id,omitempty"`
	Num       int32 `protobuf:"varint,4,opt,name=num,proto3" json:"num,omitempty"`
	AiLevel   int32 `protobuf:"varint,5,opt,name=ai_level,json=aiLevel,proto3" json:"ai_level,omitempty"`
	HasMagnet int32 `protobuf:"varint,6,opt,name=has_magnet,json=hasMagnet,proto3" json:"has_magnet,omitempty"`
	KillId    int32 `protobuf:"varint,7,opt,name=kill_id,json=killId,proto3" json:"kill_id,omitempty"`
}

func (x *UserAttribute) Reset() {
	*x = UserAttribute{}
	if protoimpl.UnsafeEnabled {
		mi := &file_snakemini_export_proto_msgTypes[37]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserAttribute) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserAttribute) ProtoMessage() {}

func (x *UserAttribute) ProtoReflect() protoreflect.Message {
	mi := &file_snakemini_export_proto_msgTypes[37]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserAttribute.ProtoReflect.Descriptor instead.
func (*UserAttribute) Descriptor() ([]byte, []int) {
	return file_snakemini_export_proto_rawDescGZIP(), []int{37}
}

func (x *UserAttribute) GetUid() int64 {
	if x != nil {
		return x.Uid
	}
	return 0
}

func (x *UserAttribute) GetTeamId() int32 {
	if x != nil {
		return x.TeamId
	}
	return 0
}

func (x *UserAttribute) GetSkinId() int32 {
	if x != nil {
		return x.SkinId
	}
	return 0
}

func (x *UserAttribute) GetNum() int32 {
	if x != nil {
		return x.Num
	}
	return 0
}

func (x *UserAttribute) GetAiLevel() int32 {
	if x != nil {
		return x.AiLevel
	}
	return 0
}

func (x *UserAttribute) GetHasMagnet() int32 {
	if x != nil {
		return x.HasMagnet
	}
	return 0
}

func (x *UserAttribute) GetKillId() int32 {
	if x != nil {
		return x.KillId
	}
	return 0
}

// 退出队伍
type ExitRoomRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Uid      int64 `protobuf:"varint,1,opt,name=uid,proto3" json:"uid,omitempty"`
	ExitType int32 `protobuf:"varint,2,opt,name=exit_type,json=exitType,proto3" json:"exit_type,omitempty"`
}

func (x *ExitRoomRequest) Reset() {
	*x = ExitRoomRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_snakemini_export_proto_msgTypes[38]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ExitRoomRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExitRoomRequest) ProtoMessage() {}

func (x *ExitRoomRequest) ProtoReflect() protoreflect.Message {
	mi := &file_snakemini_export_proto_msgTypes[38]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExitRoomRequest.ProtoReflect.Descriptor instead.
func (*ExitRoomRequest) Descriptor() ([]byte, []int) {
	return file_snakemini_export_proto_rawDescGZIP(), []int{38}
}

func (x *ExitRoomRequest) GetUid() int64 {
	if x != nil {
		return x.Uid
	}
	return 0
}

func (x *ExitRoomRequest) GetExitType() int32 {
	if x != nil {
		return x.ExitType
	}
	return 0
}

type ExitRoomResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *ExitRoomResponse) Reset() {
	*x = ExitRoomResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_snakemini_export_proto_msgTypes[39]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ExitRoomResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExitRoomResponse) ProtoMessage() {}

func (x *ExitRoomResponse) ProtoReflect() protoreflect.Message {
	mi := &file_snakemini_export_proto_msgTypes[39]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExitRoomResponse.ProtoReflect.Descriptor instead.
func (*ExitRoomResponse) Descriptor() ([]byte, []int) {
	return file_snakemini_export_proto_rawDescGZIP(), []int{39}
}

// 游戏结束
type UploadScoreRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Rid       int32        `protobuf:"varint,1,opt,name=rid,proto3" json:"rid,omitempty"`
	Uid       int64        `protobuf:"varint,2,opt,name=uid,proto3" json:"uid,omitempty"`
	Num       int32        `protobuf:"varint,3,opt,name=num,proto3" json:"num,omitempty"`
	ScoreList []*UserScore `protobuf:"bytes,4,rep,name=score_list,json=scoreList,proto3" json:"score_list,omitempty"`
}

func (x *UploadScoreRequest) Reset() {
	*x = UploadScoreRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_snakemini_export_proto_msgTypes[40]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UploadScoreRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UploadScoreRequest) ProtoMessage() {}

func (x *UploadScoreRequest) ProtoReflect() protoreflect.Message {
	mi := &file_snakemini_export_proto_msgTypes[40]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UploadScoreRequest.ProtoReflect.Descriptor instead.
func (*UploadScoreRequest) Descriptor() ([]byte, []int) {
	return file_snakemini_export_proto_rawDescGZIP(), []int{40}
}

func (x *UploadScoreRequest) GetRid() int32 {
	if x != nil {
		return x.Rid
	}
	return 0
}

func (x *UploadScoreRequest) GetUid() int64 {
	if x != nil {
		return x.Uid
	}
	return 0
}

func (x *UploadScoreRequest) GetNum() int32 {
	if x != nil {
		return x.Num
	}
	return 0
}

func (x *UploadScoreRequest) GetScoreList() []*UserScore {
	if x != nil {
		return x.ScoreList
	}
	return nil
}

type UserScore struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Uid     int64 `protobuf:"varint,1,opt,name=uid,proto3" json:"uid,omitempty"`
	Score   int32 `protobuf:"varint,2,opt,name=score,proto3" json:"score,omitempty"`
	Kill    int32 `protobuf:"varint,3,opt,name=kill,proto3" json:"kill,omitempty"`
	BeKill  int32 `protobuf:"varint,4,opt,name=be_kill,json=beKill,proto3" json:"be_kill,omitempty"`
	Relive  int32 `protobuf:"varint,5,opt,name=relive,proto3" json:"relive,omitempty"`
	HitWall int32 `protobuf:"varint,6,opt,name=hit_wall,json=hitWall,proto3" json:"hit_wall,omitempty"`
	EatStar int32 `protobuf:"varint,7,opt,name=eat_star,json=eatStar,proto3" json:"eat_star,omitempty"`
}

func (x *UserScore) Reset() {
	*x = UserScore{}
	if protoimpl.UnsafeEnabled {
		mi := &file_snakemini_export_proto_msgTypes[41]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserScore) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserScore) ProtoMessage() {}

func (x *UserScore) ProtoReflect() protoreflect.Message {
	mi := &file_snakemini_export_proto_msgTypes[41]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserScore.ProtoReflect.Descriptor instead.
func (*UserScore) Descriptor() ([]byte, []int) {
	return file_snakemini_export_proto_rawDescGZIP(), []int{41}
}

func (x *UserScore) GetUid() int64 {
	if x != nil {
		return x.Uid
	}
	return 0
}

func (x *UserScore) GetScore() int32 {
	if x != nil {
		return x.Score
	}
	return 0
}

func (x *UserScore) GetKill() int32 {
	if x != nil {
		return x.Kill
	}
	return 0
}

func (x *UserScore) GetBeKill() int32 {
	if x != nil {
		return x.BeKill
	}
	return 0
}

func (x *UserScore) GetRelive() int32 {
	if x != nil {
		return x.Relive
	}
	return 0
}

func (x *UserScore) GetHitWall() int32 {
	if x != nil {
		return x.HitWall
	}
	return 0
}

func (x *UserScore) GetEatStar() int32 {
	if x != nil {
		return x.EatStar
	}
	return 0
}

type GameEndResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *GameEndResponse) Reset() {
	*x = GameEndResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_snakemini_export_proto_msgTypes[42]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GameEndResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GameEndResponse) ProtoMessage() {}

func (x *GameEndResponse) ProtoReflect() protoreflect.Message {
	mi := &file_snakemini_export_proto_msgTypes[42]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GameEndResponse.ProtoReflect.Descriptor instead.
func (*GameEndResponse) Descriptor() ([]byte, []int) {
	return file_snakemini_export_proto_rawDescGZIP(), []int{42}
}

type ReportRoomScore struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Rid       int32        `protobuf:"varint,1,opt,name=rid,proto3" json:"rid,omitempty"`
	StartTime int64        `protobuf:"varint,2,opt,name=start_time,json=startTime,proto3" json:"start_time,omitempty"`
	EndTime   int64        `protobuf:"varint,3,opt,name=end_time,json=endTime,proto3" json:"end_time,omitempty"`
	ScoreList []*UserScore `protobuf:"bytes,4,rep,name=score_list,json=scoreList,proto3" json:"score_list,omitempty"`
	Uids      []int64      `protobuf:"varint,5,rep,packed,name=uids,proto3" json:"uids,omitempty"`
}

func (x *ReportRoomScore) Reset() {
	*x = ReportRoomScore{}
	if protoimpl.UnsafeEnabled {
		mi := &file_snakemini_export_proto_msgTypes[43]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReportRoomScore) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReportRoomScore) ProtoMessage() {}

func (x *ReportRoomScore) ProtoReflect() protoreflect.Message {
	mi := &file_snakemini_export_proto_msgTypes[43]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReportRoomScore.ProtoReflect.Descriptor instead.
func (*ReportRoomScore) Descriptor() ([]byte, []int) {
	return file_snakemini_export_proto_rawDescGZIP(), []int{43}
}

func (x *ReportRoomScore) GetRid() int32 {
	if x != nil {
		return x.Rid
	}
	return 0
}

func (x *ReportRoomScore) GetStartTime() int64 {
	if x != nil {
		return x.StartTime
	}
	return 0
}

func (x *ReportRoomScore) GetEndTime() int64 {
	if x != nil {
		return x.EndTime
	}
	return 0
}

func (x *ReportRoomScore) GetScoreList() []*UserScore {
	if x != nil {
		return x.ScoreList
	}
	return nil
}

func (x *ReportRoomScore) GetUids() []int64 {
	if x != nil {
		return x.Uids
	}
	return nil
}

// 获取游戏配置
type GetGameConfigRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	GameMode    int32 `protobuf:"varint,1,opt,name=game_mode,json=gameMode,proto3" json:"game_mode,omitempty"`
	ModeVersion int32 `protobuf:"varint,2,opt,name=mode_version,json=modeVersion,proto3" json:"mode_version,omitempty"`
}

func (x *GetGameConfigRequest) Reset() {
	*x = GetGameConfigRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_snakemini_export_proto_msgTypes[44]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetGameConfigRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetGameConfigRequest) ProtoMessage() {}

func (x *GetGameConfigRequest) ProtoReflect() protoreflect.Message {
	mi := &file_snakemini_export_proto_msgTypes[44]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetGameConfigRequest.ProtoReflect.Descriptor instead.
func (*GetGameConfigRequest) Descriptor() ([]byte, []int) {
	return file_snakemini_export_proto_rawDescGZIP(), []int{44}
}

func (x *GetGameConfigRequest) GetGameMode() int32 {
	if x != nil {
		return x.GameMode
	}
	return 0
}

func (x *GetGameConfigRequest) GetModeVersion() int32 {
	if x != nil {
		return x.ModeVersion
	}
	return 0
}

type RelayBindUserInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Uid            int64  `protobuf:"varint,1,opt,name=uid,proto3" json:"uid,omitempty"`
	Rid            int32  `protobuf:"varint,2,opt,name=rid,proto3" json:"rid,omitempty"`
	Seed           int32  `protobuf:"varint,3,opt,name=seed,proto3" json:"seed,omitempty"`
	MaxPlayerCount int32  `protobuf:"varint,4,opt,name=max_player_count,json=maxPlayerCount,proto3" json:"max_player_count,omitempty"`
	Num            int32  `protobuf:"varint,5,opt,name=num,proto3" json:"num,omitempty"`
	TimeLimit      int32  `protobuf:"varint,6,opt,name=time_limit,json=timeLimit,proto3" json:"time_limit,omitempty"`
	MatchTime      int64  `protobuf:"varint,7,opt,name=match_time,json=matchTime,proto3" json:"match_time,omitempty"`
	RelaySign      []byte `protobuf:"bytes,8,opt,name=relay_sign,json=relaySign,proto3" json:"relay_sign,omitempty"`
	GameMode       int32  `protobuf:"varint,9,opt,name=game_mode,json=gameMode,proto3" json:"game_mode,omitempty"`
	ModeVersion    int32  `protobuf:"varint,10,opt,name=mode_version,json=modeVersion,proto3" json:"mode_version,omitempty"`
	Platform       int32  `protobuf:"varint,11,opt,name=platform,proto3" json:"platform,omitempty"`
	UserType       int32  `protobuf:"varint,12,opt,name=user_type,json=userType,proto3" json:"user_type,omitempty"`
}

func (x *RelayBindUserInfo) Reset() {
	*x = RelayBindUserInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_snakemini_export_proto_msgTypes[45]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RelayBindUserInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RelayBindUserInfo) ProtoMessage() {}

func (x *RelayBindUserInfo) ProtoReflect() protoreflect.Message {
	mi := &file_snakemini_export_proto_msgTypes[45]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RelayBindUserInfo.ProtoReflect.Descriptor instead.
func (*RelayBindUserInfo) Descriptor() ([]byte, []int) {
	return file_snakemini_export_proto_rawDescGZIP(), []int{45}
}

func (x *RelayBindUserInfo) GetUid() int64 {
	if x != nil {
		return x.Uid
	}
	return 0
}

func (x *RelayBindUserInfo) GetRid() int32 {
	if x != nil {
		return x.Rid
	}
	return 0
}

func (x *RelayBindUserInfo) GetSeed() int32 {
	if x != nil {
		return x.Seed
	}
	return 0
}

func (x *RelayBindUserInfo) GetMaxPlayerCount() int32 {
	if x != nil {
		return x.MaxPlayerCount
	}
	return 0
}

func (x *RelayBindUserInfo) GetNum() int32 {
	if x != nil {
		return x.Num
	}
	return 0
}

func (x *RelayBindUserInfo) GetTimeLimit() int32 {
	if x != nil {
		return x.TimeLimit
	}
	return 0
}

func (x *RelayBindUserInfo) GetMatchTime() int64 {
	if x != nil {
		return x.MatchTime
	}
	return 0
}

func (x *RelayBindUserInfo) GetRelaySign() []byte {
	if x != nil {
		return x.RelaySign
	}
	return nil
}

func (x *RelayBindUserInfo) GetGameMode() int32 {
	if x != nil {
		return x.GameMode
	}
	return 0
}

func (x *RelayBindUserInfo) GetModeVersion() int32 {
	if x != nil {
		return x.ModeVersion
	}
	return 0
}

func (x *RelayBindUserInfo) GetPlatform() int32 {
	if x != nil {
		return x.Platform
	}
	return 0
}

func (x *RelayBindUserInfo) GetUserType() int32 {
	if x != nil {
		return x.UserType
	}
	return 0
}

type RelayBindRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Uid            int64  `protobuf:"varint,1,opt,name=uid,proto3" json:"uid,omitempty"`
	Rid            int32  `protobuf:"varint,2,opt,name=rid,proto3" json:"rid,omitempty"`
	Seed           int32  `protobuf:"varint,3,opt,name=seed,proto3" json:"seed,omitempty"`
	MaxPlayerCount int32  `protobuf:"varint,4,opt,name=max_player_count,json=maxPlayerCount,proto3" json:"max_player_count,omitempty"`
	Num            int32  `protobuf:"varint,5,opt,name=num,proto3" json:"num,omitempty"`
	TimeLimit      int32  `protobuf:"varint,6,opt,name=time_limit,json=timeLimit,proto3" json:"time_limit,omitempty"`
	MatchTime      int64  `protobuf:"varint,7,opt,name=match_time,json=matchTime,proto3" json:"match_time,omitempty"`
	RelaySign      []byte `protobuf:"bytes,8,opt,name=relay_sign,json=relaySign,proto3" json:"relay_sign,omitempty"`
	GameMode       int32  `protobuf:"varint,9,opt,name=game_mode,json=gameMode,proto3" json:"game_mode,omitempty"`
	ModeVersion    int32  `protobuf:"varint,10,opt,name=mode_version,json=modeVersion,proto3" json:"mode_version,omitempty"`
	Platform       int32  `protobuf:"varint,11,opt,name=platform,proto3" json:"platform,omitempty"`
	UserType       int32  `protobuf:"varint,12,opt,name=user_type,json=userType,proto3" json:"user_type,omitempty"`
}

func (x *RelayBindRequest) Reset() {
	*x = RelayBindRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_snakemini_export_proto_msgTypes[46]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RelayBindRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RelayBindRequest) ProtoMessage() {}

func (x *RelayBindRequest) ProtoReflect() protoreflect.Message {
	mi := &file_snakemini_export_proto_msgTypes[46]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RelayBindRequest.ProtoReflect.Descriptor instead.
func (*RelayBindRequest) Descriptor() ([]byte, []int) {
	return file_snakemini_export_proto_rawDescGZIP(), []int{46}
}

func (x *RelayBindRequest) GetUid() int64 {
	if x != nil {
		return x.Uid
	}
	return 0
}

func (x *RelayBindRequest) GetRid() int32 {
	if x != nil {
		return x.Rid
	}
	return 0
}

func (x *RelayBindRequest) GetSeed() int32 {
	if x != nil {
		return x.Seed
	}
	return 0
}

func (x *RelayBindRequest) GetMaxPlayerCount() int32 {
	if x != nil {
		return x.MaxPlayerCount
	}
	return 0
}

func (x *RelayBindRequest) GetNum() int32 {
	if x != nil {
		return x.Num
	}
	return 0
}

func (x *RelayBindRequest) GetTimeLimit() int32 {
	if x != nil {
		return x.TimeLimit
	}
	return 0
}

func (x *RelayBindRequest) GetMatchTime() int64 {
	if x != nil {
		return x.MatchTime
	}
	return 0
}

func (x *RelayBindRequest) GetRelaySign() []byte {
	if x != nil {
		return x.RelaySign
	}
	return nil
}

func (x *RelayBindRequest) GetGameMode() int32 {
	if x != nil {
		return x.GameMode
	}
	return 0
}

func (x *RelayBindRequest) GetModeVersion() int32 {
	if x != nil {
		return x.ModeVersion
	}
	return 0
}

func (x *RelayBindRequest) GetPlatform() int32 {
	if x != nil {
		return x.Platform
	}
	return 0
}

func (x *RelayBindRequest) GetUserType() int32 {
	if x != nil {
		return x.UserType
	}
	return 0
}

type RelayStartInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	StartTime   int64 `protobuf:"varint,1,opt,name=start_time,json=startTime,proto3" json:"start_time,omitempty"`
	RenderDelay int32 `protobuf:"varint,2,opt,name=render_delay,json=renderDelay,proto3" json:"render_delay,omitempty"`
	TurnTime    int32 `protobuf:"varint,3,opt,name=turn_time,json=turnTime,proto3" json:"turn_time,omitempty"`
}

func (x *RelayStartInfo) Reset() {
	*x = RelayStartInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_snakemini_export_proto_msgTypes[47]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RelayStartInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RelayStartInfo) ProtoMessage() {}

func (x *RelayStartInfo) ProtoReflect() protoreflect.Message {
	mi := &file_snakemini_export_proto_msgTypes[47]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RelayStartInfo.ProtoReflect.Descriptor instead.
func (*RelayStartInfo) Descriptor() ([]byte, []int) {
	return file_snakemini_export_proto_rawDescGZIP(), []int{47}
}

func (x *RelayStartInfo) GetStartTime() int64 {
	if x != nil {
		return x.StartTime
	}
	return 0
}

func (x *RelayStartInfo) GetRenderDelay() int32 {
	if x != nil {
		return x.RenderDelay
	}
	return 0
}

func (x *RelayStartInfo) GetTurnTime() int32 {
	if x != nil {
		return x.TurnTime
	}
	return 0
}

type RelayBindResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	StartInfo *RelayStartInfo `protobuf:"bytes,1,opt,name=start_info,json=startInfo,proto3" json:"start_info,omitempty"`
	State     int32           `protobuf:"varint,2,opt,name=state,proto3" json:"state,omitempty"`
	PlayerUid int64           `protobuf:"varint,3,opt,name=player_uid,json=playerUid,proto3" json:"player_uid,omitempty"`
	PlayerSid int32           `protobuf:"varint,4,opt,name=player_sid,json=playerSid,proto3" json:"player_sid,omitempty"`
}

func (x *RelayBindResponse) Reset() {
	*x = RelayBindResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_snakemini_export_proto_msgTypes[48]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RelayBindResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RelayBindResponse) ProtoMessage() {}

func (x *RelayBindResponse) ProtoReflect() protoreflect.Message {
	mi := &file_snakemini_export_proto_msgTypes[48]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RelayBindResponse.ProtoReflect.Descriptor instead.
func (*RelayBindResponse) Descriptor() ([]byte, []int) {
	return file_snakemini_export_proto_rawDescGZIP(), []int{48}
}

func (x *RelayBindResponse) GetStartInfo() *RelayStartInfo {
	if x != nil {
		return x.StartInfo
	}
	return nil
}

func (x *RelayBindResponse) GetState() int32 {
	if x != nil {
		return x.State
	}
	return 0
}

func (x *RelayBindResponse) GetPlayerUid() int64 {
	if x != nil {
		return x.PlayerUid
	}
	return 0
}

func (x *RelayBindResponse) GetPlayerSid() int32 {
	if x != nil {
		return x.PlayerSid
	}
	return 0
}

type RelayPushStart struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	StartInfo *RelayStartInfo `protobuf:"bytes,1,opt,name=start_info,json=startInfo,proto3" json:"start_info,omitempty"`
}

func (x *RelayPushStart) Reset() {
	*x = RelayPushStart{}
	if protoimpl.UnsafeEnabled {
		mi := &file_snakemini_export_proto_msgTypes[49]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RelayPushStart) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RelayPushStart) ProtoMessage() {}

func (x *RelayPushStart) ProtoReflect() protoreflect.Message {
	mi := &file_snakemini_export_proto_msgTypes[49]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RelayPushStart.ProtoReflect.Descriptor instead.
func (*RelayPushStart) Descriptor() ([]byte, []int) {
	return file_snakemini_export_proto_rawDescGZIP(), []int{49}
}

func (x *RelayPushStart) GetStartInfo() *RelayStartInfo {
	if x != nil {
		return x.StartInfo
	}
	return nil
}

type RelayCommandRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Uid           int64          `protobuf:"varint,1,opt,name=uid,proto3" json:"uid,omitempty"`
	Command       int32          `protobuf:"varint,2,opt,name=command,proto3" json:"command,omitempty"`
	RevivalLength int32          `protobuf:"varint,3,opt,name=revival_length,json=revivalLength,proto3" json:"revival_length,omitempty"`
	UserAttr      *UserAttribute `protobuf:"bytes,4,opt,name=user_attr,json=userAttr,proto3" json:"user_attr,omitempty"`
	Param         int32          `protobuf:"varint,5,opt,name=param,proto3" json:"param,omitempty"`
}

func (x *RelayCommandRequest) Reset() {
	*x = RelayCommandRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_snakemini_export_proto_msgTypes[50]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RelayCommandRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RelayCommandRequest) ProtoMessage() {}

func (x *RelayCommandRequest) ProtoReflect() protoreflect.Message {
	mi := &file_snakemini_export_proto_msgTypes[50]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RelayCommandRequest.ProtoReflect.Descriptor instead.
func (*RelayCommandRequest) Descriptor() ([]byte, []int) {
	return file_snakemini_export_proto_rawDescGZIP(), []int{50}
}

func (x *RelayCommandRequest) GetUid() int64 {
	if x != nil {
		return x.Uid
	}
	return 0
}

func (x *RelayCommandRequest) GetCommand() int32 {
	if x != nil {
		return x.Command
	}
	return 0
}

func (x *RelayCommandRequest) GetRevivalLength() int32 {
	if x != nil {
		return x.RevivalLength
	}
	return 0
}

func (x *RelayCommandRequest) GetUserAttr() *UserAttribute {
	if x != nil {
		return x.UserAttr
	}
	return nil
}

func (x *RelayCommandRequest) GetParam() int32 {
	if x != nil {
		return x.Param
	}
	return 0
}

type RelayGetHistoryFrameRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	StartActionNo  int64 `protobuf:"varint,1,opt,name=start_action_no,json=startActionNo,proto3" json:"start_action_no,omitempty"`
	SnapshotNeeded bool  `protobuf:"varint,2,opt,name=snapshot_needed,json=snapshotNeeded,proto3" json:"snapshot_needed,omitempty"`
	Uid            int64 `protobuf:"varint,3,opt,name=uid,proto3" json:"uid,omitempty"`
}

func (x *RelayGetHistoryFrameRequest) Reset() {
	*x = RelayGetHistoryFrameRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_snakemini_export_proto_msgTypes[51]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RelayGetHistoryFrameRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RelayGetHistoryFrameRequest) ProtoMessage() {}

func (x *RelayGetHistoryFrameRequest) ProtoReflect() protoreflect.Message {
	mi := &file_snakemini_export_proto_msgTypes[51]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RelayGetHistoryFrameRequest.ProtoReflect.Descriptor instead.
func (*RelayGetHistoryFrameRequest) Descriptor() ([]byte, []int) {
	return file_snakemini_export_proto_rawDescGZIP(), []int{51}
}

func (x *RelayGetHistoryFrameRequest) GetStartActionNo() int64 {
	if x != nil {
		return x.StartActionNo
	}
	return 0
}

func (x *RelayGetHistoryFrameRequest) GetSnapshotNeeded() bool {
	if x != nil {
		return x.SnapshotNeeded
	}
	return false
}

func (x *RelayGetHistoryFrameRequest) GetUid() int64 {
	if x != nil {
		return x.Uid
	}
	return 0
}

type FrameCommand struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ActionNo        int32        `protobuf:"varint,1,opt,name=actionNo,proto3" json:"actionNo,omitempty"`
	Actions         []int32      `protobuf:"varint,2,rep,packed,name=actions,proto3" json:"actions,omitempty"`
	ReliveUsers     []int32      `protobuf:"varint,3,rep,packed,name=reliveUsers,proto3" json:"reliveUsers,omitempty"`
	ShieldUsers     []int32      `protobuf:"varint,4,rep,packed,name=shieldUsers,proto3" json:"shieldUsers,omitempty"`
	ExitUsers       []int32      `protobuf:"varint,5,rep,packed,name=exitUsers,proto3" json:"exitUsers,omitempty"`
	FaceUsers       []*ParamUser `protobuf:"bytes,6,rep,name=faceUsers,proto3" json:"faceUsers,omitempty"`
	QuickVoiceUsers []*ParamUser `protobuf:"bytes,7,rep,name=quickVoiceUsers,proto3" json:"quickVoiceUsers,omitempty"`
}

func (x *FrameCommand) Reset() {
	*x = FrameCommand{}
	if protoimpl.UnsafeEnabled {
		mi := &file_snakemini_export_proto_msgTypes[52]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FrameCommand) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FrameCommand) ProtoMessage() {}

func (x *FrameCommand) ProtoReflect() protoreflect.Message {
	mi := &file_snakemini_export_proto_msgTypes[52]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FrameCommand.ProtoReflect.Descriptor instead.
func (*FrameCommand) Descriptor() ([]byte, []int) {
	return file_snakemini_export_proto_rawDescGZIP(), []int{52}
}

func (x *FrameCommand) GetActionNo() int32 {
	if x != nil {
		return x.ActionNo
	}
	return 0
}

func (x *FrameCommand) GetActions() []int32 {
	if x != nil {
		return x.Actions
	}
	return nil
}

func (x *FrameCommand) GetReliveUsers() []int32 {
	if x != nil {
		return x.ReliveUsers
	}
	return nil
}

func (x *FrameCommand) GetShieldUsers() []int32 {
	if x != nil {
		return x.ShieldUsers
	}
	return nil
}

func (x *FrameCommand) GetExitUsers() []int32 {
	if x != nil {
		return x.ExitUsers
	}
	return nil
}

func (x *FrameCommand) GetFaceUsers() []*ParamUser {
	if x != nil {
		return x.FaceUsers
	}
	return nil
}

func (x *FrameCommand) GetQuickVoiceUsers() []*ParamUser {
	if x != nil {
		return x.QuickVoiceUsers
	}
	return nil
}

type ParamUser struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Num int32 `protobuf:"varint,1,opt,name=num,proto3" json:"num,omitempty"` // 玩家num
	P   int32 `protobuf:"varint,2,opt,name=p,proto3" json:"p,omitempty"`     // 参数
}

func (x *ParamUser) Reset() {
	*x = ParamUser{}
	if protoimpl.UnsafeEnabled {
		mi := &file_snakemini_export_proto_msgTypes[53]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ParamUser) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ParamUser) ProtoMessage() {}

func (x *ParamUser) ProtoReflect() protoreflect.Message {
	mi := &file_snakemini_export_proto_msgTypes[53]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ParamUser.ProtoReflect.Descriptor instead.
func (*ParamUser) Descriptor() ([]byte, []int) {
	return file_snakemini_export_proto_rawDescGZIP(), []int{53}
}

func (x *ParamUser) GetNum() int32 {
	if x != nil {
		return x.Num
	}
	return 0
}

func (x *ParamUser) GetP() int32 {
	if x != nil {
		return x.P
	}
	return 0
}

type RelayGetHistoryFrameResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// int64 action_no = 1;
	// bytes snapshot = 2;
	FrameCommandList []*FrameCommand `protobuf:"bytes,3,rep,name=frame_command_list,json=frameCommandList,proto3" json:"frame_command_list,omitempty"`
}

func (x *RelayGetHistoryFrameResponse) Reset() {
	*x = RelayGetHistoryFrameResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_snakemini_export_proto_msgTypes[54]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RelayGetHistoryFrameResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RelayGetHistoryFrameResponse) ProtoMessage() {}

func (x *RelayGetHistoryFrameResponse) ProtoReflect() protoreflect.Message {
	mi := &file_snakemini_export_proto_msgTypes[54]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RelayGetHistoryFrameResponse.ProtoReflect.Descriptor instead.
func (*RelayGetHistoryFrameResponse) Descriptor() ([]byte, []int) {
	return file_snakemini_export_proto_rawDescGZIP(), []int{54}
}

func (x *RelayGetHistoryFrameResponse) GetFrameCommandList() []*FrameCommand {
	if x != nil {
		return x.FrameCommandList
	}
	return nil
}

type RelaySignalRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Uid    int64 `protobuf:"varint,1,opt,name=uid,proto3" json:"uid,omitempty"`
	Signal int32 `protobuf:"varint,2,opt,name=signal,proto3" json:"signal,omitempty"`
}

func (x *RelaySignalRequest) Reset() {
	*x = RelaySignalRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_snakemini_export_proto_msgTypes[55]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RelaySignalRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RelaySignalRequest) ProtoMessage() {}

func (x *RelaySignalRequest) ProtoReflect() protoreflect.Message {
	mi := &file_snakemini_export_proto_msgTypes[55]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RelaySignalRequest.ProtoReflect.Descriptor instead.
func (*RelaySignalRequest) Descriptor() ([]byte, []int) {
	return file_snakemini_export_proto_rawDescGZIP(), []int{55}
}

func (x *RelaySignalRequest) GetUid() int64 {
	if x != nil {
		return x.Uid
	}
	return 0
}

func (x *RelaySignalRequest) GetSignal() int32 {
	if x != nil {
		return x.Signal
	}
	return 0
}

type RelayPushSignal struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Num    int32 `protobuf:"varint,1,opt,name=num,proto3" json:"num,omitempty"`
	Signal int32 `protobuf:"varint,2,opt,name=signal,proto3" json:"signal,omitempty"`
}

func (x *RelayPushSignal) Reset() {
	*x = RelayPushSignal{}
	if protoimpl.UnsafeEnabled {
		mi := &file_snakemini_export_proto_msgTypes[56]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RelayPushSignal) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RelayPushSignal) ProtoMessage() {}

func (x *RelayPushSignal) ProtoReflect() protoreflect.Message {
	mi := &file_snakemini_export_proto_msgTypes[56]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RelayPushSignal.ProtoReflect.Descriptor instead.
func (*RelayPushSignal) Descriptor() ([]byte, []int) {
	return file_snakemini_export_proto_rawDescGZIP(), []int{56}
}

func (x *RelayPushSignal) GetNum() int32 {
	if x != nil {
		return x.Num
	}
	return 0
}

func (x *RelayPushSignal) GetSignal() int32 {
	if x != nil {
		return x.Signal
	}
	return 0
}

type RelayExitGameRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Uid      int64 `protobuf:"varint,1,opt,name=uid,proto3" json:"uid,omitempty"`
	ExitType int32 `protobuf:"varint,2,opt,name=exit_type,json=exitType,proto3" json:"exit_type,omitempty"`
}

func (x *RelayExitGameRequest) Reset() {
	*x = RelayExitGameRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_snakemini_export_proto_msgTypes[57]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RelayExitGameRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RelayExitGameRequest) ProtoMessage() {}

func (x *RelayExitGameRequest) ProtoReflect() protoreflect.Message {
	mi := &file_snakemini_export_proto_msgTypes[57]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RelayExitGameRequest.ProtoReflect.Descriptor instead.
func (*RelayExitGameRequest) Descriptor() ([]byte, []int) {
	return file_snakemini_export_proto_rawDescGZIP(), []int{57}
}

func (x *RelayExitGameRequest) GetUid() int64 {
	if x != nil {
		return x.Uid
	}
	return 0
}

func (x *RelayExitGameRequest) GetExitType() int32 {
	if x != nil {
		return x.ExitType
	}
	return 0
}

type RelaySnapShotRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ActionNo int64  `protobuf:"varint,1,opt,name=action_no,json=actionNo,proto3" json:"action_no,omitempty"`
	Snapshot []byte `protobuf:"bytes,2,opt,name=snapshot,proto3" json:"snapshot,omitempty"`
	Uid      int64  `protobuf:"varint,3,opt,name=uid,proto3" json:"uid,omitempty"`
}

func (x *RelaySnapShotRequest) Reset() {
	*x = RelaySnapShotRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_snakemini_export_proto_msgTypes[58]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RelaySnapShotRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RelaySnapShotRequest) ProtoMessage() {}

func (x *RelaySnapShotRequest) ProtoReflect() protoreflect.Message {
	mi := &file_snakemini_export_proto_msgTypes[58]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RelaySnapShotRequest.ProtoReflect.Descriptor instead.
func (*RelaySnapShotRequest) Descriptor() ([]byte, []int) {
	return file_snakemini_export_proto_rawDescGZIP(), []int{58}
}

func (x *RelaySnapShotRequest) GetActionNo() int64 {
	if x != nil {
		return x.ActionNo
	}
	return 0
}

func (x *RelaySnapShotRequest) GetSnapshot() []byte {
	if x != nil {
		return x.Snapshot
	}
	return nil
}

func (x *RelaySnapShotRequest) GetUid() int64 {
	if x != nil {
		return x.Uid
	}
	return 0
}

type RelayReportRoomStateRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ActionNo int64 `protobuf:"varint,1,opt,name=action_no,json=actionNo,proto3" json:"action_no,omitempty"`
	State    int32 `protobuf:"varint,2,opt,name=state,proto3" json:"state,omitempty"`
	Uid      int64 `protobuf:"varint,3,opt,name=uid,proto3" json:"uid,omitempty"`
}

func (x *RelayReportRoomStateRequest) Reset() {
	*x = RelayReportRoomStateRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_snakemini_export_proto_msgTypes[59]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RelayReportRoomStateRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RelayReportRoomStateRequest) ProtoMessage() {}

func (x *RelayReportRoomStateRequest) ProtoReflect() protoreflect.Message {
	mi := &file_snakemini_export_proto_msgTypes[59]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RelayReportRoomStateRequest.ProtoReflect.Descriptor instead.
func (*RelayReportRoomStateRequest) Descriptor() ([]byte, []int) {
	return file_snakemini_export_proto_rawDescGZIP(), []int{59}
}

func (x *RelayReportRoomStateRequest) GetActionNo() int64 {
	if x != nil {
		return x.ActionNo
	}
	return 0
}

func (x *RelayReportRoomStateRequest) GetState() int32 {
	if x != nil {
		return x.State
	}
	return 0
}

func (x *RelayReportRoomStateRequest) GetUid() int64 {
	if x != nil {
		return x.Uid
	}
	return 0
}

type RelayChecksumRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ActionNo    int64   `protobuf:"varint,1,opt,name=action_no,json=actionNo,proto3" json:"action_no,omitempty"`
	Checksum    float64 `protobuf:"fixed64,2,opt,name=checksum,proto3" json:"checksum,omitempty"`
	Uid         int64   `protobuf:"varint,3,opt,name=uid,proto3" json:"uid,omitempty"`
	RandomCount int32   `protobuf:"varint,4,opt,name=random_count,json=randomCount,proto3" json:"random_count,omitempty"`
}

func (x *RelayChecksumRequest) Reset() {
	*x = RelayChecksumRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_snakemini_export_proto_msgTypes[60]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RelayChecksumRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RelayChecksumRequest) ProtoMessage() {}

func (x *RelayChecksumRequest) ProtoReflect() protoreflect.Message {
	mi := &file_snakemini_export_proto_msgTypes[60]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RelayChecksumRequest.ProtoReflect.Descriptor instead.
func (*RelayChecksumRequest) Descriptor() ([]byte, []int) {
	return file_snakemini_export_proto_rawDescGZIP(), []int{60}
}

func (x *RelayChecksumRequest) GetActionNo() int64 {
	if x != nil {
		return x.ActionNo
	}
	return 0
}

func (x *RelayChecksumRequest) GetChecksum() float64 {
	if x != nil {
		return x.Checksum
	}
	return 0
}

func (x *RelayChecksumRequest) GetUid() int64 {
	if x != nil {
		return x.Uid
	}
	return 0
}

func (x *RelayChecksumRequest) GetRandomCount() int32 {
	if x != nil {
		return x.RandomCount
	}
	return 0
}

type RushChecksumAbnormal struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ActionNo int64 `protobuf:"varint,1,opt,name=action_no,json=actionNo,proto3" json:"action_no,omitempty"`
}

func (x *RushChecksumAbnormal) Reset() {
	*x = RushChecksumAbnormal{}
	if protoimpl.UnsafeEnabled {
		mi := &file_snakemini_export_proto_msgTypes[61]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RushChecksumAbnormal) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RushChecksumAbnormal) ProtoMessage() {}

func (x *RushChecksumAbnormal) ProtoReflect() protoreflect.Message {
	mi := &file_snakemini_export_proto_msgTypes[61]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RushChecksumAbnormal.ProtoReflect.Descriptor instead.
func (*RushChecksumAbnormal) Descriptor() ([]byte, []int) {
	return file_snakemini_export_proto_rawDescGZIP(), []int{61}
}

func (x *RushChecksumAbnormal) GetActionNo() int64 {
	if x != nil {
		return x.ActionNo
	}
	return 0
}

type RelayPushGameEnd struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Rid      int32 `protobuf:"varint,1,opt,name=rid,proto3" json:"rid,omitempty"`
	ActionNo int64 `protobuf:"varint,2,opt,name=action_no,json=actionNo,proto3" json:"action_no,omitempty"`
}

func (x *RelayPushGameEnd) Reset() {
	*x = RelayPushGameEnd{}
	if protoimpl.UnsafeEnabled {
		mi := &file_snakemini_export_proto_msgTypes[62]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RelayPushGameEnd) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RelayPushGameEnd) ProtoMessage() {}

func (x *RelayPushGameEnd) ProtoReflect() protoreflect.Message {
	mi := &file_snakemini_export_proto_msgTypes[62]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RelayPushGameEnd.ProtoReflect.Descriptor instead.
func (*RelayPushGameEnd) Descriptor() ([]byte, []int) {
	return file_snakemini_export_proto_rawDescGZIP(), []int{62}
}

func (x *RelayPushGameEnd) GetRid() int32 {
	if x != nil {
		return x.Rid
	}
	return 0
}

func (x *RelayPushGameEnd) GetActionNo() int64 {
	if x != nil {
		return x.ActionNo
	}
	return 0
}

type RelayUdpSyncTimeRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Uid        int64 `protobuf:"varint,1,opt,name=uid,proto3" json:"uid,omitempty"`
	TempSid    int32 `protobuf:"varint,2,opt,name=temp_sid,json=tempSid,proto3" json:"temp_sid,omitempty"`
	ClientTime int64 `protobuf:"varint,3,opt,name=client_time,json=clientTime,proto3" json:"client_time,omitempty"`
}

func (x *RelayUdpSyncTimeRequest) Reset() {
	*x = RelayUdpSyncTimeRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_snakemini_export_proto_msgTypes[63]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RelayUdpSyncTimeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RelayUdpSyncTimeRequest) ProtoMessage() {}

func (x *RelayUdpSyncTimeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_snakemini_export_proto_msgTypes[63]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RelayUdpSyncTimeRequest.ProtoReflect.Descriptor instead.
func (*RelayUdpSyncTimeRequest) Descriptor() ([]byte, []int) {
	return file_snakemini_export_proto_rawDescGZIP(), []int{63}
}

func (x *RelayUdpSyncTimeRequest) GetUid() int64 {
	if x != nil {
		return x.Uid
	}
	return 0
}

func (x *RelayUdpSyncTimeRequest) GetTempSid() int32 {
	if x != nil {
		return x.TempSid
	}
	return 0
}

func (x *RelayUdpSyncTimeRequest) GetClientTime() int64 {
	if x != nil {
		return x.ClientTime
	}
	return 0
}

type RelayUdpSyncTimeResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ServerTime int64 `protobuf:"varint,1,opt,name=server_time,json=serverTime,proto3" json:"server_time,omitempty"`
	ClientTime int64 `protobuf:"varint,2,opt,name=client_time,json=clientTime,proto3" json:"client_time,omitempty"`
}

func (x *RelayUdpSyncTimeResponse) Reset() {
	*x = RelayUdpSyncTimeResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_snakemini_export_proto_msgTypes[64]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RelayUdpSyncTimeResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RelayUdpSyncTimeResponse) ProtoMessage() {}

func (x *RelayUdpSyncTimeResponse) ProtoReflect() protoreflect.Message {
	mi := &file_snakemini_export_proto_msgTypes[64]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RelayUdpSyncTimeResponse.ProtoReflect.Descriptor instead.
func (*RelayUdpSyncTimeResponse) Descriptor() ([]byte, []int) {
	return file_snakemini_export_proto_rawDescGZIP(), []int{64}
}

func (x *RelayUdpSyncTimeResponse) GetServerTime() int64 {
	if x != nil {
		return x.ServerTime
	}
	return 0
}

func (x *RelayUdpSyncTimeResponse) GetClientTime() int64 {
	if x != nil {
		return x.ClientTime
	}
	return 0
}

type RelayUdpActionRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PlayerUid   int64 `protobuf:"varint,1,opt,name=player_uid,json=playerUid,proto3" json:"player_uid,omitempty"`
	PlayerSid   int32 `protobuf:"varint,2,opt,name=player_sid,json=playerSid,proto3" json:"player_sid,omitempty"`
	ActionNo    int32 `protobuf:"varint,3,opt,name=action_no,json=actionNo,proto3" json:"action_no,omitempty"`
	Movement    int32 `protobuf:"varint,4,opt,name=movement,proto3" json:"movement,omitempty"`
	AckActionNo int32 `protobuf:"varint,5,opt,name=ack_action_no,json=ackActionNo,proto3" json:"ack_action_no,omitempty"`
}

func (x *RelayUdpActionRequest) Reset() {
	*x = RelayUdpActionRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_snakemini_export_proto_msgTypes[65]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RelayUdpActionRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RelayUdpActionRequest) ProtoMessage() {}

func (x *RelayUdpActionRequest) ProtoReflect() protoreflect.Message {
	mi := &file_snakemini_export_proto_msgTypes[65]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RelayUdpActionRequest.ProtoReflect.Descriptor instead.
func (*RelayUdpActionRequest) Descriptor() ([]byte, []int) {
	return file_snakemini_export_proto_rawDescGZIP(), []int{65}
}

func (x *RelayUdpActionRequest) GetPlayerUid() int64 {
	if x != nil {
		return x.PlayerUid
	}
	return 0
}

func (x *RelayUdpActionRequest) GetPlayerSid() int32 {
	if x != nil {
		return x.PlayerSid
	}
	return 0
}

func (x *RelayUdpActionRequest) GetActionNo() int32 {
	if x != nil {
		return x.ActionNo
	}
	return 0
}

func (x *RelayUdpActionRequest) GetMovement() int32 {
	if x != nil {
		return x.Movement
	}
	return 0
}

func (x *RelayUdpActionRequest) GetAckActionNo() int32 {
	if x != nil {
		return x.AckActionNo
	}
	return 0
}

type PushAction struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FrameCommandList []*FrameCommand `protobuf:"bytes,1,rep,name=frame_command_list,json=frameCommandList,proto3" json:"frame_command_list,omitempty"`
}

func (x *PushAction) Reset() {
	*x = PushAction{}
	if protoimpl.UnsafeEnabled {
		mi := &file_snakemini_export_proto_msgTypes[66]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PushAction) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PushAction) ProtoMessage() {}

func (x *PushAction) ProtoReflect() protoreflect.Message {
	mi := &file_snakemini_export_proto_msgTypes[66]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PushAction.ProtoReflect.Descriptor instead.
func (*PushAction) Descriptor() ([]byte, []int) {
	return file_snakemini_export_proto_rawDescGZIP(), []int{66}
}

func (x *PushAction) GetFrameCommandList() []*FrameCommand {
	if x != nil {
		return x.FrameCommandList
	}
	return nil
}

type RelayReportScoreRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ScoreList []int64 `protobuf:"varint,1,rep,packed,name=score_list,json=scoreList,proto3" json:"score_list,omitempty"`
	KillList  []int64 `protobuf:"varint,2,rep,packed,name=kill_list,json=killList,proto3" json:"kill_list,omitempty"`
	ActionNo  int64   `protobuf:"varint,3,opt,name=action_no,json=actionNo,proto3" json:"action_no,omitempty"`
	Uid       int64   `protobuf:"varint,4,opt,name=uid,proto3" json:"uid,omitempty"`
	Rid       int32   `protobuf:"varint,5,opt,name=rid,proto3" json:"rid,omitempty"`
}

func (x *RelayReportScoreRequest) Reset() {
	*x = RelayReportScoreRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_snakemini_export_proto_msgTypes[67]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RelayReportScoreRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RelayReportScoreRequest) ProtoMessage() {}

func (x *RelayReportScoreRequest) ProtoReflect() protoreflect.Message {
	mi := &file_snakemini_export_proto_msgTypes[67]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RelayReportScoreRequest.ProtoReflect.Descriptor instead.
func (*RelayReportScoreRequest) Descriptor() ([]byte, []int) {
	return file_snakemini_export_proto_rawDescGZIP(), []int{67}
}

func (x *RelayReportScoreRequest) GetScoreList() []int64 {
	if x != nil {
		return x.ScoreList
	}
	return nil
}

func (x *RelayReportScoreRequest) GetKillList() []int64 {
	if x != nil {
		return x.KillList
	}
	return nil
}

func (x *RelayReportScoreRequest) GetActionNo() int64 {
	if x != nil {
		return x.ActionNo
	}
	return 0
}

func (x *RelayReportScoreRequest) GetUid() int64 {
	if x != nil {
		return x.Uid
	}
	return 0
}

func (x *RelayReportScoreRequest) GetRid() int32 {
	if x != nil {
		return x.Rid
	}
	return 0
}

type RpcReportScoreRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ScoreList    []int64 `protobuf:"varint,1,rep,packed,name=score_list,json=scoreList,proto3" json:"score_list,omitempty"`
	KillList     []int64 `protobuf:"varint,2,rep,packed,name=kill_list,json=killList,proto3" json:"kill_list,omitempty"`
	Rid          int32   `protobuf:"varint,3,opt,name=rid,proto3" json:"rid,omitempty"`
	StartTime    int64   `protobuf:"varint,4,opt,name=start_time,json=startTime,proto3" json:"start_time,omitempty"`
	EndTime      int64   `protobuf:"varint,5,opt,name=end_time,json=endTime,proto3" json:"end_time,omitempty"`
	UserType     int32   `protobuf:"varint,6,opt,name=user_type,json=userType,proto3" json:"user_type,omitempty"`
	PlayerStates []int32 `protobuf:"varint,7,rep,packed,name=player_states,json=playerStates,proto3" json:"player_states,omitempty"`
}

func (x *RpcReportScoreRequest) Reset() {
	*x = RpcReportScoreRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_snakemini_export_proto_msgTypes[68]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RpcReportScoreRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcReportScoreRequest) ProtoMessage() {}

func (x *RpcReportScoreRequest) ProtoReflect() protoreflect.Message {
	mi := &file_snakemini_export_proto_msgTypes[68]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcReportScoreRequest.ProtoReflect.Descriptor instead.
func (*RpcReportScoreRequest) Descriptor() ([]byte, []int) {
	return file_snakemini_export_proto_rawDescGZIP(), []int{68}
}

func (x *RpcReportScoreRequest) GetScoreList() []int64 {
	if x != nil {
		return x.ScoreList
	}
	return nil
}

func (x *RpcReportScoreRequest) GetKillList() []int64 {
	if x != nil {
		return x.KillList
	}
	return nil
}

func (x *RpcReportScoreRequest) GetRid() int32 {
	if x != nil {
		return x.Rid
	}
	return 0
}

func (x *RpcReportScoreRequest) GetStartTime() int64 {
	if x != nil {
		return x.StartTime
	}
	return 0
}

func (x *RpcReportScoreRequest) GetEndTime() int64 {
	if x != nil {
		return x.EndTime
	}
	return 0
}

func (x *RpcReportScoreRequest) GetUserType() int32 {
	if x != nil {
		return x.UserType
	}
	return 0
}

func (x *RpcReportScoreRequest) GetPlayerStates() []int32 {
	if x != nil {
		return x.PlayerStates
	}
	return nil
}

type RpcReportRoomStateRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Rid      int32 `protobuf:"varint,1,opt,name=rid,proto3" json:"rid,omitempty"`
	State    int32 `protobuf:"varint,2,opt,name=state,proto3" json:"state,omitempty"`
	UserType int32 `protobuf:"varint,3,opt,name=user_type,json=userType,proto3" json:"user_type,omitempty"`
}

func (x *RpcReportRoomStateRequest) Reset() {
	*x = RpcReportRoomStateRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_snakemini_export_proto_msgTypes[69]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RpcReportRoomStateRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcReportRoomStateRequest) ProtoMessage() {}

func (x *RpcReportRoomStateRequest) ProtoReflect() protoreflect.Message {
	mi := &file_snakemini_export_proto_msgTypes[69]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcReportRoomStateRequest.ProtoReflect.Descriptor instead.
func (*RpcReportRoomStateRequest) Descriptor() ([]byte, []int) {
	return file_snakemini_export_proto_rawDescGZIP(), []int{69}
}

func (x *RpcReportRoomStateRequest) GetRid() int32 {
	if x != nil {
		return x.Rid
	}
	return 0
}

func (x *RpcReportRoomStateRequest) GetState() int32 {
	if x != nil {
		return x.State
	}
	return 0
}

func (x *RpcReportRoomStateRequest) GetUserType() int32 {
	if x != nil {
		return x.UserType
	}
	return 0
}

type RpcReportRoomAvailNumsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Rid      int32   `protobuf:"varint,1,opt,name=rid,proto3" json:"rid,omitempty"`
	UserType int32   `protobuf:"varint,2,opt,name=user_type,json=userType,proto3" json:"user_type,omitempty"`
	NumList  []int32 `protobuf:"varint,3,rep,packed,name=num_list,json=numList,proto3" json:"num_list,omitempty"`
}

func (x *RpcReportRoomAvailNumsRequest) Reset() {
	*x = RpcReportRoomAvailNumsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_snakemini_export_proto_msgTypes[70]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RpcReportRoomAvailNumsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcReportRoomAvailNumsRequest) ProtoMessage() {}

func (x *RpcReportRoomAvailNumsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_snakemini_export_proto_msgTypes[70]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcReportRoomAvailNumsRequest.ProtoReflect.Descriptor instead.
func (*RpcReportRoomAvailNumsRequest) Descriptor() ([]byte, []int) {
	return file_snakemini_export_proto_rawDescGZIP(), []int{70}
}

func (x *RpcReportRoomAvailNumsRequest) GetRid() int32 {
	if x != nil {
		return x.Rid
	}
	return 0
}

func (x *RpcReportRoomAvailNumsRequest) GetUserType() int32 {
	if x != nil {
		return x.UserType
	}
	return 0
}

func (x *RpcReportRoomAvailNumsRequest) GetNumList() []int32 {
	if x != nil {
		return x.NumList
	}
	return nil
}

type RpcReportAbnormalRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Rid          int32   `protobuf:"varint,1,opt,name=rid,proto3" json:"rid,omitempty"`
	UserType     int32   `protobuf:"varint,2,opt,name=user_type,json=userType,proto3" json:"user_type,omitempty"`
	AbnormalNums []int32 `protobuf:"varint,3,rep,packed,name=abnormal_nums,json=abnormalNums,proto3" json:"abnormal_nums,omitempty"`
}

func (x *RpcReportAbnormalRequest) Reset() {
	*x = RpcReportAbnormalRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_snakemini_export_proto_msgTypes[71]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RpcReportAbnormalRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcReportAbnormalRequest) ProtoMessage() {}

func (x *RpcReportAbnormalRequest) ProtoReflect() protoreflect.Message {
	mi := &file_snakemini_export_proto_msgTypes[71]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcReportAbnormalRequest.ProtoReflect.Descriptor instead.
func (*RpcReportAbnormalRequest) Descriptor() ([]byte, []int) {
	return file_snakemini_export_proto_rawDescGZIP(), []int{71}
}

func (x *RpcReportAbnormalRequest) GetRid() int32 {
	if x != nil {
		return x.Rid
	}
	return 0
}

func (x *RpcReportAbnormalRequest) GetUserType() int32 {
	if x != nil {
		return x.UserType
	}
	return 0
}

func (x *RpcReportAbnormalRequest) GetAbnormalNums() []int32 {
	if x != nil {
		return x.AbnormalNums
	}
	return nil
}

type RpcReportAbnormalNotifyRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Rid      int32 `protobuf:"varint,1,opt,name=rid,proto3" json:"rid,omitempty"`
	UserType int32 `protobuf:"varint,2,opt,name=user_type,json=userType,proto3" json:"user_type,omitempty"`
}

func (x *RpcReportAbnormalNotifyRequest) Reset() {
	*x = RpcReportAbnormalNotifyRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_snakemini_export_proto_msgTypes[72]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RpcReportAbnormalNotifyRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcReportAbnormalNotifyRequest) ProtoMessage() {}

func (x *RpcReportAbnormalNotifyRequest) ProtoReflect() protoreflect.Message {
	mi := &file_snakemini_export_proto_msgTypes[72]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcReportAbnormalNotifyRequest.ProtoReflect.Descriptor instead.
func (*RpcReportAbnormalNotifyRequest) Descriptor() ([]byte, []int) {
	return file_snakemini_export_proto_rawDescGZIP(), []int{72}
}

func (x *RpcReportAbnormalNotifyRequest) GetRid() int32 {
	if x != nil {
		return x.Rid
	}
	return 0
}

func (x *RpcReportAbnormalNotifyRequest) GetUserType() int32 {
	if x != nil {
		return x.UserType
	}
	return 0
}

type RpcReportRoomLockRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Rid      int32 `protobuf:"varint,1,opt,name=rid,proto3" json:"rid,omitempty"`
	Type     int32 `protobuf:"varint,2,opt,name=type,proto3" json:"type,omitempty"`
	UserType int32 `protobuf:"varint,3,opt,name=user_type,json=userType,proto3" json:"user_type,omitempty"`
}

func (x *RpcReportRoomLockRequest) Reset() {
	*x = RpcReportRoomLockRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_snakemini_export_proto_msgTypes[73]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RpcReportRoomLockRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcReportRoomLockRequest) ProtoMessage() {}

func (x *RpcReportRoomLockRequest) ProtoReflect() protoreflect.Message {
	mi := &file_snakemini_export_proto_msgTypes[73]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcReportRoomLockRequest.ProtoReflect.Descriptor instead.
func (*RpcReportRoomLockRequest) Descriptor() ([]byte, []int) {
	return file_snakemini_export_proto_rawDescGZIP(), []int{73}
}

func (x *RpcReportRoomLockRequest) GetRid() int32 {
	if x != nil {
		return x.Rid
	}
	return 0
}

func (x *RpcReportRoomLockRequest) GetType() int32 {
	if x != nil {
		return x.Type
	}
	return 0
}

func (x *RpcReportRoomLockRequest) GetUserType() int32 {
	if x != nil {
		return x.UserType
	}
	return 0
}

type GetUserStateRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Uids []int64 `protobuf:"varint,1,rep,packed,name=uids,proto3" json:"uids,omitempty"`
}

func (x *GetUserStateRequest) Reset() {
	*x = GetUserStateRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_snakemini_export_proto_msgTypes[74]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetUserStateRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetUserStateRequest) ProtoMessage() {}

func (x *GetUserStateRequest) ProtoReflect() protoreflect.Message {
	mi := &file_snakemini_export_proto_msgTypes[74]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetUserStateRequest.ProtoReflect.Descriptor instead.
func (*GetUserStateRequest) Descriptor() ([]byte, []int) {
	return file_snakemini_export_proto_rawDescGZIP(), []int{74}
}

func (x *GetUserStateRequest) GetUids() []int64 {
	if x != nil {
		return x.Uids
	}
	return nil
}

type UserStateInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Uid   int64 `protobuf:"varint,1,opt,name=uid,proto3" json:"uid,omitempty"`
	State int32 `protobuf:"varint,2,opt,name=state,proto3" json:"state,omitempty"`
}

func (x *UserStateInfo) Reset() {
	*x = UserStateInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_snakemini_export_proto_msgTypes[75]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserStateInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserStateInfo) ProtoMessage() {}

func (x *UserStateInfo) ProtoReflect() protoreflect.Message {
	mi := &file_snakemini_export_proto_msgTypes[75]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserStateInfo.ProtoReflect.Descriptor instead.
func (*UserStateInfo) Descriptor() ([]byte, []int) {
	return file_snakemini_export_proto_rawDescGZIP(), []int{75}
}

func (x *UserStateInfo) GetUid() int64 {
	if x != nil {
		return x.Uid
	}
	return 0
}

func (x *UserStateInfo) GetState() int32 {
	if x != nil {
		return x.State
	}
	return 0
}

type GetUserStateResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	States []*UserStateInfo `protobuf:"bytes,1,rep,name=states,proto3" json:"states,omitempty"`
}

func (x *GetUserStateResponse) Reset() {
	*x = GetUserStateResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_snakemini_export_proto_msgTypes[76]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetUserStateResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetUserStateResponse) ProtoMessage() {}

func (x *GetUserStateResponse) ProtoReflect() protoreflect.Message {
	mi := &file_snakemini_export_proto_msgTypes[76]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetUserStateResponse.ProtoReflect.Descriptor instead.
func (*GetUserStateResponse) Descriptor() ([]byte, []int) {
	return file_snakemini_export_proto_rawDescGZIP(), []int{76}
}

func (x *GetUserStateResponse) GetStates() []*UserStateInfo {
	if x != nil {
		return x.States
	}
	return nil
}

type UpdateUserOnlineStateRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Uid   int64 `protobuf:"varint,1,opt,name=uid,proto3" json:"uid,omitempty"`
	State int32 `protobuf:"varint,2,opt,name=state,proto3" json:"state,omitempty"`
}

func (x *UpdateUserOnlineStateRequest) Reset() {
	*x = UpdateUserOnlineStateRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_snakemini_export_proto_msgTypes[77]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateUserOnlineStateRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateUserOnlineStateRequest) ProtoMessage() {}

func (x *UpdateUserOnlineStateRequest) ProtoReflect() protoreflect.Message {
	mi := &file_snakemini_export_proto_msgTypes[77]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateUserOnlineStateRequest.ProtoReflect.Descriptor instead.
func (*UpdateUserOnlineStateRequest) Descriptor() ([]byte, []int) {
	return file_snakemini_export_proto_rawDescGZIP(), []int{77}
}

func (x *UpdateUserOnlineStateRequest) GetUid() int64 {
	if x != nil {
		return x.Uid
	}
	return 0
}

func (x *UpdateUserOnlineStateRequest) GetState() int32 {
	if x != nil {
		return x.State
	}
	return 0
}

type UpdateUserStateRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UidList []int64 `protobuf:"varint,1,rep,packed,name=uid_list,json=uidList,proto3" json:"uid_list,omitempty"`
	State   int32   `protobuf:"varint,2,opt,name=state,proto3" json:"state,omitempty"`
}

func (x *UpdateUserStateRequest) Reset() {
	*x = UpdateUserStateRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_snakemini_export_proto_msgTypes[78]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateUserStateRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateUserStateRequest) ProtoMessage() {}

func (x *UpdateUserStateRequest) ProtoReflect() protoreflect.Message {
	mi := &file_snakemini_export_proto_msgTypes[78]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateUserStateRequest.ProtoReflect.Descriptor instead.
func (*UpdateUserStateRequest) Descriptor() ([]byte, []int) {
	return file_snakemini_export_proto_rawDescGZIP(), []int{78}
}

func (x *UpdateUserStateRequest) GetUidList() []int64 {
	if x != nil {
		return x.UidList
	}
	return nil
}

func (x *UpdateUserStateRequest) GetState() int32 {
	if x != nil {
		return x.State
	}
	return 0
}

type InviteFriendRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	InviteUid int64 `protobuf:"varint,1,opt,name=invite_uid,json=inviteUid,proto3" json:"invite_uid,omitempty"`
	FriendUid int64 `protobuf:"varint,2,opt,name=friend_uid,json=friendUid,proto3" json:"friend_uid,omitempty"`
	Source    int32 `protobuf:"varint,3,opt,name=source,proto3" json:"source,omitempty"`
}

func (x *InviteFriendRequest) Reset() {
	*x = InviteFriendRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_snakemini_export_proto_msgTypes[79]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *InviteFriendRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InviteFriendRequest) ProtoMessage() {}

func (x *InviteFriendRequest) ProtoReflect() protoreflect.Message {
	mi := &file_snakemini_export_proto_msgTypes[79]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InviteFriendRequest.ProtoReflect.Descriptor instead.
func (*InviteFriendRequest) Descriptor() ([]byte, []int) {
	return file_snakemini_export_proto_rawDescGZIP(), []int{79}
}

func (x *InviteFriendRequest) GetInviteUid() int64 {
	if x != nil {
		return x.InviteUid
	}
	return 0
}

func (x *InviteFriendRequest) GetFriendUid() int64 {
	if x != nil {
		return x.FriendUid
	}
	return 0
}

func (x *InviteFriendRequest) GetSource() int32 {
	if x != nil {
		return x.Source
	}
	return 0
}

type HandleInviteRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Response  int32          `protobuf:"varint,1,opt,name=response,proto3" json:"response,omitempty"`
	Msg       string         `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg,omitempty"`
	UserInfo  *MatchUserInfo `protobuf:"bytes,3,opt,name=user_info,json=userInfo,proto3" json:"user_info,omitempty"`
	InviteUid int64          `protobuf:"varint,4,opt,name=invite_uid,json=inviteUid,proto3" json:"invite_uid,omitempty"`
	Source    int32          `protobuf:"varint,5,opt,name=source,proto3" json:"source,omitempty"`
}

func (x *HandleInviteRequest) Reset() {
	*x = HandleInviteRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_snakemini_export_proto_msgTypes[80]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HandleInviteRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HandleInviteRequest) ProtoMessage() {}

func (x *HandleInviteRequest) ProtoReflect() protoreflect.Message {
	mi := &file_snakemini_export_proto_msgTypes[80]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HandleInviteRequest.ProtoReflect.Descriptor instead.
func (*HandleInviteRequest) Descriptor() ([]byte, []int) {
	return file_snakemini_export_proto_rawDescGZIP(), []int{80}
}

func (x *HandleInviteRequest) GetResponse() int32 {
	if x != nil {
		return x.Response
	}
	return 0
}

func (x *HandleInviteRequest) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

func (x *HandleInviteRequest) GetUserInfo() *MatchUserInfo {
	if x != nil {
		return x.UserInfo
	}
	return nil
}

func (x *HandleInviteRequest) GetInviteUid() int64 {
	if x != nil {
		return x.InviteUid
	}
	return 0
}

func (x *HandleInviteRequest) GetSource() int32 {
	if x != nil {
		return x.Source
	}
	return 0
}

type BindUserInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Uid      int64  `protobuf:"varint,1,opt,name=uid,proto3" json:"uid,omitempty"`
	State    int32  `protobuf:"varint,2,opt,name=state,proto3" json:"state,omitempty"`
	UserType int32  `protobuf:"varint,3,opt,name=user_type,json=userType,proto3" json:"user_type,omitempty"`
	Platform int32  `protobuf:"varint,4,opt,name=platform,proto3" json:"platform,omitempty"`
	Version  string `protobuf:"bytes,5,opt,name=version,proto3" json:"version,omitempty"`
}

func (x *BindUserInfo) Reset() {
	*x = BindUserInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_snakemini_export_proto_msgTypes[81]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BindUserInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BindUserInfo) ProtoMessage() {}

func (x *BindUserInfo) ProtoReflect() protoreflect.Message {
	mi := &file_snakemini_export_proto_msgTypes[81]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BindUserInfo.ProtoReflect.Descriptor instead.
func (*BindUserInfo) Descriptor() ([]byte, []int) {
	return file_snakemini_export_proto_rawDescGZIP(), []int{81}
}

func (x *BindUserInfo) GetUid() int64 {
	if x != nil {
		return x.Uid
	}
	return 0
}

func (x *BindUserInfo) GetState() int32 {
	if x != nil {
		return x.State
	}
	return 0
}

func (x *BindUserInfo) GetUserType() int32 {
	if x != nil {
		return x.UserType
	}
	return 0
}

func (x *BindUserInfo) GetPlatform() int32 {
	if x != nil {
		return x.Platform
	}
	return 0
}

func (x *BindUserInfo) GetVersion() string {
	if x != nil {
		return x.Version
	}
	return ""
}

type GetUserConnectorInfoResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserInfo *BindUserInfo `protobuf:"bytes,1,opt,name=user_info,json=userInfo,proto3" json:"user_info,omitempty"`
}

func (x *GetUserConnectorInfoResponse) Reset() {
	*x = GetUserConnectorInfoResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_snakemini_export_proto_msgTypes[82]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetUserConnectorInfoResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetUserConnectorInfoResponse) ProtoMessage() {}

func (x *GetUserConnectorInfoResponse) ProtoReflect() protoreflect.Message {
	mi := &file_snakemini_export_proto_msgTypes[82]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetUserConnectorInfoResponse.ProtoReflect.Descriptor instead.
func (*GetUserConnectorInfoResponse) Descriptor() ([]byte, []int) {
	return file_snakemini_export_proto_rawDescGZIP(), []int{82}
}

func (x *GetUserConnectorInfoResponse) GetUserInfo() *BindUserInfo {
	if x != nil {
		return x.UserInfo
	}
	return nil
}

type PushInviteFriend struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	InviteUid   int64 `protobuf:"varint,1,opt,name=invite_uid,json=inviteUid,proto3" json:"invite_uid,omitempty"`
	FriendUid   int64 `protobuf:"varint,2,opt,name=friend_uid,json=friendUid,proto3" json:"friend_uid,omitempty"`
	Source      int32 `protobuf:"varint,3,opt,name=source,proto3" json:"source,omitempty"`
	GameMode    int32 `protobuf:"varint,4,opt,name=game_mode,json=gameMode,proto3" json:"game_mode,omitempty"`
	ModeVersion int32 `protobuf:"varint,5,opt,name=mode_version,json=modeVersion,proto3" json:"mode_version,omitempty"`
	UserType    int32 `protobuf:"varint,6,opt,name=user_type,json=userType,proto3" json:"user_type,omitempty"`
	Platform    int32 `protobuf:"varint,7,opt,name=platform,proto3" json:"platform,omitempty"`
}

func (x *PushInviteFriend) Reset() {
	*x = PushInviteFriend{}
	if protoimpl.UnsafeEnabled {
		mi := &file_snakemini_export_proto_msgTypes[83]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PushInviteFriend) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PushInviteFriend) ProtoMessage() {}

func (x *PushInviteFriend) ProtoReflect() protoreflect.Message {
	mi := &file_snakemini_export_proto_msgTypes[83]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PushInviteFriend.ProtoReflect.Descriptor instead.
func (*PushInviteFriend) Descriptor() ([]byte, []int) {
	return file_snakemini_export_proto_rawDescGZIP(), []int{83}
}

func (x *PushInviteFriend) GetInviteUid() int64 {
	if x != nil {
		return x.InviteUid
	}
	return 0
}

func (x *PushInviteFriend) GetFriendUid() int64 {
	if x != nil {
		return x.FriendUid
	}
	return 0
}

func (x *PushInviteFriend) GetSource() int32 {
	if x != nil {
		return x.Source
	}
	return 0
}

func (x *PushInviteFriend) GetGameMode() int32 {
	if x != nil {
		return x.GameMode
	}
	return 0
}

func (x *PushInviteFriend) GetModeVersion() int32 {
	if x != nil {
		return x.ModeVersion
	}
	return 0
}

func (x *PushInviteFriend) GetUserType() int32 {
	if x != nil {
		return x.UserType
	}
	return 0
}

func (x *PushInviteFriend) GetPlatform() int32 {
	if x != nil {
		return x.Platform
	}
	return 0
}

type PushHandleInvite struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Msg string `protobuf:"bytes,1,opt,name=msg,proto3" json:"msg,omitempty"`
}

func (x *PushHandleInvite) Reset() {
	*x = PushHandleInvite{}
	if protoimpl.UnsafeEnabled {
		mi := &file_snakemini_export_proto_msgTypes[84]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PushHandleInvite) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PushHandleInvite) ProtoMessage() {}

func (x *PushHandleInvite) ProtoReflect() protoreflect.Message {
	mi := &file_snakemini_export_proto_msgTypes[84]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PushHandleInvite.ProtoReflect.Descriptor instead.
func (*PushHandleInvite) Descriptor() ([]byte, []int) {
	return file_snakemini_export_proto_rawDescGZIP(), []int{84}
}

func (x *PushHandleInvite) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

type PushKicked struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OwnerUid int64 `protobuf:"varint,1,opt,name=owner_uid,json=ownerUid,proto3" json:"owner_uid,omitempty"`
}

func (x *PushKicked) Reset() {
	*x = PushKicked{}
	if protoimpl.UnsafeEnabled {
		mi := &file_snakemini_export_proto_msgTypes[85]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PushKicked) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PushKicked) ProtoMessage() {}

func (x *PushKicked) ProtoReflect() protoreflect.Message {
	mi := &file_snakemini_export_proto_msgTypes[85]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PushKicked.ProtoReflect.Descriptor instead.
func (*PushKicked) Descriptor() ([]byte, []int) {
	return file_snakemini_export_proto_rawDescGZIP(), []int{85}
}

func (x *PushKicked) GetOwnerUid() int64 {
	if x != nil {
		return x.OwnerUid
	}
	return 0
}

type SendGiftRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SendUid     int64          `protobuf:"varint,1,opt,name=send_uid,json=sendUid,proto3" json:"send_uid,omitempty"`                         // 送礼人uid
	ReceiveUid  int64          `protobuf:"varint,2,opt,name=receive_uid,json=receiveUid,proto3" json:"receive_uid,omitempty"`                // 收礼人uid
	GiftId      int32          `protobuf:"varint,3,opt,name=gift_id,json=giftId,proto3" json:"gift_id,omitempty"`                            // 礼物ID，30001团战点赞
	Source      SendGiftSource `protobuf:"varint,4,opt,name=source,proto3,enum=pb.SendGiftSource" json:"source,omitempty"`                   // source 1和2 团战结算页，客户端定枚举
	CostType    SendGiftCost   `protobuf:"varint,5,opt,name=cost_type,json=costType,proto3,enum=pb.SendGiftCost" json:"cost_type,omitempty"` // 付费类型 0 免费 1 金币 2 苹果 3 广告 4 分享 5 抖音钻石
	Num         int32          `protobuf:"varint,6,opt,name=num,proto3" json:"num,omitempty"`                                                // 送礼个数
	Rid         int32          `protobuf:"varint,7,opt,name=rid,proto3" json:"rid,omitempty"`                                                // 房间ID(团战结算页必传)
	UserType    int32          `protobuf:"varint,8,opt,name=user_type,json=userType,proto3" json:"user_type,omitempty"`                      // 送礼人user_type
	RecUserType int32          `protobuf:"varint,9,opt,name=rec_user_type,json=recUserType,proto3" json:"rec_user_type,omitempty"`           // 收礼人user_type(跨渠道点赞预留)
	Ext         string         `protobuf:"bytes,10,opt,name=ext,proto3" json:"ext,omitempty"`                                                // 扩展字段，广告or分享 传{"position":xxx}
	Version     string         `protobuf:"bytes,11,opt,name=version,proto3" json:"version,omitempty"`                                        // 版本号
	ComboNum    int32          `protobuf:"varint,12,opt,name=combo_num,json=comboNum,proto3" json:"combo_num,omitempty"`                     // 连击次数，从1开始
	BagNum      int32          `protobuf:"varint,13,opt,name=bag_num,json=bagNum,proto3" json:"bag_num,omitempty"`                           // 背包礼物数量
}

func (x *SendGiftRequest) Reset() {
	*x = SendGiftRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_snakemini_export_proto_msgTypes[86]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SendGiftRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SendGiftRequest) ProtoMessage() {}

func (x *SendGiftRequest) ProtoReflect() protoreflect.Message {
	mi := &file_snakemini_export_proto_msgTypes[86]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SendGiftRequest.ProtoReflect.Descriptor instead.
func (*SendGiftRequest) Descriptor() ([]byte, []int) {
	return file_snakemini_export_proto_rawDescGZIP(), []int{86}
}

func (x *SendGiftRequest) GetSendUid() int64 {
	if x != nil {
		return x.SendUid
	}
	return 0
}

func (x *SendGiftRequest) GetReceiveUid() int64 {
	if x != nil {
		return x.ReceiveUid
	}
	return 0
}

func (x *SendGiftRequest) GetGiftId() int32 {
	if x != nil {
		return x.GiftId
	}
	return 0
}

func (x *SendGiftRequest) GetSource() SendGiftSource {
	if x != nil {
		return x.Source
	}
	return SendGiftSource_UnknownSource
}

func (x *SendGiftRequest) GetCostType() SendGiftCost {
	if x != nil {
		return x.CostType
	}
	return SendGiftCost_Free
}

func (x *SendGiftRequest) GetNum() int32 {
	if x != nil {
		return x.Num
	}
	return 0
}

func (x *SendGiftRequest) GetRid() int32 {
	if x != nil {
		return x.Rid
	}
	return 0
}

func (x *SendGiftRequest) GetUserType() int32 {
	if x != nil {
		return x.UserType
	}
	return 0
}

func (x *SendGiftRequest) GetRecUserType() int32 {
	if x != nil {
		return x.RecUserType
	}
	return 0
}

func (x *SendGiftRequest) GetExt() string {
	if x != nil {
		return x.Ext
	}
	return ""
}

func (x *SendGiftRequest) GetVersion() string {
	if x != nil {
		return x.Version
	}
	return ""
}

func (x *SendGiftRequest) GetComboNum() int32 {
	if x != nil {
		return x.ComboNum
	}
	return 0
}

func (x *SendGiftRequest) GetBagNum() int32 {
	if x != nil {
		return x.BagNum
	}
	return 0
}

type PushGameEndLike struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SendUid         int64  `protobuf:"varint,1,opt,name=send_uid,json=sendUid,proto3" json:"send_uid,omitempty"`
	ReceiveUid      int64  `protobuf:"varint,2,opt,name=receive_uid,json=receiveUid,proto3" json:"receive_uid,omitempty"`
	SendNickname    string `protobuf:"bytes,3,opt,name=send_nickname,json=sendNickname,proto3" json:"send_nickname,omitempty"`
	ReceiveNickname string `protobuf:"bytes,4,opt,name=receive_nickname,json=receiveNickname,proto3" json:"receive_nickname,omitempty"`
	SendGamename    string `protobuf:"bytes,5,opt,name=send_gamename,json=sendGamename,proto3" json:"send_gamename,omitempty"`
	ReceiveGamename string `protobuf:"bytes,6,opt,name=receive_gamename,json=receiveGamename,proto3" json:"receive_gamename,omitempty"`
	Message         string `protobuf:"bytes,7,opt,name=message,proto3" json:"message,omitempty"`
}

func (x *PushGameEndLike) Reset() {
	*x = PushGameEndLike{}
	if protoimpl.UnsafeEnabled {
		mi := &file_snakemini_export_proto_msgTypes[87]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PushGameEndLike) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PushGameEndLike) ProtoMessage() {}

func (x *PushGameEndLike) ProtoReflect() protoreflect.Message {
	mi := &file_snakemini_export_proto_msgTypes[87]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PushGameEndLike.ProtoReflect.Descriptor instead.
func (*PushGameEndLike) Descriptor() ([]byte, []int) {
	return file_snakemini_export_proto_rawDescGZIP(), []int{87}
}

func (x *PushGameEndLike) GetSendUid() int64 {
	if x != nil {
		return x.SendUid
	}
	return 0
}

func (x *PushGameEndLike) GetReceiveUid() int64 {
	if x != nil {
		return x.ReceiveUid
	}
	return 0
}

func (x *PushGameEndLike) GetSendNickname() string {
	if x != nil {
		return x.SendNickname
	}
	return ""
}

func (x *PushGameEndLike) GetReceiveNickname() string {
	if x != nil {
		return x.ReceiveNickname
	}
	return ""
}

func (x *PushGameEndLike) GetSendGamename() string {
	if x != nil {
		return x.SendGamename
	}
	return ""
}

func (x *PushGameEndLike) GetReceiveGamename() string {
	if x != nil {
		return x.ReceiveGamename
	}
	return ""
}

func (x *PushGameEndLike) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

// 送礼物 command_id=sendgift
type PushSendGift struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SendUid         int64  `protobuf:"varint,1,opt,name=send_uid,json=sendUid,proto3" json:"send_uid,omitempty"`
	ReceiveUid      int64  `protobuf:"varint,2,opt,name=receive_uid,json=receiveUid,proto3" json:"receive_uid,omitempty"`
	SendNickname    string `protobuf:"bytes,3,opt,name=send_nickname,json=sendNickname,proto3" json:"send_nickname,omitempty"`
	ReceiveNickname string `protobuf:"bytes,4,opt,name=receive_nickname,json=receiveNickname,proto3" json:"receive_nickname,omitempty"`
	GiftId          string `protobuf:"bytes,5,opt,name=gift_id,json=giftId,proto3" json:"gift_id,omitempty"`
	GiftName        string `protobuf:"bytes,6,opt,name=gift_name,json=giftName,proto3" json:"gift_name,omitempty"`
	Count           int32  `protobuf:"varint,7,opt,name=count,proto3" json:"count,omitempty"` // 送礼个数
}

func (x *PushSendGift) Reset() {
	*x = PushSendGift{}
	if protoimpl.UnsafeEnabled {
		mi := &file_snakemini_export_proto_msgTypes[88]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PushSendGift) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PushSendGift) ProtoMessage() {}

func (x *PushSendGift) ProtoReflect() protoreflect.Message {
	mi := &file_snakemini_export_proto_msgTypes[88]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PushSendGift.ProtoReflect.Descriptor instead.
func (*PushSendGift) Descriptor() ([]byte, []int) {
	return file_snakemini_export_proto_rawDescGZIP(), []int{88}
}

func (x *PushSendGift) GetSendUid() int64 {
	if x != nil {
		return x.SendUid
	}
	return 0
}

func (x *PushSendGift) GetReceiveUid() int64 {
	if x != nil {
		return x.ReceiveUid
	}
	return 0
}

func (x *PushSendGift) GetSendNickname() string {
	if x != nil {
		return x.SendNickname
	}
	return ""
}

func (x *PushSendGift) GetReceiveNickname() string {
	if x != nil {
		return x.ReceiveNickname
	}
	return ""
}

func (x *PushSendGift) GetGiftId() string {
	if x != nil {
		return x.GiftId
	}
	return ""
}

func (x *PushSendGift) GetGiftName() string {
	if x != nil {
		return x.GiftName
	}
	return ""
}

func (x *PushSendGift) GetCount() int32 {
	if x != nil {
		return x.Count
	}
	return 0
}

// 首页社交动态 command_id=socialtrend
type PushSocialTrend struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	HasNew bool `protobuf:"varint,1,opt,name=has_new,json=hasNew,proto3" json:"has_new,omitempty"` // 是否是新动态
}

func (x *PushSocialTrend) Reset() {
	*x = PushSocialTrend{}
	if protoimpl.UnsafeEnabled {
		mi := &file_snakemini_export_proto_msgTypes[89]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PushSocialTrend) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PushSocialTrend) ProtoMessage() {}

func (x *PushSocialTrend) ProtoReflect() protoreflect.Message {
	mi := &file_snakemini_export_proto_msgTypes[89]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PushSocialTrend.ProtoReflect.Descriptor instead.
func (*PushSocialTrend) Descriptor() ([]byte, []int) {
	return file_snakemini_export_proto_rawDescGZIP(), []int{89}
}

func (x *PushSocialTrend) GetHasNew() bool {
	if x != nil {
		return x.HasNew
	}
	return false
}

// 货币余额 command_id=currency
type PushCurrency struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Type   int32 `protobuf:"varint,1,opt,name=type,proto3" json:"type,omitempty"`     // 货币类型 1 金币 18 苹果
	Remain int32 `protobuf:"varint,2,opt,name=remain,proto3" json:"remain,omitempty"` // 余额
}

func (x *PushCurrency) Reset() {
	*x = PushCurrency{}
	if protoimpl.UnsafeEnabled {
		mi := &file_snakemini_export_proto_msgTypes[90]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PushCurrency) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PushCurrency) ProtoMessage() {}

func (x *PushCurrency) ProtoReflect() protoreflect.Message {
	mi := &file_snakemini_export_proto_msgTypes[90]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PushCurrency.ProtoReflect.Descriptor instead.
func (*PushCurrency) Descriptor() ([]byte, []int) {
	return file_snakemini_export_proto_rawDescGZIP(), []int{90}
}

func (x *PushCurrency) GetType() int32 {
	if x != nil {
		return x.Type
	}
	return 0
}

func (x *PushCurrency) GetRemain() int32 {
	if x != nil {
		return x.Remain
	}
	return 0
}

var File_snakemini_export_proto protoreflect.FileDescriptor

var file_snakemini_export_proto_rawDesc = []byte{
	0x0a, 0x16, 0x73, 0x6e, 0x61, 0x6b, 0x65, 0x6d, 0x69, 0x6e, 0x69, 0x2f, 0x65, 0x78, 0x70, 0x6f,
	0x72, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x02, 0x70, 0x62, 0x22, 0x54, 0x0a, 0x07,
	0x50, 0x75, 0x73, 0x68, 0x4d, 0x73, 0x67, 0x12, 0x14, 0x0a, 0x05, 0x63, 0x6d, 0x64, 0x49, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x63, 0x6d, 0x64, 0x49, 0x64, 0x12, 0x19, 0x0a,
	0x08, 0x75, 0x69, 0x64, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x02, 0x20, 0x03, 0x28, 0x03, 0x52,
	0x07, 0x75, 0x69, 0x64, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x70, 0x61, 0x79, 0x6c,
	0x6f, 0x61, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x70, 0x61, 0x79, 0x6c, 0x6f,
	0x61, 0x64, 0x22, 0x24, 0x0a, 0x07, 0x55, 0x69, 0x64, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x19, 0x0a,
	0x08, 0x75, 0x69, 0x64, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x01, 0x20, 0x03, 0x28, 0x03, 0x52,
	0x07, 0x75, 0x69, 0x64, 0x4c, 0x69, 0x73, 0x74, 0x22, 0x7a, 0x0a, 0x0d, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x48, 0x65, 0x61, 0x64, 0x65, 0x72, 0x12, 0x1b, 0x0a, 0x09, 0x70, 0x61, 0x63,
	0x6b, 0x65, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x70, 0x61,
	0x63, 0x6b, 0x65, 0x74, 0x49, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x6f, 0x6d, 0x6d, 0x61, 0x6e,
	0x64, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x63, 0x6f, 0x6d, 0x6d,
	0x61, 0x6e, 0x64, 0x49, 0x64, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x03, 0x75, 0x69, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x75, 0x73, 0x65, 0x72, 0x5f,
	0x74, 0x79, 0x70, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x75, 0x73, 0x65, 0x72,
	0x54, 0x79, 0x70, 0x65, 0x22, 0x80, 0x01, 0x0a, 0x0e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x48, 0x65, 0x61, 0x64, 0x65, 0x72, 0x12, 0x1b, 0x0a, 0x09, 0x70, 0x61, 0x63, 0x6b, 0x65,
	0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x70, 0x61, 0x63, 0x6b,
	0x65, 0x74, 0x49, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x5f,
	0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x63, 0x6f, 0x6d, 0x6d, 0x61, 0x6e,
	0x64, 0x49, 0x64, 0x12, 0x19, 0x0a, 0x08, 0x65, 0x72, 0x72, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x65, 0x72, 0x72, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x17,
	0x0a, 0x07, 0x65, 0x72, 0x72, 0x5f, 0x6d, 0x73, 0x67, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x06, 0x65, 0x72, 0x72, 0x4d, 0x73, 0x67, 0x22, 0x3f, 0x0a, 0x0a, 0x50, 0x75, 0x73, 0x68, 0x48,
	0x65, 0x61, 0x64, 0x65, 0x72, 0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64,
	0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x63, 0x6f, 0x6d, 0x6d, 0x61,
	0x6e, 0x64, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x04, 0x74, 0x69, 0x6d, 0x65, 0x22, 0x4a, 0x0a, 0x09, 0x50, 0x62, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x29, 0x0a, 0x06, 0x68, 0x65, 0x61, 0x64, 0x65, 0x72, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x70, 0x62, 0x2e, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x48, 0x65, 0x61, 0x64, 0x65, 0x72, 0x52, 0x06, 0x68, 0x65, 0x61, 0x64, 0x65, 0x72,
	0x12, 0x12, 0x0a, 0x04, 0x62, 0x6f, 0x64, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x62, 0x6f, 0x64, 0x79, 0x22, 0x4c, 0x0a, 0x0a, 0x50, 0x62, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x2a, 0x0a, 0x06, 0x68, 0x65, 0x61, 0x64, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x12, 0x2e, 0x70, 0x62, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x48, 0x65, 0x61, 0x64, 0x65, 0x72, 0x52, 0x06, 0x68, 0x65, 0x61, 0x64, 0x65, 0x72, 0x12, 0x12,
	0x0a, 0x04, 0x62, 0x6f, 0x64, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x62, 0x6f,
	0x64, 0x79, 0x22, 0x44, 0x0a, 0x06, 0x50, 0x62, 0x50, 0x75, 0x73, 0x68, 0x12, 0x26, 0x0a, 0x06,
	0x68, 0x65, 0x61, 0x64, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x70,
	0x62, 0x2e, 0x50, 0x75, 0x73, 0x68, 0x48, 0x65, 0x61, 0x64, 0x65, 0x72, 0x52, 0x06, 0x68, 0x65,
	0x61, 0x64, 0x65, 0x72, 0x12, 0x12, 0x0a, 0x04, 0x62, 0x6f, 0x64, 0x79, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x62, 0x6f, 0x64, 0x79, 0x22, 0x45, 0x0a, 0x07, 0x45, 0x72, 0x72, 0x49,
	0x6e, 0x66, 0x6f, 0x12, 0x19, 0x0a, 0x08, 0x65, 0x72, 0x72, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x65, 0x72, 0x72, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x1f,
	0x0a, 0x0b, 0x65, 0x72, 0x72, 0x5f, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0a, 0x65, 0x72, 0x72, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x22,
	0x2b, 0x0a, 0x0a, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x12, 0x1d, 0x0a,
	0x03, 0x65, 0x72, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0b, 0x2e, 0x70, 0x62, 0x2e,
	0x45, 0x72, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x03, 0x65, 0x72, 0x72, 0x22, 0x60, 0x0a, 0x0c,
	0x50, 0x62, 0x55, 0x64, 0x70, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1d, 0x0a, 0x0a,
	0x63, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x09, 0x63, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x49, 0x64, 0x12, 0x31, 0x0a, 0x06, 0x61,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x70, 0x62,
	0x2e, 0x52, 0x65, 0x6c, 0x61, 0x79, 0x55, 0x64, 0x70, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x52, 0x06, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x56,
	0x0a, 0x09, 0x50, 0x62, 0x55, 0x64, 0x70, 0x50, 0x75, 0x73, 0x68, 0x12, 0x1d, 0x0a, 0x0a, 0x63,
	0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x09, 0x63, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x49, 0x64, 0x12, 0x2a, 0x0a, 0x08, 0x70, 0x75,
	0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x70,
	0x62, 0x2e, 0x50, 0x75, 0x73, 0x68, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x08, 0x70, 0x75,
	0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x84, 0x01, 0x0a, 0x0b, 0x42, 0x69, 0x6e, 0x64, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x03, 0x75, 0x69, 0x64, 0x12, 0x10, 0x0a, 0x03, 0x73, 0x69, 0x64, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x73, 0x69, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x76, 0x65,
	0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x76, 0x65, 0x72,
	0x73, 0x69, 0x6f, 0x6e, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d,
	0x12, 0x1b, 0x0a, 0x09, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x08, 0x75, 0x73, 0x65, 0x72, 0x54, 0x79, 0x70, 0x65, 0x22, 0x22, 0x0a,
	0x0c, 0x42, 0x69, 0x6e, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x12, 0x0a,
	0x04, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x69, 0x6e, 0x66,
	0x6f, 0x22, 0x81, 0x01, 0x0a, 0x0d, 0x42, 0x69, 0x6e, 0x64, 0x4d, 0x61, 0x74, 0x63, 0x68, 0x49,
	0x6e, 0x66, 0x6f, 0x12, 0x14, 0x0a, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x12, 0x2c, 0x0a, 0x0a, 0x67, 0x72, 0x6f,
	0x75, 0x70, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0d, 0x2e,
	0x70, 0x62, 0x2e, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x09, 0x67, 0x72,
	0x6f, 0x75, 0x70, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x2c, 0x0a, 0x0a, 0x6d, 0x61, 0x74, 0x63, 0x68,
	0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x70, 0x62,
	0x2e, 0x4d, 0x61, 0x74, 0x63, 0x68, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x09, 0x6d, 0x61, 0x74, 0x63,
	0x68, 0x49, 0x6e, 0x66, 0x6f, 0x22, 0x8d, 0x01, 0x0a, 0x0a, 0x55, 0x69, 0x64, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x03, 0x75, 0x69, 0x64, 0x12, 0x32, 0x0a, 0x06, 0x63, 0x6d, 0x64, 0x4d, 0x61, 0x70,
	0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x70, 0x62, 0x2e, 0x55, 0x69, 0x64, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x43, 0x6d, 0x64, 0x4d, 0x61, 0x70, 0x45, 0x6e, 0x74,
	0x72, 0x79, 0x52, 0x06, 0x63, 0x6d, 0x64, 0x4d, 0x61, 0x70, 0x1a, 0x39, 0x0a, 0x0b, 0x43, 0x6d,
	0x64, 0x4d, 0x61, 0x70, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76,
	0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75,
	0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0x34, 0x0a, 0x11, 0x48, 0x65, 0x61, 0x72, 0x74, 0x42, 0x65,
	0x61, 0x72, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1f, 0x0a, 0x0b, 0x63, 0x6c,
	0x69, 0x65, 0x6e, 0x74, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x0a, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x22, 0x56, 0x0a, 0x12, 0x48,
	0x65, 0x61, 0x72, 0x74, 0x42, 0x65, 0x61, 0x72, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x5f, 0x74, 0x69, 0x6d, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x54, 0x69,
	0x6d, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x5f, 0x74, 0x69, 0x6d,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x54,
	0x69, 0x6d, 0x65, 0x22, 0x9c, 0x01, 0x0a, 0x10, 0x49, 0x6e, 0x47, 0x61, 0x6d, 0x65, 0x53, 0x74,
	0x61, 0x74, 0x65, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x1d, 0x0a, 0x03, 0x65, 0x72, 0x72, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0b, 0x2e, 0x70, 0x62, 0x2e, 0x45, 0x72, 0x72, 0x49, 0x6e,
	0x66, 0x6f, 0x52, 0x03, 0x65, 0x72, 0x72, 0x12, 0x10, 0x0a, 0x03, 0x67, 0x69, 0x64, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x03, 0x67, 0x69, 0x64, 0x12, 0x10, 0x0a, 0x03, 0x72, 0x69, 0x64,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x03, 0x72, 0x69, 0x64, 0x12, 0x26, 0x0a, 0x0f, 0x72,
	0x65, 0x6c, 0x61, 0x79, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x0d, 0x72, 0x65, 0x6c, 0x61, 0x79, 0x53, 0x65, 0x72, 0x76, 0x65,
	0x72, 0x49, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x72, 0x65, 0x6c, 0x61, 0x79, 0x5f, 0x68, 0x6f, 0x73,
	0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x72, 0x65, 0x6c, 0x61, 0x79, 0x48, 0x6f,
	0x73, 0x74, 0x22, 0xdb, 0x02, 0x0a, 0x0d, 0x4d, 0x61, 0x74, 0x63, 0x68, 0x55, 0x73, 0x65, 0x72,
	0x49, 0x6e, 0x66, 0x6f, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x03, 0x75, 0x69, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x6f, 0x70, 0x65, 0x6e, 0x69, 0x64,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x6f, 0x70, 0x65, 0x6e, 0x69, 0x64, 0x12, 0x18,
	0x0a, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x1b, 0x0a, 0x09, 0x67, 0x61, 0x6d, 0x65,
	0x5f, 0x6d, 0x6f, 0x64, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x67, 0x61, 0x6d,
	0x65, 0x4d, 0x6f, 0x64, 0x65, 0x12, 0x21, 0x0a, 0x0c, 0x6d, 0x6f, 0x64, 0x65, 0x5f, 0x76, 0x65,
	0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0b, 0x6d, 0x6f, 0x64,
	0x65, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x17, 0x0a, 0x07, 0x73, 0x6b, 0x69, 0x6e,
	0x5f, 0x69, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x73, 0x6b, 0x69, 0x6e, 0x49,
	0x64, 0x12, 0x1b, 0x0a, 0x09, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x07,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x75, 0x73, 0x65, 0x72, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1a,
	0x0a, 0x08, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x18, 0x08, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x08, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x12, 0x12, 0x0a, 0x04, 0x72, 0x61,
	0x6e, 0x6b, 0x18, 0x09, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x72, 0x61, 0x6e, 0x6b, 0x12, 0x28,
	0x0a, 0x10, 0x68, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x5f, 0x6d, 0x61, 0x78, 0x5f, 0x73, 0x74,
	0x61, 0x72, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0e, 0x68, 0x69, 0x73, 0x74, 0x6f, 0x72,
	0x79, 0x4d, 0x61, 0x78, 0x53, 0x74, 0x61, 0x72, 0x12, 0x1d, 0x0a, 0x0a, 0x68, 0x61, 0x73, 0x5f,
	0x6d, 0x61, 0x67, 0x6e, 0x65, 0x74, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x68, 0x61,
	0x73, 0x4d, 0x61, 0x67, 0x6e, 0x65, 0x74, 0x12, 0x17, 0x0a, 0x07, 0x6b, 0x69, 0x6c, 0x6c, 0x5f,
	0x69, 0x64, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x6b, 0x69, 0x6c, 0x6c, 0x49, 0x64,
	0x22, 0x44, 0x0a, 0x12, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x2e, 0x0a, 0x09, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69,
	0x6e, 0x66, 0x6f, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x70, 0x62, 0x2e, 0x4d,
	0x61, 0x74, 0x63, 0x68, 0x55, 0x73, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x08, 0x75, 0x73,
	0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x22, 0x27, 0x0a, 0x13, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x47, 0x72, 0x6f, 0x75, 0x70, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x10, 0x0a,
	0x03, 0x67, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x03, 0x67, 0x69, 0x64, 0x22,
	0x61, 0x0a, 0x10, 0x4a, 0x6f, 0x69, 0x6e, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x2e, 0x0a, 0x09, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x6e, 0x66, 0x6f,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x70, 0x62, 0x2e, 0x4d, 0x61, 0x74, 0x63,
	0x68, 0x55, 0x73, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x08, 0x75, 0x73, 0x65, 0x72, 0x49,
	0x6e, 0x66, 0x6f, 0x12, 0x1d, 0x0a, 0x0a, 0x69, 0x6e, 0x76, 0x69, 0x74, 0x65, 0x5f, 0x75, 0x69,
	0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x69, 0x6e, 0x76, 0x69, 0x74, 0x65, 0x55,
	0x69, 0x64, 0x22, 0x41, 0x0a, 0x11, 0x4a, 0x6f, 0x69, 0x6e, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2c, 0x0a, 0x0a, 0x67, 0x72, 0x6f, 0x75, 0x70,
	0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x70, 0x62,
	0x2e, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x09, 0x67, 0x72, 0x6f, 0x75,
	0x70, 0x49, 0x6e, 0x66, 0x6f, 0x22, 0x24, 0x0a, 0x10, 0x45, 0x78, 0x69, 0x74, 0x47, 0x72, 0x6f,
	0x75, 0x70, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x03, 0x75, 0x69, 0x64, 0x22, 0x13, 0x0a, 0x11, 0x45,
	0x78, 0x69, 0x74, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x22, 0x3a, 0x0a, 0x0b, 0x4b, 0x69, 0x63, 0x6b, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x10, 0x0a, 0x03, 0x75, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x03, 0x75, 0x69,
	0x64, 0x12, 0x19, 0x0a, 0x08, 0x6b, 0x69, 0x63, 0x6b, 0x5f, 0x75, 0x69, 0x64, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x07, 0x6b, 0x69, 0x63, 0x6b, 0x55, 0x69, 0x64, 0x22, 0x0e, 0x0a, 0x0c,
	0x4b, 0x69, 0x63, 0x6b, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x3d, 0x0a, 0x0d,
	0x47, 0x72, 0x6f, 0x75, 0x70, 0x49, 0x6e, 0x66, 0x6f, 0x50, 0x75, 0x73, 0x68, 0x12, 0x2c, 0x0a,
	0x0a, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x0d, 0x2e, 0x70, 0x62, 0x2e, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x49, 0x6e, 0x66, 0x6f,
	0x52, 0x09, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x49, 0x6e, 0x66, 0x6f, 0x22, 0x3e, 0x0a, 0x0e, 0x47,
	0x72, 0x6f, 0x75, 0x70, 0x53, 0x74, 0x61, 0x74, 0x65, 0x50, 0x75, 0x73, 0x68, 0x12, 0x14, 0x0a,
	0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x73, 0x74,
	0x61, 0x74, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x63, 0x61, 0x6e, 0x63, 0x65, 0x6c, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x06, 0x63, 0x61, 0x6e, 0x63, 0x65, 0x6c, 0x22, 0xc0, 0x01, 0x0a, 0x09,
	0x47, 0x72, 0x6f, 0x75, 0x70, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x10, 0x0a, 0x03, 0x67, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x03, 0x67, 0x69, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x6f,
	0x77, 0x6e, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x6f, 0x77, 0x6e, 0x65,
	0x72, 0x12, 0x19, 0x0a, 0x08, 0x75, 0x69, 0x64, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x03, 0x20,
	0x03, 0x28, 0x03, 0x52, 0x07, 0x75, 0x69, 0x64, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x1b, 0x0a, 0x09,
	0x67, 0x61, 0x6d, 0x65, 0x5f, 0x6d, 0x6f, 0x64, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x08, 0x67, 0x61, 0x6d, 0x65, 0x4d, 0x6f, 0x64, 0x65, 0x12, 0x21, 0x0a, 0x0c, 0x6d, 0x6f, 0x64,
	0x65, 0x5f, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x0b, 0x6d, 0x6f, 0x64, 0x65, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x30, 0x0a, 0x0a,
	0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x73, 0x18, 0x06, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x11, 0x2e, 0x70, 0x62, 0x2e, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x55, 0x73, 0x65, 0x72, 0x49,
	0x6e, 0x66, 0x6f, 0x52, 0x09, 0x75, 0x73, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x73, 0x22, 0x3a,
	0x0a, 0x0d, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x55, 0x73, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x12,
	0x10, 0x0a, 0x03, 0x75, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x03, 0x75, 0x69,
	0x64, 0x12, 0x17, 0x0a, 0x07, 0x73, 0x6b, 0x69, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x06, 0x73, 0x6b, 0x69, 0x6e, 0x49, 0x64, 0x22, 0x43, 0x0a, 0x11, 0x53, 0x74,
	0x61, 0x72, 0x74, 0x4d, 0x61, 0x74, 0x63, 0x68, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x2e, 0x0a, 0x09, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x11, 0x2e, 0x70, 0x62, 0x2e, 0x4d, 0x61, 0x74, 0x63, 0x68, 0x55, 0x73, 0x65,
	0x72, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x08, 0x75, 0x73, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x22,
	0x40, 0x0a, 0x12, 0x53, 0x74, 0x61, 0x72, 0x74, 0x4d, 0x61, 0x74, 0x63, 0x68, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x67, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x03, 0x67, 0x69, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x74, 0x69, 0x6d, 0x65, 0x6f,
	0x75, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x74, 0x69, 0x6d, 0x65, 0x6f, 0x75,
	0x74, 0x22, 0x45, 0x0a, 0x12, 0x43, 0x61, 0x6e, 0x63, 0x65, 0x6c, 0x4d, 0x61, 0x74, 0x63, 0x68,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x03, 0x75, 0x69, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x69, 0x73, 0x5f,
	0x74, 0x69, 0x6d, 0x65, 0x6f, 0x75, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x69,
	0x73, 0x54, 0x69, 0x6d, 0x65, 0x6f, 0x75, 0x74, 0x22, 0x3c, 0x0a, 0x0c, 0x4d, 0x61, 0x74, 0x63,
	0x68, 0x53, 0x75, 0x63, 0x50, 0x75, 0x73, 0x68, 0x12, 0x2c, 0x0a, 0x0a, 0x6d, 0x61, 0x74, 0x63,
	0x68, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x70,
	0x62, 0x2e, 0x4d, 0x61, 0x74, 0x63, 0x68, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x09, 0x6d, 0x61, 0x74,
	0x63, 0x68, 0x49, 0x6e, 0x66, 0x6f, 0x22, 0xd2, 0x04, 0x0a, 0x09, 0x4d, 0x61, 0x74, 0x63, 0x68,
	0x49, 0x6e, 0x66, 0x6f, 0x12, 0x10, 0x0a, 0x03, 0x72, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x03, 0x72, 0x69, 0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x61, 0x63, 0x63, 0x65, 0x73, 0x73,
	0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x61, 0x63, 0x63,
	0x65, 0x73, 0x73, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x19, 0x0a, 0x08, 0x75, 0x69, 0x64, 0x5f, 0x6c,
	0x69, 0x73, 0x74, 0x18, 0x03, 0x20, 0x03, 0x28, 0x03, 0x52, 0x07, 0x75, 0x69, 0x64, 0x4c, 0x69,
	0x73, 0x74, 0x12, 0x17, 0x0a, 0x07, 0x74, 0x65, 0x61, 0x6d, 0x5f, 0x69, 0x64, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x06, 0x74, 0x65, 0x61, 0x6d, 0x49, 0x64, 0x12, 0x20, 0x0a, 0x0c, 0x74,
	0x65, 0x61, 0x6d, 0x5f, 0x69, 0x64, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x05, 0x20, 0x03, 0x28,
	0x05, 0x52, 0x0a, 0x74, 0x65, 0x61, 0x6d, 0x49, 0x64, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x1d, 0x0a,
	0x0a, 0x74, 0x69, 0x6d, 0x65, 0x5f, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x4c, 0x69, 0x6d, 0x69, 0x74, 0x12, 0x1d, 0x0a, 0x0a,
	0x6d, 0x61, 0x74, 0x63, 0x68, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x09, 0x6d, 0x61, 0x74, 0x63, 0x68, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x6e,
	0x75, 0x6d, 0x18, 0x08, 0x20, 0x01, 0x28, 0x05, 0x52, 0x03, 0x6e, 0x75, 0x6d, 0x12, 0x1b, 0x0a,
	0x09, 0x67, 0x61, 0x6d, 0x65, 0x5f, 0x6d, 0x6f, 0x64, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x08, 0x67, 0x61, 0x6d, 0x65, 0x4d, 0x6f, 0x64, 0x65, 0x12, 0x21, 0x0a, 0x0c, 0x6d, 0x6f,
	0x64, 0x65, 0x5f, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x0b, 0x6d, 0x6f, 0x64, 0x65, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x28, 0x0a,
	0x10, 0x6d, 0x61, 0x78, 0x5f, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x5f, 0x63, 0x6f, 0x75, 0x6e,
	0x74, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0e, 0x6d, 0x61, 0x78, 0x50, 0x6c, 0x61, 0x79,
	0x65, 0x72, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x29, 0x0a, 0x11, 0x74, 0x65, 0x61, 0x6d, 0x5f,
	0x73, 0x6b, 0x69, 0x6e, 0x5f, 0x69, 0x64, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x0c, 0x20, 0x03,
	0x28, 0x05, 0x52, 0x0e, 0x74, 0x65, 0x61, 0x6d, 0x53, 0x6b, 0x69, 0x6e, 0x49, 0x64, 0x4c, 0x69,
	0x73, 0x74, 0x12, 0x2e, 0x0a, 0x09, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x61, 0x74, 0x74, 0x72, 0x18,
	0x0d, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x70, 0x62, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x41,
	0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x52, 0x08, 0x75, 0x73, 0x65, 0x72, 0x41, 0x74,
	0x74, 0x72, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x65, 0x65, 0x64, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x04, 0x73, 0x65, 0x65, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x72, 0x65, 0x6c, 0x61, 0x79, 0x5f,
	0x73, 0x69, 0x67, 0x6e, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x09, 0x72, 0x65, 0x6c, 0x61,
	0x79, 0x53, 0x69, 0x67, 0x6e, 0x12, 0x19, 0x0a, 0x08, 0x75, 0x64, 0x70, 0x5f, 0x68, 0x6f, 0x73,
	0x74, 0x18, 0x10, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x75, 0x64, 0x70, 0x48, 0x6f, 0x73, 0x74,
	0x12, 0x19, 0x0a, 0x08, 0x75, 0x64, 0x70, 0x5f, 0x70, 0x6f, 0x72, 0x74, 0x18, 0x11, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x07, 0x75, 0x64, 0x70, 0x50, 0x6f, 0x72, 0x74, 0x12, 0x25, 0x0a, 0x0e, 0x63,
	0x6f, 0x6e, 0x66, 0x69, 0x67, 0x5f, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x12, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x0d, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x56, 0x65, 0x72, 0x73, 0x69,
	0x6f, 0x6e, 0x12, 0x17, 0x0a, 0x07, 0x77, 0x73, 0x5f, 0x61, 0x64, 0x64, 0x72, 0x18, 0x13, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x06, 0x77, 0x73, 0x41, 0x64, 0x64, 0x72, 0x22, 0xb8, 0x01, 0x0a, 0x0d,
	0x55, 0x73, 0x65, 0x72, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x12, 0x10, 0x0a,
	0x03, 0x75, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x03, 0x75, 0x69, 0x64, 0x12,
	0x17, 0x0a, 0x07, 0x74, 0x65, 0x61, 0x6d, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x06, 0x74, 0x65, 0x61, 0x6d, 0x49, 0x64, 0x12, 0x17, 0x0a, 0x07, 0x73, 0x6b, 0x69, 0x6e,
	0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x73, 0x6b, 0x69, 0x6e, 0x49,
	0x64, 0x12, 0x10, 0x0a, 0x03, 0x6e, 0x75, 0x6d, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x03,
	0x6e, 0x75, 0x6d, 0x12, 0x19, 0x0a, 0x08, 0x61, 0x69, 0x5f, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x61, 0x69, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x12, 0x1d,
	0x0a, 0x0a, 0x68, 0x61, 0x73, 0x5f, 0x6d, 0x61, 0x67, 0x6e, 0x65, 0x74, 0x18, 0x06, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x09, 0x68, 0x61, 0x73, 0x4d, 0x61, 0x67, 0x6e, 0x65, 0x74, 0x12, 0x17, 0x0a,
	0x07, 0x6b, 0x69, 0x6c, 0x6c, 0x5f, 0x69, 0x64, 0x18, 0x07, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06,
	0x6b, 0x69, 0x6c, 0x6c, 0x49, 0x64, 0x22, 0x40, 0x0a, 0x0f, 0x45, 0x78, 0x69, 0x74, 0x52, 0x6f,
	0x6f, 0x6d, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x03, 0x75, 0x69, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x65,
	0x78, 0x69, 0x74, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08,
	0x65, 0x78, 0x69, 0x74, 0x54, 0x79, 0x70, 0x65, 0x22, 0x12, 0x0a, 0x10, 0x45, 0x78, 0x69, 0x74,
	0x52, 0x6f, 0x6f, 0x6d, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x78, 0x0a, 0x12,
	0x55, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x53, 0x63, 0x6f, 0x72, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x10, 0x0a, 0x03, 0x72, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x03, 0x72, 0x69, 0x64, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x03, 0x75, 0x69, 0x64, 0x12, 0x10, 0x0a, 0x03, 0x6e, 0x75, 0x6d, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x03, 0x6e, 0x75, 0x6d, 0x12, 0x2c, 0x0a, 0x0a, 0x73, 0x63, 0x6f, 0x72,
	0x65, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x70,
	0x62, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x53, 0x63, 0x6f, 0x72, 0x65, 0x52, 0x09, 0x73, 0x63, 0x6f,
	0x72, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x22, 0xae, 0x01, 0x0a, 0x09, 0x55, 0x73, 0x65, 0x72, 0x53,
	0x63, 0x6f, 0x72, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x03, 0x75, 0x69, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x73, 0x63, 0x6f, 0x72, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x73, 0x63, 0x6f, 0x72, 0x65, 0x12, 0x12, 0x0a, 0x04,
	0x6b, 0x69, 0x6c, 0x6c, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x6b, 0x69, 0x6c, 0x6c,
	0x12, 0x17, 0x0a, 0x07, 0x62, 0x65, 0x5f, 0x6b, 0x69, 0x6c, 0x6c, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x06, 0x62, 0x65, 0x4b, 0x69, 0x6c, 0x6c, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x6c,
	0x69, 0x76, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x72, 0x65, 0x6c, 0x69, 0x76,
	0x65, 0x12, 0x19, 0x0a, 0x08, 0x68, 0x69, 0x74, 0x5f, 0x77, 0x61, 0x6c, 0x6c, 0x18, 0x06, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x07, 0x68, 0x69, 0x74, 0x57, 0x61, 0x6c, 0x6c, 0x12, 0x19, 0x0a, 0x08,
	0x65, 0x61, 0x74, 0x5f, 0x73, 0x74, 0x61, 0x72, 0x18, 0x07, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07,
	0x65, 0x61, 0x74, 0x53, 0x74, 0x61, 0x72, 0x22, 0x11, 0x0a, 0x0f, 0x47, 0x61, 0x6d, 0x65, 0x45,
	0x6e, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x9f, 0x01, 0x0a, 0x0f, 0x52,
	0x65, 0x70, 0x6f, 0x72, 0x74, 0x52, 0x6f, 0x6f, 0x6d, 0x53, 0x63, 0x6f, 0x72, 0x65, 0x12, 0x10,
	0x0a, 0x03, 0x72, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x03, 0x72, 0x69, 0x64,
	0x12, 0x1d, 0x0a, 0x0a, 0x73, 0x74, 0x61, 0x72, 0x74, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x73, 0x74, 0x61, 0x72, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x12,
	0x19, 0x0a, 0x08, 0x65, 0x6e, 0x64, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x07, 0x65, 0x6e, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x2c, 0x0a, 0x0a, 0x73, 0x63,
	0x6f, 0x72, 0x65, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0d,
	0x2e, 0x70, 0x62, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x53, 0x63, 0x6f, 0x72, 0x65, 0x52, 0x09, 0x73,
	0x63, 0x6f, 0x72, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x75, 0x69, 0x64, 0x73,
	0x18, 0x05, 0x20, 0x03, 0x28, 0x03, 0x52, 0x04, 0x75, 0x69, 0x64, 0x73, 0x22, 0x56, 0x0a, 0x14,
	0x47, 0x65, 0x74, 0x47, 0x61, 0x6d, 0x65, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x1b, 0x0a, 0x09, 0x67, 0x61, 0x6d, 0x65, 0x5f, 0x6d, 0x6f, 0x64,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x67, 0x61, 0x6d, 0x65, 0x4d, 0x6f, 0x64,
	0x65, 0x12, 0x21, 0x0a, 0x0c, 0x6d, 0x6f, 0x64, 0x65, 0x5f, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f,
	0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0b, 0x6d, 0x6f, 0x64, 0x65, 0x56, 0x65, 0x72,
	0x73, 0x69, 0x6f, 0x6e, 0x22, 0xdd, 0x02, 0x0a, 0x11, 0x52, 0x65, 0x6c, 0x61, 0x79, 0x42, 0x69,
	0x6e, 0x64, 0x55, 0x73, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x03, 0x75, 0x69, 0x64, 0x12, 0x10, 0x0a, 0x03,
	0x72, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x03, 0x72, 0x69, 0x64, 0x12, 0x12,
	0x0a, 0x04, 0x73, 0x65, 0x65, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x73, 0x65,
	0x65, 0x64, 0x12, 0x28, 0x0a, 0x10, 0x6d, 0x61, 0x78, 0x5f, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72,
	0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0e, 0x6d, 0x61,
	0x78, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x10, 0x0a, 0x03,
	0x6e, 0x75, 0x6d, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x03, 0x6e, 0x75, 0x6d, 0x12, 0x1d,
	0x0a, 0x0a, 0x74, 0x69, 0x6d, 0x65, 0x5f, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x18, 0x06, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x4c, 0x69, 0x6d, 0x69, 0x74, 0x12, 0x1d, 0x0a,
	0x0a, 0x6d, 0x61, 0x74, 0x63, 0x68, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x09, 0x6d, 0x61, 0x74, 0x63, 0x68, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x1d, 0x0a, 0x0a,
	0x72, 0x65, 0x6c, 0x61, 0x79, 0x5f, 0x73, 0x69, 0x67, 0x6e, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0c,
	0x52, 0x09, 0x72, 0x65, 0x6c, 0x61, 0x79, 0x53, 0x69, 0x67, 0x6e, 0x12, 0x1b, 0x0a, 0x09, 0x67,
	0x61, 0x6d, 0x65, 0x5f, 0x6d, 0x6f, 0x64, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08,
	0x67, 0x61, 0x6d, 0x65, 0x4d, 0x6f, 0x64, 0x65, 0x12, 0x21, 0x0a, 0x0c, 0x6d, 0x6f, 0x64, 0x65,
	0x5f, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0b,
	0x6d, 0x6f, 0x64, 0x65, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x1a, 0x0a, 0x08, 0x70,
	0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x70,
	0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x12, 0x1b, 0x0a, 0x09, 0x75, 0x73, 0x65, 0x72, 0x5f,
	0x74, 0x79, 0x70, 0x65, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x75, 0x73, 0x65, 0x72,
	0x54, 0x79, 0x70, 0x65, 0x22, 0xdc, 0x02, 0x0a, 0x10, 0x52, 0x65, 0x6c, 0x61, 0x79, 0x42, 0x69,
	0x6e, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x03, 0x75, 0x69, 0x64, 0x12, 0x10, 0x0a, 0x03, 0x72,
	0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x03, 0x72, 0x69, 0x64, 0x12, 0x12, 0x0a,
	0x04, 0x73, 0x65, 0x65, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x73, 0x65, 0x65,
	0x64, 0x12, 0x28, 0x0a, 0x10, 0x6d, 0x61, 0x78, 0x5f, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x5f,
	0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0e, 0x6d, 0x61, 0x78,
	0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x10, 0x0a, 0x03, 0x6e,
	0x75, 0x6d, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x03, 0x6e, 0x75, 0x6d, 0x12, 0x1d, 0x0a,
	0x0a, 0x74, 0x69, 0x6d, 0x65, 0x5f, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x4c, 0x69, 0x6d, 0x69, 0x74, 0x12, 0x1d, 0x0a, 0x0a,
	0x6d, 0x61, 0x74, 0x63, 0x68, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x09, 0x6d, 0x61, 0x74, 0x63, 0x68, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x72,
	0x65, 0x6c, 0x61, 0x79, 0x5f, 0x73, 0x69, 0x67, 0x6e, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0c, 0x52,
	0x09, 0x72, 0x65, 0x6c, 0x61, 0x79, 0x53, 0x69, 0x67, 0x6e, 0x12, 0x1b, 0x0a, 0x09, 0x67, 0x61,
	0x6d, 0x65, 0x5f, 0x6d, 0x6f, 0x64, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x67,
	0x61, 0x6d, 0x65, 0x4d, 0x6f, 0x64, 0x65, 0x12, 0x21, 0x0a, 0x0c, 0x6d, 0x6f, 0x64, 0x65, 0x5f,
	0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0b, 0x6d,
	0x6f, 0x64, 0x65, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x6c,
	0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x70, 0x6c,
	0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x12, 0x1b, 0x0a, 0x09, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x74,
	0x79, 0x70, 0x65, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x75, 0x73, 0x65, 0x72, 0x54,
	0x79, 0x70, 0x65, 0x22, 0x6f, 0x0a, 0x0e, 0x52, 0x65, 0x6c, 0x61, 0x79, 0x53, 0x74, 0x61, 0x72,
	0x74, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x1d, 0x0a, 0x0a, 0x73, 0x74, 0x61, 0x72, 0x74, 0x5f, 0x74,
	0x69, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x73, 0x74, 0x61, 0x72, 0x74,
	0x54, 0x69, 0x6d, 0x65, 0x12, 0x21, 0x0a, 0x0c, 0x72, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x5f, 0x64,
	0x65, 0x6c, 0x61, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0b, 0x72, 0x65, 0x6e, 0x64,
	0x65, 0x72, 0x44, 0x65, 0x6c, 0x61, 0x79, 0x12, 0x1b, 0x0a, 0x09, 0x74, 0x75, 0x72, 0x6e, 0x5f,
	0x74, 0x69, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x74, 0x75, 0x72, 0x6e,
	0x54, 0x69, 0x6d, 0x65, 0x22, 0x9a, 0x01, 0x0a, 0x11, 0x52, 0x65, 0x6c, 0x61, 0x79, 0x42, 0x69,
	0x6e, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x31, 0x0a, 0x0a, 0x73, 0x74,
	0x61, 0x72, 0x74, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12,
	0x2e, 0x70, 0x62, 0x2e, 0x52, 0x65, 0x6c, 0x61, 0x79, 0x53, 0x74, 0x61, 0x72, 0x74, 0x49, 0x6e,
	0x66, 0x6f, 0x52, 0x09, 0x73, 0x74, 0x61, 0x72, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x14, 0x0a,
	0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x73, 0x74,
	0x61, 0x74, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x5f, 0x75, 0x69,
	0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x55,
	0x69, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x5f, 0x73, 0x69, 0x64,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x53, 0x69,
	0x64, 0x22, 0x43, 0x0a, 0x0e, 0x52, 0x65, 0x6c, 0x61, 0x79, 0x50, 0x75, 0x73, 0x68, 0x53, 0x74,
	0x61, 0x72, 0x74, 0x12, 0x31, 0x0a, 0x0a, 0x73, 0x74, 0x61, 0x72, 0x74, 0x5f, 0x69, 0x6e, 0x66,
	0x6f, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x70, 0x62, 0x2e, 0x52, 0x65, 0x6c,
	0x61, 0x79, 0x53, 0x74, 0x61, 0x72, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x09, 0x73, 0x74, 0x61,
	0x72, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x22, 0xae, 0x01, 0x0a, 0x13, 0x52, 0x65, 0x6c, 0x61, 0x79,
	0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x10,
	0x0a, 0x03, 0x75, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x03, 0x75, 0x69, 0x64,
	0x12, 0x18, 0x0a, 0x07, 0x63, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x07, 0x63, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x12, 0x25, 0x0a, 0x0e, 0x72, 0x65,
	0x76, 0x69, 0x76, 0x61, 0x6c, 0x5f, 0x6c, 0x65, 0x6e, 0x67, 0x74, 0x68, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x0d, 0x72, 0x65, 0x76, 0x69, 0x76, 0x61, 0x6c, 0x4c, 0x65, 0x6e, 0x67, 0x74,
	0x68, 0x12, 0x2e, 0x0a, 0x09, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x61, 0x74, 0x74, 0x72, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x70, 0x62, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x41, 0x74,
	0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x52, 0x08, 0x75, 0x73, 0x65, 0x72, 0x41, 0x74, 0x74,
	0x72, 0x12, 0x14, 0x0a, 0x05, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x05, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x22, 0x80, 0x01, 0x0a, 0x1b, 0x52, 0x65, 0x6c, 0x61,
	0x79, 0x47, 0x65, 0x74, 0x48, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x46, 0x72, 0x61, 0x6d, 0x65,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x26, 0x0a, 0x0f, 0x73, 0x74, 0x61, 0x72, 0x74,
	0x5f, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x6e, 0x6f, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x0d, 0x73, 0x74, 0x61, 0x72, 0x74, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x4e, 0x6f, 0x12,
	0x27, 0x0a, 0x0f, 0x73, 0x6e, 0x61, 0x70, 0x73, 0x68, 0x6f, 0x74, 0x5f, 0x6e, 0x65, 0x65, 0x64,
	0x65, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0e, 0x73, 0x6e, 0x61, 0x70, 0x73, 0x68,
	0x6f, 0x74, 0x4e, 0x65, 0x65, 0x64, 0x65, 0x64, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x69, 0x64, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x03, 0x75, 0x69, 0x64, 0x22, 0x8c, 0x02, 0x0a, 0x0c, 0x46,
	0x72, 0x61, 0x6d, 0x65, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x61,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x4e, 0x6f, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x61,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x4e, 0x6f, 0x12, 0x18, 0x0a, 0x07, 0x61, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x05, 0x52, 0x07, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x73, 0x12, 0x20, 0x0a, 0x0b, 0x72, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x55, 0x73, 0x65, 0x72, 0x73,
	0x18, 0x03, 0x20, 0x03, 0x28, 0x05, 0x52, 0x0b, 0x72, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x55, 0x73,
	0x65, 0x72, 0x73, 0x12, 0x20, 0x0a, 0x0b, 0x73, 0x68, 0x69, 0x65, 0x6c, 0x64, 0x55, 0x73, 0x65,
	0x72, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x05, 0x52, 0x0b, 0x73, 0x68, 0x69, 0x65, 0x6c, 0x64,
	0x55, 0x73, 0x65, 0x72, 0x73, 0x12, 0x1c, 0x0a, 0x09, 0x65, 0x78, 0x69, 0x74, 0x55, 0x73, 0x65,
	0x72, 0x73, 0x18, 0x05, 0x20, 0x03, 0x28, 0x05, 0x52, 0x09, 0x65, 0x78, 0x69, 0x74, 0x55, 0x73,
	0x65, 0x72, 0x73, 0x12, 0x2b, 0x0a, 0x09, 0x66, 0x61, 0x63, 0x65, 0x55, 0x73, 0x65, 0x72, 0x73,
	0x18, 0x06, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x70, 0x62, 0x2e, 0x50, 0x61, 0x72, 0x61,
	0x6d, 0x55, 0x73, 0x65, 0x72, 0x52, 0x09, 0x66, 0x61, 0x63, 0x65, 0x55, 0x73, 0x65, 0x72, 0x73,
	0x12, 0x37, 0x0a, 0x0f, 0x71, 0x75, 0x69, 0x63, 0x6b, 0x56, 0x6f, 0x69, 0x63, 0x65, 0x55, 0x73,
	0x65, 0x72, 0x73, 0x18, 0x07, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x70, 0x62, 0x2e, 0x50,
	0x61, 0x72, 0x61, 0x6d, 0x55, 0x73, 0x65, 0x72, 0x52, 0x0f, 0x71, 0x75, 0x69, 0x63, 0x6b, 0x56,
	0x6f, 0x69, 0x63, 0x65, 0x55, 0x73, 0x65, 0x72, 0x73, 0x22, 0x2b, 0x0a, 0x09, 0x50, 0x61, 0x72,
	0x61, 0x6d, 0x55, 0x73, 0x65, 0x72, 0x12, 0x10, 0x0a, 0x03, 0x6e, 0x75, 0x6d, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x03, 0x6e, 0x75, 0x6d, 0x12, 0x0c, 0x0a, 0x01, 0x70, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x01, 0x70, 0x22, 0x5e, 0x0a, 0x1c, 0x52, 0x65, 0x6c, 0x61, 0x79, 0x47,
	0x65, 0x74, 0x48, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x46, 0x72, 0x61, 0x6d, 0x65, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3e, 0x0a, 0x12, 0x66, 0x72, 0x61, 0x6d, 0x65, 0x5f,
	0x63, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x03, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x10, 0x2e, 0x70, 0x62, 0x2e, 0x46, 0x72, 0x61, 0x6d, 0x65, 0x43, 0x6f, 0x6d,
	0x6d, 0x61, 0x6e, 0x64, 0x52, 0x10, 0x66, 0x72, 0x61, 0x6d, 0x65, 0x43, 0x6f, 0x6d, 0x6d, 0x61,
	0x6e, 0x64, 0x4c, 0x69, 0x73, 0x74, 0x22, 0x3e, 0x0a, 0x12, 0x52, 0x65, 0x6c, 0x61, 0x79, 0x53,
	0x69, 0x67, 0x6e, 0x61, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x10, 0x0a, 0x03,
	0x75, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x03, 0x75, 0x69, 0x64, 0x12, 0x16,
	0x0a, 0x06, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06,
	0x73, 0x69, 0x67, 0x6e, 0x61, 0x6c, 0x22, 0x3b, 0x0a, 0x0f, 0x52, 0x65, 0x6c, 0x61, 0x79, 0x50,
	0x75, 0x73, 0x68, 0x53, 0x69, 0x67, 0x6e, 0x61, 0x6c, 0x12, 0x10, 0x0a, 0x03, 0x6e, 0x75, 0x6d,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x03, 0x6e, 0x75, 0x6d, 0x12, 0x16, 0x0a, 0x06, 0x73,
	0x69, 0x67, 0x6e, 0x61, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x73, 0x69, 0x67,
	0x6e, 0x61, 0x6c, 0x22, 0x45, 0x0a, 0x14, 0x52, 0x65, 0x6c, 0x61, 0x79, 0x45, 0x78, 0x69, 0x74,
	0x47, 0x61, 0x6d, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x10, 0x0a, 0x03, 0x75,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x03, 0x75, 0x69, 0x64, 0x12, 0x1b, 0x0a,
	0x09, 0x65, 0x78, 0x69, 0x74, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x08, 0x65, 0x78, 0x69, 0x74, 0x54, 0x79, 0x70, 0x65, 0x22, 0x61, 0x0a, 0x14, 0x52, 0x65,
	0x6c, 0x61, 0x79, 0x53, 0x6e, 0x61, 0x70, 0x53, 0x68, 0x6f, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x1b, 0x0a, 0x09, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x6e, 0x6f, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x4e, 0x6f, 0x12,
	0x1a, 0x0a, 0x08, 0x73, 0x6e, 0x61, 0x70, 0x73, 0x68, 0x6f, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0c, 0x52, 0x08, 0x73, 0x6e, 0x61, 0x70, 0x73, 0x68, 0x6f, 0x74, 0x12, 0x10, 0x0a, 0x03, 0x75,
	0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x03, 0x75, 0x69, 0x64, 0x22, 0x62, 0x0a,
	0x1b, 0x52, 0x65, 0x6c, 0x61, 0x79, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x52, 0x6f, 0x6f, 0x6d,
	0x53, 0x74, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1b, 0x0a, 0x09,
	0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x6e, 0x6f, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x08, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x4e, 0x6f, 0x12, 0x14, 0x0a, 0x05, 0x73, 0x74, 0x61,
	0x74, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x12,
	0x10, 0x0a, 0x03, 0x75, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x03, 0x75, 0x69,
	0x64, 0x22, 0x84, 0x01, 0x0a, 0x14, 0x52, 0x65, 0x6c, 0x61, 0x79, 0x43, 0x68, 0x65, 0x63, 0x6b,
	0x73, 0x75, 0x6d, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1b, 0x0a, 0x09, 0x61, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x6e, 0x6f, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x61,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x4e, 0x6f, 0x12, 0x1a, 0x0a, 0x08, 0x63, 0x68, 0x65, 0x63, 0x6b,
	0x73, 0x75, 0x6d, 0x18, 0x02, 0x20, 0x01, 0x28, 0x01, 0x52, 0x08, 0x63, 0x68, 0x65, 0x63, 0x6b,
	0x73, 0x75, 0x6d, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x03, 0x75, 0x69, 0x64, 0x12, 0x21, 0x0a, 0x0c, 0x72, 0x61, 0x6e, 0x64, 0x6f, 0x6d, 0x5f,
	0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0b, 0x72, 0x61, 0x6e,
	0x64, 0x6f, 0x6d, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x22, 0x33, 0x0a, 0x14, 0x52, 0x75, 0x73, 0x68,
	0x43, 0x68, 0x65, 0x63, 0x6b, 0x73, 0x75, 0x6d, 0x41, 0x62, 0x6e, 0x6f, 0x72, 0x6d, 0x61, 0x6c,
	0x12, 0x1b, 0x0a, 0x09, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x6e, 0x6f, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x08, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x4e, 0x6f, 0x22, 0x41, 0x0a,
	0x10, 0x52, 0x65, 0x6c, 0x61, 0x79, 0x50, 0x75, 0x73, 0x68, 0x47, 0x61, 0x6d, 0x65, 0x45, 0x6e,
	0x64, 0x12, 0x10, 0x0a, 0x03, 0x72, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x03,
	0x72, 0x69, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x6e, 0x6f,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x4e, 0x6f,
	0x22, 0x67, 0x0a, 0x17, 0x52, 0x65, 0x6c, 0x61, 0x79, 0x55, 0x64, 0x70, 0x53, 0x79, 0x6e, 0x63,
	0x54, 0x69, 0x6d, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x10, 0x0a, 0x03, 0x75,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x03, 0x75, 0x69, 0x64, 0x12, 0x19, 0x0a,
	0x08, 0x74, 0x65, 0x6d, 0x70, 0x5f, 0x73, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x07, 0x74, 0x65, 0x6d, 0x70, 0x53, 0x69, 0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x63, 0x6c, 0x69, 0x65,
	0x6e, 0x74, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x63,
	0x6c, 0x69, 0x65, 0x6e, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x22, 0x5c, 0x0a, 0x18, 0x52, 0x65, 0x6c,
	0x61, 0x79, 0x55, 0x64, 0x70, 0x53, 0x79, 0x6e, 0x63, 0x54, 0x69, 0x6d, 0x65, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x5f,
	0x74, 0x69, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x73, 0x65, 0x72, 0x76,
	0x65, 0x72, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74,
	0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x63, 0x6c, 0x69,
	0x65, 0x6e, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x22, 0xb2, 0x01, 0x0a, 0x15, 0x52, 0x65, 0x6c, 0x61,
	0x79, 0x55, 0x64, 0x70, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x5f, 0x75, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x55, 0x69, 0x64,
	0x12, 0x1d, 0x0a, 0x0a, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x5f, 0x73, 0x69, 0x64, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x53, 0x69, 0x64, 0x12,
	0x1b, 0x0a, 0x09, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x6e, 0x6f, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x08, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x4e, 0x6f, 0x12, 0x1a, 0x0a, 0x08,
	0x6d, 0x6f, 0x76, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08,
	0x6d, 0x6f, 0x76, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x22, 0x0a, 0x0d, 0x61, 0x63, 0x6b, 0x5f,
	0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x6e, 0x6f, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x0b, 0x61, 0x63, 0x6b, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x4e, 0x6f, 0x22, 0x4c, 0x0a, 0x0a,
	0x50, 0x75, 0x73, 0x68, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x3e, 0x0a, 0x12, 0x66, 0x72,
	0x61, 0x6d, 0x65, 0x5f, 0x63, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x5f, 0x6c, 0x69, 0x73, 0x74,
	0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x70, 0x62, 0x2e, 0x46, 0x72, 0x61, 0x6d,
	0x65, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x52, 0x10, 0x66, 0x72, 0x61, 0x6d, 0x65, 0x43,
	0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x4c, 0x69, 0x73, 0x74, 0x22, 0x96, 0x01, 0x0a, 0x17, 0x52,
	0x65, 0x6c, 0x61, 0x79, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x53, 0x63, 0x6f, 0x72, 0x65, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x73, 0x63, 0x6f, 0x72, 0x65, 0x5f,
	0x6c, 0x69, 0x73, 0x74, 0x18, 0x01, 0x20, 0x03, 0x28, 0x03, 0x52, 0x09, 0x73, 0x63, 0x6f, 0x72,
	0x65, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x1b, 0x0a, 0x09, 0x6b, 0x69, 0x6c, 0x6c, 0x5f, 0x6c, 0x69,
	0x73, 0x74, 0x18, 0x02, 0x20, 0x03, 0x28, 0x03, 0x52, 0x08, 0x6b, 0x69, 0x6c, 0x6c, 0x4c, 0x69,
	0x73, 0x74, 0x12, 0x1b, 0x0a, 0x09, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x6e, 0x6f, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x4e, 0x6f, 0x12,
	0x10, 0x0a, 0x03, 0x75, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x03, 0x75, 0x69,
	0x64, 0x12, 0x10, 0x0a, 0x03, 0x72, 0x69, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x03,
	0x72, 0x69, 0x64, 0x22, 0xe1, 0x01, 0x0a, 0x15, 0x52, 0x70, 0x63, 0x52, 0x65, 0x70, 0x6f, 0x72,
	0x74, 0x53, 0x63, 0x6f, 0x72, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1d, 0x0a,
	0x0a, 0x73, 0x63, 0x6f, 0x72, 0x65, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x01, 0x20, 0x03, 0x28,
	0x03, 0x52, 0x09, 0x73, 0x63, 0x6f, 0x72, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x1b, 0x0a, 0x09,
	0x6b, 0x69, 0x6c, 0x6c, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x02, 0x20, 0x03, 0x28, 0x03, 0x52,
	0x08, 0x6b, 0x69, 0x6c, 0x6c, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x10, 0x0a, 0x03, 0x72, 0x69, 0x64,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x03, 0x72, 0x69, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x73,
	0x74, 0x61, 0x72, 0x74, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x09, 0x73, 0x74, 0x61, 0x72, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x19, 0x0a, 0x08, 0x65, 0x6e,
	0x64, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x65, 0x6e,
	0x64, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x74, 0x79,
	0x70, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x75, 0x73, 0x65, 0x72, 0x54, 0x79,
	0x70, 0x65, 0x12, 0x23, 0x0a, 0x0d, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x5f, 0x73, 0x74, 0x61,
	0x74, 0x65, 0x73, 0x18, 0x07, 0x20, 0x03, 0x28, 0x05, 0x52, 0x0c, 0x70, 0x6c, 0x61, 0x79, 0x65,
	0x72, 0x53, 0x74, 0x61, 0x74, 0x65, 0x73, 0x22, 0x60, 0x0a, 0x19, 0x52, 0x70, 0x63, 0x52, 0x65,
	0x70, 0x6f, 0x72, 0x74, 0x52, 0x6f, 0x6f, 0x6d, 0x53, 0x74, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x10, 0x0a, 0x03, 0x72, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x03, 0x72, 0x69, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x12, 0x1b, 0x0a, 0x09,
	0x75, 0x73, 0x65, 0x72, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x08, 0x75, 0x73, 0x65, 0x72, 0x54, 0x79, 0x70, 0x65, 0x22, 0x69, 0x0a, 0x1d, 0x52, 0x70, 0x63,
	0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x52, 0x6f, 0x6f, 0x6d, 0x41, 0x76, 0x61, 0x69, 0x6c, 0x4e,
	0x75, 0x6d, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x10, 0x0a, 0x03, 0x72, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x03, 0x72, 0x69, 0x64, 0x12, 0x1b, 0x0a, 0x09,
	0x75, 0x73, 0x65, 0x72, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x08, 0x75, 0x73, 0x65, 0x72, 0x54, 0x79, 0x70, 0x65, 0x12, 0x19, 0x0a, 0x08, 0x6e, 0x75, 0x6d,
	0x5f, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x03, 0x20, 0x03, 0x28, 0x05, 0x52, 0x07, 0x6e, 0x75, 0x6d,
	0x4c, 0x69, 0x73, 0x74, 0x22, 0x6e, 0x0a, 0x18, 0x52, 0x70, 0x63, 0x52, 0x65, 0x70, 0x6f, 0x72,
	0x74, 0x41, 0x62, 0x6e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x10, 0x0a, 0x03, 0x72, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x03, 0x72,
	0x69, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x75, 0x73, 0x65, 0x72, 0x54, 0x79, 0x70, 0x65, 0x12,
	0x23, 0x0a, 0x0d, 0x61, 0x62, 0x6e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x5f, 0x6e, 0x75, 0x6d, 0x73,
	0x18, 0x03, 0x20, 0x03, 0x28, 0x05, 0x52, 0x0c, 0x61, 0x62, 0x6e, 0x6f, 0x72, 0x6d, 0x61, 0x6c,
	0x4e, 0x75, 0x6d, 0x73, 0x22, 0x4f, 0x0a, 0x1e, 0x52, 0x70, 0x63, 0x52, 0x65, 0x70, 0x6f, 0x72,
	0x74, 0x41, 0x62, 0x6e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x10, 0x0a, 0x03, 0x72, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x03, 0x72, 0x69, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x75, 0x73, 0x65, 0x72,
	0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x75, 0x73, 0x65,
	0x72, 0x54, 0x79, 0x70, 0x65, 0x22, 0x5d, 0x0a, 0x18, 0x52, 0x70, 0x63, 0x52, 0x65, 0x70, 0x6f,
	0x72, 0x74, 0x52, 0x6f, 0x6f, 0x6d, 0x4c, 0x6f, 0x63, 0x6b, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x10, 0x0a, 0x03, 0x72, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x03,
	0x72, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x75, 0x73, 0x65, 0x72, 0x5f,
	0x74, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x75, 0x73, 0x65, 0x72,
	0x54, 0x79, 0x70, 0x65, 0x22, 0x29, 0x0a, 0x13, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x53,
	0x74, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x75,
	0x69, 0x64, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x03, 0x52, 0x04, 0x75, 0x69, 0x64, 0x73, 0x22,
	0x37, 0x0a, 0x0d, 0x55, 0x73, 0x65, 0x72, 0x53, 0x74, 0x61, 0x74, 0x65, 0x49, 0x6e, 0x66, 0x6f,
	0x12, 0x10, 0x0a, 0x03, 0x75, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x03, 0x75,
	0x69, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x22, 0x41, 0x0a, 0x14, 0x47, 0x65, 0x74, 0x55,
	0x73, 0x65, 0x72, 0x53, 0x74, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x29, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x11, 0x2e, 0x70, 0x62, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x53, 0x74, 0x61, 0x74, 0x65, 0x49,
	0x6e, 0x66, 0x6f, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x65, 0x73, 0x22, 0x46, 0x0a, 0x1c, 0x55,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x55, 0x73, 0x65, 0x72, 0x4f, 0x6e, 0x6c, 0x69, 0x6e, 0x65, 0x53,
	0x74, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x10, 0x0a, 0x03, 0x75,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x03, 0x75, 0x69, 0x64, 0x12, 0x14, 0x0a,
	0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x73, 0x74,
	0x61, 0x74, 0x65, 0x22, 0x49, 0x0a, 0x16, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x55, 0x73, 0x65,
	0x72, 0x53, 0x74, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x19, 0x0a,
	0x08, 0x75, 0x69, 0x64, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x01, 0x20, 0x03, 0x28, 0x03, 0x52,
	0x07, 0x75, 0x69, 0x64, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x73, 0x74, 0x61, 0x74,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x22, 0x6b,
	0x0a, 0x13, 0x49, 0x6e, 0x76, 0x69, 0x74, 0x65, 0x46, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x69, 0x6e, 0x76, 0x69, 0x74, 0x65, 0x5f,
	0x75, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x69, 0x6e, 0x76, 0x69, 0x74,
	0x65, 0x55, 0x69, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x66, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x5f, 0x75,
	0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x66, 0x72, 0x69, 0x65, 0x6e, 0x64,
	0x55, 0x69, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x06, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x22, 0xaa, 0x01, 0x0a, 0x13,
	0x48, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x49, 0x6e, 0x76, 0x69, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x10, 0x0a, 0x03, 0x6d, 0x73, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6d, 0x73,
	0x67, 0x12, 0x2e, 0x0a, 0x09, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x70, 0x62, 0x2e, 0x4d, 0x61, 0x74, 0x63, 0x68, 0x55,
	0x73, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x08, 0x75, 0x73, 0x65, 0x72, 0x49, 0x6e, 0x66,
	0x6f, 0x12, 0x1d, 0x0a, 0x0a, 0x69, 0x6e, 0x76, 0x69, 0x74, 0x65, 0x5f, 0x75, 0x69, 0x64, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x69, 0x6e, 0x76, 0x69, 0x74, 0x65, 0x55, 0x69, 0x64,
	0x12, 0x16, 0x0a, 0x06, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x06, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x22, 0x89, 0x01, 0x0a, 0x0c, 0x42, 0x69, 0x6e,
	0x64, 0x55, 0x73, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x03, 0x75, 0x69, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x73,
	0x74, 0x61, 0x74, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x73, 0x74, 0x61, 0x74,
	0x65, 0x12, 0x1b, 0x0a, 0x09, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x75, 0x73, 0x65, 0x72, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1a,
	0x0a, 0x08, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x08, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x12, 0x18, 0x0a, 0x07, 0x76, 0x65,
	0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x76, 0x65, 0x72,
	0x73, 0x69, 0x6f, 0x6e, 0x22, 0x4d, 0x0a, 0x1c, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x43,
	0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2d, 0x0a, 0x09, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x6e, 0x66,
	0x6f, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x70, 0x62, 0x2e, 0x42, 0x69, 0x6e,
	0x64, 0x55, 0x73, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x08, 0x75, 0x73, 0x65, 0x72, 0x49,
	0x6e, 0x66, 0x6f, 0x22, 0xe1, 0x01, 0x0a, 0x10, 0x50, 0x75, 0x73, 0x68, 0x49, 0x6e, 0x76, 0x69,
	0x74, 0x65, 0x46, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x69, 0x6e, 0x76, 0x69,
	0x74, 0x65, 0x5f, 0x75, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x69, 0x6e,
	0x76, 0x69, 0x74, 0x65, 0x55, 0x69, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x66, 0x72, 0x69, 0x65, 0x6e,
	0x64, 0x5f, 0x75, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x66, 0x72, 0x69,
	0x65, 0x6e, 0x64, 0x55, 0x69, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x12, 0x1b,
	0x0a, 0x09, 0x67, 0x61, 0x6d, 0x65, 0x5f, 0x6d, 0x6f, 0x64, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x08, 0x67, 0x61, 0x6d, 0x65, 0x4d, 0x6f, 0x64, 0x65, 0x12, 0x21, 0x0a, 0x0c, 0x6d,
	0x6f, 0x64, 0x65, 0x5f, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x0b, 0x6d, 0x6f, 0x64, 0x65, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x1b,
	0x0a, 0x09, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x08, 0x75, 0x73, 0x65, 0x72, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x70,
	0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x18, 0x07, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x70,
	0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x22, 0x24, 0x0a, 0x10, 0x50, 0x75, 0x73, 0x68, 0x48,
	0x61, 0x6e, 0x64, 0x6c, 0x65, 0x49, 0x6e, 0x76, 0x69, 0x74, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x6d,
	0x73, 0x67, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6d, 0x73, 0x67, 0x22, 0x29, 0x0a,
	0x0a, 0x50, 0x75, 0x73, 0x68, 0x4b, 0x69, 0x63, 0x6b, 0x65, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x6f,
	0x77, 0x6e, 0x65, 0x72, 0x5f, 0x75, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08,
	0x6f, 0x77, 0x6e, 0x65, 0x72, 0x55, 0x69, 0x64, 0x22, 0x88, 0x03, 0x0a, 0x0f, 0x53, 0x65, 0x6e,
	0x64, 0x47, 0x69, 0x66, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x19, 0x0a, 0x08,
	0x73, 0x65, 0x6e, 0x64, 0x5f, 0x75, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07,
	0x73, 0x65, 0x6e, 0x64, 0x55, 0x69, 0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x72, 0x65, 0x63, 0x65, 0x69,
	0x76, 0x65, 0x5f, 0x75, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x72, 0x65,
	0x63, 0x65, 0x69, 0x76, 0x65, 0x55, 0x69, 0x64, 0x12, 0x17, 0x0a, 0x07, 0x67, 0x69, 0x66, 0x74,
	0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x67, 0x69, 0x66, 0x74, 0x49,
	0x64, 0x12, 0x2a, 0x0a, 0x06, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x0e, 0x32, 0x12, 0x2e, 0x70, 0x62, 0x2e, 0x53, 0x65, 0x6e, 0x64, 0x47, 0x69, 0x66, 0x74, 0x53,
	0x6f, 0x75, 0x72, 0x63, 0x65, 0x52, 0x06, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x12, 0x2d, 0x0a,
	0x09, 0x63, 0x6f, 0x73, 0x74, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0e,
	0x32, 0x10, 0x2e, 0x70, 0x62, 0x2e, 0x53, 0x65, 0x6e, 0x64, 0x47, 0x69, 0x66, 0x74, 0x43, 0x6f,
	0x73, 0x74, 0x52, 0x08, 0x63, 0x6f, 0x73, 0x74, 0x54, 0x79, 0x70, 0x65, 0x12, 0x10, 0x0a, 0x03,
	0x6e, 0x75, 0x6d, 0x18, 0x06, 0x20, 0x01, 0x28, 0x05, 0x52, 0x03, 0x6e, 0x75, 0x6d, 0x12, 0x10,
	0x0a, 0x03, 0x72, 0x69, 0x64, 0x18, 0x07, 0x20, 0x01, 0x28, 0x05, 0x52, 0x03, 0x72, 0x69, 0x64,
	0x12, 0x1b, 0x0a, 0x09, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x08, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x08, 0x75, 0x73, 0x65, 0x72, 0x54, 0x79, 0x70, 0x65, 0x12, 0x22, 0x0a,
	0x0d, 0x72, 0x65, 0x63, 0x5f, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x09,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x0b, 0x72, 0x65, 0x63, 0x55, 0x73, 0x65, 0x72, 0x54, 0x79, 0x70,
	0x65, 0x12, 0x10, 0x0a, 0x03, 0x65, 0x78, 0x74, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03,
	0x65, 0x78, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x0b,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x1b, 0x0a,
	0x09, 0x63, 0x6f, 0x6d, 0x62, 0x6f, 0x5f, 0x6e, 0x75, 0x6d, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x08, 0x63, 0x6f, 0x6d, 0x62, 0x6f, 0x4e, 0x75, 0x6d, 0x12, 0x17, 0x0a, 0x07, 0x62, 0x61,
	0x67, 0x5f, 0x6e, 0x75, 0x6d, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x62, 0x61, 0x67,
	0x4e, 0x75, 0x6d, 0x22, 0x87, 0x02, 0x0a, 0x0f, 0x50, 0x75, 0x73, 0x68, 0x47, 0x61, 0x6d, 0x65,
	0x45, 0x6e, 0x64, 0x4c, 0x69, 0x6b, 0x65, 0x12, 0x19, 0x0a, 0x08, 0x73, 0x65, 0x6e, 0x64, 0x5f,
	0x75, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x73, 0x65, 0x6e, 0x64, 0x55,
	0x69, 0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x72, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x5f, 0x75, 0x69,
	0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x72, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65,
	0x55, 0x69, 0x64, 0x12, 0x23, 0x0a, 0x0d, 0x73, 0x65, 0x6e, 0x64, 0x5f, 0x6e, 0x69, 0x63, 0x6b,
	0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x73, 0x65, 0x6e, 0x64,
	0x4e, 0x69, 0x63, 0x6b, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x29, 0x0a, 0x10, 0x72, 0x65, 0x63, 0x65,
	0x69, 0x76, 0x65, 0x5f, 0x6e, 0x69, 0x63, 0x6b, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0f, 0x72, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x4e, 0x69, 0x63, 0x6b, 0x6e,
	0x61, 0x6d, 0x65, 0x12, 0x23, 0x0a, 0x0d, 0x73, 0x65, 0x6e, 0x64, 0x5f, 0x67, 0x61, 0x6d, 0x65,
	0x6e, 0x61, 0x6d, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x73, 0x65, 0x6e, 0x64,
	0x47, 0x61, 0x6d, 0x65, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x29, 0x0a, 0x10, 0x72, 0x65, 0x63, 0x65,
	0x69, 0x76, 0x65, 0x5f, 0x67, 0x61, 0x6d, 0x65, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x06, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0f, 0x72, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x47, 0x61, 0x6d, 0x65, 0x6e,
	0x61, 0x6d, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x07,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x22, 0xe6, 0x01,
	0x0a, 0x0c, 0x50, 0x75, 0x73, 0x68, 0x53, 0x65, 0x6e, 0x64, 0x47, 0x69, 0x66, 0x74, 0x12, 0x19,
	0x0a, 0x08, 0x73, 0x65, 0x6e, 0x64, 0x5f, 0x75, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x07, 0x73, 0x65, 0x6e, 0x64, 0x55, 0x69, 0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x72, 0x65, 0x63,
	0x65, 0x69, 0x76, 0x65, 0x5f, 0x75, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a,
	0x72, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x55, 0x69, 0x64, 0x12, 0x23, 0x0a, 0x0d, 0x73, 0x65,
	0x6e, 0x64, 0x5f, 0x6e, 0x69, 0x63, 0x6b, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0c, 0x73, 0x65, 0x6e, 0x64, 0x4e, 0x69, 0x63, 0x6b, 0x6e, 0x61, 0x6d, 0x65, 0x12,
	0x29, 0x0a, 0x10, 0x72, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x5f, 0x6e, 0x69, 0x63, 0x6b, 0x6e,
	0x61, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x72, 0x65, 0x63, 0x65, 0x69,
	0x76, 0x65, 0x4e, 0x69, 0x63, 0x6b, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x17, 0x0a, 0x07, 0x67, 0x69,
	0x66, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x67, 0x69, 0x66,
	0x74, 0x49, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x67, 0x69, 0x66, 0x74, 0x5f, 0x6e, 0x61, 0x6d, 0x65,
	0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x67, 0x69, 0x66, 0x74, 0x4e, 0x61, 0x6d, 0x65,
	0x12, 0x14, 0x0a, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x07, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x22, 0x2a, 0x0a, 0x0f, 0x50, 0x75, 0x73, 0x68, 0x53, 0x6f,
	0x63, 0x69, 0x61, 0x6c, 0x54, 0x72, 0x65, 0x6e, 0x64, 0x12, 0x17, 0x0a, 0x07, 0x68, 0x61, 0x73,
	0x5f, 0x6e, 0x65, 0x77, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x68, 0x61, 0x73, 0x4e,
	0x65, 0x77, 0x22, 0x3a, 0x0a, 0x0c, 0x50, 0x75, 0x73, 0x68, 0x43, 0x75, 0x72, 0x72, 0x65, 0x6e,
	0x63, 0x79, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x6d, 0x61, 0x69, 0x6e,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x72, 0x65, 0x6d, 0x61, 0x69, 0x6e, 0x2a, 0x55,
	0x0a, 0x0c, 0x53, 0x65, 0x6e, 0x64, 0x47, 0x69, 0x66, 0x74, 0x43, 0x6f, 0x73, 0x74, 0x12, 0x08,
	0x0a, 0x04, 0x46, 0x72, 0x65, 0x65, 0x10, 0x00, 0x12, 0x08, 0x0a, 0x04, 0x43, 0x6f, 0x69, 0x6e,
	0x10, 0x01, 0x12, 0x0b, 0x0a, 0x07, 0x44, 0x69, 0x61, 0x6d, 0x6f, 0x6e, 0x64, 0x10, 0x02, 0x12,
	0x06, 0x0a, 0x02, 0x41, 0x64, 0x10, 0x03, 0x12, 0x09, 0x0a, 0x05, 0x53, 0x68, 0x61, 0x72, 0x65,
	0x10, 0x04, 0x12, 0x11, 0x0a, 0x0d, 0x44, 0x6f, 0x75, 0x79, 0x69, 0x6e, 0x44, 0x69, 0x61, 0x6d,
	0x6f, 0x6e, 0x64, 0x10, 0x05, 0x2a, 0x66, 0x0a, 0x0e, 0x53, 0x65, 0x6e, 0x64, 0x47, 0x69, 0x66,
	0x74, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x12, 0x11, 0x0a, 0x0d, 0x55, 0x6e, 0x6b, 0x6e, 0x6f,
	0x77, 0x6e, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x10, 0x00, 0x12, 0x15, 0x0a, 0x11, 0x51, 0x75,
	0x61, 0x6c, 0x69, 0x66, 0x79, 0x69, 0x6e, 0x67, 0x4d, 0x56, 0x50, 0x50, 0x61, 0x67, 0x65, 0x10,
	0x01, 0x12, 0x18, 0x0a, 0x14, 0x51, 0x75, 0x61, 0x6c, 0x69, 0x66, 0x79, 0x69, 0x6e, 0x67, 0x53,
	0x65, 0x74, 0x74, 0x6c, 0x65, 0x50, 0x61, 0x67, 0x65, 0x10, 0x02, 0x12, 0x10, 0x0a, 0x0c, 0x55,
	0x73, 0x65, 0x72, 0x48, 0x6f, 0x6d, 0x65, 0x50, 0x61, 0x67, 0x65, 0x10, 0x03, 0x42, 0x16, 0x5a,
	0x0c, 0x2e, 0x2e, 0x2f, 0x73, 0x6e, 0x61, 0x6b, 0x65, 0x6d, 0x69, 0x6e, 0x69, 0xa2, 0x02, 0x05,
	0x50, 0x52, 0x4f, 0x54, 0x4f, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_snakemini_export_proto_rawDescOnce sync.Once
	file_snakemini_export_proto_rawDescData = file_snakemini_export_proto_rawDesc
)

func file_snakemini_export_proto_rawDescGZIP() []byte {
	file_snakemini_export_proto_rawDescOnce.Do(func() {
		file_snakemini_export_proto_rawDescData = protoimpl.X.CompressGZIP(file_snakemini_export_proto_rawDescData)
	})
	return file_snakemini_export_proto_rawDescData
}

var file_snakemini_export_proto_enumTypes = make([]protoimpl.EnumInfo, 2)
var file_snakemini_export_proto_msgTypes = make([]protoimpl.MessageInfo, 92)
var file_snakemini_export_proto_goTypes = []interface{}{
	(SendGiftCost)(0),                      // 0: pb.SendGiftCost
	(SendGiftSource)(0),                    // 1: pb.SendGiftSource
	(*PushMsg)(nil),                        // 2: pb.PushMsg
	(*UidList)(nil),                        // 3: pb.UidList
	(*RequestHeader)(nil),                  // 4: pb.RequestHeader
	(*ResponseHeader)(nil),                 // 5: pb.ResponseHeader
	(*PushHeader)(nil),                     // 6: pb.PushHeader
	(*PbRequest)(nil),                      // 7: pb.PbRequest
	(*PbResponse)(nil),                     // 8: pb.PbResponse
	(*PbPush)(nil),                         // 9: pb.PbPush
	(*ErrInfo)(nil),                        // 10: pb.ErrInfo
	(*ReplyEmpty)(nil),                     // 11: pb.ReplyEmpty
	(*PbUdpRequest)(nil),                   // 12: pb.PbUdpRequest
	(*PbUdpPush)(nil),                      // 13: pb.PbUdpPush
	(*BindRequest)(nil),                    // 14: pb.BindRequest
	(*BindResponse)(nil),                   // 15: pb.BindResponse
	(*BindMatchInfo)(nil),                  // 16: pb.BindMatchInfo
	(*UidRequest)(nil),                     // 17: pb.UidRequest
	(*HeartBeartRequest)(nil),              // 18: pb.HeartBeartRequest
	(*HeartBeartResponse)(nil),             // 19: pb.HeartBeartResponse
	(*InGameStateReply)(nil),               // 20: pb.InGameStateReply
	(*MatchUserInfo)(nil),                  // 21: pb.MatchUserInfo
	(*CreateGroupRequest)(nil),             // 22: pb.CreateGroupRequest
	(*CreateGroupResponse)(nil),            // 23: pb.CreateGroupResponse
	(*JoinGroupRequest)(nil),               // 24: pb.JoinGroupRequest
	(*JoinGroupResponse)(nil),              // 25: pb.JoinGroupResponse
	(*ExitGroupRequest)(nil),               // 26: pb.ExitGroupRequest
	(*ExitGroupResponse)(nil),              // 27: pb.ExitGroupResponse
	(*KickRequest)(nil),                    // 28: pb.KickRequest
	(*KickResponse)(nil),                   // 29: pb.KickResponse
	(*GroupInfoPush)(nil),                  // 30: pb.GroupInfoPush
	(*GroupStatePush)(nil),                 // 31: pb.GroupStatePush
	(*GroupInfo)(nil),                      // 32: pb.GroupInfo
	(*GroupUserInfo)(nil),                  // 33: pb.GroupUserInfo
	(*StartMatchRequest)(nil),              // 34: pb.StartMatchRequest
	(*StartMatchResponse)(nil),             // 35: pb.StartMatchResponse
	(*CancelMatchRequest)(nil),             // 36: pb.CancelMatchRequest
	(*MatchSucPush)(nil),                   // 37: pb.MatchSucPush
	(*MatchInfo)(nil),                      // 38: pb.MatchInfo
	(*UserAttribute)(nil),                  // 39: pb.UserAttribute
	(*ExitRoomRequest)(nil),                // 40: pb.ExitRoomRequest
	(*ExitRoomResponse)(nil),               // 41: pb.ExitRoomResponse
	(*UploadScoreRequest)(nil),             // 42: pb.UploadScoreRequest
	(*UserScore)(nil),                      // 43: pb.UserScore
	(*GameEndResponse)(nil),                // 44: pb.GameEndResponse
	(*ReportRoomScore)(nil),                // 45: pb.ReportRoomScore
	(*GetGameConfigRequest)(nil),           // 46: pb.GetGameConfigRequest
	(*RelayBindUserInfo)(nil),              // 47: pb.RelayBindUserInfo
	(*RelayBindRequest)(nil),               // 48: pb.RelayBindRequest
	(*RelayStartInfo)(nil),                 // 49: pb.RelayStartInfo
	(*RelayBindResponse)(nil),              // 50: pb.RelayBindResponse
	(*RelayPushStart)(nil),                 // 51: pb.RelayPushStart
	(*RelayCommandRequest)(nil),            // 52: pb.RelayCommandRequest
	(*RelayGetHistoryFrameRequest)(nil),    // 53: pb.RelayGetHistoryFrameRequest
	(*FrameCommand)(nil),                   // 54: pb.FrameCommand
	(*ParamUser)(nil),                      // 55: pb.ParamUser
	(*RelayGetHistoryFrameResponse)(nil),   // 56: pb.RelayGetHistoryFrameResponse
	(*RelaySignalRequest)(nil),             // 57: pb.RelaySignalRequest
	(*RelayPushSignal)(nil),                // 58: pb.RelayPushSignal
	(*RelayExitGameRequest)(nil),           // 59: pb.RelayExitGameRequest
	(*RelaySnapShotRequest)(nil),           // 60: pb.RelaySnapShotRequest
	(*RelayReportRoomStateRequest)(nil),    // 61: pb.RelayReportRoomStateRequest
	(*RelayChecksumRequest)(nil),           // 62: pb.RelayChecksumRequest
	(*RushChecksumAbnormal)(nil),           // 63: pb.RushChecksumAbnormal
	(*RelayPushGameEnd)(nil),               // 64: pb.RelayPushGameEnd
	(*RelayUdpSyncTimeRequest)(nil),        // 65: pb.RelayUdpSyncTimeRequest
	(*RelayUdpSyncTimeResponse)(nil),       // 66: pb.RelayUdpSyncTimeResponse
	(*RelayUdpActionRequest)(nil),          // 67: pb.RelayUdpActionRequest
	(*PushAction)(nil),                     // 68: pb.PushAction
	(*RelayReportScoreRequest)(nil),        // 69: pb.RelayReportScoreRequest
	(*RpcReportScoreRequest)(nil),          // 70: pb.RpcReportScoreRequest
	(*RpcReportRoomStateRequest)(nil),      // 71: pb.RpcReportRoomStateRequest
	(*RpcReportRoomAvailNumsRequest)(nil),  // 72: pb.RpcReportRoomAvailNumsRequest
	(*RpcReportAbnormalRequest)(nil),       // 73: pb.RpcReportAbnormalRequest
	(*RpcReportAbnormalNotifyRequest)(nil), // 74: pb.RpcReportAbnormalNotifyRequest
	(*RpcReportRoomLockRequest)(nil),       // 75: pb.RpcReportRoomLockRequest
	(*GetUserStateRequest)(nil),            // 76: pb.GetUserStateRequest
	(*UserStateInfo)(nil),                  // 77: pb.UserStateInfo
	(*GetUserStateResponse)(nil),           // 78: pb.GetUserStateResponse
	(*UpdateUserOnlineStateRequest)(nil),   // 79: pb.UpdateUserOnlineStateRequest
	(*UpdateUserStateRequest)(nil),         // 80: pb.UpdateUserStateRequest
	(*InviteFriendRequest)(nil),            // 81: pb.InviteFriendRequest
	(*HandleInviteRequest)(nil),            // 82: pb.HandleInviteRequest
	(*BindUserInfo)(nil),                   // 83: pb.BindUserInfo
	(*GetUserConnectorInfoResponse)(nil),   // 84: pb.GetUserConnectorInfoResponse
	(*PushInviteFriend)(nil),               // 85: pb.PushInviteFriend
	(*PushHandleInvite)(nil),               // 86: pb.PushHandleInvite
	(*PushKicked)(nil),                     // 87: pb.PushKicked
	(*SendGiftRequest)(nil),                // 88: pb.SendGiftRequest
	(*PushGameEndLike)(nil),                // 89: pb.PushGameEndLike
	(*PushSendGift)(nil),                   // 90: pb.PushSendGift
	(*PushSocialTrend)(nil),                // 91: pb.PushSocialTrend
	(*PushCurrency)(nil),                   // 92: pb.PushCurrency
	nil,                                    // 93: pb.UidRequest.CmdMapEntry
}
var file_snakemini_export_proto_depIdxs = []int32{
	4,  // 0: pb.PbRequest.header:type_name -> pb.RequestHeader
	5,  // 1: pb.PbResponse.header:type_name -> pb.ResponseHeader
	6,  // 2: pb.PbPush.header:type_name -> pb.PushHeader
	10, // 3: pb.ReplyEmpty.err:type_name -> pb.ErrInfo
	67, // 4: pb.PbUdpRequest.action:type_name -> pb.RelayUdpActionRequest
	68, // 5: pb.PbUdpPush.puaction:type_name -> pb.PushAction
	32, // 6: pb.BindMatchInfo.group_info:type_name -> pb.GroupInfo
	38, // 7: pb.BindMatchInfo.match_info:type_name -> pb.MatchInfo
	93, // 8: pb.UidRequest.cmdMap:type_name -> pb.UidRequest.CmdMapEntry
	10, // 9: pb.InGameStateReply.err:type_name -> pb.ErrInfo
	21, // 10: pb.CreateGroupRequest.user_info:type_name -> pb.MatchUserInfo
	21, // 11: pb.JoinGroupRequest.user_info:type_name -> pb.MatchUserInfo
	32, // 12: pb.JoinGroupResponse.group_info:type_name -> pb.GroupInfo
	32, // 13: pb.GroupInfoPush.group_info:type_name -> pb.GroupInfo
	33, // 14: pb.GroupInfo.user_infos:type_name -> pb.GroupUserInfo
	21, // 15: pb.StartMatchRequest.user_info:type_name -> pb.MatchUserInfo
	38, // 16: pb.MatchSucPush.match_info:type_name -> pb.MatchInfo
	39, // 17: pb.MatchInfo.user_attr:type_name -> pb.UserAttribute
	43, // 18: pb.UploadScoreRequest.score_list:type_name -> pb.UserScore
	43, // 19: pb.ReportRoomScore.score_list:type_name -> pb.UserScore
	49, // 20: pb.RelayBindResponse.start_info:type_name -> pb.RelayStartInfo
	49, // 21: pb.RelayPushStart.start_info:type_name -> pb.RelayStartInfo
	39, // 22: pb.RelayCommandRequest.user_attr:type_name -> pb.UserAttribute
	55, // 23: pb.FrameCommand.faceUsers:type_name -> pb.ParamUser
	55, // 24: pb.FrameCommand.quickVoiceUsers:type_name -> pb.ParamUser
	54, // 25: pb.RelayGetHistoryFrameResponse.frame_command_list:type_name -> pb.FrameCommand
	54, // 26: pb.PushAction.frame_command_list:type_name -> pb.FrameCommand
	77, // 27: pb.GetUserStateResponse.states:type_name -> pb.UserStateInfo
	21, // 28: pb.HandleInviteRequest.user_info:type_name -> pb.MatchUserInfo
	83, // 29: pb.GetUserConnectorInfoResponse.user_info:type_name -> pb.BindUserInfo
	1,  // 30: pb.SendGiftRequest.source:type_name -> pb.SendGiftSource
	0,  // 31: pb.SendGiftRequest.cost_type:type_name -> pb.SendGiftCost
	32, // [32:32] is the sub-list for method output_type
	32, // [32:32] is the sub-list for method input_type
	32, // [32:32] is the sub-list for extension type_name
	32, // [32:32] is the sub-list for extension extendee
	0,  // [0:32] is the sub-list for field type_name
}

func init() { file_snakemini_export_proto_init() }
func file_snakemini_export_proto_init() {
	if File_snakemini_export_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_snakemini_export_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PushMsg); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_snakemini_export_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UidList); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_snakemini_export_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RequestHeader); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_snakemini_export_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ResponseHeader); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_snakemini_export_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PushHeader); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_snakemini_export_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PbRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_snakemini_export_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PbResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_snakemini_export_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PbPush); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_snakemini_export_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ErrInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_snakemini_export_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReplyEmpty); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_snakemini_export_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PbUdpRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_snakemini_export_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PbUdpPush); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_snakemini_export_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BindRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_snakemini_export_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BindResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_snakemini_export_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BindMatchInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_snakemini_export_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UidRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_snakemini_export_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*HeartBeartRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_snakemini_export_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*HeartBeartResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_snakemini_export_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*InGameStateReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_snakemini_export_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MatchUserInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_snakemini_export_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateGroupRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_snakemini_export_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateGroupResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_snakemini_export_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*JoinGroupRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_snakemini_export_proto_msgTypes[23].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*JoinGroupResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_snakemini_export_proto_msgTypes[24].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ExitGroupRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_snakemini_export_proto_msgTypes[25].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ExitGroupResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_snakemini_export_proto_msgTypes[26].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*KickRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_snakemini_export_proto_msgTypes[27].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*KickResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_snakemini_export_proto_msgTypes[28].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GroupInfoPush); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_snakemini_export_proto_msgTypes[29].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GroupStatePush); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_snakemini_export_proto_msgTypes[30].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GroupInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_snakemini_export_proto_msgTypes[31].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GroupUserInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_snakemini_export_proto_msgTypes[32].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StartMatchRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_snakemini_export_proto_msgTypes[33].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StartMatchResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_snakemini_export_proto_msgTypes[34].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CancelMatchRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_snakemini_export_proto_msgTypes[35].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MatchSucPush); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_snakemini_export_proto_msgTypes[36].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MatchInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_snakemini_export_proto_msgTypes[37].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserAttribute); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_snakemini_export_proto_msgTypes[38].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ExitRoomRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_snakemini_export_proto_msgTypes[39].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ExitRoomResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_snakemini_export_proto_msgTypes[40].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UploadScoreRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_snakemini_export_proto_msgTypes[41].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserScore); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_snakemini_export_proto_msgTypes[42].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GameEndResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_snakemini_export_proto_msgTypes[43].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReportRoomScore); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_snakemini_export_proto_msgTypes[44].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetGameConfigRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_snakemini_export_proto_msgTypes[45].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RelayBindUserInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_snakemini_export_proto_msgTypes[46].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RelayBindRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_snakemini_export_proto_msgTypes[47].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RelayStartInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_snakemini_export_proto_msgTypes[48].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RelayBindResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_snakemini_export_proto_msgTypes[49].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RelayPushStart); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_snakemini_export_proto_msgTypes[50].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RelayCommandRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_snakemini_export_proto_msgTypes[51].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RelayGetHistoryFrameRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_snakemini_export_proto_msgTypes[52].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FrameCommand); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_snakemini_export_proto_msgTypes[53].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ParamUser); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_snakemini_export_proto_msgTypes[54].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RelayGetHistoryFrameResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_snakemini_export_proto_msgTypes[55].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RelaySignalRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_snakemini_export_proto_msgTypes[56].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RelayPushSignal); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_snakemini_export_proto_msgTypes[57].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RelayExitGameRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_snakemini_export_proto_msgTypes[58].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RelaySnapShotRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_snakemini_export_proto_msgTypes[59].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RelayReportRoomStateRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_snakemini_export_proto_msgTypes[60].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RelayChecksumRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_snakemini_export_proto_msgTypes[61].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RushChecksumAbnormal); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_snakemini_export_proto_msgTypes[62].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RelayPushGameEnd); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_snakemini_export_proto_msgTypes[63].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RelayUdpSyncTimeRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_snakemini_export_proto_msgTypes[64].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RelayUdpSyncTimeResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_snakemini_export_proto_msgTypes[65].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RelayUdpActionRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_snakemini_export_proto_msgTypes[66].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PushAction); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_snakemini_export_proto_msgTypes[67].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RelayReportScoreRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_snakemini_export_proto_msgTypes[68].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RpcReportScoreRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_snakemini_export_proto_msgTypes[69].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RpcReportRoomStateRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_snakemini_export_proto_msgTypes[70].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RpcReportRoomAvailNumsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_snakemini_export_proto_msgTypes[71].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RpcReportAbnormalRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_snakemini_export_proto_msgTypes[72].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RpcReportAbnormalNotifyRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_snakemini_export_proto_msgTypes[73].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RpcReportRoomLockRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_snakemini_export_proto_msgTypes[74].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetUserStateRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_snakemini_export_proto_msgTypes[75].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserStateInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_snakemini_export_proto_msgTypes[76].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetUserStateResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_snakemini_export_proto_msgTypes[77].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateUserOnlineStateRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_snakemini_export_proto_msgTypes[78].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateUserStateRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_snakemini_export_proto_msgTypes[79].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*InviteFriendRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_snakemini_export_proto_msgTypes[80].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*HandleInviteRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_snakemini_export_proto_msgTypes[81].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BindUserInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_snakemini_export_proto_msgTypes[82].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetUserConnectorInfoResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_snakemini_export_proto_msgTypes[83].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PushInviteFriend); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_snakemini_export_proto_msgTypes[84].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PushHandleInvite); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_snakemini_export_proto_msgTypes[85].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PushKicked); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_snakemini_export_proto_msgTypes[86].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SendGiftRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_snakemini_export_proto_msgTypes[87].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PushGameEndLike); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_snakemini_export_proto_msgTypes[88].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PushSendGift); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_snakemini_export_proto_msgTypes[89].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PushSocialTrend); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_snakemini_export_proto_msgTypes[90].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PushCurrency); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_snakemini_export_proto_rawDesc,
			NumEnums:      2,
			NumMessages:   92,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_snakemini_export_proto_goTypes,
		DependencyIndexes: file_snakemini_export_proto_depIdxs,
		EnumInfos:         file_snakemini_export_proto_enumTypes,
		MessageInfos:      file_snakemini_export_proto_msgTypes,
	}.Build()
	File_snakemini_export_proto = out.File
	file_snakemini_export_proto_rawDesc = nil
	file_snakemini_export_proto_goTypes = nil
	file_snakemini_export_proto_depIdxs = nil
}
