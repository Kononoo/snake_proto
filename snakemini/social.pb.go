// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.27.1
// 	protoc        v3.16.1
// source: snakemini/social.proto

package snakemini

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// 聊天频道类型
type ChannelType int32

const (
	ChannelType_UnkownChannelType ChannelType = 0 // 未知
	ChannelType_World             ChannelType = 1 // 世界频道
	ChannelType_Single            ChannelType = 2 // 私聊
	ChannelType_Room              ChannelType = 3 // 赛后频道
	ChannelType_TmpTeam           ChannelType = 4 // 临时小队频道
	ChannelType_AreaTop           ChannelType = 5 // 地域榜
)

// Enum value maps for ChannelType.
var (
	ChannelType_name = map[int32]string{
		0: "UnkownChannelType",
		1: "World",
		2: "Single",
		3: "Room",
		4: "TmpTeam",
		5: "AreaTop",
	}
	ChannelType_value = map[string]int32{
		"UnkownChannelType": 0,
		"World":             1,
		"Single":            2,
		"Room":              3,
		"TmpTeam":           4,
		"AreaTop":           5,
	}
)

func (x ChannelType) Enum() *ChannelType {
	p := new(ChannelType)
	*p = x
	return p
}

func (x ChannelType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ChannelType) Descriptor() protoreflect.EnumDescriptor {
	return file_snakemini_social_proto_enumTypes[0].Descriptor()
}

func (ChannelType) Type() protoreflect.EnumType {
	return &file_snakemini_social_proto_enumTypes[0]
}

func (x ChannelType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ChannelType.Descriptor instead.
func (ChannelType) EnumDescriptor() ([]byte, []int) {
	return file_snakemini_social_proto_rawDescGZIP(), []int{0}
}

// 消息类型
type MessageType int32

const (
	MessageType_UnkownMessageType    MessageType = 0 // 未知
	MessageType_SystemMessage        MessageType = 1 // 系统消息
	MessageType_TextMessage          MessageType = 2 // 文本消息
	MessageType_EmojiMessage         MessageType = 3 // 表情消息
	MessageType_InviteMessage        MessageType = 4 // 组队邀请消息
	MessageType_GiftMessage          MessageType = 5 // 礼物消息
	MessageType_TmpTeamInviteMessage MessageType = 6 // 临时小队邀请消息
)

// Enum value maps for MessageType.
var (
	MessageType_name = map[int32]string{
		0: "UnkownMessageType",
		1: "SystemMessage",
		2: "TextMessage",
		3: "EmojiMessage",
		4: "InviteMessage",
		5: "GiftMessage",
		6: "TmpTeamInviteMessage",
	}
	MessageType_value = map[string]int32{
		"UnkownMessageType":    0,
		"SystemMessage":        1,
		"TextMessage":          2,
		"EmojiMessage":         3,
		"InviteMessage":        4,
		"GiftMessage":          5,
		"TmpTeamInviteMessage": 6,
	}
)

func (x MessageType) Enum() *MessageType {
	p := new(MessageType)
	*p = x
	return p
}

func (x MessageType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (MessageType) Descriptor() protoreflect.EnumDescriptor {
	return file_snakemini_social_proto_enumTypes[1].Descriptor()
}

func (MessageType) Type() protoreflect.EnumType {
	return &file_snakemini_social_proto_enumTypes[1]
}

func (x MessageType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use MessageType.Descriptor instead.
func (MessageType) EnumDescriptor() ([]byte, []int) {
	return file_snakemini_social_proto_rawDescGZIP(), []int{1}
}

type MessageSubType int32

const (
	MessageSubType_DefaultSubType MessageSubType = 0 // 默认
	MessageSubType_Quik           MessageSubType = 1 // 快捷语
	MessageSubType_Hello          MessageSubType = 2 // 打招呼,对sender不可见
)

// Enum value maps for MessageSubType.
var (
	MessageSubType_name = map[int32]string{
		0: "DefaultSubType",
		1: "Quik",
		2: "Hello",
	}
	MessageSubType_value = map[string]int32{
		"DefaultSubType": 0,
		"Quik":           1,
		"Hello":          2,
	}
)

func (x MessageSubType) Enum() *MessageSubType {
	p := new(MessageSubType)
	*p = x
	return p
}

func (x MessageSubType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (MessageSubType) Descriptor() protoreflect.EnumDescriptor {
	return file_snakemini_social_proto_enumTypes[2].Descriptor()
}

func (MessageSubType) Type() protoreflect.EnumType {
	return &file_snakemini_social_proto_enumTypes[2]
}

func (x MessageSubType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use MessageSubType.Descriptor instead.
func (MessageSubType) EnumDescriptor() ([]byte, []int) {
	return file_snakemini_social_proto_rawDescGZIP(), []int{2}
}

type Message struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MessageId      string         `protobuf:"bytes,1,opt,name=messageId,proto3" json:"messageId,omitempty"`                                   // 消息ID，全局唯一
	Sender         int64          `protobuf:"varint,2,opt,name=sender,proto3" json:"sender,omitempty"`                                        // 发送人uid
	MessageType    MessageType    `protobuf:"varint,3,opt,name=messageType,proto3,enum=pb.MessageType" json:"messageType,omitempty"`          // 消息类型
	Content        []byte         `protobuf:"bytes,4,opt,name=content,proto3" json:"content,omitempty"`                                       // 根据 messageType 确定为不同的 Content 序列化
	Time           int64          `protobuf:"varint,6,opt,name=time,proto3" json:"time,omitempty"`                                            // 消息发送时间，unix微秒时间戳
	MessageSubType MessageSubType `protobuf:"varint,7,opt,name=messageSubType,proto3,enum=pb.MessageSubType" json:"messageSubType,omitempty"` // 消息子类型
}

func (x *Message) Reset() {
	*x = Message{}
	if protoimpl.UnsafeEnabled {
		mi := &file_snakemini_social_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Message) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Message) ProtoMessage() {}

func (x *Message) ProtoReflect() protoreflect.Message {
	mi := &file_snakemini_social_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Message.ProtoReflect.Descriptor instead.
func (*Message) Descriptor() ([]byte, []int) {
	return file_snakemini_social_proto_rawDescGZIP(), []int{0}
}

func (x *Message) GetMessageId() string {
	if x != nil {
		return x.MessageId
	}
	return ""
}

func (x *Message) GetSender() int64 {
	if x != nil {
		return x.Sender
	}
	return 0
}

func (x *Message) GetMessageType() MessageType {
	if x != nil {
		return x.MessageType
	}
	return MessageType_UnkownMessageType
}

func (x *Message) GetContent() []byte {
	if x != nil {
		return x.Content
	}
	return nil
}

func (x *Message) GetTime() int64 {
	if x != nil {
		return x.Time
	}
	return 0
}

func (x *Message) GetMessageSubType() MessageSubType {
	if x != nil {
		return x.MessageSubType
	}
	return MessageSubType_DefaultSubType
}

// 系统消息
type SystemContent struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Value string `protobuf:"bytes,1,opt,name=value,proto3" json:"value,omitempty"` // 文本内容
}

func (x *SystemContent) Reset() {
	*x = SystemContent{}
	if protoimpl.UnsafeEnabled {
		mi := &file_snakemini_social_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SystemContent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SystemContent) ProtoMessage() {}

func (x *SystemContent) ProtoReflect() protoreflect.Message {
	mi := &file_snakemini_social_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SystemContent.ProtoReflect.Descriptor instead.
func (*SystemContent) Descriptor() ([]byte, []int) {
	return file_snakemini_social_proto_rawDescGZIP(), []int{1}
}

func (x *SystemContent) GetValue() string {
	if x != nil {
		return x.Value
	}
	return ""
}

// 普通文本消息
type TextContent struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Value string `protobuf:"bytes,1,opt,name=value,proto3" json:"value,omitempty"` // 文本内容
}

func (x *TextContent) Reset() {
	*x = TextContent{}
	if protoimpl.UnsafeEnabled {
		mi := &file_snakemini_social_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TextContent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TextContent) ProtoMessage() {}

func (x *TextContent) ProtoReflect() protoreflect.Message {
	mi := &file_snakemini_social_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TextContent.ProtoReflect.Descriptor instead.
func (*TextContent) Descriptor() ([]byte, []int) {
	return file_snakemini_social_proto_rawDescGZIP(), []int{2}
}

func (x *TextContent) GetValue() string {
	if x != nil {
		return x.Value
	}
	return ""
}

type EmojiContent struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	EmojiId string `protobuf:"bytes,1,opt,name=emojiId,proto3" json:"emojiId,omitempty"` // 表情ID
}

func (x *EmojiContent) Reset() {
	*x = EmojiContent{}
	if protoimpl.UnsafeEnabled {
		mi := &file_snakemini_social_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EmojiContent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EmojiContent) ProtoMessage() {}

func (x *EmojiContent) ProtoReflect() protoreflect.Message {
	mi := &file_snakemini_social_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EmojiContent.ProtoReflect.Descriptor instead.
func (*EmojiContent) Descriptor() ([]byte, []int) {
	return file_snakemini_social_proto_rawDescGZIP(), []int{3}
}

func (x *EmojiContent) GetEmojiId() string {
	if x != nil {
		return x.EmojiId
	}
	return ""
}

type InviteContent struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	GroupId     int64 `protobuf:"varint,1,opt,name=groupId,proto3" json:"groupId,omitempty"`         // 队伍ID
	GameMode    int32 `protobuf:"varint,2,opt,name=gameMode,proto3" json:"gameMode,omitempty"`       // 游戏模式
	ModeVersion int64 `protobuf:"varint,3,opt,name=modeVersion,proto3" json:"modeVersion,omitempty"` // 游戏版本，不同版本需屏蔽
	State       int32 `protobuf:"varint,4,opt,name=state,proto3" json:"state,omitempty"`             // 队伍状态 1 组队中 2 匹配中 3 解散(过期)
	Limit       int32 `protobuf:"varint,5,opt,name=limit,proto3" json:"limit,omitempty"`             // 人数上限
	Count       int32 `protobuf:"varint,6,opt,name=count,proto3" json:"count,omitempty"`             // 当前人数
	ExpireTs    int64 `protobuf:"varint,7,opt,name=expireTs,proto3" json:"expireTs,omitempty"`       // 邀请过期时间，毫秒
	Owner       int64 `protobuf:"varint,8,opt,name=owner,proto3" json:"owner,omitempty"`             // 房主
}

func (x *InviteContent) Reset() {
	*x = InviteContent{}
	if protoimpl.UnsafeEnabled {
		mi := &file_snakemini_social_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *InviteContent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InviteContent) ProtoMessage() {}

func (x *InviteContent) ProtoReflect() protoreflect.Message {
	mi := &file_snakemini_social_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InviteContent.ProtoReflect.Descriptor instead.
func (*InviteContent) Descriptor() ([]byte, []int) {
	return file_snakemini_social_proto_rawDescGZIP(), []int{4}
}

func (x *InviteContent) GetGroupId() int64 {
	if x != nil {
		return x.GroupId
	}
	return 0
}

func (x *InviteContent) GetGameMode() int32 {
	if x != nil {
		return x.GameMode
	}
	return 0
}

func (x *InviteContent) GetModeVersion() int64 {
	if x != nil {
		return x.ModeVersion
	}
	return 0
}

func (x *InviteContent) GetState() int32 {
	if x != nil {
		return x.State
	}
	return 0
}

func (x *InviteContent) GetLimit() int32 {
	if x != nil {
		return x.Limit
	}
	return 0
}

func (x *InviteContent) GetCount() int32 {
	if x != nil {
		return x.Count
	}
	return 0
}

func (x *InviteContent) GetExpireTs() int64 {
	if x != nil {
		return x.ExpireTs
	}
	return 0
}

func (x *InviteContent) GetOwner() int64 {
	if x != nil {
		return x.Owner
	}
	return 0
}

type GiftContent struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SendUid         int64  `protobuf:"varint,1,opt,name=sendUid,proto3" json:"sendUid,omitempty"`                // 送礼人uid
	ReceiveUid      int64  `protobuf:"varint,2,opt,name=receiveUid,proto3" json:"receiveUid,omitempty"`          // 收礼人uid
	SendNickname    string `protobuf:"bytes,3,opt,name=sendNickname,proto3" json:"sendNickname,omitempty"`       // 送礼人昵称
	ReceiveNickname string `protobuf:"bytes,4,opt,name=receiveNickname,proto3" json:"receiveNickname,omitempty"` // 收礼人昵称
	GiftId          int32  `protobuf:"varint,5,opt,name=giftId,proto3" json:"giftId,omitempty"`                  // 礼物ID
	GiftName        string `protobuf:"bytes,6,opt,name=giftName,proto3" json:"giftName,omitempty"`               // 礼物名称
	Count           int32  `protobuf:"varint,7,opt,name=count,proto3" json:"count,omitempty"`                    // 送礼个数
	Dedication      string `protobuf:"bytes,8,opt,name=dedication,proto3" json:"dedication,omitempty"`           // 送礼赠言
}

func (x *GiftContent) Reset() {
	*x = GiftContent{}
	if protoimpl.UnsafeEnabled {
		mi := &file_snakemini_social_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GiftContent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GiftContent) ProtoMessage() {}

func (x *GiftContent) ProtoReflect() protoreflect.Message {
	mi := &file_snakemini_social_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GiftContent.ProtoReflect.Descriptor instead.
func (*GiftContent) Descriptor() ([]byte, []int) {
	return file_snakemini_social_proto_rawDescGZIP(), []int{5}
}

func (x *GiftContent) GetSendUid() int64 {
	if x != nil {
		return x.SendUid
	}
	return 0
}

func (x *GiftContent) GetReceiveUid() int64 {
	if x != nil {
		return x.ReceiveUid
	}
	return 0
}

func (x *GiftContent) GetSendNickname() string {
	if x != nil {
		return x.SendNickname
	}
	return ""
}

func (x *GiftContent) GetReceiveNickname() string {
	if x != nil {
		return x.ReceiveNickname
	}
	return ""
}

func (x *GiftContent) GetGiftId() int32 {
	if x != nil {
		return x.GiftId
	}
	return 0
}

func (x *GiftContent) GetGiftName() string {
	if x != nil {
		return x.GiftName
	}
	return ""
}

func (x *GiftContent) GetCount() int32 {
	if x != nil {
		return x.Count
	}
	return 0
}

func (x *GiftContent) GetDedication() string {
	if x != nil {
		return x.Dedication
	}
	return ""
}

type TmpTeamInviteContent struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TeamId   int64 `protobuf:"varint,1,opt,name=teamId,proto3" json:"teamId,omitempty"`     // 队伍ID
	Limit    int32 `protobuf:"varint,5,opt,name=limit,proto3" json:"limit,omitempty"`       // 人数上限
	Count    int32 `protobuf:"varint,6,opt,name=count,proto3" json:"count,omitempty"`       // 当前人数
	ExpireTs int64 `protobuf:"varint,7,opt,name=expireTs,proto3" json:"expireTs,omitempty"` // 邀请过期时间，毫秒
	Owner    int64 `protobuf:"varint,8,opt,name=owner,proto3" json:"owner,omitempty"`       // 房主
}

func (x *TmpTeamInviteContent) Reset() {
	*x = TmpTeamInviteContent{}
	if protoimpl.UnsafeEnabled {
		mi := &file_snakemini_social_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TmpTeamInviteContent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TmpTeamInviteContent) ProtoMessage() {}

func (x *TmpTeamInviteContent) ProtoReflect() protoreflect.Message {
	mi := &file_snakemini_social_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TmpTeamInviteContent.ProtoReflect.Descriptor instead.
func (*TmpTeamInviteContent) Descriptor() ([]byte, []int) {
	return file_snakemini_social_proto_rawDescGZIP(), []int{6}
}

func (x *TmpTeamInviteContent) GetTeamId() int64 {
	if x != nil {
		return x.TeamId
	}
	return 0
}

func (x *TmpTeamInviteContent) GetLimit() int32 {
	if x != nil {
		return x.Limit
	}
	return 0
}

func (x *TmpTeamInviteContent) GetCount() int32 {
	if x != nil {
		return x.Count
	}
	return 0
}

func (x *TmpTeamInviteContent) GetExpireTs() int64 {
	if x != nil {
		return x.ExpireTs
	}
	return 0
}

func (x *TmpTeamInviteContent) GetOwner() int64 {
	if x != nil {
		return x.Owner
	}
	return 0
}

// commandId=sendmsg
type SendMessageReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ChannelType    ChannelType    `protobuf:"varint,1,opt,name=channelType,proto3,enum=pb.ChannelType" json:"channelType,omitempty"`          // 频道类型
	Target         string         `protobuf:"bytes,2,opt,name=target,proto3" json:"target,omitempty"`                                         // 发送目标，私聊为目标用户uid，其余不填
	MessageType    MessageType    `protobuf:"varint,3,opt,name=messageType,proto3,enum=pb.MessageType" json:"messageType,omitempty"`          // 消息类型
	Content        []byte         `protobuf:"bytes,4,opt,name=content,proto3" json:"content,omitempty"`                                       // 消息内容，用对应MessageType的Content解析
	MessageSubType MessageSubType `protobuf:"varint,6,opt,name=messageSubType,proto3,enum=pb.MessageSubType" json:"messageSubType,omitempty"` // 消息子类型
}

func (x *SendMessageReq) Reset() {
	*x = SendMessageReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_snakemini_social_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SendMessageReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SendMessageReq) ProtoMessage() {}

func (x *SendMessageReq) ProtoReflect() protoreflect.Message {
	mi := &file_snakemini_social_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SendMessageReq.ProtoReflect.Descriptor instead.
func (*SendMessageReq) Descriptor() ([]byte, []int) {
	return file_snakemini_social_proto_rawDescGZIP(), []int{7}
}

func (x *SendMessageReq) GetChannelType() ChannelType {
	if x != nil {
		return x.ChannelType
	}
	return ChannelType_UnkownChannelType
}

func (x *SendMessageReq) GetTarget() string {
	if x != nil {
		return x.Target
	}
	return ""
}

func (x *SendMessageReq) GetMessageType() MessageType {
	if x != nil {
		return x.MessageType
	}
	return MessageType_UnkownMessageType
}

func (x *SendMessageReq) GetContent() []byte {
	if x != nil {
		return x.Content
	}
	return nil
}

func (x *SendMessageReq) GetMessageSubType() MessageSubType {
	if x != nil {
		return x.MessageSubType
	}
	return MessageSubType_DefaultSubType
}

type SendMessageResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MessageId string `protobuf:"bytes,1,opt,name=messageId,proto3" json:"messageId,omitempty"` // 消息ID
}

func (x *SendMessageResp) Reset() {
	*x = SendMessageResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_snakemini_social_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SendMessageResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SendMessageResp) ProtoMessage() {}

func (x *SendMessageResp) ProtoReflect() protoreflect.Message {
	mi := &file_snakemini_social_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SendMessageResp.ProtoReflect.Descriptor instead.
func (*SendMessageResp) Descriptor() ([]byte, []int) {
	return file_snakemini_social_proto_rawDescGZIP(), []int{8}
}

func (x *SendMessageResp) GetMessageId() string {
	if x != nil {
		return x.MessageId
	}
	return ""
}

// commandId=getmsglist
type GetMessageListReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ChannelType ChannelType `protobuf:"varint,1,opt,name=channelType,proto3,enum=pb.ChannelType" json:"channelType,omitempty"` // 频道类型
	Target      string      `protobuf:"bytes,2,opt,name=target,proto3" json:"target,omitempty"`                                // 发送目标，私聊为目标用户uid，其余不填
	MaxMsgTime  int64       `protobuf:"varint,3,opt,name=maxMsgTime,proto3" json:"maxMsgTime,omitempty"`                       // 最新一条消息时间戳，默认0，翻看历史记录
	Page        int64       `protobuf:"varint,21,opt,name=page,proto3" json:"page,omitempty"`
	PageSize    int64       `protobuf:"varint,22,opt,name=pageSize,proto3" json:"pageSize,omitempty"`
}

func (x *GetMessageListReq) Reset() {
	*x = GetMessageListReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_snakemini_social_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetMessageListReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetMessageListReq) ProtoMessage() {}

func (x *GetMessageListReq) ProtoReflect() protoreflect.Message {
	mi := &file_snakemini_social_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetMessageListReq.ProtoReflect.Descriptor instead.
func (*GetMessageListReq) Descriptor() ([]byte, []int) {
	return file_snakemini_social_proto_rawDescGZIP(), []int{9}
}

func (x *GetMessageListReq) GetChannelType() ChannelType {
	if x != nil {
		return x.ChannelType
	}
	return ChannelType_UnkownChannelType
}

func (x *GetMessageListReq) GetTarget() string {
	if x != nil {
		return x.Target
	}
	return ""
}

func (x *GetMessageListReq) GetMaxMsgTime() int64 {
	if x != nil {
		return x.MaxMsgTime
	}
	return 0
}

func (x *GetMessageListReq) GetPage() int64 {
	if x != nil {
		return x.Page
	}
	return 0
}

func (x *GetMessageListReq) GetPageSize() int64 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

type GetMessageListResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MessageList []*Message `protobuf:"bytes,1,rep,name=messageList,proto3" json:"messageList,omitempty"`
}

func (x *GetMessageListResp) Reset() {
	*x = GetMessageListResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_snakemini_social_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetMessageListResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetMessageListResp) ProtoMessage() {}

func (x *GetMessageListResp) ProtoReflect() protoreflect.Message {
	mi := &file_snakemini_social_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetMessageListResp.ProtoReflect.Descriptor instead.
func (*GetMessageListResp) Descriptor() ([]byte, []int) {
	return file_snakemini_social_proto_rawDescGZIP(), []int{10}
}

func (x *GetMessageListResp) GetMessageList() []*Message {
	if x != nil {
		return x.MessageList
	}
	return nil
}

// commandId=newmessage
type PushNewMessage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Message     *Message      `protobuf:"bytes,1,opt,name=message,proto3" json:"message,omitempty"`                              // 消息内容
	ChannelType ChannelType   `protobuf:"varint,2,opt,name=channelType,proto3,enum=pb.ChannelType" json:"channelType,omitempty"` // 频道类型
	ChannelId   string        `protobuf:"bytes,3,opt,name=channelId,proto3" json:"channelId,omitempty"`                          // 发送频道ID，私聊为目标用户uid，赛后为房间ID
	SenderInfo  *ChatUserInfo `protobuf:"bytes,4,opt,name=senderInfo,proto3" json:"senderInfo,omitempty"`                        // 发送人信息
}

func (x *PushNewMessage) Reset() {
	*x = PushNewMessage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_snakemini_social_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PushNewMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PushNewMessage) ProtoMessage() {}

func (x *PushNewMessage) ProtoReflect() protoreflect.Message {
	mi := &file_snakemini_social_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PushNewMessage.ProtoReflect.Descriptor instead.
func (*PushNewMessage) Descriptor() ([]byte, []int) {
	return file_snakemini_social_proto_rawDescGZIP(), []int{11}
}

func (x *PushNewMessage) GetMessage() *Message {
	if x != nil {
		return x.Message
	}
	return nil
}

func (x *PushNewMessage) GetChannelType() ChannelType {
	if x != nil {
		return x.ChannelType
	}
	return ChannelType_UnkownChannelType
}

func (x *PushNewMessage) GetChannelId() string {
	if x != nil {
		return x.ChannelId
	}
	return ""
}

func (x *PushNewMessage) GetSenderInfo() *ChatUserInfo {
	if x != nil {
		return x.SenderInfo
	}
	return nil
}

type SingleChat struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TargetUid int64 `protobuf:"varint,1,opt,name=targetUid,proto3" json:"targetUid,omitempty"` // 目标用户uid
}

func (x *SingleChat) Reset() {
	*x = SingleChat{}
	if protoimpl.UnsafeEnabled {
		mi := &file_snakemini_social_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SingleChat) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SingleChat) ProtoMessage() {}

func (x *SingleChat) ProtoReflect() protoreflect.Message {
	mi := &file_snakemini_social_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SingleChat.ProtoReflect.Descriptor instead.
func (*SingleChat) Descriptor() ([]byte, []int) {
	return file_snakemini_social_proto_rawDescGZIP(), []int{12}
}

func (x *SingleChat) GetTargetUid() int64 {
	if x != nil {
		return x.TargetUid
	}
	return 0
}

// commandId=singlechatlist
type GetSingleChatListReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *GetSingleChatListReq) Reset() {
	*x = GetSingleChatListReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_snakemini_social_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetSingleChatListReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetSingleChatListReq) ProtoMessage() {}

func (x *GetSingleChatListReq) ProtoReflect() protoreflect.Message {
	mi := &file_snakemini_social_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetSingleChatListReq.ProtoReflect.Descriptor instead.
func (*GetSingleChatListReq) Descriptor() ([]byte, []int) {
	return file_snakemini_social_proto_rawDescGZIP(), []int{13}
}

type GetSingleChatListResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SingleChatList []*SingleChat `protobuf:"bytes,1,rep,name=singleChatList,proto3" json:"singleChatList,omitempty"`
}

func (x *GetSingleChatListResp) Reset() {
	*x = GetSingleChatListResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_snakemini_social_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetSingleChatListResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetSingleChatListResp) ProtoMessage() {}

func (x *GetSingleChatListResp) ProtoReflect() protoreflect.Message {
	mi := &file_snakemini_social_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetSingleChatListResp.ProtoReflect.Descriptor instead.
func (*GetSingleChatListResp) Descriptor() ([]byte, []int) {
	return file_snakemini_social_proto_rawDescGZIP(), []int{14}
}

func (x *GetSingleChatListResp) GetSingleChatList() []*SingleChat {
	if x != nil {
		return x.SingleChatList
	}
	return nil
}

// commandId=createsinglechat
type CreateSingleChatReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TargetUid int64 `protobuf:"varint,1,opt,name=targetUid,proto3" json:"targetUid,omitempty"` // 目标用户uid
}

func (x *CreateSingleChatReq) Reset() {
	*x = CreateSingleChatReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_snakemini_social_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateSingleChatReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateSingleChatReq) ProtoMessage() {}

func (x *CreateSingleChatReq) ProtoReflect() protoreflect.Message {
	mi := &file_snakemini_social_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateSingleChatReq.ProtoReflect.Descriptor instead.
func (*CreateSingleChatReq) Descriptor() ([]byte, []int) {
	return file_snakemini_social_proto_rawDescGZIP(), []int{15}
}

func (x *CreateSingleChatReq) GetTargetUid() int64 {
	if x != nil {
		return x.TargetUid
	}
	return 0
}

type CreateSingleChatResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *CreateSingleChatResp) Reset() {
	*x = CreateSingleChatResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_snakemini_social_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateSingleChatResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateSingleChatResp) ProtoMessage() {}

func (x *CreateSingleChatResp) ProtoReflect() protoreflect.Message {
	mi := &file_snakemini_social_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateSingleChatResp.ProtoReflect.Descriptor instead.
func (*CreateSingleChatResp) Descriptor() ([]byte, []int) {
	return file_snakemini_social_proto_rawDescGZIP(), []int{16}
}

// commandId=deletesinglechat
type DeleteSingleChatReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TargetUid int64 `protobuf:"varint,1,opt,name=targetUid,proto3" json:"targetUid,omitempty"` // 目标用户uid
}

func (x *DeleteSingleChatReq) Reset() {
	*x = DeleteSingleChatReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_snakemini_social_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteSingleChatReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteSingleChatReq) ProtoMessage() {}

func (x *DeleteSingleChatReq) ProtoReflect() protoreflect.Message {
	mi := &file_snakemini_social_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteSingleChatReq.ProtoReflect.Descriptor instead.
func (*DeleteSingleChatReq) Descriptor() ([]byte, []int) {
	return file_snakemini_social_proto_rawDescGZIP(), []int{17}
}

func (x *DeleteSingleChatReq) GetTargetUid() int64 {
	if x != nil {
		return x.TargetUid
	}
	return 0
}

type DeleteSingleChatResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *DeleteSingleChatResp) Reset() {
	*x = DeleteSingleChatResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_snakemini_social_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteSingleChatResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteSingleChatResp) ProtoMessage() {}

func (x *DeleteSingleChatResp) ProtoReflect() protoreflect.Message {
	mi := &file_snakemini_social_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteSingleChatResp.ProtoReflect.Descriptor instead.
func (*DeleteSingleChatResp) Descriptor() ([]byte, []int) {
	return file_snakemini_social_proto_rawDescGZIP(), []int{18}
}

// commandId=leaveroomchat
type LeaveRoomChatReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RoomId int64 `protobuf:"varint,1,opt,name=roomId,proto3" json:"roomId,omitempty"` // 房间ID
}

func (x *LeaveRoomChatReq) Reset() {
	*x = LeaveRoomChatReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_snakemini_social_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LeaveRoomChatReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LeaveRoomChatReq) ProtoMessage() {}

func (x *LeaveRoomChatReq) ProtoReflect() protoreflect.Message {
	mi := &file_snakemini_social_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LeaveRoomChatReq.ProtoReflect.Descriptor instead.
func (*LeaveRoomChatReq) Descriptor() ([]byte, []int) {
	return file_snakemini_social_proto_rawDescGZIP(), []int{19}
}

func (x *LeaveRoomChatReq) GetRoomId() int64 {
	if x != nil {
		return x.RoomId
	}
	return 0
}

type LeaveRoomChatResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *LeaveRoomChatResp) Reset() {
	*x = LeaveRoomChatResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_snakemini_social_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LeaveRoomChatResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LeaveRoomChatResp) ProtoMessage() {}

func (x *LeaveRoomChatResp) ProtoReflect() protoreflect.Message {
	mi := &file_snakemini_social_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LeaveRoomChatResp.ProtoReflect.Descriptor instead.
func (*LeaveRoomChatResp) Descriptor() ([]byte, []int) {
	return file_snakemini_social_proto_rawDescGZIP(), []int{20}
}

// commandId=createroomchat
type PushCreateRoomChat struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Rid      int64       `protobuf:"varint,1,opt,name=rid,proto3" json:"rid,omitempty"`                // 房间ID
	UidList  []int64     `protobuf:"varint,2,rep,packed,name=uidList,proto3" json:"uidList,omitempty"` // 用户列表
	TeamList []*TeamInfo `protobuf:"bytes,3,rep,name=teamList,proto3" json:"teamList,omitempty"`       // 队伍信息
}

func (x *PushCreateRoomChat) Reset() {
	*x = PushCreateRoomChat{}
	if protoimpl.UnsafeEnabled {
		mi := &file_snakemini_social_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PushCreateRoomChat) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PushCreateRoomChat) ProtoMessage() {}

func (x *PushCreateRoomChat) ProtoReflect() protoreflect.Message {
	mi := &file_snakemini_social_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PushCreateRoomChat.ProtoReflect.Descriptor instead.
func (*PushCreateRoomChat) Descriptor() ([]byte, []int) {
	return file_snakemini_social_proto_rawDescGZIP(), []int{21}
}

func (x *PushCreateRoomChat) GetRid() int64 {
	if x != nil {
		return x.Rid
	}
	return 0
}

func (x *PushCreateRoomChat) GetUidList() []int64 {
	if x != nil {
		return x.UidList
	}
	return nil
}

func (x *PushCreateRoomChat) GetTeamList() []*TeamInfo {
	if x != nil {
		return x.TeamList
	}
	return nil
}

type TeamInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TeamId  int32   `protobuf:"varint,1,opt,name=teamId,proto3" json:"teamId,omitempty"`          // 队伍ID
	UidList []int64 `protobuf:"varint,2,rep,packed,name=uidList,proto3" json:"uidList,omitempty"` // 用户列表
}

func (x *TeamInfo) Reset() {
	*x = TeamInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_snakemini_social_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TeamInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TeamInfo) ProtoMessage() {}

func (x *TeamInfo) ProtoReflect() protoreflect.Message {
	mi := &file_snakemini_social_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TeamInfo.ProtoReflect.Descriptor instead.
func (*TeamInfo) Descriptor() ([]byte, []int) {
	return file_snakemini_social_proto_rawDescGZIP(), []int{22}
}

func (x *TeamInfo) GetTeamId() int32 {
	if x != nil {
		return x.TeamId
	}
	return 0
}

func (x *TeamInfo) GetUidList() []int64 {
	if x != nil {
		return x.UidList
	}
	return nil
}

// commandId=deleteroomchat
type PushDeleteRoomChat struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Rid int64 `protobuf:"varint,1,opt,name=rid,proto3" json:"rid,omitempty"` // 房间ID
}

func (x *PushDeleteRoomChat) Reset() {
	*x = PushDeleteRoomChat{}
	if protoimpl.UnsafeEnabled {
		mi := &file_snakemini_social_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PushDeleteRoomChat) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PushDeleteRoomChat) ProtoMessage() {}

func (x *PushDeleteRoomChat) ProtoReflect() protoreflect.Message {
	mi := &file_snakemini_social_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PushDeleteRoomChat.ProtoReflect.Descriptor instead.
func (*PushDeleteRoomChat) Descriptor() ([]byte, []int) {
	return file_snakemini_social_proto_rawDescGZIP(), []int{23}
}

func (x *PushDeleteRoomChat) GetRid() int64 {
	if x != nil {
		return x.Rid
	}
	return 0
}

// commandId=updateinvite
type PushUpdateInvite struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	GroupId     int64  `protobuf:"varint,1,opt,name=groupId,proto3" json:"groupId,omitempty"`         // 队伍ID
	GameMode    int32  `protobuf:"varint,2,opt,name=gameMode,proto3" json:"gameMode,omitempty"`       // 游戏模式
	ModeVersion int64  `protobuf:"varint,3,opt,name=modeVersion,proto3" json:"modeVersion,omitempty"` // 游戏版本，不同版本需屏蔽
	State       int32  `protobuf:"varint,4,opt,name=state,proto3" json:"state,omitempty"`             // 队伍状态 1 组队中 2 匹配中 3 解散(过期)
	Limit       int32  `protobuf:"varint,5,opt,name=limit,proto3" json:"limit,omitempty"`             // 人数上限
	Count       int32  `protobuf:"varint,6,opt,name=count,proto3" json:"count,omitempty"`             // 当前人数
	ExpireTs    int64  `protobuf:"varint,7,opt,name=expireTs,proto3" json:"expireTs,omitempty"`       // 邀请过期时间，毫秒
	Owner       int64  `protobuf:"varint,8,opt,name=Owner,proto3" json:"Owner,omitempty"`             // 房主
	MessageId   string `protobuf:"bytes,9,opt,name=messageId,proto3" json:"messageId,omitempty"`      // 消息ID
}

func (x *PushUpdateInvite) Reset() {
	*x = PushUpdateInvite{}
	if protoimpl.UnsafeEnabled {
		mi := &file_snakemini_social_proto_msgTypes[24]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PushUpdateInvite) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PushUpdateInvite) ProtoMessage() {}

func (x *PushUpdateInvite) ProtoReflect() protoreflect.Message {
	mi := &file_snakemini_social_proto_msgTypes[24]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PushUpdateInvite.ProtoReflect.Descriptor instead.
func (*PushUpdateInvite) Descriptor() ([]byte, []int) {
	return file_snakemini_social_proto_rawDescGZIP(), []int{24}
}

func (x *PushUpdateInvite) GetGroupId() int64 {
	if x != nil {
		return x.GroupId
	}
	return 0
}

func (x *PushUpdateInvite) GetGameMode() int32 {
	if x != nil {
		return x.GameMode
	}
	return 0
}

func (x *PushUpdateInvite) GetModeVersion() int64 {
	if x != nil {
		return x.ModeVersion
	}
	return 0
}

func (x *PushUpdateInvite) GetState() int32 {
	if x != nil {
		return x.State
	}
	return 0
}

func (x *PushUpdateInvite) GetLimit() int32 {
	if x != nil {
		return x.Limit
	}
	return 0
}

func (x *PushUpdateInvite) GetCount() int32 {
	if x != nil {
		return x.Count
	}
	return 0
}

func (x *PushUpdateInvite) GetExpireTs() int64 {
	if x != nil {
		return x.ExpireTs
	}
	return 0
}

func (x *PushUpdateInvite) GetOwner() int64 {
	if x != nil {
		return x.Owner
	}
	return 0
}

func (x *PushUpdateInvite) GetMessageId() string {
	if x != nil {
		return x.MessageId
	}
	return ""
}

// commandId=invitelist
type InviteListReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *InviteListReq) Reset() {
	*x = InviteListReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_snakemini_social_proto_msgTypes[25]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *InviteListReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InviteListReq) ProtoMessage() {}

func (x *InviteListReq) ProtoReflect() protoreflect.Message {
	mi := &file_snakemini_social_proto_msgTypes[25]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InviteListReq.ProtoReflect.Descriptor instead.
func (*InviteListReq) Descriptor() ([]byte, []int) {
	return file_snakemini_social_proto_rawDescGZIP(), []int{25}
}

type InviteListRsp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	GroupInfoList []*PushUpdateInvite `protobuf:"bytes,2,rep,name=groupInfoList,proto3" json:"groupInfoList,omitempty"` // 队伍信息列表
}

func (x *InviteListRsp) Reset() {
	*x = InviteListRsp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_snakemini_social_proto_msgTypes[26]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *InviteListRsp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InviteListRsp) ProtoMessage() {}

func (x *InviteListRsp) ProtoReflect() protoreflect.Message {
	mi := &file_snakemini_social_proto_msgTypes[26]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InviteListRsp.ProtoReflect.Descriptor instead.
func (*InviteListRsp) Descriptor() ([]byte, []int) {
	return file_snakemini_social_proto_rawDescGZIP(), []int{26}
}

func (x *InviteListRsp) GetGroupInfoList() []*PushUpdateInvite {
	if x != nil {
		return x.GroupInfoList
	}
	return nil
}

// 聊天窗口显示的用户信息
type ChatUserInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Uid          int64  `protobuf:"varint,1,opt,name=uid,proto3" json:"uid,omitempty"`                                          // 用户uid
	Nickname     string `protobuf:"bytes,2,opt,name=nickname,proto3" json:"nickname,omitempty"`                                 // 用户昵称
	Avatar       string `protobuf:"bytes,3,opt,name=avatar,proto3" json:"avatar,omitempty"`                                     // 用户头像
	Gender       int32  `protobuf:"varint,4,opt,name=gender,proto3" json:"gender,omitempty"`                                    // 用户性别
	Show         int64  `protobuf:"varint,5,opt,name=show,proto3" json:"show,omitempty"`                                        // show值
	BoxId        int32  `protobuf:"varint,6,opt,name=box_id,json=boxId,proto3" json:"box_id,omitempty"`                         // 头像框
	Area         string `protobuf:"bytes,7,opt,name=area,proto3" json:"area,omitempty"`                                         // 用户地区
	Charm        int64  `protobuf:"varint,8,opt,name=charm,proto3" json:"charm,omitempty"`                                      // 魅力值
	Star         int64  `protobuf:"varint,9,opt,name=star,proto3" json:"star,omitempty"`                                        // 段位
	ChatBubbleId int32  `protobuf:"varint,10,opt,name=chat_bubble_id,json=chatBubbleId,proto3" json:"chat_bubble_id,omitempty"` // 聊天气泡
}

func (x *ChatUserInfo) Reset() {
	*x = ChatUserInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_snakemini_social_proto_msgTypes[27]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ChatUserInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChatUserInfo) ProtoMessage() {}

func (x *ChatUserInfo) ProtoReflect() protoreflect.Message {
	mi := &file_snakemini_social_proto_msgTypes[27]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChatUserInfo.ProtoReflect.Descriptor instead.
func (*ChatUserInfo) Descriptor() ([]byte, []int) {
	return file_snakemini_social_proto_rawDescGZIP(), []int{27}
}

func (x *ChatUserInfo) GetUid() int64 {
	if x != nil {
		return x.Uid
	}
	return 0
}

func (x *ChatUserInfo) GetNickname() string {
	if x != nil {
		return x.Nickname
	}
	return ""
}

func (x *ChatUserInfo) GetAvatar() string {
	if x != nil {
		return x.Avatar
	}
	return ""
}

func (x *ChatUserInfo) GetGender() int32 {
	if x != nil {
		return x.Gender
	}
	return 0
}

func (x *ChatUserInfo) GetShow() int64 {
	if x != nil {
		return x.Show
	}
	return 0
}

func (x *ChatUserInfo) GetBoxId() int32 {
	if x != nil {
		return x.BoxId
	}
	return 0
}

func (x *ChatUserInfo) GetArea() string {
	if x != nil {
		return x.Area
	}
	return ""
}

func (x *ChatUserInfo) GetCharm() int64 {
	if x != nil {
		return x.Charm
	}
	return 0
}

func (x *ChatUserInfo) GetStar() int64 {
	if x != nil {
		return x.Star
	}
	return 0
}

func (x *ChatUserInfo) GetChatBubbleId() int32 {
	if x != nil {
		return x.ChatBubbleId
	}
	return 0
}

var File_snakemini_social_proto protoreflect.FileDescriptor

var file_snakemini_social_proto_rawDesc = []byte{
	0x0a, 0x16, 0x73, 0x6e, 0x61, 0x6b, 0x65, 0x6d, 0x69, 0x6e, 0x69, 0x2f, 0x73, 0x6f, 0x63, 0x69,
	0x61, 0x6c, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x02, 0x70, 0x62, 0x22, 0xdc, 0x01, 0x0a,
	0x07, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x6d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x6d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x49, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x65, 0x6e, 0x64, 0x65, 0x72,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x73, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x12, 0x31,
	0x0a, 0x0b, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x54, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x0e, 0x32, 0x0f, 0x2e, 0x70, 0x62, 0x2e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x54, 0x79, 0x70, 0x65, 0x52, 0x0b, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x54, 0x79, 0x70,
	0x65, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x0c, 0x52, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x74,
	0x69, 0x6d, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x74, 0x69, 0x6d, 0x65, 0x12,
	0x3a, 0x0a, 0x0e, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x53, 0x75, 0x62, 0x54, 0x79, 0x70,
	0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x12, 0x2e, 0x70, 0x62, 0x2e, 0x4d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x53, 0x75, 0x62, 0x54, 0x79, 0x70, 0x65, 0x52, 0x0e, 0x6d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x53, 0x75, 0x62, 0x54, 0x79, 0x70, 0x65, 0x22, 0x25, 0x0a, 0x0d, 0x53,
	0x79, 0x73, 0x74, 0x65, 0x6d, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x12, 0x14, 0x0a, 0x05,
	0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c,
	0x75, 0x65, 0x22, 0x23, 0x0a, 0x0b, 0x54, 0x65, 0x78, 0x74, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e,
	0x74, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x28, 0x0a, 0x0c, 0x45, 0x6d, 0x6f, 0x6a, 0x69,
	0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x65, 0x6d, 0x6f, 0x6a, 0x69,
	0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x65, 0x6d, 0x6f, 0x6a, 0x69, 0x49,
	0x64, 0x22, 0xdb, 0x01, 0x0a, 0x0d, 0x49, 0x6e, 0x76, 0x69, 0x74, 0x65, 0x43, 0x6f, 0x6e, 0x74,
	0x65, 0x6e, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x49, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x49, 0x64, 0x12, 0x1a, 0x0a,
	0x08, 0x67, 0x61, 0x6d, 0x65, 0x4d, 0x6f, 0x64, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x08, 0x67, 0x61, 0x6d, 0x65, 0x4d, 0x6f, 0x64, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x6d, 0x6f, 0x64,
	0x65, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0b,
	0x6d, 0x6f, 0x64, 0x65, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x14, 0x0a, 0x05, 0x73,
	0x74, 0x61, 0x74, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x73, 0x74, 0x61, 0x74,
	0x65, 0x12, 0x14, 0x0a, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74,
	0x18, 0x06, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x1a, 0x0a,
	0x08, 0x65, 0x78, 0x70, 0x69, 0x72, 0x65, 0x54, 0x73, 0x18, 0x07, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x08, 0x65, 0x78, 0x70, 0x69, 0x72, 0x65, 0x54, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x6f, 0x77, 0x6e,
	0x65, 0x72, 0x18, 0x08, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x6f, 0x77, 0x6e, 0x65, 0x72, 0x22,
	0xff, 0x01, 0x0a, 0x0b, 0x47, 0x69, 0x66, 0x74, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x12,
	0x18, 0x0a, 0x07, 0x73, 0x65, 0x6e, 0x64, 0x55, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x07, 0x73, 0x65, 0x6e, 0x64, 0x55, 0x69, 0x64, 0x12, 0x1e, 0x0a, 0x0a, 0x72, 0x65, 0x63,
	0x65, 0x69, 0x76, 0x65, 0x55, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x72,
	0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x55, 0x69, 0x64, 0x12, 0x22, 0x0a, 0x0c, 0x73, 0x65, 0x6e,
	0x64, 0x4e, 0x69, 0x63, 0x6b, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0c, 0x73, 0x65, 0x6e, 0x64, 0x4e, 0x69, 0x63, 0x6b, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x28, 0x0a,
	0x0f, 0x72, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x4e, 0x69, 0x63, 0x6b, 0x6e, 0x61, 0x6d, 0x65,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x72, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x4e,
	0x69, 0x63, 0x6b, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x67, 0x69, 0x66, 0x74, 0x49,
	0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x67, 0x69, 0x66, 0x74, 0x49, 0x64, 0x12,
	0x1a, 0x0a, 0x08, 0x67, 0x69, 0x66, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x08, 0x67, 0x69, 0x66, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x63,
	0x6f, 0x75, 0x6e, 0x74, 0x18, 0x07, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x63, 0x6f, 0x75, 0x6e,
	0x74, 0x12, 0x1e, 0x0a, 0x0a, 0x64, 0x65, 0x64, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18,
	0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x64, 0x65, 0x64, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x22, 0x8c, 0x01, 0x0a, 0x14, 0x54, 0x6d, 0x70, 0x54, 0x65, 0x61, 0x6d, 0x49, 0x6e, 0x76,
	0x69, 0x74, 0x65, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x74, 0x65,
	0x61, 0x6d, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x74, 0x65, 0x61, 0x6d,
	0x49, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x63, 0x6f, 0x75, 0x6e,
	0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x1a,
	0x0a, 0x08, 0x65, 0x78, 0x70, 0x69, 0x72, 0x65, 0x54, 0x73, 0x18, 0x07, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x08, 0x65, 0x78, 0x70, 0x69, 0x72, 0x65, 0x54, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x6f, 0x77,
	0x6e, 0x65, 0x72, 0x18, 0x08, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x6f, 0x77, 0x6e, 0x65, 0x72,
	0x22, 0xe4, 0x01, 0x0a, 0x0e, 0x53, 0x65, 0x6e, 0x64, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x52, 0x65, 0x71, 0x12, 0x31, 0x0a, 0x0b, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x54, 0x79,
	0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x0f, 0x2e, 0x70, 0x62, 0x2e, 0x43, 0x68,
	0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x54, 0x79, 0x70, 0x65, 0x52, 0x0b, 0x63, 0x68, 0x61, 0x6e, 0x6e,
	0x65, 0x6c, 0x54, 0x79, 0x70, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x12, 0x31,
	0x0a, 0x0b, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x54, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x0e, 0x32, 0x0f, 0x2e, 0x70, 0x62, 0x2e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x54, 0x79, 0x70, 0x65, 0x52, 0x0b, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x54, 0x79, 0x70,
	0x65, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x0c, 0x52, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x12, 0x3a, 0x0a, 0x0e, 0x6d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x53, 0x75, 0x62, 0x54, 0x79, 0x70, 0x65, 0x18, 0x06, 0x20,
	0x01, 0x28, 0x0e, 0x32, 0x12, 0x2e, 0x70, 0x62, 0x2e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x53, 0x75, 0x62, 0x54, 0x79, 0x70, 0x65, 0x52, 0x0e, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x53, 0x75, 0x62, 0x54, 0x79, 0x70, 0x65, 0x22, 0x2f, 0x0a, 0x0f, 0x53, 0x65, 0x6e, 0x64, 0x4d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x52, 0x65, 0x73, 0x70, 0x12, 0x1c, 0x0a, 0x09, 0x6d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x6d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x49, 0x64, 0x22, 0xae, 0x01, 0x0a, 0x11, 0x47, 0x65, 0x74,
	0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x12, 0x31,
	0x0a, 0x0b, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x54, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0e, 0x32, 0x0f, 0x2e, 0x70, 0x62, 0x2e, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c,
	0x54, 0x79, 0x70, 0x65, 0x52, 0x0b, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x54, 0x79, 0x70,
	0x65, 0x12, 0x16, 0x0a, 0x06, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x06, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x12, 0x1e, 0x0a, 0x0a, 0x6d, 0x61, 0x78,
	0x4d, 0x73, 0x67, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x6d,
	0x61, 0x78, 0x4d, 0x73, 0x67, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x61, 0x67,
	0x65, 0x18, 0x15, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x70, 0x61, 0x67, 0x65, 0x12, 0x1a, 0x0a,
	0x08, 0x70, 0x61, 0x67, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x18, 0x16, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x08, 0x70, 0x61, 0x67, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x22, 0x43, 0x0a, 0x12, 0x47, 0x65, 0x74,
	0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x12,
	0x2d, 0x0a, 0x0b, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x18, 0x01,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x0b, 0x2e, 0x70, 0x62, 0x2e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x52, 0x0b, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x22, 0xba,
	0x01, 0x0a, 0x0e, 0x50, 0x75, 0x73, 0x68, 0x4e, 0x65, 0x77, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x12, 0x25, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x0b, 0x2e, 0x70, 0x62, 0x2e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x52,
	0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x31, 0x0a, 0x0b, 0x63, 0x68, 0x61, 0x6e,
	0x6e, 0x65, 0x6c, 0x54, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x0f, 0x2e,
	0x70, 0x62, 0x2e, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x54, 0x79, 0x70, 0x65, 0x52, 0x0b,
	0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x63,
	0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x49, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09,
	0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x49, 0x64, 0x12, 0x30, 0x0a, 0x0a, 0x73, 0x65, 0x6e,
	0x64, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e,
	0x70, 0x62, 0x2e, 0x43, 0x68, 0x61, 0x74, 0x55, 0x73, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x52,
	0x0a, 0x73, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x22, 0x2a, 0x0a, 0x0a, 0x53,
	0x69, 0x6e, 0x67, 0x6c, 0x65, 0x43, 0x68, 0x61, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x74, 0x61, 0x72,
	0x67, 0x65, 0x74, 0x55, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x74, 0x61,
	0x72, 0x67, 0x65, 0x74, 0x55, 0x69, 0x64, 0x22, 0x16, 0x0a, 0x14, 0x47, 0x65, 0x74, 0x53, 0x69,
	0x6e, 0x67, 0x6c, 0x65, 0x43, 0x68, 0x61, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x22,
	0x4f, 0x0a, 0x15, 0x47, 0x65, 0x74, 0x53, 0x69, 0x6e, 0x67, 0x6c, 0x65, 0x43, 0x68, 0x61, 0x74,
	0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x12, 0x36, 0x0a, 0x0e, 0x73, 0x69, 0x6e, 0x67,
	0x6c, 0x65, 0x43, 0x68, 0x61, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x0e, 0x2e, 0x70, 0x62, 0x2e, 0x53, 0x69, 0x6e, 0x67, 0x6c, 0x65, 0x43, 0x68, 0x61, 0x74,
	0x52, 0x0e, 0x73, 0x69, 0x6e, 0x67, 0x6c, 0x65, 0x43, 0x68, 0x61, 0x74, 0x4c, 0x69, 0x73, 0x74,
	0x22, 0x33, 0x0a, 0x13, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x53, 0x69, 0x6e, 0x67, 0x6c, 0x65,
	0x43, 0x68, 0x61, 0x74, 0x52, 0x65, 0x71, 0x12, 0x1c, 0x0a, 0x09, 0x74, 0x61, 0x72, 0x67, 0x65,
	0x74, 0x55, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x74, 0x61, 0x72, 0x67,
	0x65, 0x74, 0x55, 0x69, 0x64, 0x22, 0x16, 0x0a, 0x14, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x53,
	0x69, 0x6e, 0x67, 0x6c, 0x65, 0x43, 0x68, 0x61, 0x74, 0x52, 0x65, 0x73, 0x70, 0x22, 0x33, 0x0a,
	0x13, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x53, 0x69, 0x6e, 0x67, 0x6c, 0x65, 0x43, 0x68, 0x61,
	0x74, 0x52, 0x65, 0x71, 0x12, 0x1c, 0x0a, 0x09, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x55, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x55,
	0x69, 0x64, 0x22, 0x16, 0x0a, 0x14, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x53, 0x69, 0x6e, 0x67,
	0x6c, 0x65, 0x43, 0x68, 0x61, 0x74, 0x52, 0x65, 0x73, 0x70, 0x22, 0x2a, 0x0a, 0x10, 0x4c, 0x65,
	0x61, 0x76, 0x65, 0x52, 0x6f, 0x6f, 0x6d, 0x43, 0x68, 0x61, 0x74, 0x52, 0x65, 0x71, 0x12, 0x16,
	0x0a, 0x06, 0x72, 0x6f, 0x6f, 0x6d, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06,
	0x72, 0x6f, 0x6f, 0x6d, 0x49, 0x64, 0x22, 0x13, 0x0a, 0x11, 0x4c, 0x65, 0x61, 0x76, 0x65, 0x52,
	0x6f, 0x6f, 0x6d, 0x43, 0x68, 0x61, 0x74, 0x52, 0x65, 0x73, 0x70, 0x22, 0x6a, 0x0a, 0x12, 0x50,
	0x75, 0x73, 0x68, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x52, 0x6f, 0x6f, 0x6d, 0x43, 0x68, 0x61,
	0x74, 0x12, 0x10, 0x0a, 0x03, 0x72, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x03,
	0x72, 0x69, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x75, 0x69, 0x64, 0x4c, 0x69, 0x73, 0x74, 0x18, 0x02,
	0x20, 0x03, 0x28, 0x03, 0x52, 0x07, 0x75, 0x69, 0x64, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x28, 0x0a,
	0x08, 0x74, 0x65, 0x61, 0x6d, 0x4c, 0x69, 0x73, 0x74, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x0c, 0x2e, 0x70, 0x62, 0x2e, 0x54, 0x65, 0x61, 0x6d, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x08, 0x74,
	0x65, 0x61, 0x6d, 0x4c, 0x69, 0x73, 0x74, 0x22, 0x3c, 0x0a, 0x08, 0x54, 0x65, 0x61, 0x6d, 0x49,
	0x6e, 0x66, 0x6f, 0x12, 0x16, 0x0a, 0x06, 0x74, 0x65, 0x61, 0x6d, 0x49, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x06, 0x74, 0x65, 0x61, 0x6d, 0x49, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x75,
	0x69, 0x64, 0x4c, 0x69, 0x73, 0x74, 0x18, 0x02, 0x20, 0x03, 0x28, 0x03, 0x52, 0x07, 0x75, 0x69,
	0x64, 0x4c, 0x69, 0x73, 0x74, 0x22, 0x26, 0x0a, 0x12, 0x50, 0x75, 0x73, 0x68, 0x44, 0x65, 0x6c,
	0x65, 0x74, 0x65, 0x52, 0x6f, 0x6f, 0x6d, 0x43, 0x68, 0x61, 0x74, 0x12, 0x10, 0x0a, 0x03, 0x72,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x03, 0x72, 0x69, 0x64, 0x22, 0xfc, 0x01,
	0x0a, 0x10, 0x50, 0x75, 0x73, 0x68, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x49, 0x6e, 0x76, 0x69,
	0x74, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x49, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x07, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x49, 0x64, 0x12, 0x1a, 0x0a, 0x08,
	0x67, 0x61, 0x6d, 0x65, 0x4d, 0x6f, 0x64, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08,
	0x67, 0x61, 0x6d, 0x65, 0x4d, 0x6f, 0x64, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x6d, 0x6f, 0x64, 0x65,
	0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0b, 0x6d,
	0x6f, 0x64, 0x65, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x14, 0x0a, 0x05, 0x73, 0x74,
	0x61, 0x74, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65,
	0x12, 0x14, 0x0a, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18,
	0x06, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x1a, 0x0a, 0x08,
	0x65, 0x78, 0x70, 0x69, 0x72, 0x65, 0x54, 0x73, 0x18, 0x07, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08,
	0x65, 0x78, 0x70, 0x69, 0x72, 0x65, 0x54, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x4f, 0x77, 0x6e, 0x65,
	0x72, 0x18, 0x08, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x4f, 0x77, 0x6e, 0x65, 0x72, 0x12, 0x1c,
	0x0a, 0x09, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x49, 0x64, 0x18, 0x09, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x09, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x49, 0x64, 0x22, 0x0f, 0x0a, 0x0d,
	0x49, 0x6e, 0x76, 0x69, 0x74, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x22, 0x4b, 0x0a,
	0x0d, 0x49, 0x6e, 0x76, 0x69, 0x74, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x73, 0x70, 0x12, 0x3a,
	0x0a, 0x0d, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x49, 0x6e, 0x66, 0x6f, 0x4c, 0x69, 0x73, 0x74, 0x18,
	0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x70, 0x62, 0x2e, 0x50, 0x75, 0x73, 0x68, 0x55,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x49, 0x6e, 0x76, 0x69, 0x74, 0x65, 0x52, 0x0d, 0x67, 0x72, 0x6f,
	0x75, 0x70, 0x49, 0x6e, 0x66, 0x6f, 0x4c, 0x69, 0x73, 0x74, 0x22, 0xfb, 0x01, 0x0a, 0x0c, 0x43,
	0x68, 0x61, 0x74, 0x55, 0x73, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x10, 0x0a, 0x03, 0x75,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x03, 0x75, 0x69, 0x64, 0x12, 0x1a, 0x0a,
	0x08, 0x6e, 0x69, 0x63, 0x6b, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x08, 0x6e, 0x69, 0x63, 0x6b, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x61, 0x76, 0x61,
	0x74, 0x61, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x61, 0x76, 0x61, 0x74, 0x61,
	0x72, 0x12, 0x16, 0x0a, 0x06, 0x67, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x06, 0x67, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x68, 0x6f,
	0x77, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x73, 0x68, 0x6f, 0x77, 0x12, 0x15, 0x0a,
	0x06, 0x62, 0x6f, 0x78, 0x5f, 0x69, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x62,
	0x6f, 0x78, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x61, 0x72, 0x65, 0x61, 0x18, 0x07, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x61, 0x72, 0x65, 0x61, 0x12, 0x14, 0x0a, 0x05, 0x63, 0x68, 0x61, 0x72,
	0x6d, 0x18, 0x08, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x63, 0x68, 0x61, 0x72, 0x6d, 0x12, 0x12,
	0x0a, 0x04, 0x73, 0x74, 0x61, 0x72, 0x18, 0x09, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x73, 0x74,
	0x61, 0x72, 0x12, 0x24, 0x0a, 0x0e, 0x63, 0x68, 0x61, 0x74, 0x5f, 0x62, 0x75, 0x62, 0x62, 0x6c,
	0x65, 0x5f, 0x69, 0x64, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0c, 0x63, 0x68, 0x61, 0x74,
	0x42, 0x75, 0x62, 0x62, 0x6c, 0x65, 0x49, 0x64, 0x2a, 0x5f, 0x0a, 0x0b, 0x43, 0x68, 0x61, 0x6e,
	0x6e, 0x65, 0x6c, 0x54, 0x79, 0x70, 0x65, 0x12, 0x15, 0x0a, 0x11, 0x55, 0x6e, 0x6b, 0x6f, 0x77,
	0x6e, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x54, 0x79, 0x70, 0x65, 0x10, 0x00, 0x12, 0x09,
	0x0a, 0x05, 0x57, 0x6f, 0x72, 0x6c, 0x64, 0x10, 0x01, 0x12, 0x0a, 0x0a, 0x06, 0x53, 0x69, 0x6e,
	0x67, 0x6c, 0x65, 0x10, 0x02, 0x12, 0x08, 0x0a, 0x04, 0x52, 0x6f, 0x6f, 0x6d, 0x10, 0x03, 0x12,
	0x0b, 0x0a, 0x07, 0x54, 0x6d, 0x70, 0x54, 0x65, 0x61, 0x6d, 0x10, 0x04, 0x12, 0x0b, 0x0a, 0x07,
	0x41, 0x72, 0x65, 0x61, 0x54, 0x6f, 0x70, 0x10, 0x05, 0x2a, 0x98, 0x01, 0x0a, 0x0b, 0x4d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x54, 0x79, 0x70, 0x65, 0x12, 0x15, 0x0a, 0x11, 0x55, 0x6e, 0x6b,
	0x6f, 0x77, 0x6e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x54, 0x79, 0x70, 0x65, 0x10, 0x00,
	0x12, 0x11, 0x0a, 0x0d, 0x53, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x10, 0x01, 0x12, 0x0f, 0x0a, 0x0b, 0x54, 0x65, 0x78, 0x74, 0x4d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x10, 0x02, 0x12, 0x10, 0x0a, 0x0c, 0x45, 0x6d, 0x6f, 0x6a, 0x69, 0x4d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x10, 0x03, 0x12, 0x11, 0x0a, 0x0d, 0x49, 0x6e, 0x76, 0x69, 0x74, 0x65,
	0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x10, 0x04, 0x12, 0x0f, 0x0a, 0x0b, 0x47, 0x69, 0x66,
	0x74, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x10, 0x05, 0x12, 0x18, 0x0a, 0x14, 0x54, 0x6d,
	0x70, 0x54, 0x65, 0x61, 0x6d, 0x49, 0x6e, 0x76, 0x69, 0x74, 0x65, 0x4d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x10, 0x06, 0x2a, 0x39, 0x0a, 0x0e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x53,
	0x75, 0x62, 0x54, 0x79, 0x70, 0x65, 0x12, 0x12, 0x0a, 0x0e, 0x44, 0x65, 0x66, 0x61, 0x75, 0x6c,
	0x74, 0x53, 0x75, 0x62, 0x54, 0x79, 0x70, 0x65, 0x10, 0x00, 0x12, 0x08, 0x0a, 0x04, 0x51, 0x75,
	0x69, 0x6b, 0x10, 0x01, 0x12, 0x09, 0x0a, 0x05, 0x48, 0x65, 0x6c, 0x6c, 0x6f, 0x10, 0x02, 0x42,
	0x16, 0x5a, 0x0c, 0x2e, 0x2e, 0x2f, 0x73, 0x6e, 0x61, 0x6b, 0x65, 0x6d, 0x69, 0x6e, 0x69, 0xa2,
	0x02, 0x05, 0x50, 0x52, 0x4f, 0x54, 0x4f, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_snakemini_social_proto_rawDescOnce sync.Once
	file_snakemini_social_proto_rawDescData = file_snakemini_social_proto_rawDesc
)

func file_snakemini_social_proto_rawDescGZIP() []byte {
	file_snakemini_social_proto_rawDescOnce.Do(func() {
		file_snakemini_social_proto_rawDescData = protoimpl.X.CompressGZIP(file_snakemini_social_proto_rawDescData)
	})
	return file_snakemini_social_proto_rawDescData
}

var file_snakemini_social_proto_enumTypes = make([]protoimpl.EnumInfo, 3)
var file_snakemini_social_proto_msgTypes = make([]protoimpl.MessageInfo, 28)
var file_snakemini_social_proto_goTypes = []interface{}{
	(ChannelType)(0),              // 0: pb.ChannelType
	(MessageType)(0),              // 1: pb.MessageType
	(MessageSubType)(0),           // 2: pb.MessageSubType
	(*Message)(nil),               // 3: pb.Message
	(*SystemContent)(nil),         // 4: pb.SystemContent
	(*TextContent)(nil),           // 5: pb.TextContent
	(*EmojiContent)(nil),          // 6: pb.EmojiContent
	(*InviteContent)(nil),         // 7: pb.InviteContent
	(*GiftContent)(nil),           // 8: pb.GiftContent
	(*TmpTeamInviteContent)(nil),  // 9: pb.TmpTeamInviteContent
	(*SendMessageReq)(nil),        // 10: pb.SendMessageReq
	(*SendMessageResp)(nil),       // 11: pb.SendMessageResp
	(*GetMessageListReq)(nil),     // 12: pb.GetMessageListReq
	(*GetMessageListResp)(nil),    // 13: pb.GetMessageListResp
	(*PushNewMessage)(nil),        // 14: pb.PushNewMessage
	(*SingleChat)(nil),            // 15: pb.SingleChat
	(*GetSingleChatListReq)(nil),  // 16: pb.GetSingleChatListReq
	(*GetSingleChatListResp)(nil), // 17: pb.GetSingleChatListResp
	(*CreateSingleChatReq)(nil),   // 18: pb.CreateSingleChatReq
	(*CreateSingleChatResp)(nil),  // 19: pb.CreateSingleChatResp
	(*DeleteSingleChatReq)(nil),   // 20: pb.DeleteSingleChatReq
	(*DeleteSingleChatResp)(nil),  // 21: pb.DeleteSingleChatResp
	(*LeaveRoomChatReq)(nil),      // 22: pb.LeaveRoomChatReq
	(*LeaveRoomChatResp)(nil),     // 23: pb.LeaveRoomChatResp
	(*PushCreateRoomChat)(nil),    // 24: pb.PushCreateRoomChat
	(*TeamInfo)(nil),              // 25: pb.TeamInfo
	(*PushDeleteRoomChat)(nil),    // 26: pb.PushDeleteRoomChat
	(*PushUpdateInvite)(nil),      // 27: pb.PushUpdateInvite
	(*InviteListReq)(nil),         // 28: pb.InviteListReq
	(*InviteListRsp)(nil),         // 29: pb.InviteListRsp
	(*ChatUserInfo)(nil),          // 30: pb.ChatUserInfo
}
var file_snakemini_social_proto_depIdxs = []int32{
	1,  // 0: pb.Message.messageType:type_name -> pb.MessageType
	2,  // 1: pb.Message.messageSubType:type_name -> pb.MessageSubType
	0,  // 2: pb.SendMessageReq.channelType:type_name -> pb.ChannelType
	1,  // 3: pb.SendMessageReq.messageType:type_name -> pb.MessageType
	2,  // 4: pb.SendMessageReq.messageSubType:type_name -> pb.MessageSubType
	0,  // 5: pb.GetMessageListReq.channelType:type_name -> pb.ChannelType
	3,  // 6: pb.GetMessageListResp.messageList:type_name -> pb.Message
	3,  // 7: pb.PushNewMessage.message:type_name -> pb.Message
	0,  // 8: pb.PushNewMessage.channelType:type_name -> pb.ChannelType
	30, // 9: pb.PushNewMessage.senderInfo:type_name -> pb.ChatUserInfo
	15, // 10: pb.GetSingleChatListResp.singleChatList:type_name -> pb.SingleChat
	25, // 11: pb.PushCreateRoomChat.teamList:type_name -> pb.TeamInfo
	27, // 12: pb.InviteListRsp.groupInfoList:type_name -> pb.PushUpdateInvite
	13, // [13:13] is the sub-list for method output_type
	13, // [13:13] is the sub-list for method input_type
	13, // [13:13] is the sub-list for extension type_name
	13, // [13:13] is the sub-list for extension extendee
	0,  // [0:13] is the sub-list for field type_name
}

func init() { file_snakemini_social_proto_init() }
func file_snakemini_social_proto_init() {
	if File_snakemini_social_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_snakemini_social_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Message); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_snakemini_social_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SystemContent); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_snakemini_social_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TextContent); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_snakemini_social_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EmojiContent); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_snakemini_social_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*InviteContent); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_snakemini_social_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GiftContent); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_snakemini_social_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TmpTeamInviteContent); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_snakemini_social_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SendMessageReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_snakemini_social_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SendMessageResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_snakemini_social_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetMessageListReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_snakemini_social_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetMessageListResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_snakemini_social_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PushNewMessage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_snakemini_social_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SingleChat); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_snakemini_social_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetSingleChatListReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_snakemini_social_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetSingleChatListResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_snakemini_social_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateSingleChatReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_snakemini_social_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateSingleChatResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_snakemini_social_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteSingleChatReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_snakemini_social_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteSingleChatResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_snakemini_social_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LeaveRoomChatReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_snakemini_social_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LeaveRoomChatResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_snakemini_social_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PushCreateRoomChat); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_snakemini_social_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TeamInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_snakemini_social_proto_msgTypes[23].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PushDeleteRoomChat); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_snakemini_social_proto_msgTypes[24].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PushUpdateInvite); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_snakemini_social_proto_msgTypes[25].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*InviteListReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_snakemini_social_proto_msgTypes[26].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*InviteListRsp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_snakemini_social_proto_msgTypes[27].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ChatUserInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_snakemini_social_proto_rawDesc,
			NumEnums:      3,
			NumMessages:   28,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_snakemini_social_proto_goTypes,
		DependencyIndexes: file_snakemini_social_proto_depIdxs,
		EnumInfos:         file_snakemini_social_proto_enumTypes,
		MessageInfos:      file_snakemini_social_proto_msgTypes,
	}.Build()
	File_snakemini_social_proto = out.File
	file_snakemini_social_proto_rawDesc = nil
	file_snakemini_social_proto_goTypes = nil
	file_snakemini_social_proto_depIdxs = nil
}
