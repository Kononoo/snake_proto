// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.26.0
// 	protoc        v3.20.3
// source: snakemini/service.proto

package snakemini

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

var File_snakemini_service_proto protoreflect.FileDescriptor

var file_snakemini_service_proto_rawDesc = []byte{
	0x0a, 0x17, 0x73, 0x6e, 0x61, 0x6b, 0x65, 0x6d, 0x69, 0x6e, 0x69, 0x2f, 0x73, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x02, 0x70, 0x62, 0x1a, 0x18, 0x73,
	0x6e, 0x61, 0x6b, 0x65, 0x6d, 0x69, 0x6e, 0x69, 0x2f, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x6e, 0x61,
	0x6c, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x13, 0x73, 0x6e, 0x61, 0x6b, 0x65, 0x6d, 0x69,
	0x6e, 0x69, 0x2f, 0x72, 0x70, 0x63, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x14, 0x73, 0x6e,
	0x61, 0x6b, 0x65, 0x6d, 0x69, 0x6e, 0x69, 0x2f, 0x70, 0x75, 0x73, 0x68, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x1a, 0x1f, 0x73, 0x6e, 0x61, 0x6b, 0x65, 0x6d, 0x69, 0x6e, 0x69, 0x2f, 0x73, 0x6f,
	0x63, 0x69, 0x61, 0x6c, 0x5f, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x32, 0x40, 0x0a, 0x0c, 0x4d, 0x61, 0x74, 0x63, 0x68, 0x4d, 0x6f, 0x6e, 0x69,
	0x74, 0x6f, 0x72, 0x12, 0x30, 0x0a, 0x06, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x12, 0x14, 0x2e,
	0x70, 0x62, 0x2e, 0x42, 0x72, 0x6f, 0x61, 0x64, 0x63, 0x61, 0x73, 0x74, 0x43, 0x6f, 0x6e, 0x66,
	0x69, 0x67, 0x73, 0x1a, 0x0e, 0x2e, 0x70, 0x62, 0x2e, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x45, 0x6d,
	0x70, 0x74, 0x79, 0x22, 0x00, 0x32, 0x8e, 0x02, 0x0a, 0x05, 0x4d, 0x61, 0x74, 0x63, 0x68, 0x12,
	0x2f, 0x0a, 0x09, 0x42, 0x69, 0x6e, 0x64, 0x4d, 0x61, 0x74, 0x63, 0x68, 0x12, 0x0e, 0x2e, 0x70,
	0x62, 0x2e, 0x55, 0x69, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x10, 0x2e, 0x70,
	0x62, 0x2e, 0x42, 0x69, 0x6e, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00,
	0x12, 0x38, 0x0a, 0x0e, 0x47, 0x65, 0x74, 0x49, 0x6e, 0x47, 0x61, 0x6d, 0x65, 0x53, 0x74, 0x61,
	0x74, 0x65, 0x12, 0x0e, 0x2e, 0x70, 0x62, 0x2e, 0x55, 0x69, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x14, 0x2e, 0x70, 0x62, 0x2e, 0x49, 0x6e, 0x47, 0x61, 0x6d, 0x65, 0x53, 0x74,
	0x61, 0x74, 0x65, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x00, 0x12, 0x34, 0x0a, 0x0a, 0x44, 0x69,
	0x73, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x12, 0x0e, 0x2e, 0x70, 0x62, 0x2e, 0x55, 0x69,
	0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x14, 0x2e, 0x70, 0x62, 0x2e, 0x49, 0x6e,
	0x47, 0x61, 0x6d, 0x65, 0x53, 0x74, 0x61, 0x74, 0x65, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x00,
	0x12, 0x31, 0x0a, 0x0b, 0x4d, 0x61, 0x74, 0x63, 0x68, 0x48, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x12,
	0x0f, 0x2e, 0x70, 0x62, 0x2e, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x52, 0x65, 0x71,
	0x1a, 0x0f, 0x2e, 0x70, 0x62, 0x2e, 0x52, 0x70, 0x63, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x22, 0x00, 0x12, 0x31, 0x0a, 0x09, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x49, 0x6e, 0x66, 0x6f,
	0x12, 0x10, 0x2e, 0x70, 0x62, 0x2e, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x49, 0x6e, 0x66, 0x6f, 0x52,
	0x65, 0x71, 0x1a, 0x10, 0x2e, 0x70, 0x62, 0x2e, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x49, 0x6e, 0x66,
	0x6f, 0x52, 0x73, 0x70, 0x22, 0x00, 0x32, 0x6e, 0x0a, 0x0e, 0x47, 0x61, 0x74, 0x65, 0x77, 0x61,
	0x79, 0x4d, 0x6f, 0x6e, 0x69, 0x74, 0x6f, 0x72, 0x12, 0x30, 0x0a, 0x06, 0x55, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x12, 0x14, 0x2e, 0x70, 0x62, 0x2e, 0x42, 0x72, 0x6f, 0x61, 0x64, 0x63, 0x61, 0x73,
	0x74, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x73, 0x1a, 0x0e, 0x2e, 0x70, 0x62, 0x2e, 0x52, 0x65,
	0x70, 0x6c, 0x79, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x22, 0x00, 0x12, 0x2a, 0x0a, 0x06, 0x52, 0x65,
	0x6c, 0x6f, 0x61, 0x64, 0x12, 0x0e, 0x2e, 0x70, 0x62, 0x2e, 0x55, 0x69, 0x64, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x0e, 0x2e, 0x70, 0x62, 0x2e, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x45,
	0x6d, 0x70, 0x74, 0x79, 0x22, 0x00, 0x32, 0x68, 0x0a, 0x07, 0x47, 0x61, 0x74, 0x65, 0x77, 0x61,
	0x79, 0x12, 0x33, 0x0a, 0x0d, 0x47, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x48, 0x61, 0x6e, 0x64,
	0x6c, 0x65, 0x12, 0x0f, 0x2e, 0x70, 0x62, 0x2e, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c,
	0x52, 0x65, 0x71, 0x1a, 0x0f, 0x2e, 0x70, 0x62, 0x2e, 0x52, 0x70, 0x63, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x28, 0x0a, 0x0a, 0x50, 0x75, 0x73, 0x68, 0x43, 0x6c,
	0x69, 0x65, 0x6e, 0x74, 0x12, 0x0b, 0x2e, 0x70, 0x62, 0x2e, 0x50, 0x75, 0x73, 0x68, 0x4d, 0x73,
	0x67, 0x1a, 0x0b, 0x2e, 0x70, 0x62, 0x2e, 0x55, 0x69, 0x64, 0x4c, 0x69, 0x73, 0x74, 0x22, 0x00,
	0x32, 0x6e, 0x0a, 0x05, 0x52, 0x6f, 0x75, 0x74, 0x65, 0x12, 0x31, 0x0a, 0x08, 0x52, 0x65, 0x67,
	0x69, 0x73, 0x74, 0x65, 0x72, 0x12, 0x13, 0x2e, 0x70, 0x62, 0x2e, 0x52, 0x65, 0x67, 0x69, 0x73,
	0x74, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x0e, 0x2e, 0x70, 0x62, 0x2e,
	0x52, 0x65, 0x70, 0x6c, 0x79, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x22, 0x00, 0x12, 0x32, 0x0a, 0x09,
	0x48, 0x65, 0x61, 0x72, 0x74, 0x42, 0x65, 0x61, 0x74, 0x12, 0x13, 0x2e, 0x70, 0x62, 0x2e, 0x52,
	0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x0e,
	0x2e, 0x70, 0x62, 0x2e, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x22, 0x00,
	0x32, 0x3a, 0x0a, 0x05, 0x52, 0x65, 0x6c, 0x61, 0x79, 0x12, 0x31, 0x0a, 0x0b, 0x52, 0x65, 0x6c,
	0x61, 0x79, 0x48, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x12, 0x0f, 0x2e, 0x70, 0x62, 0x2e, 0x49, 0x6e,
	0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x52, 0x65, 0x71, 0x1a, 0x0f, 0x2e, 0x70, 0x62, 0x2e, 0x52,
	0x70, 0x63, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x32, 0x40, 0x0a, 0x0c,
	0x52, 0x65, 0x6c, 0x61, 0x79, 0x4d, 0x6f, 0x6e, 0x69, 0x74, 0x6f, 0x72, 0x12, 0x30, 0x0a, 0x06,
	0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x12, 0x14, 0x2e, 0x70, 0x62, 0x2e, 0x42, 0x72, 0x6f, 0x61,
	0x64, 0x63, 0x61, 0x73, 0x74, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x73, 0x1a, 0x0e, 0x2e, 0x70,
	0x62, 0x2e, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x22, 0x00, 0x32, 0x8d,
	0x02, 0x0a, 0x06, 0x53, 0x6f, 0x63, 0x69, 0x61, 0x6c, 0x12, 0x2c, 0x0a, 0x06, 0x48, 0x61, 0x6e,
	0x64, 0x6c, 0x65, 0x12, 0x0f, 0x2e, 0x70, 0x62, 0x2e, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x6e, 0x61,
	0x6c, 0x52, 0x65, 0x71, 0x1a, 0x0f, 0x2e, 0x70, 0x62, 0x2e, 0x52, 0x70, 0x63, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x2a, 0x0a, 0x04, 0x42, 0x69, 0x6e, 0x64, 0x12,
	0x0e, 0x2e, 0x70, 0x62, 0x2e, 0x55, 0x69, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x10, 0x2e, 0x70, 0x62, 0x2e, 0x42, 0x69, 0x6e, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x22, 0x00, 0x12, 0x2e, 0x0a, 0x0a, 0x44, 0x69, 0x73, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63,
	0x74, 0x12, 0x0e, 0x2e, 0x70, 0x62, 0x2e, 0x55, 0x69, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x0e, 0x2e, 0x70, 0x62, 0x2e, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x45, 0x6d, 0x70, 0x74,
	0x79, 0x22, 0x00, 0x12, 0x37, 0x0a, 0x0b, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x4e, 0x6f, 0x74, 0x69,
	0x66, 0x79, 0x12, 0x12, 0x2e, 0x70, 0x62, 0x2e, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x4e, 0x6f, 0x74,
	0x69, 0x66, 0x79, 0x52, 0x65, 0x71, 0x1a, 0x12, 0x2e, 0x70, 0x62, 0x2e, 0x47, 0x72, 0x6f, 0x75,
	0x70, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x52, 0x73, 0x70, 0x22, 0x00, 0x12, 0x40, 0x0a, 0x0e,
	0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x52, 0x6f, 0x6f, 0x6d, 0x43, 0x68, 0x61, 0x74, 0x12, 0x15,
	0x2e, 0x70, 0x62, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x52, 0x6f, 0x6f, 0x6d, 0x43, 0x68,
	0x61, 0x74, 0x52, 0x65, 0x71, 0x1a, 0x15, 0x2e, 0x70, 0x62, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x52, 0x6f, 0x6f, 0x6d, 0x43, 0x68, 0x61, 0x74, 0x52, 0x73, 0x70, 0x22, 0x00, 0x32, 0x41,
	0x0a, 0x0d, 0x53, 0x6f, 0x63, 0x69, 0x61, 0x6c, 0x4d, 0x6f, 0x6e, 0x69, 0x74, 0x6f, 0x72, 0x12,
	0x30, 0x0a, 0x06, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x12, 0x14, 0x2e, 0x70, 0x62, 0x2e, 0x42,
	0x72, 0x6f, 0x61, 0x64, 0x63, 0x61, 0x73, 0x74, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x73, 0x1a,
	0x0e, 0x2e, 0x70, 0x62, 0x2e, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x22,
	0x00, 0x42, 0x16, 0x5a, 0x0c, 0x2e, 0x2e, 0x2f, 0x73, 0x6e, 0x61, 0x6b, 0x65, 0x6d, 0x69, 0x6e,
	0x69, 0xa2, 0x02, 0x05, 0x50, 0x52, 0x4f, 0x54, 0x4f, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x33,
}

var file_snakemini_service_proto_goTypes = []interface{}{
	(*BroadcastConfigs)(nil),  // 0: pb.BroadcastConfigs
	(*UidRequest)(nil),        // 1: pb.UidRequest
	(*InternalReq)(nil),       // 2: pb.InternalReq
	(*GroupInfoReq)(nil),      // 3: pb.GroupInfoReq
	(*PushMsg)(nil),           // 4: pb.PushMsg
	(*RegisterRequest)(nil),   // 5: pb.RegisterRequest
	(*GroupNotifyReq)(nil),    // 6: pb.GroupNotifyReq
	(*CreateRoomChatReq)(nil), // 7: pb.CreateRoomChatReq
	(*ReplyEmpty)(nil),        // 8: pb.ReplyEmpty
	(*BindResponse)(nil),      // 9: pb.BindResponse
	(*InGameStateReply)(nil),  // 10: pb.InGameStateReply
	(*RpcResponse)(nil),       // 11: pb.RpcResponse
	(*GroupInfoRsp)(nil),      // 12: pb.GroupInfoRsp
	(*UidList)(nil),           // 13: pb.UidList
	(*GroupNotifyRsp)(nil),    // 14: pb.GroupNotifyRsp
	(*CreateRoomChatRsp)(nil), // 15: pb.CreateRoomChatRsp
}
var file_snakemini_service_proto_depIdxs = []int32{
	0,  // 0: pb.MatchMonitor.Update:input_type -> pb.BroadcastConfigs
	1,  // 1: pb.Match.BindMatch:input_type -> pb.UidRequest
	1,  // 2: pb.Match.GetInGameState:input_type -> pb.UidRequest
	1,  // 3: pb.Match.Disconnect:input_type -> pb.UidRequest
	2,  // 4: pb.Match.MatchHandle:input_type -> pb.InternalReq
	3,  // 5: pb.Match.GroupInfo:input_type -> pb.GroupInfoReq
	0,  // 6: pb.GatewayMonitor.Update:input_type -> pb.BroadcastConfigs
	1,  // 7: pb.GatewayMonitor.Reload:input_type -> pb.UidRequest
	2,  // 8: pb.Gateway.GatewayHandle:input_type -> pb.InternalReq
	4,  // 9: pb.Gateway.PushClient:input_type -> pb.PushMsg
	5,  // 10: pb.Route.Register:input_type -> pb.RegisterRequest
	5,  // 11: pb.Route.HeartBeat:input_type -> pb.RegisterRequest
	2,  // 12: pb.Relay.RelayHandle:input_type -> pb.InternalReq
	0,  // 13: pb.RelayMonitor.Update:input_type -> pb.BroadcastConfigs
	2,  // 14: pb.Social.Handle:input_type -> pb.InternalReq
	1,  // 15: pb.Social.Bind:input_type -> pb.UidRequest
	1,  // 16: pb.Social.Disconnect:input_type -> pb.UidRequest
	6,  // 17: pb.Social.GroupNotify:input_type -> pb.GroupNotifyReq
	7,  // 18: pb.Social.CreateRoomChat:input_type -> pb.CreateRoomChatReq
	0,  // 19: pb.SocialMonitor.Update:input_type -> pb.BroadcastConfigs
	8,  // 20: pb.MatchMonitor.Update:output_type -> pb.ReplyEmpty
	9,  // 21: pb.Match.BindMatch:output_type -> pb.BindResponse
	10, // 22: pb.Match.GetInGameState:output_type -> pb.InGameStateReply
	10, // 23: pb.Match.Disconnect:output_type -> pb.InGameStateReply
	11, // 24: pb.Match.MatchHandle:output_type -> pb.RpcResponse
	12, // 25: pb.Match.GroupInfo:output_type -> pb.GroupInfoRsp
	8,  // 26: pb.GatewayMonitor.Update:output_type -> pb.ReplyEmpty
	8,  // 27: pb.GatewayMonitor.Reload:output_type -> pb.ReplyEmpty
	11, // 28: pb.Gateway.GatewayHandle:output_type -> pb.RpcResponse
	13, // 29: pb.Gateway.PushClient:output_type -> pb.UidList
	8,  // 30: pb.Route.Register:output_type -> pb.ReplyEmpty
	8,  // 31: pb.Route.HeartBeat:output_type -> pb.ReplyEmpty
	11, // 32: pb.Relay.RelayHandle:output_type -> pb.RpcResponse
	8,  // 33: pb.RelayMonitor.Update:output_type -> pb.ReplyEmpty
	11, // 34: pb.Social.Handle:output_type -> pb.RpcResponse
	9,  // 35: pb.Social.Bind:output_type -> pb.BindResponse
	8,  // 36: pb.Social.Disconnect:output_type -> pb.ReplyEmpty
	14, // 37: pb.Social.GroupNotify:output_type -> pb.GroupNotifyRsp
	15, // 38: pb.Social.CreateRoomChat:output_type -> pb.CreateRoomChatRsp
	8,  // 39: pb.SocialMonitor.Update:output_type -> pb.ReplyEmpty
	20, // [20:40] is the sub-list for method output_type
	0,  // [0:20] is the sub-list for method input_type
	0,  // [0:0] is the sub-list for extension type_name
	0,  // [0:0] is the sub-list for extension extendee
	0,  // [0:0] is the sub-list for field type_name
}

func init() { file_snakemini_service_proto_init() }
func file_snakemini_service_proto_init() {
	if File_snakemini_service_proto != nil {
		return
	}
	file_snakemini_internal_proto_init()
	file_snakemini_rpc_proto_init()
	file_snakemini_push_proto_init()
	file_snakemini_social_internal_proto_init()
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_snakemini_service_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   0,
			NumExtensions: 0,
			NumServices:   9,
		},
		GoTypes:           file_snakemini_service_proto_goTypes,
		DependencyIndexes: file_snakemini_service_proto_depIdxs,
	}.Build()
	File_snakemini_service_proto = out.File
	file_snakemini_service_proto_rawDesc = nil
	file_snakemini_service_proto_goTypes = nil
	file_snakemini_service_proto_depIdxs = nil
}
