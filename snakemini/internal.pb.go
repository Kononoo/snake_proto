// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.27.1
// 	protoc        v3.16.1
// source: snakemini/internal.proto

package snakemini

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// 用一个rpc中转各服务间的请求，参数会有冗余
type InternalReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ServerType int32  `protobuf:"varint,1,opt,name=serverType,proto3" json:"serverType,omitempty"`
	ServerId   int32  `protobuf:"varint,2,opt,name=serverId,proto3" json:"serverId,omitempty"`
	CmdId      string `protobuf:"bytes,3,opt,name=cmdId,proto3" json:"cmdId,omitempty"`
	Uid        int64  `protobuf:"varint,4,opt,name=uid,proto3" json:"uid,omitempty"`
	Body       string `protobuf:"bytes,6,opt,name=body,proto3" json:"body,omitempty"`
	ReqExt     string `protobuf:"bytes,7,opt,name=reqExt,proto3" json:"reqExt,omitempty"`
	UserType   int32  `protobuf:"varint,8,opt,name=user_type,json=userType,proto3" json:"user_type,omitempty"`
	ServerHost string `protobuf:"bytes,9,opt,name=serverHost,proto3" json:"serverHost,omitempty"`
	Ip         string `protobuf:"bytes,10,opt,name=ip,proto3" json:"ip,omitempty"`
}

func (x *InternalReq) Reset() {
	*x = InternalReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_snakemini_internal_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *InternalReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InternalReq) ProtoMessage() {}

func (x *InternalReq) ProtoReflect() protoreflect.Message {
	mi := &file_snakemini_internal_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InternalReq.ProtoReflect.Descriptor instead.
func (*InternalReq) Descriptor() ([]byte, []int) {
	return file_snakemini_internal_proto_rawDescGZIP(), []int{0}
}

func (x *InternalReq) GetServerType() int32 {
	if x != nil {
		return x.ServerType
	}
	return 0
}

func (x *InternalReq) GetServerId() int32 {
	if x != nil {
		return x.ServerId
	}
	return 0
}

func (x *InternalReq) GetCmdId() string {
	if x != nil {
		return x.CmdId
	}
	return ""
}

func (x *InternalReq) GetUid() int64 {
	if x != nil {
		return x.Uid
	}
	return 0
}

func (x *InternalReq) GetBody() string {
	if x != nil {
		return x.Body
	}
	return ""
}

func (x *InternalReq) GetReqExt() string {
	if x != nil {
		return x.ReqExt
	}
	return ""
}

func (x *InternalReq) GetUserType() int32 {
	if x != nil {
		return x.UserType
	}
	return 0
}

func (x *InternalReq) GetServerHost() string {
	if x != nil {
		return x.ServerHost
	}
	return ""
}

func (x *InternalReq) GetIp() string {
	if x != nil {
		return x.Ip
	}
	return ""
}

type RegisterRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Config *ServerConfig `protobuf:"bytes,1,opt,name=config,proto3" json:"config,omitempty"`
}

func (x *RegisterRequest) Reset() {
	*x = RegisterRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_snakemini_internal_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RegisterRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RegisterRequest) ProtoMessage() {}

func (x *RegisterRequest) ProtoReflect() protoreflect.Message {
	mi := &file_snakemini_internal_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RegisterRequest.ProtoReflect.Descriptor instead.
func (*RegisterRequest) Descriptor() ([]byte, []int) {
	return file_snakemini_internal_proto_rawDescGZIP(), []int{1}
}

func (x *RegisterRequest) GetConfig() *ServerConfig {
	if x != nil {
		return x.Config
	}
	return nil
}

type ServerConfig struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ServerType   int32  `protobuf:"varint,1,opt,name=server_type,json=serverType,proto3" json:"server_type,omitempty"`
	Index        int32  `protobuf:"varint,2,opt,name=index,proto3" json:"index,omitempty"`
	IntranetHost string `protobuf:"bytes,3,opt,name=intranet_host,json=intranetHost,proto3" json:"intranet_host,omitempty"`
	ExtranetHost string `protobuf:"bytes,4,opt,name=extranet_host,json=extranetHost,proto3" json:"extranet_host,omitempty"`
	TcpPort      int32  `protobuf:"varint,5,opt,name=tcp_port,json=tcpPort,proto3" json:"tcp_port,omitempty"`
	RpcPort      int32  `protobuf:"varint,6,opt,name=rpc_port,json=rpcPort,proto3" json:"rpc_port,omitempty"`
	MonitorPort  int32  `protobuf:"varint,7,opt,name=monitor_port,json=monitorPort,proto3" json:"monitor_port,omitempty"`
	OuterPort    int32  `protobuf:"varint,8,opt,name=outer_port,json=outerPort,proto3" json:"outer_port,omitempty"`
	UdpPort      int32  `protobuf:"varint,9,opt,name=udp_port,json=udpPort,proto3" json:"udp_port,omitempty"`
	IsStop       int32  `protobuf:"varint,10,opt,name=is_stop,json=isStop,proto3" json:"is_stop,omitempty"`
	WsAddr       string `protobuf:"bytes,11,opt,name=ws_addr,json=wsAddr,proto3" json:"ws_addr,omitempty"`
}

func (x *ServerConfig) Reset() {
	*x = ServerConfig{}
	if protoimpl.UnsafeEnabled {
		mi := &file_snakemini_internal_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ServerConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ServerConfig) ProtoMessage() {}

func (x *ServerConfig) ProtoReflect() protoreflect.Message {
	mi := &file_snakemini_internal_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ServerConfig.ProtoReflect.Descriptor instead.
func (*ServerConfig) Descriptor() ([]byte, []int) {
	return file_snakemini_internal_proto_rawDescGZIP(), []int{2}
}

func (x *ServerConfig) GetServerType() int32 {
	if x != nil {
		return x.ServerType
	}
	return 0
}

func (x *ServerConfig) GetIndex() int32 {
	if x != nil {
		return x.Index
	}
	return 0
}

func (x *ServerConfig) GetIntranetHost() string {
	if x != nil {
		return x.IntranetHost
	}
	return ""
}

func (x *ServerConfig) GetExtranetHost() string {
	if x != nil {
		return x.ExtranetHost
	}
	return ""
}

func (x *ServerConfig) GetTcpPort() int32 {
	if x != nil {
		return x.TcpPort
	}
	return 0
}

func (x *ServerConfig) GetRpcPort() int32 {
	if x != nil {
		return x.RpcPort
	}
	return 0
}

func (x *ServerConfig) GetMonitorPort() int32 {
	if x != nil {
		return x.MonitorPort
	}
	return 0
}

func (x *ServerConfig) GetOuterPort() int32 {
	if x != nil {
		return x.OuterPort
	}
	return 0
}

func (x *ServerConfig) GetUdpPort() int32 {
	if x != nil {
		return x.UdpPort
	}
	return 0
}

func (x *ServerConfig) GetIsStop() int32 {
	if x != nil {
		return x.IsStop
	}
	return 0
}

func (x *ServerConfig) GetWsAddr() string {
	if x != nil {
		return x.WsAddr
	}
	return ""
}

type RedisServer struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserRedis   *RedisConfig `protobuf:"bytes,1,opt,name=user_redis,json=userRedis,proto3" json:"user_redis,omitempty"`
	OnlineRedis *RedisConfig `protobuf:"bytes,2,opt,name=online_redis,json=onlineRedis,proto3" json:"online_redis,omitempty"`
	GatewayNum  int32        `protobuf:"varint,3,opt,name=gateway_num,json=gatewayNum,proto3" json:"gateway_num,omitempty"`
}

func (x *RedisServer) Reset() {
	*x = RedisServer{}
	if protoimpl.UnsafeEnabled {
		mi := &file_snakemini_internal_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RedisServer) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RedisServer) ProtoMessage() {}

func (x *RedisServer) ProtoReflect() protoreflect.Message {
	mi := &file_snakemini_internal_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RedisServer.ProtoReflect.Descriptor instead.
func (*RedisServer) Descriptor() ([]byte, []int) {
	return file_snakemini_internal_proto_rawDescGZIP(), []int{3}
}

func (x *RedisServer) GetUserRedis() *RedisConfig {
	if x != nil {
		return x.UserRedis
	}
	return nil
}

func (x *RedisServer) GetOnlineRedis() *RedisConfig {
	if x != nil {
		return x.OnlineRedis
	}
	return nil
}

func (x *RedisServer) GetGatewayNum() int32 {
	if x != nil {
		return x.GatewayNum
	}
	return 0
}

type RedisConfig struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Host     string `protobuf:"bytes,1,opt,name=host,proto3" json:"host,omitempty"`
	Port     int32  `protobuf:"varint,2,opt,name=port,proto3" json:"port,omitempty"`
	Password string `protobuf:"bytes,3,opt,name=password,proto3" json:"password,omitempty"`
}

func (x *RedisConfig) Reset() {
	*x = RedisConfig{}
	if protoimpl.UnsafeEnabled {
		mi := &file_snakemini_internal_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RedisConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RedisConfig) ProtoMessage() {}

func (x *RedisConfig) ProtoReflect() protoreflect.Message {
	mi := &file_snakemini_internal_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RedisConfig.ProtoReflect.Descriptor instead.
func (*RedisConfig) Descriptor() ([]byte, []int) {
	return file_snakemini_internal_proto_rawDescGZIP(), []int{4}
}

func (x *RedisConfig) GetHost() string {
	if x != nil {
		return x.Host
	}
	return ""
}

func (x *RedisConfig) GetPort() int32 {
	if x != nil {
		return x.Port
	}
	return 0
}

func (x *RedisConfig) GetPassword() string {
	if x != nil {
		return x.Password
	}
	return ""
}

type BroadcastConfigs struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Servers     []*ServerConfig `protobuf:"bytes,1,rep,name=servers,proto3" json:"servers,omitempty"`
	RedisServer *RedisServer    `protobuf:"bytes,2,opt,name=redis_server,json=redisServer,proto3" json:"redis_server,omitempty"`
}

func (x *BroadcastConfigs) Reset() {
	*x = BroadcastConfigs{}
	if protoimpl.UnsafeEnabled {
		mi := &file_snakemini_internal_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BroadcastConfigs) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BroadcastConfigs) ProtoMessage() {}

func (x *BroadcastConfigs) ProtoReflect() protoreflect.Message {
	mi := &file_snakemini_internal_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BroadcastConfigs.ProtoReflect.Descriptor instead.
func (*BroadcastConfigs) Descriptor() ([]byte, []int) {
	return file_snakemini_internal_proto_rawDescGZIP(), []int{5}
}

func (x *BroadcastConfigs) GetServers() []*ServerConfig {
	if x != nil {
		return x.Servers
	}
	return nil
}

func (x *BroadcastConfigs) GetRedisServer() *RedisServer {
	if x != nil {
		return x.RedisServer
	}
	return nil
}

type ItemInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Type         int64  `protobuf:"varint,1,opt,name=type,proto3" json:"type,omitempty"`                   // 奖励类型
	ItemId       int64  `protobuf:"varint,2,opt,name=item_id,json=itemId,proto3" json:"item_id,omitempty"` // 奖励ID
	Name         string `protobuf:"bytes,3,opt,name=name,proto3" json:"name,omitempty"`
	Imgurl       string `protobuf:"bytes,4,opt,name=imgurl,proto3" json:"imgurl,omitempty"`
	Num          int64  `protobuf:"varint,5,opt,name=num,proto3" json:"num,omitempty"` // 数量
	UseLimitTime int64  `protobuf:"varint,6,opt,name=use_limit_time,json=useLimitTime,proto3" json:"use_limit_time,omitempty"`
}

func (x *ItemInfo) Reset() {
	*x = ItemInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_snakemini_internal_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ItemInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ItemInfo) ProtoMessage() {}

func (x *ItemInfo) ProtoReflect() protoreflect.Message {
	mi := &file_snakemini_internal_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ItemInfo.ProtoReflect.Descriptor instead.
func (*ItemInfo) Descriptor() ([]byte, []int) {
	return file_snakemini_internal_proto_rawDescGZIP(), []int{6}
}

func (x *ItemInfo) GetType() int64 {
	if x != nil {
		return x.Type
	}
	return 0
}

func (x *ItemInfo) GetItemId() int64 {
	if x != nil {
		return x.ItemId
	}
	return 0
}

func (x *ItemInfo) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *ItemInfo) GetImgurl() string {
	if x != nil {
		return x.Imgurl
	}
	return ""
}

func (x *ItemInfo) GetNum() int64 {
	if x != nil {
		return x.Num
	}
	return 0
}

func (x *ItemInfo) GetUseLimitTime() int64 {
	if x != nil {
		return x.UseLimitTime
	}
	return 0
}

var File_snakemini_internal_proto protoreflect.FileDescriptor

var file_snakemini_internal_proto_rawDesc = []byte{
	0x0a, 0x18, 0x73, 0x6e, 0x61, 0x6b, 0x65, 0x6d, 0x69, 0x6e, 0x69, 0x2f, 0x69, 0x6e, 0x74, 0x65,
	0x72, 0x6e, 0x61, 0x6c, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x02, 0x70, 0x62, 0x22, 0xea,
	0x01, 0x0a, 0x0b, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x52, 0x65, 0x71, 0x12, 0x1e,
	0x0a, 0x0a, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x54, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x0a, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1a,
	0x0a, 0x08, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x08, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x49, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x63, 0x6d,
	0x64, 0x49, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x63, 0x6d, 0x64, 0x49, 0x64,
	0x12, 0x10, 0x0a, 0x03, 0x75, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x03, 0x75,
	0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x62, 0x6f, 0x64, 0x79, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x62, 0x6f, 0x64, 0x79, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x71, 0x45, 0x78, 0x74,
	0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x72, 0x65, 0x71, 0x45, 0x78, 0x74, 0x12, 0x1b,
	0x0a, 0x09, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x08, 0x75, 0x73, 0x65, 0x72, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x73,
	0x65, 0x72, 0x76, 0x65, 0x72, 0x48, 0x6f, 0x73, 0x74, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0a, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x48, 0x6f, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69,
	0x70, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x70, 0x22, 0x3b, 0x0a, 0x0f, 0x52,
	0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x28,
	0x0a, 0x06, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x10,
	0x2e, 0x70, 0x62, 0x2e, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67,
	0x52, 0x06, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x22, 0xd4, 0x02, 0x0a, 0x0c, 0x53, 0x65, 0x72,
	0x76, 0x65, 0x72, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12, 0x1f, 0x0a, 0x0b, 0x73, 0x65, 0x72,
	0x76, 0x65, 0x72, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a,
	0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x54, 0x79, 0x70, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x69, 0x6e,
	0x64, 0x65, 0x78, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x69, 0x6e, 0x64, 0x65, 0x78,
	0x12, 0x23, 0x0a, 0x0d, 0x69, 0x6e, 0x74, 0x72, 0x61, 0x6e, 0x65, 0x74, 0x5f, 0x68, 0x6f, 0x73,
	0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x69, 0x6e, 0x74, 0x72, 0x61, 0x6e, 0x65,
	0x74, 0x48, 0x6f, 0x73, 0x74, 0x12, 0x23, 0x0a, 0x0d, 0x65, 0x78, 0x74, 0x72, 0x61, 0x6e, 0x65,
	0x74, 0x5f, 0x68, 0x6f, 0x73, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x65, 0x78,
	0x74, 0x72, 0x61, 0x6e, 0x65, 0x74, 0x48, 0x6f, 0x73, 0x74, 0x12, 0x19, 0x0a, 0x08, 0x74, 0x63,
	0x70, 0x5f, 0x70, 0x6f, 0x72, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x74, 0x63,
	0x70, 0x50, 0x6f, 0x72, 0x74, 0x12, 0x19, 0x0a, 0x08, 0x72, 0x70, 0x63, 0x5f, 0x70, 0x6f, 0x72,
	0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x72, 0x70, 0x63, 0x50, 0x6f, 0x72, 0x74,
	0x12, 0x21, 0x0a, 0x0c, 0x6d, 0x6f, 0x6e, 0x69, 0x74, 0x6f, 0x72, 0x5f, 0x70, 0x6f, 0x72, 0x74,
	0x18, 0x07, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0b, 0x6d, 0x6f, 0x6e, 0x69, 0x74, 0x6f, 0x72, 0x50,
	0x6f, 0x72, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x6f, 0x75, 0x74, 0x65, 0x72, 0x5f, 0x70, 0x6f, 0x72,
	0x74, 0x18, 0x08, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x6f, 0x75, 0x74, 0x65, 0x72, 0x50, 0x6f,
	0x72, 0x74, 0x12, 0x19, 0x0a, 0x08, 0x75, 0x64, 0x70, 0x5f, 0x70, 0x6f, 0x72, 0x74, 0x18, 0x09,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x75, 0x64, 0x70, 0x50, 0x6f, 0x72, 0x74, 0x12, 0x17, 0x0a,
	0x07, 0x69, 0x73, 0x5f, 0x73, 0x74, 0x6f, 0x70, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06,
	0x69, 0x73, 0x53, 0x74, 0x6f, 0x70, 0x12, 0x17, 0x0a, 0x07, 0x77, 0x73, 0x5f, 0x61, 0x64, 0x64,
	0x72, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x77, 0x73, 0x41, 0x64, 0x64, 0x72, 0x22,
	0x92, 0x01, 0x0a, 0x0b, 0x52, 0x65, 0x64, 0x69, 0x73, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x12,
	0x2e, 0x0a, 0x0a, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x72, 0x65, 0x64, 0x69, 0x73, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x70, 0x62, 0x2e, 0x52, 0x65, 0x64, 0x69, 0x73, 0x43, 0x6f,
	0x6e, 0x66, 0x69, 0x67, 0x52, 0x09, 0x75, 0x73, 0x65, 0x72, 0x52, 0x65, 0x64, 0x69, 0x73, 0x12,
	0x32, 0x0a, 0x0c, 0x6f, 0x6e, 0x6c, 0x69, 0x6e, 0x65, 0x5f, 0x72, 0x65, 0x64, 0x69, 0x73, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x70, 0x62, 0x2e, 0x52, 0x65, 0x64, 0x69, 0x73,
	0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x0b, 0x6f, 0x6e, 0x6c, 0x69, 0x6e, 0x65, 0x52, 0x65,
	0x64, 0x69, 0x73, 0x12, 0x1f, 0x0a, 0x0b, 0x67, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x5f, 0x6e,
	0x75, 0x6d, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x67, 0x61, 0x74, 0x65, 0x77, 0x61,
	0x79, 0x4e, 0x75, 0x6d, 0x22, 0x51, 0x0a, 0x0b, 0x52, 0x65, 0x64, 0x69, 0x73, 0x43, 0x6f, 0x6e,
	0x66, 0x69, 0x67, 0x12, 0x12, 0x0a, 0x04, 0x68, 0x6f, 0x73, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x68, 0x6f, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x6f, 0x72, 0x74, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x70, 0x6f, 0x72, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x70,
	0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x70,
	0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x22, 0x72, 0x0a, 0x10, 0x42, 0x72, 0x6f, 0x61, 0x64,
	0x63, 0x61, 0x73, 0x74, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x73, 0x12, 0x2a, 0x0a, 0x07, 0x73,
	0x65, 0x72, 0x76, 0x65, 0x72, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x70,
	0x62, 0x2e, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x07,
	0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x73, 0x12, 0x32, 0x0a, 0x0c, 0x72, 0x65, 0x64, 0x69, 0x73,
	0x5f, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e,
	0x70, 0x62, 0x2e, 0x52, 0x65, 0x64, 0x69, 0x73, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x52, 0x0b,
	0x72, 0x65, 0x64, 0x69, 0x73, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x22, 0x9b, 0x01, 0x0a, 0x08,
	0x49, 0x74, 0x65, 0x6d, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x17, 0x0a, 0x07,
	0x69, 0x74, 0x65, 0x6d, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x69,
	0x74, 0x65, 0x6d, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x69, 0x6d, 0x67,
	0x75, 0x72, 0x6c, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x69, 0x6d, 0x67, 0x75, 0x72,
	0x6c, 0x12, 0x10, 0x0a, 0x03, 0x6e, 0x75, 0x6d, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x03,
	0x6e, 0x75, 0x6d, 0x12, 0x24, 0x0a, 0x0e, 0x75, 0x73, 0x65, 0x5f, 0x6c, 0x69, 0x6d, 0x69, 0x74,
	0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0c, 0x75, 0x73, 0x65,
	0x4c, 0x69, 0x6d, 0x69, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x42, 0x16, 0x5a, 0x0c, 0x2e, 0x2e, 0x2f,
	0x73, 0x6e, 0x61, 0x6b, 0x65, 0x6d, 0x69, 0x6e, 0x69, 0xa2, 0x02, 0x05, 0x50, 0x52, 0x4f, 0x54,
	0x4f, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_snakemini_internal_proto_rawDescOnce sync.Once
	file_snakemini_internal_proto_rawDescData = file_snakemini_internal_proto_rawDesc
)

func file_snakemini_internal_proto_rawDescGZIP() []byte {
	file_snakemini_internal_proto_rawDescOnce.Do(func() {
		file_snakemini_internal_proto_rawDescData = protoimpl.X.CompressGZIP(file_snakemini_internal_proto_rawDescData)
	})
	return file_snakemini_internal_proto_rawDescData
}

var file_snakemini_internal_proto_msgTypes = make([]protoimpl.MessageInfo, 7)
var file_snakemini_internal_proto_goTypes = []interface{}{
	(*InternalReq)(nil),      // 0: pb.InternalReq
	(*RegisterRequest)(nil),  // 1: pb.RegisterRequest
	(*ServerConfig)(nil),     // 2: pb.ServerConfig
	(*RedisServer)(nil),      // 3: pb.RedisServer
	(*RedisConfig)(nil),      // 4: pb.RedisConfig
	(*BroadcastConfigs)(nil), // 5: pb.BroadcastConfigs
	(*ItemInfo)(nil),         // 6: pb.ItemInfo
}
var file_snakemini_internal_proto_depIdxs = []int32{
	2, // 0: pb.RegisterRequest.config:type_name -> pb.ServerConfig
	4, // 1: pb.RedisServer.user_redis:type_name -> pb.RedisConfig
	4, // 2: pb.RedisServer.online_redis:type_name -> pb.RedisConfig
	2, // 3: pb.BroadcastConfigs.servers:type_name -> pb.ServerConfig
	3, // 4: pb.BroadcastConfigs.redis_server:type_name -> pb.RedisServer
	5, // [5:5] is the sub-list for method output_type
	5, // [5:5] is the sub-list for method input_type
	5, // [5:5] is the sub-list for extension type_name
	5, // [5:5] is the sub-list for extension extendee
	0, // [0:5] is the sub-list for field type_name
}

func init() { file_snakemini_internal_proto_init() }
func file_snakemini_internal_proto_init() {
	if File_snakemini_internal_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_snakemini_internal_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*InternalReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_snakemini_internal_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RegisterRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_snakemini_internal_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ServerConfig); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_snakemini_internal_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RedisServer); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_snakemini_internal_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RedisConfig); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_snakemini_internal_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BroadcastConfigs); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_snakemini_internal_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ItemInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_snakemini_internal_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   7,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_snakemini_internal_proto_goTypes,
		DependencyIndexes: file_snakemini_internal_proto_depIdxs,
		MessageInfos:      file_snakemini_internal_proto_msgTypes,
	}.Build()
	File_snakemini_internal_proto = out.File
	file_snakemini_internal_proto_rawDesc = nil
	file_snakemini_internal_proto_goTypes = nil
	file_snakemini_internal_proto_depIdxs = nil
}
