// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.27.1
// 	protoc        v3.16.1
// source: matchx/match/unity_qualify.proto

package match

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type UnityQualifyUploadAttr struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SkinIdList      []int64      `protobuf:"varint,1,rep,packed,name=skin_id_list,json=skinIdList,proto3" json:"skin_id_list,omitempty"`
	SuitId          int64        `protobuf:"varint,2,opt,name=suit_id,json=suitId,proto3" json:"suit_id,omitempty"`
	TeamBroadcastId int64        `protobuf:"varint,3,opt,name=team_broadcast_id,json=teamBroadcastId,proto3" json:"team_broadcast_id,omitempty"`
	TeamBubbleId    int64        `protobuf:"varint,4,opt,name=team_bubble_id,json=teamBubbleId,proto3" json:"team_bubble_id,omitempty"`
	SkinSkillList   []*SkinSkill `protobuf:"bytes,5,rep,name=skin_skill_list,json=skinSkillList,proto3" json:"skin_skill_list,omitempty"`
	PropId          int64        `protobuf:"varint,6,opt,name=prop_id,json=propId,proto3" json:"prop_id,omitempty"`
}

func (x *UnityQualifyUploadAttr) Reset() {
	*x = UnityQualifyUploadAttr{}
	if protoimpl.UnsafeEnabled {
		mi := &file_matchx_match_unity_qualify_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UnityQualifyUploadAttr) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UnityQualifyUploadAttr) ProtoMessage() {}

func (x *UnityQualifyUploadAttr) ProtoReflect() protoreflect.Message {
	mi := &file_matchx_match_unity_qualify_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UnityQualifyUploadAttr.ProtoReflect.Descriptor instead.
func (*UnityQualifyUploadAttr) Descriptor() ([]byte, []int) {
	return file_matchx_match_unity_qualify_proto_rawDescGZIP(), []int{0}
}

func (x *UnityQualifyUploadAttr) GetSkinIdList() []int64 {
	if x != nil {
		return x.SkinIdList
	}
	return nil
}

func (x *UnityQualifyUploadAttr) GetSuitId() int64 {
	if x != nil {
		return x.SuitId
	}
	return 0
}

func (x *UnityQualifyUploadAttr) GetTeamBroadcastId() int64 {
	if x != nil {
		return x.TeamBroadcastId
	}
	return 0
}

func (x *UnityQualifyUploadAttr) GetTeamBubbleId() int64 {
	if x != nil {
		return x.TeamBubbleId
	}
	return 0
}

func (x *UnityQualifyUploadAttr) GetSkinSkillList() []*SkinSkill {
	if x != nil {
		return x.SkinSkillList
	}
	return nil
}

func (x *UnityQualifyUploadAttr) GetPropId() int64 {
	if x != nil {
		return x.PropId
	}
	return 0
}

type ReportRoomScoreNotify struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *ReportRoomScoreNotify) Reset() {
	*x = ReportRoomScoreNotify{}
	if protoimpl.UnsafeEnabled {
		mi := &file_matchx_match_unity_qualify_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReportRoomScoreNotify) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReportRoomScoreNotify) ProtoMessage() {}

func (x *ReportRoomScoreNotify) ProtoReflect() protoreflect.Message {
	mi := &file_matchx_match_unity_qualify_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReportRoomScoreNotify.ProtoReflect.Descriptor instead.
func (*ReportRoomScoreNotify) Descriptor() ([]byte, []int) {
	return file_matchx_match_unity_qualify_proto_rawDescGZIP(), []int{1}
}

type SkinSkill struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SkillType int32   `protobuf:"varint,1,opt,name=skill_type,json=skillType,proto3" json:"skill_type,omitempty"`
	Value     float64 `protobuf:"fixed64,2,opt,name=value,proto3" json:"value,omitempty"`
}

func (x *SkinSkill) Reset() {
	*x = SkinSkill{}
	if protoimpl.UnsafeEnabled {
		mi := &file_matchx_match_unity_qualify_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SkinSkill) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SkinSkill) ProtoMessage() {}

func (x *SkinSkill) ProtoReflect() protoreflect.Message {
	mi := &file_matchx_match_unity_qualify_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SkinSkill.ProtoReflect.Descriptor instead.
func (*SkinSkill) Descriptor() ([]byte, []int) {
	return file_matchx_match_unity_qualify_proto_rawDescGZIP(), []int{2}
}

func (x *SkinSkill) GetSkillType() int32 {
	if x != nil {
		return x.SkillType
	}
	return 0
}

func (x *SkinSkill) GetValue() float64 {
	if x != nil {
		return x.Value
	}
	return 0
}

type UnityQualifyMatchSuccessNotify struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	GameConfigVersion int64                           `protobuf:"varint,1,opt,name=game_config_version,json=gameConfigVersion,proto3" json:"game_config_version,omitempty"`                                                         // 游戏配置版本（目前只有原生团战有用）
	RoomRankScore     float64                         `protobuf:"fixed64,2,opt,name=room_rank_score,json=roomRankScore,proto3" json:"room_rank_score,omitempty"`                                                                    // 房间段位分（目前只有原生团战有用）
	TeamVoice         int64                           `protobuf:"varint,3,opt,name=team_voice,json=teamVoice,proto3" json:"team_voice,omitempty"`                                                                                   // 组队语音（目前只有原生团战有用）
	AiPools           map[int32]*UnityQualifyAIConfig `protobuf:"bytes,4,rep,name=ai_pools,json=aiPools,proto3" json:"ai_pools,omitempty" protobuf_key:"varint,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"` // ai_level -> AI 行为配置
}

func (x *UnityQualifyMatchSuccessNotify) Reset() {
	*x = UnityQualifyMatchSuccessNotify{}
	if protoimpl.UnsafeEnabled {
		mi := &file_matchx_match_unity_qualify_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UnityQualifyMatchSuccessNotify) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UnityQualifyMatchSuccessNotify) ProtoMessage() {}

func (x *UnityQualifyMatchSuccessNotify) ProtoReflect() protoreflect.Message {
	mi := &file_matchx_match_unity_qualify_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UnityQualifyMatchSuccessNotify.ProtoReflect.Descriptor instead.
func (*UnityQualifyMatchSuccessNotify) Descriptor() ([]byte, []int) {
	return file_matchx_match_unity_qualify_proto_rawDescGZIP(), []int{3}
}

func (x *UnityQualifyMatchSuccessNotify) GetGameConfigVersion() int64 {
	if x != nil {
		return x.GameConfigVersion
	}
	return 0
}

func (x *UnityQualifyMatchSuccessNotify) GetRoomRankScore() float64 {
	if x != nil {
		return x.RoomRankScore
	}
	return 0
}

func (x *UnityQualifyMatchSuccessNotify) GetTeamVoice() int64 {
	if x != nil {
		return x.TeamVoice
	}
	return 0
}

func (x *UnityQualifyMatchSuccessNotify) GetAiPools() map[int32]*UnityQualifyAIConfig {
	if x != nil {
		return x.AiPools
	}
	return nil
}

type UnityQualifyRoomMember struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AiLevel         int32   `protobuf:"varint,1,opt,name=ai_level,json=aiLevel,proto3" json:"ai_level,omitempty"`
	TeamBroadcastId int64   `protobuf:"varint,2,opt,name=team_broadcast_id,json=teamBroadcastId,proto3" json:"team_broadcast_id,omitempty"`
	TeamBubbleId    int64   `protobuf:"varint,3,opt,name=team_bubble_id,json=teamBubbleId,proto3" json:"team_bubble_id,omitempty"`
	SuitId          int64   `protobuf:"varint,4,opt,name=suit_id,json=suitId,proto3" json:"suit_id,omitempty"`
	SuitChosen      int32   `protobuf:"varint,5,opt,name=suit_chosen,json=suitChosen,proto3" json:"suit_chosen,omitempty"`
	SkinIdList      []int64 `protobuf:"varint,6,rep,packed,name=skin_id_list,json=skinIdList,proto3" json:"skin_id_list,omitempty"`
	Mentorship      int32   `protobuf:"varint,7,opt,name=mentorship,proto3" json:"mentorship,omitempty"`
	RingId          int64   `protobuf:"varint,8,opt,name=ring_id,json=ringId,proto3" json:"ring_id,omitempty"`
	Malicious       bool    `protobuf:"varint,9,opt,name=malicious,proto3" json:"malicious,omitempty"` // 中途退出次数大于 x 次为恶意用户
}

func (x *UnityQualifyRoomMember) Reset() {
	*x = UnityQualifyRoomMember{}
	if protoimpl.UnsafeEnabled {
		mi := &file_matchx_match_unity_qualify_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UnityQualifyRoomMember) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UnityQualifyRoomMember) ProtoMessage() {}

func (x *UnityQualifyRoomMember) ProtoReflect() protoreflect.Message {
	mi := &file_matchx_match_unity_qualify_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UnityQualifyRoomMember.ProtoReflect.Descriptor instead.
func (*UnityQualifyRoomMember) Descriptor() ([]byte, []int) {
	return file_matchx_match_unity_qualify_proto_rawDescGZIP(), []int{4}
}

func (x *UnityQualifyRoomMember) GetAiLevel() int32 {
	if x != nil {
		return x.AiLevel
	}
	return 0
}

func (x *UnityQualifyRoomMember) GetTeamBroadcastId() int64 {
	if x != nil {
		return x.TeamBroadcastId
	}
	return 0
}

func (x *UnityQualifyRoomMember) GetTeamBubbleId() int64 {
	if x != nil {
		return x.TeamBubbleId
	}
	return 0
}

func (x *UnityQualifyRoomMember) GetSuitId() int64 {
	if x != nil {
		return x.SuitId
	}
	return 0
}

func (x *UnityQualifyRoomMember) GetSuitChosen() int32 {
	if x != nil {
		return x.SuitChosen
	}
	return 0
}

func (x *UnityQualifyRoomMember) GetSkinIdList() []int64 {
	if x != nil {
		return x.SkinIdList
	}
	return nil
}

func (x *UnityQualifyRoomMember) GetMentorship() int32 {
	if x != nil {
		return x.Mentorship
	}
	return 0
}

func (x *UnityQualifyRoomMember) GetRingId() int64 {
	if x != nil {
		return x.RingId
	}
	return 0
}

func (x *UnityQualifyRoomMember) GetMalicious() bool {
	if x != nil {
		return x.Malicious
	}
	return false
}

type UnityQualifyGroupMember struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	State     int32 `protobuf:"varint,1,opt,name=state,proto3" json:"state,omitempty"` // 在队伍中状态。默认0准备好，1结算中，2未准备
	RingId    int64 `protobuf:"varint,2,opt,name=ring_id,json=ringId,proto3" json:"ring_id,omitempty"`
	PropId    int64 `protobuf:"varint,3,opt,name=prop_id,json=propId,proto3" json:"prop_id,omitempty"`
	SuitId    int64 `protobuf:"varint,4,opt,name=suit_id,json=suitId,proto3" json:"suit_id,omitempty"`          // 队服 id
	ShowValue int64 `protobuf:"varint,5,opt,name=show_value,json=showValue,proto3" json:"show_value,omitempty"` // show 值
}

func (x *UnityQualifyGroupMember) Reset() {
	*x = UnityQualifyGroupMember{}
	if protoimpl.UnsafeEnabled {
		mi := &file_matchx_match_unity_qualify_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UnityQualifyGroupMember) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UnityQualifyGroupMember) ProtoMessage() {}

func (x *UnityQualifyGroupMember) ProtoReflect() protoreflect.Message {
	mi := &file_matchx_match_unity_qualify_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UnityQualifyGroupMember.ProtoReflect.Descriptor instead.
func (*UnityQualifyGroupMember) Descriptor() ([]byte, []int) {
	return file_matchx_match_unity_qualify_proto_rawDescGZIP(), []int{5}
}

func (x *UnityQualifyGroupMember) GetState() int32 {
	if x != nil {
		return x.State
	}
	return 0
}

func (x *UnityQualifyGroupMember) GetRingId() int64 {
	if x != nil {
		return x.RingId
	}
	return 0
}

func (x *UnityQualifyGroupMember) GetPropId() int64 {
	if x != nil {
		return x.PropId
	}
	return 0
}

func (x *UnityQualifyGroupMember) GetSuitId() int64 {
	if x != nil {
		return x.SuitId
	}
	return 0
}

func (x *UnityQualifyGroupMember) GetShowValue() int64 {
	if x != nil {
		return x.ShowValue
	}
	return 0
}

type UnityQualifySyncGroupMemberNotify struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MaxStar int64 `protobuf:"varint,1,opt,name=max_star,json=maxStar,proto3" json:"max_star,omitempty"` // 组队中的最大历史最大星星数 (HistoryMaxStar)
}

func (x *UnityQualifySyncGroupMemberNotify) Reset() {
	*x = UnityQualifySyncGroupMemberNotify{}
	if protoimpl.UnsafeEnabled {
		mi := &file_matchx_match_unity_qualify_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UnityQualifySyncGroupMemberNotify) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UnityQualifySyncGroupMemberNotify) ProtoMessage() {}

func (x *UnityQualifySyncGroupMemberNotify) ProtoReflect() protoreflect.Message {
	mi := &file_matchx_match_unity_qualify_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UnityQualifySyncGroupMemberNotify.ProtoReflect.Descriptor instead.
func (*UnityQualifySyncGroupMemberNotify) Descriptor() ([]byte, []int) {
	return file_matchx_match_unity_qualify_proto_rawDescGZIP(), []int{6}
}

func (x *UnityQualifySyncGroupMemberNotify) GetMaxStar() int64 {
	if x != nil {
		return x.MaxStar
	}
	return 0
}

type UnityQualifyJoinRoom struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Attr *UploadAttrReq `protobuf:"bytes,1,opt,name=attr,proto3" json:"attr,omitempty"`
}

func (x *UnityQualifyJoinRoom) Reset() {
	*x = UnityQualifyJoinRoom{}
	if protoimpl.UnsafeEnabled {
		mi := &file_matchx_match_unity_qualify_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UnityQualifyJoinRoom) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UnityQualifyJoinRoom) ProtoMessage() {}

func (x *UnityQualifyJoinRoom) ProtoReflect() protoreflect.Message {
	mi := &file_matchx_match_unity_qualify_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UnityQualifyJoinRoom.ProtoReflect.Descriptor instead.
func (*UnityQualifyJoinRoom) Descriptor() ([]byte, []int) {
	return file_matchx_match_unity_qualify_proto_rawDescGZIP(), []int{7}
}

func (x *UnityQualifyJoinRoom) GetAttr() *UploadAttrReq {
	if x != nil {
		return x.Attr
	}
	return nil
}

type UnityQualifyAIConfig struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Level                  int32                                    `protobuf:"varint,1,opt,name=level,proto3" json:"level,omitempty"`
	Comment                string                                   `protobuf:"bytes,2,opt,name=comment,proto3" json:"comment,omitempty"`
	BorderDisFactor        float64                                  `protobuf:"fixed64,3,opt,name=border_dis_factor,json=borderDisFactor,proto3" json:"border_dis_factor,omitempty"`
	SnakeDisFactor         float64                                  `protobuf:"fixed64,4,opt,name=snake_dis_factor,json=snakeDisFactor,proto3" json:"snake_dis_factor,omitempty"`
	WreckDisFactor         float64                                  `protobuf:"fixed64,5,opt,name=wreck_dis_factor,json=wreckDisFactor,proto3" json:"wreck_dis_factor,omitempty"`
	FloaterDisFactor       float64                                  `protobuf:"fixed64,6,opt,name=floater_dis_factor,json=floaterDisFactor,proto3" json:"floater_dis_factor,omitempty"`
	AiSnakeViewAngle       float64                                  `protobuf:"fixed64,7,opt,name=ai_snake_view_angle,json=aiSnakeViewAngle,proto3" json:"ai_snake_view_angle,omitempty"`
	AttackBorderDisFactor  float64                                  `protobuf:"fixed64,8,opt,name=attack_border_dis_factor,json=attackBorderDisFactor,proto3" json:"attack_border_dis_factor,omitempty"`
	AttackSnakeDisFactor   float64                                  `protobuf:"fixed64,9,opt,name=attack_snake_dis_factor,json=attackSnakeDisFactor,proto3" json:"attack_snake_dis_factor,omitempty"`
	AttackWreckDisFactor   float64                                  `protobuf:"fixed64,10,opt,name=attack_wreck_dis_factor,json=attackWreckDisFactor,proto3" json:"attack_wreck_dis_factor,omitempty"`
	AttackAiSnakeViewAngle float64                                  `protobuf:"fixed64,11,opt,name=attack_ai_snake_view_angle,json=attackAiSnakeViewAngle,proto3" json:"attack_ai_snake_view_angle,omitempty"`
	AttackFloaterDisFactor float64                                  `protobuf:"fixed64,12,opt,name=attack_floater_dis_factor,json=attackFloaterDisFactor,proto3" json:"attack_floater_dis_factor,omitempty"`
	AttackCircleDisFactor  float64                                  `protobuf:"fixed64,13,opt,name=attack_circle_dis_factor,json=attackCircleDisFactor,proto3" json:"attack_circle_dis_factor,omitempty"`
	AttackRate             float64                                  `protobuf:"fixed64,14,opt,name=attack_rate,json=attackRate,proto3" json:"attack_rate,omitempty"`
	ChangeDirectionRate    float64                                  `protobuf:"fixed64,15,opt,name=change_direction_rate,json=changeDirectionRate,proto3" json:"change_direction_rate,omitempty"`
	DelayDirectionRate     float64                                  `protobuf:"fixed64,16,opt,name=delay_direction_rate,json=delayDirectionRate,proto3" json:"delay_direction_rate,omitempty"`
	AttackTimes            []*UnityQualifyAIConfig_AttackTimeConfig `protobuf:"bytes,17,rep,name=attack_times,json=attackTimes,proto3" json:"attack_times,omitempty"`
	SpeedupRate            float64                                  `protobuf:"fixed64,18,opt,name=speedup_rate,json=speedupRate,proto3" json:"speedup_rate,omitempty"`
	SpeedupTime            float64                                  `protobuf:"fixed64,19,opt,name=speedup_time,json=speedupTime,proto3" json:"speedup_time,omitempty"`
}

func (x *UnityQualifyAIConfig) Reset() {
	*x = UnityQualifyAIConfig{}
	if protoimpl.UnsafeEnabled {
		mi := &file_matchx_match_unity_qualify_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UnityQualifyAIConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UnityQualifyAIConfig) ProtoMessage() {}

func (x *UnityQualifyAIConfig) ProtoReflect() protoreflect.Message {
	mi := &file_matchx_match_unity_qualify_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UnityQualifyAIConfig.ProtoReflect.Descriptor instead.
func (*UnityQualifyAIConfig) Descriptor() ([]byte, []int) {
	return file_matchx_match_unity_qualify_proto_rawDescGZIP(), []int{8}
}

func (x *UnityQualifyAIConfig) GetLevel() int32 {
	if x != nil {
		return x.Level
	}
	return 0
}

func (x *UnityQualifyAIConfig) GetComment() string {
	if x != nil {
		return x.Comment
	}
	return ""
}

func (x *UnityQualifyAIConfig) GetBorderDisFactor() float64 {
	if x != nil {
		return x.BorderDisFactor
	}
	return 0
}

func (x *UnityQualifyAIConfig) GetSnakeDisFactor() float64 {
	if x != nil {
		return x.SnakeDisFactor
	}
	return 0
}

func (x *UnityQualifyAIConfig) GetWreckDisFactor() float64 {
	if x != nil {
		return x.WreckDisFactor
	}
	return 0
}

func (x *UnityQualifyAIConfig) GetFloaterDisFactor() float64 {
	if x != nil {
		return x.FloaterDisFactor
	}
	return 0
}

func (x *UnityQualifyAIConfig) GetAiSnakeViewAngle() float64 {
	if x != nil {
		return x.AiSnakeViewAngle
	}
	return 0
}

func (x *UnityQualifyAIConfig) GetAttackBorderDisFactor() float64 {
	if x != nil {
		return x.AttackBorderDisFactor
	}
	return 0
}

func (x *UnityQualifyAIConfig) GetAttackSnakeDisFactor() float64 {
	if x != nil {
		return x.AttackSnakeDisFactor
	}
	return 0
}

func (x *UnityQualifyAIConfig) GetAttackWreckDisFactor() float64 {
	if x != nil {
		return x.AttackWreckDisFactor
	}
	return 0
}

func (x *UnityQualifyAIConfig) GetAttackAiSnakeViewAngle() float64 {
	if x != nil {
		return x.AttackAiSnakeViewAngle
	}
	return 0
}

func (x *UnityQualifyAIConfig) GetAttackFloaterDisFactor() float64 {
	if x != nil {
		return x.AttackFloaterDisFactor
	}
	return 0
}

func (x *UnityQualifyAIConfig) GetAttackCircleDisFactor() float64 {
	if x != nil {
		return x.AttackCircleDisFactor
	}
	return 0
}

func (x *UnityQualifyAIConfig) GetAttackRate() float64 {
	if x != nil {
		return x.AttackRate
	}
	return 0
}

func (x *UnityQualifyAIConfig) GetChangeDirectionRate() float64 {
	if x != nil {
		return x.ChangeDirectionRate
	}
	return 0
}

func (x *UnityQualifyAIConfig) GetDelayDirectionRate() float64 {
	if x != nil {
		return x.DelayDirectionRate
	}
	return 0
}

func (x *UnityQualifyAIConfig) GetAttackTimes() []*UnityQualifyAIConfig_AttackTimeConfig {
	if x != nil {
		return x.AttackTimes
	}
	return nil
}

func (x *UnityQualifyAIConfig) GetSpeedupRate() float64 {
	if x != nil {
		return x.SpeedupRate
	}
	return 0
}

func (x *UnityQualifyAIConfig) GetSpeedupTime() float64 {
	if x != nil {
		return x.SpeedupTime
	}
	return 0
}

type UnityQualifyAIConfig_AttackTimeConfig struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Time   float64 `protobuf:"fixed64,1,opt,name=time,proto3" json:"time,omitempty"`
	Weight int32   `protobuf:"varint,2,opt,name=weight,proto3" json:"weight,omitempty"`
}

func (x *UnityQualifyAIConfig_AttackTimeConfig) Reset() {
	*x = UnityQualifyAIConfig_AttackTimeConfig{}
	if protoimpl.UnsafeEnabled {
		mi := &file_matchx_match_unity_qualify_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UnityQualifyAIConfig_AttackTimeConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UnityQualifyAIConfig_AttackTimeConfig) ProtoMessage() {}

func (x *UnityQualifyAIConfig_AttackTimeConfig) ProtoReflect() protoreflect.Message {
	mi := &file_matchx_match_unity_qualify_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UnityQualifyAIConfig_AttackTimeConfig.ProtoReflect.Descriptor instead.
func (*UnityQualifyAIConfig_AttackTimeConfig) Descriptor() ([]byte, []int) {
	return file_matchx_match_unity_qualify_proto_rawDescGZIP(), []int{8, 0}
}

func (x *UnityQualifyAIConfig_AttackTimeConfig) GetTime() float64 {
	if x != nil {
		return x.Time
	}
	return 0
}

func (x *UnityQualifyAIConfig_AttackTimeConfig) GetWeight() int32 {
	if x != nil {
		return x.Weight
	}
	return 0
}

var File_matchx_match_unity_qualify_proto protoreflect.FileDescriptor

var file_matchx_match_unity_qualify_proto_rawDesc = []byte{
	0x0a, 0x20, 0x6d, 0x61, 0x74, 0x63, 0x68, 0x78, 0x2f, 0x6d, 0x61, 0x74, 0x63, 0x68, 0x2f, 0x75,
	0x6e, 0x69, 0x74, 0x79, 0x5f, 0x71, 0x75, 0x61, 0x6c, 0x69, 0x66, 0x79, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x12, 0x05, 0x6d, 0x61, 0x74, 0x63, 0x68, 0x1a, 0x18, 0x6d, 0x61, 0x74, 0x63, 0x68,
	0x78, 0x2f, 0x6d, 0x61, 0x74, 0x63, 0x68, 0x2f, 0x6d, 0x61, 0x74, 0x63, 0x68, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x22, 0xf8, 0x01, 0x0a, 0x16, 0x55, 0x6e, 0x69, 0x74, 0x79, 0x51, 0x75, 0x61,
	0x6c, 0x69, 0x66, 0x79, 0x55, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x41, 0x74, 0x74, 0x72, 0x12, 0x20,
	0x0a, 0x0c, 0x73, 0x6b, 0x69, 0x6e, 0x5f, 0x69, 0x64, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x01,
	0x20, 0x03, 0x28, 0x03, 0x52, 0x0a, 0x73, 0x6b, 0x69, 0x6e, 0x49, 0x64, 0x4c, 0x69, 0x73, 0x74,
	0x12, 0x17, 0x0a, 0x07, 0x73, 0x75, 0x69, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x06, 0x73, 0x75, 0x69, 0x74, 0x49, 0x64, 0x12, 0x2a, 0x0a, 0x11, 0x74, 0x65, 0x61,
	0x6d, 0x5f, 0x62, 0x72, 0x6f, 0x61, 0x64, 0x63, 0x61, 0x73, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x0f, 0x74, 0x65, 0x61, 0x6d, 0x42, 0x72, 0x6f, 0x61, 0x64, 0x63,
	0x61, 0x73, 0x74, 0x49, 0x64, 0x12, 0x24, 0x0a, 0x0e, 0x74, 0x65, 0x61, 0x6d, 0x5f, 0x62, 0x75,
	0x62, 0x62, 0x6c, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0c, 0x74,
	0x65, 0x61, 0x6d, 0x42, 0x75, 0x62, 0x62, 0x6c, 0x65, 0x49, 0x64, 0x12, 0x38, 0x0a, 0x0f, 0x73,
	0x6b, 0x69, 0x6e, 0x5f, 0x73, 0x6b, 0x69, 0x6c, 0x6c, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x05,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x6d, 0x61, 0x74, 0x63, 0x68, 0x2e, 0x53, 0x6b, 0x69,
	0x6e, 0x53, 0x6b, 0x69, 0x6c, 0x6c, 0x52, 0x0d, 0x73, 0x6b, 0x69, 0x6e, 0x53, 0x6b, 0x69, 0x6c,
	0x6c, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x17, 0x0a, 0x07, 0x70, 0x72, 0x6f, 0x70, 0x5f, 0x69, 0x64,
	0x18, 0x06, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x70, 0x72, 0x6f, 0x70, 0x49, 0x64, 0x22, 0x17,
	0x0a, 0x15, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x52, 0x6f, 0x6f, 0x6d, 0x53, 0x63, 0x6f, 0x72,
	0x65, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x22, 0x40, 0x0a, 0x09, 0x53, 0x6b, 0x69, 0x6e, 0x53,
	0x6b, 0x69, 0x6c, 0x6c, 0x12, 0x1d, 0x0a, 0x0a, 0x73, 0x6b, 0x69, 0x6c, 0x6c, 0x5f, 0x74, 0x79,
	0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x73, 0x6b, 0x69, 0x6c, 0x6c, 0x54,
	0x79, 0x70, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x01, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0xbf, 0x02, 0x0a, 0x1e, 0x55, 0x6e,
	0x69, 0x74, 0x79, 0x51, 0x75, 0x61, 0x6c, 0x69, 0x66, 0x79, 0x4d, 0x61, 0x74, 0x63, 0x68, 0x53,
	0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x12, 0x2e, 0x0a, 0x13,
	0x67, 0x61, 0x6d, 0x65, 0x5f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x5f, 0x76, 0x65, 0x72, 0x73,
	0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x11, 0x67, 0x61, 0x6d, 0x65, 0x43,
	0x6f, 0x6e, 0x66, 0x69, 0x67, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x26, 0x0a, 0x0f,
	0x72, 0x6f, 0x6f, 0x6d, 0x5f, 0x72, 0x61, 0x6e, 0x6b, 0x5f, 0x73, 0x63, 0x6f, 0x72, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x01, 0x52, 0x0d, 0x72, 0x6f, 0x6f, 0x6d, 0x52, 0x61, 0x6e, 0x6b, 0x53,
	0x63, 0x6f, 0x72, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x74, 0x65, 0x61, 0x6d, 0x5f, 0x76, 0x6f, 0x69,
	0x63, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x74, 0x65, 0x61, 0x6d, 0x56, 0x6f,
	0x69, 0x63, 0x65, 0x12, 0x4d, 0x0a, 0x08, 0x61, 0x69, 0x5f, 0x70, 0x6f, 0x6f, 0x6c, 0x73, 0x18,
	0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x32, 0x2e, 0x6d, 0x61, 0x74, 0x63, 0x68, 0x2e, 0x55, 0x6e,
	0x69, 0x74, 0x79, 0x51, 0x75, 0x61, 0x6c, 0x69, 0x66, 0x79, 0x4d, 0x61, 0x74, 0x63, 0x68, 0x53,
	0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x2e, 0x41, 0x69, 0x50,
	0x6f, 0x6f, 0x6c, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x07, 0x61, 0x69, 0x50, 0x6f, 0x6f,
	0x6c, 0x73, 0x1a, 0x57, 0x0a, 0x0c, 0x41, 0x69, 0x50, 0x6f, 0x6f, 0x6c, 0x73, 0x45, 0x6e, 0x74,
	0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x03, 0x6b, 0x65, 0x79, 0x12, 0x31, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x6d, 0x61, 0x74, 0x63, 0x68, 0x2e, 0x55, 0x6e, 0x69, 0x74,
	0x79, 0x51, 0x75, 0x61, 0x6c, 0x69, 0x66, 0x79, 0x41, 0x49, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67,
	0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0xb8, 0x02, 0x0a, 0x16,
	0x55, 0x6e, 0x69, 0x74, 0x79, 0x51, 0x75, 0x61, 0x6c, 0x69, 0x66, 0x79, 0x52, 0x6f, 0x6f, 0x6d,
	0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x19, 0x0a, 0x08, 0x61, 0x69, 0x5f, 0x6c, 0x65, 0x76,
	0x65, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x61, 0x69, 0x4c, 0x65, 0x76, 0x65,
	0x6c, 0x12, 0x2a, 0x0a, 0x11, 0x74, 0x65, 0x61, 0x6d, 0x5f, 0x62, 0x72, 0x6f, 0x61, 0x64, 0x63,
	0x61, 0x73, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0f, 0x74, 0x65,
	0x61, 0x6d, 0x42, 0x72, 0x6f, 0x61, 0x64, 0x63, 0x61, 0x73, 0x74, 0x49, 0x64, 0x12, 0x24, 0x0a,
	0x0e, 0x74, 0x65, 0x61, 0x6d, 0x5f, 0x62, 0x75, 0x62, 0x62, 0x6c, 0x65, 0x5f, 0x69, 0x64, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0c, 0x74, 0x65, 0x61, 0x6d, 0x42, 0x75, 0x62, 0x62, 0x6c,
	0x65, 0x49, 0x64, 0x12, 0x17, 0x0a, 0x07, 0x73, 0x75, 0x69, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x73, 0x75, 0x69, 0x74, 0x49, 0x64, 0x12, 0x1f, 0x0a, 0x0b,
	0x73, 0x75, 0x69, 0x74, 0x5f, 0x63, 0x68, 0x6f, 0x73, 0x65, 0x6e, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x0a, 0x73, 0x75, 0x69, 0x74, 0x43, 0x68, 0x6f, 0x73, 0x65, 0x6e, 0x12, 0x20, 0x0a,
	0x0c, 0x73, 0x6b, 0x69, 0x6e, 0x5f, 0x69, 0x64, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x06, 0x20,
	0x03, 0x28, 0x03, 0x52, 0x0a, 0x73, 0x6b, 0x69, 0x6e, 0x49, 0x64, 0x4c, 0x69, 0x73, 0x74, 0x12,
	0x1e, 0x0a, 0x0a, 0x6d, 0x65, 0x6e, 0x74, 0x6f, 0x72, 0x73, 0x68, 0x69, 0x70, 0x18, 0x07, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x0a, 0x6d, 0x65, 0x6e, 0x74, 0x6f, 0x72, 0x73, 0x68, 0x69, 0x70, 0x12,
	0x17, 0x0a, 0x07, 0x72, 0x69, 0x6e, 0x67, 0x5f, 0x69, 0x64, 0x18, 0x08, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x06, 0x72, 0x69, 0x6e, 0x67, 0x49, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x6d, 0x61, 0x6c, 0x69,
	0x63, 0x69, 0x6f, 0x75, 0x73, 0x18, 0x09, 0x20, 0x01, 0x28, 0x08, 0x52, 0x09, 0x6d, 0x61, 0x6c,
	0x69, 0x63, 0x69, 0x6f, 0x75, 0x73, 0x22, 0x99, 0x01, 0x0a, 0x17, 0x55, 0x6e, 0x69, 0x74, 0x79,
	0x51, 0x75, 0x61, 0x6c, 0x69, 0x66, 0x79, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x4d, 0x65, 0x6d, 0x62,
	0x65, 0x72, 0x12, 0x14, 0x0a, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x12, 0x17, 0x0a, 0x07, 0x72, 0x69, 0x6e, 0x67,
	0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x72, 0x69, 0x6e, 0x67, 0x49,
	0x64, 0x12, 0x17, 0x0a, 0x07, 0x70, 0x72, 0x6f, 0x70, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x06, 0x70, 0x72, 0x6f, 0x70, 0x49, 0x64, 0x12, 0x17, 0x0a, 0x07, 0x73, 0x75,
	0x69, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x73, 0x75, 0x69,
	0x74, 0x49, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x73, 0x68, 0x6f, 0x77, 0x5f, 0x76, 0x61, 0x6c, 0x75,
	0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x73, 0x68, 0x6f, 0x77, 0x56, 0x61, 0x6c,
	0x75, 0x65, 0x22, 0x3e, 0x0a, 0x21, 0x55, 0x6e, 0x69, 0x74, 0x79, 0x51, 0x75, 0x61, 0x6c, 0x69,
	0x66, 0x79, 0x53, 0x79, 0x6e, 0x63, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x4d, 0x65, 0x6d, 0x62, 0x65,
	0x72, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x12, 0x19, 0x0a, 0x08, 0x6d, 0x61, 0x78, 0x5f, 0x73,
	0x74, 0x61, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x6d, 0x61, 0x78, 0x53, 0x74,
	0x61, 0x72, 0x22, 0x40, 0x0a, 0x14, 0x55, 0x6e, 0x69, 0x74, 0x79, 0x51, 0x75, 0x61, 0x6c, 0x69,
	0x66, 0x79, 0x4a, 0x6f, 0x69, 0x6e, 0x52, 0x6f, 0x6f, 0x6d, 0x12, 0x28, 0x0a, 0x04, 0x61, 0x74,
	0x74, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x6d, 0x61, 0x74, 0x63, 0x68,
	0x2e, 0x55, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x41, 0x74, 0x74, 0x72, 0x52, 0x65, 0x71, 0x52, 0x04,
	0x61, 0x74, 0x74, 0x72, 0x22, 0xd8, 0x07, 0x0a, 0x14, 0x55, 0x6e, 0x69, 0x74, 0x79, 0x51, 0x75,
	0x61, 0x6c, 0x69, 0x66, 0x79, 0x41, 0x49, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12, 0x14, 0x0a,
	0x05, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x6c, 0x65,
	0x76, 0x65, 0x6c, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x2a, 0x0a,
	0x11, 0x62, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x5f, 0x64, 0x69, 0x73, 0x5f, 0x66, 0x61, 0x63, 0x74,
	0x6f, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x01, 0x52, 0x0f, 0x62, 0x6f, 0x72, 0x64, 0x65, 0x72,
	0x44, 0x69, 0x73, 0x46, 0x61, 0x63, 0x74, 0x6f, 0x72, 0x12, 0x28, 0x0a, 0x10, 0x73, 0x6e, 0x61,
	0x6b, 0x65, 0x5f, 0x64, 0x69, 0x73, 0x5f, 0x66, 0x61, 0x63, 0x74, 0x6f, 0x72, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x01, 0x52, 0x0e, 0x73, 0x6e, 0x61, 0x6b, 0x65, 0x44, 0x69, 0x73, 0x46, 0x61, 0x63,
	0x74, 0x6f, 0x72, 0x12, 0x28, 0x0a, 0x10, 0x77, 0x72, 0x65, 0x63, 0x6b, 0x5f, 0x64, 0x69, 0x73,
	0x5f, 0x66, 0x61, 0x63, 0x74, 0x6f, 0x72, 0x18, 0x05, 0x20, 0x01, 0x28, 0x01, 0x52, 0x0e, 0x77,
	0x72, 0x65, 0x63, 0x6b, 0x44, 0x69, 0x73, 0x46, 0x61, 0x63, 0x74, 0x6f, 0x72, 0x12, 0x2c, 0x0a,
	0x12, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x65, 0x72, 0x5f, 0x64, 0x69, 0x73, 0x5f, 0x66, 0x61, 0x63,
	0x74, 0x6f, 0x72, 0x18, 0x06, 0x20, 0x01, 0x28, 0x01, 0x52, 0x10, 0x66, 0x6c, 0x6f, 0x61, 0x74,
	0x65, 0x72, 0x44, 0x69, 0x73, 0x46, 0x61, 0x63, 0x74, 0x6f, 0x72, 0x12, 0x2d, 0x0a, 0x13, 0x61,
	0x69, 0x5f, 0x73, 0x6e, 0x61, 0x6b, 0x65, 0x5f, 0x76, 0x69, 0x65, 0x77, 0x5f, 0x61, 0x6e, 0x67,
	0x6c, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x01, 0x52, 0x10, 0x61, 0x69, 0x53, 0x6e, 0x61, 0x6b,
	0x65, 0x56, 0x69, 0x65, 0x77, 0x41, 0x6e, 0x67, 0x6c, 0x65, 0x12, 0x37, 0x0a, 0x18, 0x61, 0x74,
	0x74, 0x61, 0x63, 0x6b, 0x5f, 0x62, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x5f, 0x64, 0x69, 0x73, 0x5f,
	0x66, 0x61, 0x63, 0x74, 0x6f, 0x72, 0x18, 0x08, 0x20, 0x01, 0x28, 0x01, 0x52, 0x15, 0x61, 0x74,
	0x74, 0x61, 0x63, 0x6b, 0x42, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x44, 0x69, 0x73, 0x46, 0x61, 0x63,
	0x74, 0x6f, 0x72, 0x12, 0x35, 0x0a, 0x17, 0x61, 0x74, 0x74, 0x61, 0x63, 0x6b, 0x5f, 0x73, 0x6e,
	0x61, 0x6b, 0x65, 0x5f, 0x64, 0x69, 0x73, 0x5f, 0x66, 0x61, 0x63, 0x74, 0x6f, 0x72, 0x18, 0x09,
	0x20, 0x01, 0x28, 0x01, 0x52, 0x14, 0x61, 0x74, 0x74, 0x61, 0x63, 0x6b, 0x53, 0x6e, 0x61, 0x6b,
	0x65, 0x44, 0x69, 0x73, 0x46, 0x61, 0x63, 0x74, 0x6f, 0x72, 0x12, 0x35, 0x0a, 0x17, 0x61, 0x74,
	0x74, 0x61, 0x63, 0x6b, 0x5f, 0x77, 0x72, 0x65, 0x63, 0x6b, 0x5f, 0x64, 0x69, 0x73, 0x5f, 0x66,
	0x61, 0x63, 0x74, 0x6f, 0x72, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x01, 0x52, 0x14, 0x61, 0x74, 0x74,
	0x61, 0x63, 0x6b, 0x57, 0x72, 0x65, 0x63, 0x6b, 0x44, 0x69, 0x73, 0x46, 0x61, 0x63, 0x74, 0x6f,
	0x72, 0x12, 0x3a, 0x0a, 0x1a, 0x61, 0x74, 0x74, 0x61, 0x63, 0x6b, 0x5f, 0x61, 0x69, 0x5f, 0x73,
	0x6e, 0x61, 0x6b, 0x65, 0x5f, 0x76, 0x69, 0x65, 0x77, 0x5f, 0x61, 0x6e, 0x67, 0x6c, 0x65, 0x18,
	0x0b, 0x20, 0x01, 0x28, 0x01, 0x52, 0x16, 0x61, 0x74, 0x74, 0x61, 0x63, 0x6b, 0x41, 0x69, 0x53,
	0x6e, 0x61, 0x6b, 0x65, 0x56, 0x69, 0x65, 0x77, 0x41, 0x6e, 0x67, 0x6c, 0x65, 0x12, 0x39, 0x0a,
	0x19, 0x61, 0x74, 0x74, 0x61, 0x63, 0x6b, 0x5f, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x65, 0x72, 0x5f,
	0x64, 0x69, 0x73, 0x5f, 0x66, 0x61, 0x63, 0x74, 0x6f, 0x72, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x01,
	0x52, 0x16, 0x61, 0x74, 0x74, 0x61, 0x63, 0x6b, 0x46, 0x6c, 0x6f, 0x61, 0x74, 0x65, 0x72, 0x44,
	0x69, 0x73, 0x46, 0x61, 0x63, 0x74, 0x6f, 0x72, 0x12, 0x37, 0x0a, 0x18, 0x61, 0x74, 0x74, 0x61,
	0x63, 0x6b, 0x5f, 0x63, 0x69, 0x72, 0x63, 0x6c, 0x65, 0x5f, 0x64, 0x69, 0x73, 0x5f, 0x66, 0x61,
	0x63, 0x74, 0x6f, 0x72, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x01, 0x52, 0x15, 0x61, 0x74, 0x74, 0x61,
	0x63, 0x6b, 0x43, 0x69, 0x72, 0x63, 0x6c, 0x65, 0x44, 0x69, 0x73, 0x46, 0x61, 0x63, 0x74, 0x6f,
	0x72, 0x12, 0x1f, 0x0a, 0x0b, 0x61, 0x74, 0x74, 0x61, 0x63, 0x6b, 0x5f, 0x72, 0x61, 0x74, 0x65,
	0x18, 0x0e, 0x20, 0x01, 0x28, 0x01, 0x52, 0x0a, 0x61, 0x74, 0x74, 0x61, 0x63, 0x6b, 0x52, 0x61,
	0x74, 0x65, 0x12, 0x32, 0x0a, 0x15, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x5f, 0x64, 0x69, 0x72,
	0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x72, 0x61, 0x74, 0x65, 0x18, 0x0f, 0x20, 0x01, 0x28,
	0x01, 0x52, 0x13, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x44, 0x69, 0x72, 0x65, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x52, 0x61, 0x74, 0x65, 0x12, 0x30, 0x0a, 0x14, 0x64, 0x65, 0x6c, 0x61, 0x79, 0x5f,
	0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x72, 0x61, 0x74, 0x65, 0x18, 0x10,
	0x20, 0x01, 0x28, 0x01, 0x52, 0x12, 0x64, 0x65, 0x6c, 0x61, 0x79, 0x44, 0x69, 0x72, 0x65, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x52, 0x61, 0x74, 0x65, 0x12, 0x4f, 0x0a, 0x0c, 0x61, 0x74, 0x74, 0x61,
	0x63, 0x6b, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x18, 0x11, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2c,
	0x2e, 0x6d, 0x61, 0x74, 0x63, 0x68, 0x2e, 0x55, 0x6e, 0x69, 0x74, 0x79, 0x51, 0x75, 0x61, 0x6c,
	0x69, 0x66, 0x79, 0x41, 0x49, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2e, 0x41, 0x74, 0x74, 0x61,
	0x63, 0x6b, 0x54, 0x69, 0x6d, 0x65, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x0b, 0x61, 0x74,
	0x74, 0x61, 0x63, 0x6b, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x12, 0x21, 0x0a, 0x0c, 0x73, 0x70, 0x65,
	0x65, 0x64, 0x75, 0x70, 0x5f, 0x72, 0x61, 0x74, 0x65, 0x18, 0x12, 0x20, 0x01, 0x28, 0x01, 0x52,
	0x0b, 0x73, 0x70, 0x65, 0x65, 0x64, 0x75, 0x70, 0x52, 0x61, 0x74, 0x65, 0x12, 0x21, 0x0a, 0x0c,
	0x73, 0x70, 0x65, 0x65, 0x64, 0x75, 0x70, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x13, 0x20, 0x01,
	0x28, 0x01, 0x52, 0x0b, 0x73, 0x70, 0x65, 0x65, 0x64, 0x75, 0x70, 0x54, 0x69, 0x6d, 0x65, 0x1a,
	0x3e, 0x0a, 0x10, 0x41, 0x74, 0x74, 0x61, 0x63, 0x6b, 0x54, 0x69, 0x6d, 0x65, 0x43, 0x6f, 0x6e,
	0x66, 0x69, 0x67, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x01, 0x52, 0x04, 0x74, 0x69, 0x6d, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x77, 0x65, 0x69, 0x67, 0x68,
	0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x77, 0x65, 0x69, 0x67, 0x68, 0x74, 0x42,
	0x2e, 0x5a, 0x2c, 0x67, 0x69, 0x74, 0x2e, 0x31, 0x37, 0x7a, 0x6a, 0x68, 0x2e, 0x63, 0x6f, 0x6d,
	0x2f, 0x73, 0x6e, 0x61, 0x6b, 0x65, 0x2f, 0x73, 0x6e, 0x61, 0x6b, 0x65, 0x5f, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x2f, 0x6d, 0x61, 0x74, 0x63, 0x68, 0x78, 0x2f, 0x6d, 0x61, 0x74, 0x63, 0x68, 0x62,
	0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_matchx_match_unity_qualify_proto_rawDescOnce sync.Once
	file_matchx_match_unity_qualify_proto_rawDescData = file_matchx_match_unity_qualify_proto_rawDesc
)

func file_matchx_match_unity_qualify_proto_rawDescGZIP() []byte {
	file_matchx_match_unity_qualify_proto_rawDescOnce.Do(func() {
		file_matchx_match_unity_qualify_proto_rawDescData = protoimpl.X.CompressGZIP(file_matchx_match_unity_qualify_proto_rawDescData)
	})
	return file_matchx_match_unity_qualify_proto_rawDescData
}

var file_matchx_match_unity_qualify_proto_msgTypes = make([]protoimpl.MessageInfo, 11)
var file_matchx_match_unity_qualify_proto_goTypes = []interface{}{
	(*UnityQualifyUploadAttr)(nil),                // 0: match.UnityQualifyUploadAttr
	(*ReportRoomScoreNotify)(nil),                 // 1: match.ReportRoomScoreNotify
	(*SkinSkill)(nil),                             // 2: match.SkinSkill
	(*UnityQualifyMatchSuccessNotify)(nil),        // 3: match.UnityQualifyMatchSuccessNotify
	(*UnityQualifyRoomMember)(nil),                // 4: match.UnityQualifyRoomMember
	(*UnityQualifyGroupMember)(nil),               // 5: match.UnityQualifyGroupMember
	(*UnityQualifySyncGroupMemberNotify)(nil),     // 6: match.UnityQualifySyncGroupMemberNotify
	(*UnityQualifyJoinRoom)(nil),                  // 7: match.UnityQualifyJoinRoom
	(*UnityQualifyAIConfig)(nil),                  // 8: match.UnityQualifyAIConfig
	nil,                                           // 9: match.UnityQualifyMatchSuccessNotify.AiPoolsEntry
	(*UnityQualifyAIConfig_AttackTimeConfig)(nil), // 10: match.UnityQualifyAIConfig.AttackTimeConfig
	(*UploadAttrReq)(nil),                         // 11: match.UploadAttrReq
}
var file_matchx_match_unity_qualify_proto_depIdxs = []int32{
	2,  // 0: match.UnityQualifyUploadAttr.skin_skill_list:type_name -> match.SkinSkill
	9,  // 1: match.UnityQualifyMatchSuccessNotify.ai_pools:type_name -> match.UnityQualifyMatchSuccessNotify.AiPoolsEntry
	11, // 2: match.UnityQualifyJoinRoom.attr:type_name -> match.UploadAttrReq
	10, // 3: match.UnityQualifyAIConfig.attack_times:type_name -> match.UnityQualifyAIConfig.AttackTimeConfig
	8,  // 4: match.UnityQualifyMatchSuccessNotify.AiPoolsEntry.value:type_name -> match.UnityQualifyAIConfig
	5,  // [5:5] is the sub-list for method output_type
	5,  // [5:5] is the sub-list for method input_type
	5,  // [5:5] is the sub-list for extension type_name
	5,  // [5:5] is the sub-list for extension extendee
	0,  // [0:5] is the sub-list for field type_name
}

func init() { file_matchx_match_unity_qualify_proto_init() }
func file_matchx_match_unity_qualify_proto_init() {
	if File_matchx_match_unity_qualify_proto != nil {
		return
	}
	file_matchx_match_match_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_matchx_match_unity_qualify_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UnityQualifyUploadAttr); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_matchx_match_unity_qualify_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReportRoomScoreNotify); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_matchx_match_unity_qualify_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SkinSkill); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_matchx_match_unity_qualify_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UnityQualifyMatchSuccessNotify); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_matchx_match_unity_qualify_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UnityQualifyRoomMember); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_matchx_match_unity_qualify_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UnityQualifyGroupMember); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_matchx_match_unity_qualify_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UnityQualifySyncGroupMemberNotify); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_matchx_match_unity_qualify_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UnityQualifyJoinRoom); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_matchx_match_unity_qualify_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UnityQualifyAIConfig); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_matchx_match_unity_qualify_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UnityQualifyAIConfig_AttackTimeConfig); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_matchx_match_unity_qualify_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   11,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_matchx_match_unity_qualify_proto_goTypes,
		DependencyIndexes: file_matchx_match_unity_qualify_proto_depIdxs,
		MessageInfos:      file_matchx_match_unity_qualify_proto_msgTypes,
	}.Build()
	File_matchx_match_unity_qualify_proto = out.File
	file_matchx_match_unity_qualify_proto_rawDesc = nil
	file_matchx_match_unity_qualify_proto_goTypes = nil
	file_matchx_match_unity_qualify_proto_depIdxs = nil
}
