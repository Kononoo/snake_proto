// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.27.1
// 	protoc        v3.16.1
// source: voiceroom/voiceroom.proto

package voiceroom

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type VoiceOpType int32

const (
	VoiceOpType_vUndef           VoiceOpType = 0
	VoiceOpType_NewRoom          VoiceOpType = 1   // 创建房间
	VoiceOpType_MyPreRoom        VoiceOpType = 2   // 历史房间，创建前请求
	VoiceOpType_EnterRoom        VoiceOpType = 3   // 进入房间
	VoiceOpType_UpdateSetting    VoiceOpType = 4   // 改房间信息/设置
	VoiceOpType_ExitRoom         VoiceOpType = 5   // 退出房间
	VoiceOpType_LockSeat         VoiceOpType = 6   // 开关麦位
	VoiceOpType_PlayerManager    VoiceOpType = 7   // 房主管理成员
	VoiceOpType_SeatInvite       VoiceOpType = 8   // 邀请上麦
	VoiceOpType_HandleSeatInvite VoiceOpType = 9   // 处理邀请上麦
	VoiceOpType_UseSeat          VoiceOpType = 10  // 上下麦位
	VoiceOpType_MicOpt           VoiceOpType = 11  // 自己开关麦需要别人看到，只有座位上的人操作需要请求
	VoiceOpType_SendRedPack      VoiceOpType = 12  // 发红包，领红包复用receive_red_pack接口
	VoiceOpType_GetNearby        VoiceOpType = 13  // 附近的人
	VoiceOpType_GetRoomList      VoiceOpType = 14  // 获取房间列表
	VoiceOpType_SearchRoom       VoiceOpType = 15  // 搜索房间
	VoiceOpType_SendChat         VoiceOpType = 17  // 公屏发送聊天信息
	VoiceOpType_SendGift         VoiceOpType = 18  // 送礼物
	VoiceOpType_StartPk          VoiceOpType = 19  // 开始PK
	VoiceOpType_PkVote           VoiceOpType = 20  // PK投票
	VoiceOpType_SendEmoji        VoiceOpType = 21  // 发送表情
	VoiceOpType_GetMemberList    VoiceOpType = 22  // 获取成员列表
	VoiceOpType_Lottery          VoiceOpType = 23  // 抽奖
	VoiceOpType_SeatKick         VoiceOpType = 24  // 房主踢人下麦
	VoiceOpType_GetPkInfo        VoiceOpType = 25  // 获取PK信息
	VoiceOpType_PkSendGift       VoiceOpType = 26  // PK送礼物
	VoiceOpType_RoomInvite       VoiceOpType = 27  //邀请进语音房
	VoiceOpType_InnerCall        VoiceOpType = 100 //内部调用接口
	VoiceOpType_PuUpdateSetting  VoiceOpType = 101 // 改房间信息push
	VoiceOpType_PuPlayerChange   VoiceOpType = 102 // 成员变化push
	VoiceOpType_PuSeatInvite     VoiceOpType = 103 // 邀请上麦push
	VoiceOpType_PuSeatChange     VoiceOpType = 104 // 麦位变化push
	VoiceOpType_PuRoomClose      VoiceOpType = 105 // 房间解散push
	VoiceOpType_PuRedPack        VoiceOpType = 106 // 通知有红包
	VoiceOpType_PuRoomChat       VoiceOpType = 107 // 聊天信息/系统提示push
	VoiceOpType_PuPkResult       VoiceOpType = 108 // PK结果push
	VoiceOpType_PuSendEmoji      VoiceOpType = 109 // 表情push
	VoiceOpType_PuSendGift       VoiceOpType = 110 // 礼物弹幕push
	VoiceOpType_PuLotteryResult  VoiceOpType = 111 //抽奖结果push
	VoiceOpType_PuSeatKick       VoiceOpType = 112 // 自己被从麦位上踢下
	VoiceOpType_PuStartPk        VoiceOpType = 113 // 开始PK
	VoiceOpType_PuRoomInvite     VoiceOpType = 114 // 邀请进房
	VoiceOpType_PuPlayMusic      VoiceOpType = 115 //房主播放、暂停音乐推送
)

// Enum value maps for VoiceOpType.
var (
	VoiceOpType_name = map[int32]string{
		0:   "vUndef",
		1:   "NewRoom",
		2:   "MyPreRoom",
		3:   "EnterRoom",
		4:   "UpdateSetting",
		5:   "ExitRoom",
		6:   "LockSeat",
		7:   "PlayerManager",
		8:   "SeatInvite",
		9:   "HandleSeatInvite",
		10:  "UseSeat",
		11:  "MicOpt",
		12:  "SendRedPack",
		13:  "GetNearby",
		14:  "GetRoomList",
		15:  "SearchRoom",
		17:  "SendChat",
		18:  "SendGift",
		19:  "StartPk",
		20:  "PkVote",
		21:  "SendEmoji",
		22:  "GetMemberList",
		23:  "Lottery",
		24:  "SeatKick",
		25:  "GetPkInfo",
		26:  "PkSendGift",
		27:  "RoomInvite",
		100: "InnerCall",
		101: "PuUpdateSetting",
		102: "PuPlayerChange",
		103: "PuSeatInvite",
		104: "PuSeatChange",
		105: "PuRoomClose",
		106: "PuRedPack",
		107: "PuRoomChat",
		108: "PuPkResult",
		109: "PuSendEmoji",
		110: "PuSendGift",
		111: "PuLotteryResult",
		112: "PuSeatKick",
		113: "PuStartPk",
		114: "PuRoomInvite",
		115: "PuPlayMusic",
	}
	VoiceOpType_value = map[string]int32{
		"vUndef":           0,
		"NewRoom":          1,
		"MyPreRoom":        2,
		"EnterRoom":        3,
		"UpdateSetting":    4,
		"ExitRoom":         5,
		"LockSeat":         6,
		"PlayerManager":    7,
		"SeatInvite":       8,
		"HandleSeatInvite": 9,
		"UseSeat":          10,
		"MicOpt":           11,
		"SendRedPack":      12,
		"GetNearby":        13,
		"GetRoomList":      14,
		"SearchRoom":       15,
		"SendChat":         17,
		"SendGift":         18,
		"StartPk":          19,
		"PkVote":           20,
		"SendEmoji":        21,
		"GetMemberList":    22,
		"Lottery":          23,
		"SeatKick":         24,
		"GetPkInfo":        25,
		"PkSendGift":       26,
		"RoomInvite":       27,
		"InnerCall":        100,
		"PuUpdateSetting":  101,
		"PuPlayerChange":   102,
		"PuSeatInvite":     103,
		"PuSeatChange":     104,
		"PuRoomClose":      105,
		"PuRedPack":        106,
		"PuRoomChat":       107,
		"PuPkResult":       108,
		"PuSendEmoji":      109,
		"PuSendGift":       110,
		"PuLotteryResult":  111,
		"PuSeatKick":       112,
		"PuStartPk":        113,
		"PuRoomInvite":     114,
		"PuPlayMusic":      115,
	}
)

func (x VoiceOpType) Enum() *VoiceOpType {
	p := new(VoiceOpType)
	*p = x
	return p
}

func (x VoiceOpType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (VoiceOpType) Descriptor() protoreflect.EnumDescriptor {
	return file_voiceroom_voiceroom_proto_enumTypes[0].Descriptor()
}

func (VoiceOpType) Type() protoreflect.EnumType {
	return &file_voiceroom_voiceroom_proto_enumTypes[0]
}

func (x VoiceOpType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use VoiceOpType.Descriptor instead.
func (VoiceOpType) EnumDescriptor() ([]byte, []int) {
	return file_voiceroom_voiceroom_proto_rawDescGZIP(), []int{0}
}

type VoiceRoomMusicStatus int32

const (
	VoiceRoomMusicStatus_invalidStatus VoiceRoomMusicStatus = 0
	VoiceRoomMusicStatus_Open          VoiceRoomMusicStatus = 1 //播放
	VoiceRoomMusicStatus_Pause         VoiceRoomMusicStatus = 2 //暂停
	VoiceRoomMusicStatus_Close         VoiceRoomMusicStatus = 3 //关闭
)

// Enum value maps for VoiceRoomMusicStatus.
var (
	VoiceRoomMusicStatus_name = map[int32]string{
		0: "invalidStatus",
		1: "Open",
		2: "Pause",
		3: "Close",
	}
	VoiceRoomMusicStatus_value = map[string]int32{
		"invalidStatus": 0,
		"Open":          1,
		"Pause":         2,
		"Close":         3,
	}
)

func (x VoiceRoomMusicStatus) Enum() *VoiceRoomMusicStatus {
	p := new(VoiceRoomMusicStatus)
	*p = x
	return p
}

func (x VoiceRoomMusicStatus) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (VoiceRoomMusicStatus) Descriptor() protoreflect.EnumDescriptor {
	return file_voiceroom_voiceroom_proto_enumTypes[1].Descriptor()
}

func (VoiceRoomMusicStatus) Type() protoreflect.EnumType {
	return &file_voiceroom_voiceroom_proto_enumTypes[1]
}

func (x VoiceRoomMusicStatus) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use VoiceRoomMusicStatus.Descriptor instead.
func (VoiceRoomMusicStatus) EnumDescriptor() ([]byte, []int) {
	return file_voiceroom_voiceroom_proto_rawDescGZIP(), []int{1}
}

type LotteryType int32

const (
	LotteryType_tpUndef LotteryType = 0
	LotteryType_MicUser LotteryType = 1 //麦上玩家
	LotteryType_AllUser LotteryType = 2 //所有玩家
)

// Enum value maps for LotteryType.
var (
	LotteryType_name = map[int32]string{
		0: "tpUndef",
		1: "MicUser",
		2: "AllUser",
	}
	LotteryType_value = map[string]int32{
		"tpUndef": 0,
		"MicUser": 1,
		"AllUser": 2,
	}
)

func (x LotteryType) Enum() *LotteryType {
	p := new(LotteryType)
	*p = x
	return p
}

func (x LotteryType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (LotteryType) Descriptor() protoreflect.EnumDescriptor {
	return file_voiceroom_voiceroom_proto_enumTypes[2].Descriptor()
}

func (LotteryType) Type() protoreflect.EnumType {
	return &file_voiceroom_voiceroom_proto_enumTypes[2]
}

func (x LotteryType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use LotteryType.Descriptor instead.
func (LotteryType) EnumDescriptor() ([]byte, []int) {
	return file_voiceroom_voiceroom_proto_rawDescGZIP(), []int{2}
}

//1: 获取房间信息，2：封禁语音房上麦，3：语音房间解散，4：重置语音房间房名，5：重置语音房间公告
type InnerCallType int32

const (
	InnerCallType_icUndef                InnerCallType = 0
	InnerCallType_GetRoomInfo            InnerCallType = 1
	InnerCallType_BanUserSeatMic         InnerCallType = 2
	InnerCallType_VoiceRoomDissolve      InnerCallType = 3
	InnerCallType_VoiceRoomResetName     InnerCallType = 4
	InnerCallType_VoiceRoomResetAnnounce InnerCallType = 5
)

// Enum value maps for InnerCallType.
var (
	InnerCallType_name = map[int32]string{
		0: "icUndef",
		1: "GetRoomInfo",
		2: "BanUserSeatMic",
		3: "VoiceRoomDissolve",
		4: "VoiceRoomResetName",
		5: "VoiceRoomResetAnnounce",
	}
	InnerCallType_value = map[string]int32{
		"icUndef":                0,
		"GetRoomInfo":            1,
		"BanUserSeatMic":         2,
		"VoiceRoomDissolve":      3,
		"VoiceRoomResetName":     4,
		"VoiceRoomResetAnnounce": 5,
	}
)

func (x InnerCallType) Enum() *InnerCallType {
	p := new(InnerCallType)
	*p = x
	return p
}

func (x InnerCallType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (InnerCallType) Descriptor() protoreflect.EnumDescriptor {
	return file_voiceroom_voiceroom_proto_enumTypes[3].Descriptor()
}

func (InnerCallType) Type() protoreflect.EnumType {
	return &file_voiceroom_voiceroom_proto_enumTypes[3]
}

func (x InnerCallType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use InnerCallType.Descriptor instead.
func (InnerCallType) EnumDescriptor() ([]byte, []int) {
	return file_voiceroom_voiceroom_proto_rawDescGZIP(), []int{3}
}

type PlayerManagerType int32

const (
	PlayerManagerType_pmUndef     PlayerManagerType = 0
	PlayerManagerType_MicBan      PlayerManagerType = 1 //禁麦
	PlayerManagerType_MicOpen     PlayerManagerType = 2 //取消禁麦
	PlayerManagerType_ChatBan     PlayerManagerType = 3
	PlayerManagerType_ChatOPen    PlayerManagerType = 4
	PlayerManagerType_Kick        PlayerManagerType = 5
	PlayerManagerType_BlackAdd    PlayerManagerType = 6 //拉黑
	PlayerManagerType_BlackCancel PlayerManagerType = 7 //取消拉黑
)

// Enum value maps for PlayerManagerType.
var (
	PlayerManagerType_name = map[int32]string{
		0: "pmUndef",
		1: "MicBan",
		2: "MicOpen",
		3: "ChatBan",
		4: "ChatOPen",
		5: "Kick",
		6: "BlackAdd",
		7: "BlackCancel",
	}
	PlayerManagerType_value = map[string]int32{
		"pmUndef":     0,
		"MicBan":      1,
		"MicOpen":     2,
		"ChatBan":     3,
		"ChatOPen":    4,
		"Kick":        5,
		"BlackAdd":    6,
		"BlackCancel": 7,
	}
)

func (x PlayerManagerType) Enum() *PlayerManagerType {
	p := new(PlayerManagerType)
	*p = x
	return p
}

func (x PlayerManagerType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (PlayerManagerType) Descriptor() protoreflect.EnumDescriptor {
	return file_voiceroom_voiceroom_proto_enumTypes[4].Descriptor()
}

func (PlayerManagerType) Type() protoreflect.EnumType {
	return &file_voiceroom_voiceroom_proto_enumTypes[4]
}

func (x PlayerManagerType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use PlayerManagerType.Descriptor instead.
func (PlayerManagerType) EnumDescriptor() ([]byte, []int) {
	return file_voiceroom_voiceroom_proto_rawDescGZIP(), []int{4}
}

type PkType int32

const (
	PkType_ptUndef PkType = 0
	PkType_Vote    PkType = 1 // 投票
	PkType_Gift    PkType = 2 // 刷礼物
)

// Enum value maps for PkType.
var (
	PkType_name = map[int32]string{
		0: "ptUndef",
		1: "Vote",
		2: "Gift",
	}
	PkType_value = map[string]int32{
		"ptUndef": 0,
		"Vote":    1,
		"Gift":    2,
	}
)

func (x PkType) Enum() *PkType {
	p := new(PkType)
	*p = x
	return p
}

func (x PkType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (PkType) Descriptor() protoreflect.EnumDescriptor {
	return file_voiceroom_voiceroom_proto_enumTypes[5].Descriptor()
}

func (PkType) Type() protoreflect.EnumType {
	return &file_voiceroom_voiceroom_proto_enumTypes[5]
}

func (x PkType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use PkType.Descriptor instead.
func (PkType) EnumDescriptor() ([]byte, []int) {
	return file_voiceroom_voiceroom_proto_rawDescGZIP(), []int{5}
}

type RoomInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RoomId       int32               `protobuf:"varint,1,opt,name=room_id,json=roomId,proto3" json:"room_id,omitempty"`
	Owner        string              `protobuf:"bytes,2,opt,name=owner,proto3" json:"owner,omitempty"`
	Setting      *RoomSetting        `protobuf:"bytes,3,opt,name=setting,proto3" json:"setting,omitempty"`
	SeatList     []*SeatInfo         `protobuf:"bytes,4,rep,name=seatList,proto3" json:"seatList,omitempty"`                    // 座位列表
	Pk           *PkInfo             `protobuf:"bytes,6,opt,name=pk,proto3" json:"pk,omitempty"`                                // 可能为空
	BlackList    []string            `protobuf:"bytes,7,rep,name=black_list,json=blackList,proto3" json:"black_list,omitempty"` // 房主才有，黑名单
	OnlinePlayer int32               `protobuf:"varint,8,opt,name=online_player,json=onlinePlayer,proto3" json:"online_player,omitempty"`
	BanMicList   []string            `protobuf:"bytes,9,rep,name=ban_mic_list,json=banMicList,proto3" json:"ban_mic_list,omitempty"`     // 房主才有，禁麦列表
	BanChatList  []string            `protobuf:"bytes,10,rep,name=ban_chat_list,json=banChatList,proto3" json:"ban_chat_list,omitempty"` // 房主才有，禁言列表
	Music        *VoiceRoomMusicInfo `protobuf:"bytes,11,opt,name=music,proto3" json:"music,omitempty"`                                  //正在播放的音乐
}

func (x *RoomInfo) Reset() {
	*x = RoomInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_voiceroom_voiceroom_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RoomInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RoomInfo) ProtoMessage() {}

func (x *RoomInfo) ProtoReflect() protoreflect.Message {
	mi := &file_voiceroom_voiceroom_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RoomInfo.ProtoReflect.Descriptor instead.
func (*RoomInfo) Descriptor() ([]byte, []int) {
	return file_voiceroom_voiceroom_proto_rawDescGZIP(), []int{0}
}

func (x *RoomInfo) GetRoomId() int32 {
	if x != nil {
		return x.RoomId
	}
	return 0
}

func (x *RoomInfo) GetOwner() string {
	if x != nil {
		return x.Owner
	}
	return ""
}

func (x *RoomInfo) GetSetting() *RoomSetting {
	if x != nil {
		return x.Setting
	}
	return nil
}

func (x *RoomInfo) GetSeatList() []*SeatInfo {
	if x != nil {
		return x.SeatList
	}
	return nil
}

func (x *RoomInfo) GetPk() *PkInfo {
	if x != nil {
		return x.Pk
	}
	return nil
}

func (x *RoomInfo) GetBlackList() []string {
	if x != nil {
		return x.BlackList
	}
	return nil
}

func (x *RoomInfo) GetOnlinePlayer() int32 {
	if x != nil {
		return x.OnlinePlayer
	}
	return 0
}

func (x *RoomInfo) GetBanMicList() []string {
	if x != nil {
		return x.BanMicList
	}
	return nil
}

func (x *RoomInfo) GetBanChatList() []string {
	if x != nil {
		return x.BanChatList
	}
	return nil
}

func (x *RoomInfo) GetMusic() *VoiceRoomMusicInfo {
	if x != nil {
		return x.Music
	}
	return nil
}

type VoiceRoomMusicInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id                    int64                `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Title                 string               `protobuf:"bytes,2,opt,name=title,proto3" json:"title,omitempty"`
	Artist                string               `protobuf:"bytes,3,opt,name=artist,proto3" json:"artist,omitempty"`
	Status                VoiceRoomMusicStatus `protobuf:"varint,4,opt,name=status,proto3,enum=voiceroom.VoiceRoomMusicStatus" json:"status,omitempty"`
	Music                 string               `protobuf:"bytes,5,opt,name=music,proto3" json:"music,omitempty"`                                                               //音乐链接
	Accompaniment         string               `protobuf:"bytes,6,opt,name=accompaniment,proto3" json:"accompaniment,omitempty"`                                               //伴奏链接
	MusicDuration         int32                `protobuf:"varint,7,opt,name=music_duration,json=musicDuration,proto3" json:"music_duration,omitempty"`                         //音乐时长（秒）
	AccompanimentDuration int32                `protobuf:"varint,8,opt,name=accompaniment_duration,json=accompanimentDuration,proto3" json:"accompaniment_duration,omitempty"` //伴奏时长（秒）
	Uploader              string               `protobuf:"bytes,9,opt,name=uploader,proto3" json:"uploader,omitempty"`                                                         //上传者uid
	UploaderName          string               `protobuf:"bytes,10,opt,name=uploader_name,json=uploaderName,proto3" json:"uploader_name,omitempty"`                            //上传者昵称
}

func (x *VoiceRoomMusicInfo) Reset() {
	*x = VoiceRoomMusicInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_voiceroom_voiceroom_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VoiceRoomMusicInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VoiceRoomMusicInfo) ProtoMessage() {}

func (x *VoiceRoomMusicInfo) ProtoReflect() protoreflect.Message {
	mi := &file_voiceroom_voiceroom_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VoiceRoomMusicInfo.ProtoReflect.Descriptor instead.
func (*VoiceRoomMusicInfo) Descriptor() ([]byte, []int) {
	return file_voiceroom_voiceroom_proto_rawDescGZIP(), []int{1}
}

func (x *VoiceRoomMusicInfo) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *VoiceRoomMusicInfo) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *VoiceRoomMusicInfo) GetArtist() string {
	if x != nil {
		return x.Artist
	}
	return ""
}

func (x *VoiceRoomMusicInfo) GetStatus() VoiceRoomMusicStatus {
	if x != nil {
		return x.Status
	}
	return VoiceRoomMusicStatus_invalidStatus
}

func (x *VoiceRoomMusicInfo) GetMusic() string {
	if x != nil {
		return x.Music
	}
	return ""
}

func (x *VoiceRoomMusicInfo) GetAccompaniment() string {
	if x != nil {
		return x.Accompaniment
	}
	return ""
}

func (x *VoiceRoomMusicInfo) GetMusicDuration() int32 {
	if x != nil {
		return x.MusicDuration
	}
	return 0
}

func (x *VoiceRoomMusicInfo) GetAccompanimentDuration() int32 {
	if x != nil {
		return x.AccompanimentDuration
	}
	return 0
}

func (x *VoiceRoomMusicInfo) GetUploader() string {
	if x != nil {
		return x.Uploader
	}
	return ""
}

func (x *VoiceRoomMusicInfo) GetUploaderName() string {
	if x != nil {
		return x.UploaderName
	}
	return ""
}

type RoomSetting struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name       string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Announce   string `protobuf:"bytes,2,opt,name=announce,proto3" json:"announce,omitempty"`
	TagId      int32  `protobuf:"varint,3,opt,name=tag_id,json=tagId,proto3" json:"tag_id,omitempty"`
	Password   string `protobuf:"bytes,4,opt,name=password,proto3" json:"password,omitempty"`
	BgId       int32  `protobuf:"varint,5,opt,name=bg_id,json=bgId,proto3" json:"bg_id,omitempty"`                     //背景
	BanChat    bool   `protobuf:"varint,6,opt,name=ban_chat,json=banChat,proto3" json:"ban_chat,omitempty"`            //禁止公屏聊天
	BanRedPack bool   `protobuf:"varint,7,opt,name=ban_red_pack,json=banRedPack,proto3" json:"ban_red_pack,omitempty"` //禁止发红包
}

func (x *RoomSetting) Reset() {
	*x = RoomSetting{}
	if protoimpl.UnsafeEnabled {
		mi := &file_voiceroom_voiceroom_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RoomSetting) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RoomSetting) ProtoMessage() {}

func (x *RoomSetting) ProtoReflect() protoreflect.Message {
	mi := &file_voiceroom_voiceroom_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RoomSetting.ProtoReflect.Descriptor instead.
func (*RoomSetting) Descriptor() ([]byte, []int) {
	return file_voiceroom_voiceroom_proto_rawDescGZIP(), []int{2}
}

func (x *RoomSetting) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *RoomSetting) GetAnnounce() string {
	if x != nil {
		return x.Announce
	}
	return ""
}

func (x *RoomSetting) GetTagId() int32 {
	if x != nil {
		return x.TagId
	}
	return 0
}

func (x *RoomSetting) GetPassword() string {
	if x != nil {
		return x.Password
	}
	return ""
}

func (x *RoomSetting) GetBgId() int32 {
	if x != nil {
		return x.BgId
	}
	return 0
}

func (x *RoomSetting) GetBanChat() bool {
	if x != nil {
		return x.BanChat
	}
	return false
}

func (x *RoomSetting) GetBanRedPack() bool {
	if x != nil {
		return x.BanRedPack
	}
	return false
}

type SeatInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Index  int32  `protobuf:"varint,1,opt,name=index,proto3" json:"index,omitempty"` // 编号0-8，房主0其他依次往后
	Lock   bool   `protobuf:"varint,2,opt,name=lock,proto3" json:"lock,omitempty"`
	Uid    string `protobuf:"bytes,3,opt,name=uid,proto3" json:"uid,omitempty"`
	BanMic bool   `protobuf:"varint,4,opt,name=ban_mic,json=banMic,proto3" json:"ban_mic,omitempty"` // true为闭麦
}

func (x *SeatInfo) Reset() {
	*x = SeatInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_voiceroom_voiceroom_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SeatInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SeatInfo) ProtoMessage() {}

func (x *SeatInfo) ProtoReflect() protoreflect.Message {
	mi := &file_voiceroom_voiceroom_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SeatInfo.ProtoReflect.Descriptor instead.
func (*SeatInfo) Descriptor() ([]byte, []int) {
	return file_voiceroom_voiceroom_proto_rawDescGZIP(), []int{3}
}

func (x *SeatInfo) GetIndex() int32 {
	if x != nil {
		return x.Index
	}
	return 0
}

func (x *SeatInfo) GetLock() bool {
	if x != nil {
		return x.Lock
	}
	return false
}

func (x *SeatInfo) GetUid() string {
	if x != nil {
		return x.Uid
	}
	return ""
}

func (x *SeatInfo) GetBanMic() bool {
	if x != nil {
		return x.BanMic
	}
	return false
}

type PkInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Open       bool   `protobuf:"varint,1,opt,name=open,proto3" json:"open,omitempty"`
	VotedUser  string `protobuf:"bytes,2,opt,name=voted_user,json=votedUser,proto3" json:"voted_user,omitempty"`  // 如果是投票模式, 用户投票的对象, 如果未投票则是空
	StartTime  int64  `protobuf:"varint,3,opt,name=start_time,json=startTime,proto3" json:"start_time,omitempty"` //开始时间戳(s)
	Period     int32  `protobuf:"varint,4,opt,name=period,proto3" json:"period,omitempty"`                        //持续时间
	LeftUid    string `protobuf:"bytes,5,opt,name=left_uid,json=leftUid,proto3" json:"left_uid,omitempty"`
	LeftScore  int64  `protobuf:"varint,6,opt,name=left_score,json=leftScore,proto3" json:"left_score,omitempty"`
	RightUid   string `protobuf:"bytes,7,opt,name=right_uid,json=rightUid,proto3" json:"right_uid,omitempty"`
	RightScore int64  `protobuf:"varint,8,opt,name=right_score,json=rightScore,proto3" json:"right_score,omitempty"`
	Type       PkType `protobuf:"varint,9,opt,name=type,proto3,enum=voiceroom.PkType" json:"type,omitempty"`
}

func (x *PkInfo) Reset() {
	*x = PkInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_voiceroom_voiceroom_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PkInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PkInfo) ProtoMessage() {}

func (x *PkInfo) ProtoReflect() protoreflect.Message {
	mi := &file_voiceroom_voiceroom_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PkInfo.ProtoReflect.Descriptor instead.
func (*PkInfo) Descriptor() ([]byte, []int) {
	return file_voiceroom_voiceroom_proto_rawDescGZIP(), []int{4}
}

func (x *PkInfo) GetOpen() bool {
	if x != nil {
		return x.Open
	}
	return false
}

func (x *PkInfo) GetVotedUser() string {
	if x != nil {
		return x.VotedUser
	}
	return ""
}

func (x *PkInfo) GetStartTime() int64 {
	if x != nil {
		return x.StartTime
	}
	return 0
}

func (x *PkInfo) GetPeriod() int32 {
	if x != nil {
		return x.Period
	}
	return 0
}

func (x *PkInfo) GetLeftUid() string {
	if x != nil {
		return x.LeftUid
	}
	return ""
}

func (x *PkInfo) GetLeftScore() int64 {
	if x != nil {
		return x.LeftScore
	}
	return 0
}

func (x *PkInfo) GetRightUid() string {
	if x != nil {
		return x.RightUid
	}
	return ""
}

func (x *PkInfo) GetRightScore() int64 {
	if x != nil {
		return x.RightScore
	}
	return 0
}

func (x *PkInfo) GetType() PkType {
	if x != nil {
		return x.Type
	}
	return PkType_ptUndef
}

type Location struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Longitude float64 `protobuf:"fixed64,1,opt,name=longitude,proto3" json:"longitude,omitempty"` //经度
	Latitude  float64 `protobuf:"fixed64,2,opt,name=latitude,proto3" json:"latitude,omitempty"`   //纬度
}

func (x *Location) Reset() {
	*x = Location{}
	if protoimpl.UnsafeEnabled {
		mi := &file_voiceroom_voiceroom_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Location) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Location) ProtoMessage() {}

func (x *Location) ProtoReflect() protoreflect.Message {
	mi := &file_voiceroom_voiceroom_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Location.ProtoReflect.Descriptor instead.
func (*Location) Descriptor() ([]byte, []int) {
	return file_voiceroom_voiceroom_proto_rawDescGZIP(), []int{5}
}

func (x *Location) GetLongitude() float64 {
	if x != nil {
		return x.Longitude
	}
	return 0
}

func (x *Location) GetLatitude() float64 {
	if x != nil {
		return x.Latitude
	}
	return 0
}

// 房主创建房间了直接进入，如果enterRoom要加的参数这里也要加
type NewRoomReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Param       *RoomSetting `protobuf:"bytes,1,opt,name=param,proto3" json:"param,omitempty"`
	Pos         *Location    `protobuf:"bytes,2,opt,name=pos,proto3" json:"pos,omitempty"`
	Show        int32        `protobuf:"varint,3,opt,name=show,proto3" json:"show,omitempty"`
	ModeVersion int32        `protobuf:"varint,4,opt,name=mode_version,json=modeVersion,proto3" json:"mode_version,omitempty"` // 第一版40001
}

func (x *NewRoomReq) Reset() {
	*x = NewRoomReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_voiceroom_voiceroom_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NewRoomReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NewRoomReq) ProtoMessage() {}

func (x *NewRoomReq) ProtoReflect() protoreflect.Message {
	mi := &file_voiceroom_voiceroom_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NewRoomReq.ProtoReflect.Descriptor instead.
func (*NewRoomReq) Descriptor() ([]byte, []int) {
	return file_voiceroom_voiceroom_proto_rawDescGZIP(), []int{6}
}

func (x *NewRoomReq) GetParam() *RoomSetting {
	if x != nil {
		return x.Param
	}
	return nil
}

func (x *NewRoomReq) GetPos() *Location {
	if x != nil {
		return x.Pos
	}
	return nil
}

func (x *NewRoomReq) GetShow() int32 {
	if x != nil {
		return x.Show
	}
	return 0
}

func (x *NewRoomReq) GetModeVersion() int32 {
	if x != nil {
		return x.ModeVersion
	}
	return 0
}

type NewRoomRsp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Room         *RoomInfo `protobuf:"bytes,1,opt,name=room,proto3" json:"room,omitempty"`
	BanTimestamp int64     `protobuf:"varint,2,opt,name=ban_timestamp,json=banTimestamp,proto3" json:"ban_timestamp,omitempty"` //封禁时间戳，-1永久封禁
}

func (x *NewRoomRsp) Reset() {
	*x = NewRoomRsp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_voiceroom_voiceroom_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NewRoomRsp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NewRoomRsp) ProtoMessage() {}

func (x *NewRoomRsp) ProtoReflect() protoreflect.Message {
	mi := &file_voiceroom_voiceroom_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NewRoomRsp.ProtoReflect.Descriptor instead.
func (*NewRoomRsp) Descriptor() ([]byte, []int) {
	return file_voiceroom_voiceroom_proto_rawDescGZIP(), []int{7}
}

func (x *NewRoomRsp) GetRoom() *RoomInfo {
	if x != nil {
		return x.Room
	}
	return nil
}

func (x *NewRoomRsp) GetBanTimestamp() int64 {
	if x != nil {
		return x.BanTimestamp
	}
	return 0
}

type MyPreRoomReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *MyPreRoomReq) Reset() {
	*x = MyPreRoomReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_voiceroom_voiceroom_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MyPreRoomReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MyPreRoomReq) ProtoMessage() {}

func (x *MyPreRoomReq) ProtoReflect() protoreflect.Message {
	mi := &file_voiceroom_voiceroom_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MyPreRoomReq.ProtoReflect.Descriptor instead.
func (*MyPreRoomReq) Descriptor() ([]byte, []int) {
	return file_voiceroom_voiceroom_proto_rawDescGZIP(), []int{8}
}

type MyPreRoomRsp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Setting *RoomSetting `protobuf:"bytes,1,opt,name=setting,proto3" json:"setting,omitempty"`
}

func (x *MyPreRoomRsp) Reset() {
	*x = MyPreRoomRsp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_voiceroom_voiceroom_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MyPreRoomRsp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MyPreRoomRsp) ProtoMessage() {}

func (x *MyPreRoomRsp) ProtoReflect() protoreflect.Message {
	mi := &file_voiceroom_voiceroom_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MyPreRoomRsp.ProtoReflect.Descriptor instead.
func (*MyPreRoomRsp) Descriptor() ([]byte, []int) {
	return file_voiceroom_voiceroom_proto_rawDescGZIP(), []int{9}
}

func (x *MyPreRoomRsp) GetSetting() *RoomSetting {
	if x != nil {
		return x.Setting
	}
	return nil
}

type EnterRoomReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TargetRoomId int32     `protobuf:"varint,1,opt,name=target_room_id,json=targetRoomId,proto3" json:"target_room_id,omitempty"`
	Password     string    `protobuf:"bytes,2,opt,name=password,proto3" json:"password,omitempty"`
	Pos          *Location `protobuf:"bytes,3,opt,name=pos,proto3" json:"pos,omitempty"`
	Show         int32     `protobuf:"varint,4,opt,name=show,proto3" json:"show,omitempty"`
	ModeVersion  int32     `protobuf:"varint,5,opt,name=mode_version,json=modeVersion,proto3" json:"mode_version,omitempty"`
	Recover      bool      `protobuf:"varint,6,opt,name=recover,proto3" json:"recover,omitempty"` // cut恢复时为true
	Source       int32     `protobuf:"varint,7,opt,name=source,proto3" json:"source,omitempty"`   // 1:休闲区首页 2:他人邀请 3:跟房（个人资料页、好友列表）4:附近的人 5:搜索进入
}

func (x *EnterRoomReq) Reset() {
	*x = EnterRoomReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_voiceroom_voiceroom_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EnterRoomReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EnterRoomReq) ProtoMessage() {}

func (x *EnterRoomReq) ProtoReflect() protoreflect.Message {
	mi := &file_voiceroom_voiceroom_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EnterRoomReq.ProtoReflect.Descriptor instead.
func (*EnterRoomReq) Descriptor() ([]byte, []int) {
	return file_voiceroom_voiceroom_proto_rawDescGZIP(), []int{10}
}

func (x *EnterRoomReq) GetTargetRoomId() int32 {
	if x != nil {
		return x.TargetRoomId
	}
	return 0
}

func (x *EnterRoomReq) GetPassword() string {
	if x != nil {
		return x.Password
	}
	return ""
}

func (x *EnterRoomReq) GetPos() *Location {
	if x != nil {
		return x.Pos
	}
	return nil
}

func (x *EnterRoomReq) GetShow() int32 {
	if x != nil {
		return x.Show
	}
	return 0
}

func (x *EnterRoomReq) GetModeVersion() int32 {
	if x != nil {
		return x.ModeVersion
	}
	return 0
}

func (x *EnterRoomReq) GetRecover() bool {
	if x != nil {
		return x.Recover
	}
	return false
}

func (x *EnterRoomReq) GetSource() int32 {
	if x != nil {
		return x.Source
	}
	return 0
}

type EnterRoomRsp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	NeedPassword bool      `protobuf:"varint,1,opt,name=need_password,json=needPassword,proto3" json:"need_password,omitempty"` // 如果需要密码但是没传的，这里返回true，没有roomInfo
	Room         *RoomInfo `protobuf:"bytes,2,opt,name=room,proto3" json:"room,omitempty"`
}

func (x *EnterRoomRsp) Reset() {
	*x = EnterRoomRsp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_voiceroom_voiceroom_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EnterRoomRsp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EnterRoomRsp) ProtoMessage() {}

func (x *EnterRoomRsp) ProtoReflect() protoreflect.Message {
	mi := &file_voiceroom_voiceroom_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EnterRoomRsp.ProtoReflect.Descriptor instead.
func (*EnterRoomRsp) Descriptor() ([]byte, []int) {
	return file_voiceroom_voiceroom_proto_rawDescGZIP(), []int{11}
}

func (x *EnterRoomRsp) GetNeedPassword() bool {
	if x != nil {
		return x.NeedPassword
	}
	return false
}

func (x *EnterRoomRsp) GetRoom() *RoomInfo {
	if x != nil {
		return x.Room
	}
	return nil
}

type UpdateSettingReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Setting *RoomSetting `protobuf:"bytes,1,opt,name=setting,proto3" json:"setting,omitempty"` //传全量数据
}

func (x *UpdateSettingReq) Reset() {
	*x = UpdateSettingReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_voiceroom_voiceroom_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateSettingReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateSettingReq) ProtoMessage() {}

func (x *UpdateSettingReq) ProtoReflect() protoreflect.Message {
	mi := &file_voiceroom_voiceroom_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateSettingReq.ProtoReflect.Descriptor instead.
func (*UpdateSettingReq) Descriptor() ([]byte, []int) {
	return file_voiceroom_voiceroom_proto_rawDescGZIP(), []int{12}
}

func (x *UpdateSettingReq) GetSetting() *RoomSetting {
	if x != nil {
		return x.Setting
	}
	return nil
}

type UpdateSettingRsp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *UpdateSettingRsp) Reset() {
	*x = UpdateSettingRsp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_voiceroom_voiceroom_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateSettingRsp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateSettingRsp) ProtoMessage() {}

func (x *UpdateSettingRsp) ProtoReflect() protoreflect.Message {
	mi := &file_voiceroom_voiceroom_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateSettingRsp.ProtoReflect.Descriptor instead.
func (*UpdateSettingRsp) Descriptor() ([]byte, []int) {
	return file_voiceroom_voiceroom_proto_rawDescGZIP(), []int{13}
}

// 房间修改的push
type PuUpdateSettingMsg struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Setting *RoomSetting `protobuf:"bytes,1,opt,name=setting,proto3" json:"setting,omitempty"`
}

func (x *PuUpdateSettingMsg) Reset() {
	*x = PuUpdateSettingMsg{}
	if protoimpl.UnsafeEnabled {
		mi := &file_voiceroom_voiceroom_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PuUpdateSettingMsg) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PuUpdateSettingMsg) ProtoMessage() {}

func (x *PuUpdateSettingMsg) ProtoReflect() protoreflect.Message {
	mi := &file_voiceroom_voiceroom_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PuUpdateSettingMsg.ProtoReflect.Descriptor instead.
func (*PuUpdateSettingMsg) Descriptor() ([]byte, []int) {
	return file_voiceroom_voiceroom_proto_rawDescGZIP(), []int{14}
}

func (x *PuUpdateSettingMsg) GetSetting() *RoomSetting {
	if x != nil {
		return x.Setting
	}
	return nil
}

type ExitRoomReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *ExitRoomReq) Reset() {
	*x = ExitRoomReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_voiceroom_voiceroom_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ExitRoomReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExitRoomReq) ProtoMessage() {}

func (x *ExitRoomReq) ProtoReflect() protoreflect.Message {
	mi := &file_voiceroom_voiceroom_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExitRoomReq.ProtoReflect.Descriptor instead.
func (*ExitRoomReq) Descriptor() ([]byte, []int) {
	return file_voiceroom_voiceroom_proto_rawDescGZIP(), []int{15}
}

type ExitRoomRsp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *ExitRoomRsp) Reset() {
	*x = ExitRoomRsp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_voiceroom_voiceroom_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ExitRoomRsp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExitRoomRsp) ProtoMessage() {}

func (x *ExitRoomRsp) ProtoReflect() protoreflect.Message {
	mi := &file_voiceroom_voiceroom_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExitRoomRsp.ProtoReflect.Descriptor instead.
func (*ExitRoomRsp) Descriptor() ([]byte, []int) {
	return file_voiceroom_voiceroom_proto_rawDescGZIP(), []int{16}
}

type GetMemberListReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Page int32 `protobuf:"varint,1,opt,name=page,proto3" json:"page,omitempty"`
	Size int32 `protobuf:"varint,2,opt,name=size,proto3" json:"size,omitempty"`
}

func (x *GetMemberListReq) Reset() {
	*x = GetMemberListReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_voiceroom_voiceroom_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetMemberListReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetMemberListReq) ProtoMessage() {}

func (x *GetMemberListReq) ProtoReflect() protoreflect.Message {
	mi := &file_voiceroom_voiceroom_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetMemberListReq.ProtoReflect.Descriptor instead.
func (*GetMemberListReq) Descriptor() ([]byte, []int) {
	return file_voiceroom_voiceroom_proto_rawDescGZIP(), []int{17}
}

func (x *GetMemberListReq) GetPage() int32 {
	if x != nil {
		return x.Page
	}
	return 0
}

func (x *GetMemberListReq) GetSize() int32 {
	if x != nil {
		return x.Size
	}
	return 0
}

type MemberListItem struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Uid  string `protobuf:"bytes,1,opt,name=uid,proto3" json:"uid,omitempty"`
	Show int64  `protobuf:"varint,2,opt,name=show,proto3" json:"show,omitempty"`
}

func (x *MemberListItem) Reset() {
	*x = MemberListItem{}
	if protoimpl.UnsafeEnabled {
		mi := &file_voiceroom_voiceroom_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MemberListItem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MemberListItem) ProtoMessage() {}

func (x *MemberListItem) ProtoReflect() protoreflect.Message {
	mi := &file_voiceroom_voiceroom_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MemberListItem.ProtoReflect.Descriptor instead.
func (*MemberListItem) Descriptor() ([]byte, []int) {
	return file_voiceroom_voiceroom_proto_rawDescGZIP(), []int{18}
}

func (x *MemberListItem) GetUid() string {
	if x != nil {
		return x.Uid
	}
	return ""
}

func (x *MemberListItem) GetShow() int64 {
	if x != nil {
		return x.Show
	}
	return 0
}

type GetMemberListRsp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Members []*MemberListItem `protobuf:"bytes,1,rep,name=members,proto3" json:"members,omitempty"`
}

func (x *GetMemberListRsp) Reset() {
	*x = GetMemberListRsp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_voiceroom_voiceroom_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetMemberListRsp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetMemberListRsp) ProtoMessage() {}

func (x *GetMemberListRsp) ProtoReflect() protoreflect.Message {
	mi := &file_voiceroom_voiceroom_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetMemberListRsp.ProtoReflect.Descriptor instead.
func (*GetMemberListRsp) Descriptor() ([]byte, []int) {
	return file_voiceroom_voiceroom_proto_rawDescGZIP(), []int{19}
}

func (x *GetMemberListRsp) GetMembers() []*MemberListItem {
	if x != nil {
		return x.Members
	}
	return nil
}

type LotteryReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Opt LotteryType `protobuf:"varint,1,opt,name=opt,proto3,enum=voiceroom.LotteryType" json:"opt,omitempty"`
	Num int32       `protobuf:"varint,2,opt,name=num,proto3" json:"num,omitempty"` //抽奖人数
}

func (x *LotteryReq) Reset() {
	*x = LotteryReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_voiceroom_voiceroom_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LotteryReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LotteryReq) ProtoMessage() {}

func (x *LotteryReq) ProtoReflect() protoreflect.Message {
	mi := &file_voiceroom_voiceroom_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LotteryReq.ProtoReflect.Descriptor instead.
func (*LotteryReq) Descriptor() ([]byte, []int) {
	return file_voiceroom_voiceroom_proto_rawDescGZIP(), []int{20}
}

func (x *LotteryReq) GetOpt() LotteryType {
	if x != nil {
		return x.Opt
	}
	return LotteryType_tpUndef
}

func (x *LotteryReq) GetNum() int32 {
	if x != nil {
		return x.Num
	}
	return 0
}

type LotteryRsp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *LotteryRsp) Reset() {
	*x = LotteryRsp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_voiceroom_voiceroom_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LotteryRsp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LotteryRsp) ProtoMessage() {}

func (x *LotteryRsp) ProtoReflect() protoreflect.Message {
	mi := &file_voiceroom_voiceroom_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LotteryRsp.ProtoReflect.Descriptor instead.
func (*LotteryRsp) Descriptor() ([]byte, []int) {
	return file_voiceroom_voiceroom_proto_rawDescGZIP(), []int{21}
}

type PuLotteryResultMsg struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	JoinUids  []string `protobuf:"bytes,1,rep,name=join_uids,json=joinUids,proto3" json:"join_uids,omitempty"`    //参与人员
	LuckyUids []string `protobuf:"bytes,2,rep,name=lucky_uids,json=luckyUids,proto3" json:"lucky_uids,omitempty"` //中奖人员
}

func (x *PuLotteryResultMsg) Reset() {
	*x = PuLotteryResultMsg{}
	if protoimpl.UnsafeEnabled {
		mi := &file_voiceroom_voiceroom_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PuLotteryResultMsg) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PuLotteryResultMsg) ProtoMessage() {}

func (x *PuLotteryResultMsg) ProtoReflect() protoreflect.Message {
	mi := &file_voiceroom_voiceroom_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PuLotteryResultMsg.ProtoReflect.Descriptor instead.
func (*PuLotteryResultMsg) Descriptor() ([]byte, []int) {
	return file_voiceroom_voiceroom_proto_rawDescGZIP(), []int{22}
}

func (x *PuLotteryResultMsg) GetJoinUids() []string {
	if x != nil {
		return x.JoinUids
	}
	return nil
}

func (x *PuLotteryResultMsg) GetLuckyUids() []string {
	if x != nil {
		return x.LuckyUids
	}
	return nil
}

type InnerCallReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CallType  InnerCallType `protobuf:"varint,1,opt,name=call_type,json=callType,proto3,enum=voiceroom.InnerCallType" json:"call_type,omitempty"`
	CallToken string        `protobuf:"bytes,2,opt,name=CallToken,proto3" json:"CallToken,omitempty"`
	RoomId    int32         `protobuf:"varint,3,opt,name=room_id,json=roomId,proto3" json:"room_id,omitempty"`
	Uid       string        `protobuf:"bytes,4,opt,name=uid,proto3" json:"uid,omitempty"`
}

func (x *InnerCallReq) Reset() {
	*x = InnerCallReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_voiceroom_voiceroom_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *InnerCallReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InnerCallReq) ProtoMessage() {}

func (x *InnerCallReq) ProtoReflect() protoreflect.Message {
	mi := &file_voiceroom_voiceroom_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InnerCallReq.ProtoReflect.Descriptor instead.
func (*InnerCallReq) Descriptor() ([]byte, []int) {
	return file_voiceroom_voiceroom_proto_rawDescGZIP(), []int{23}
}

func (x *InnerCallReq) GetCallType() InnerCallType {
	if x != nil {
		return x.CallType
	}
	return InnerCallType_icUndef
}

func (x *InnerCallReq) GetCallToken() string {
	if x != nil {
		return x.CallToken
	}
	return ""
}

func (x *InnerCallReq) GetRoomId() int32 {
	if x != nil {
		return x.RoomId
	}
	return 0
}

func (x *InnerCallReq) GetUid() string {
	if x != nil {
		return x.Uid
	}
	return ""
}

type InnerCallRsp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code     int32          `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Msg      string         `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg,omitempty"`
	RoomInfo *AdminRoomInfo `protobuf:"bytes,3,opt,name=room_info,json=roomInfo,proto3" json:"room_info,omitempty"`
}

func (x *InnerCallRsp) Reset() {
	*x = InnerCallRsp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_voiceroom_voiceroom_proto_msgTypes[24]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *InnerCallRsp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InnerCallRsp) ProtoMessage() {}

func (x *InnerCallRsp) ProtoReflect() protoreflect.Message {
	mi := &file_voiceroom_voiceroom_proto_msgTypes[24]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InnerCallRsp.ProtoReflect.Descriptor instead.
func (*InnerCallRsp) Descriptor() ([]byte, []int) {
	return file_voiceroom_voiceroom_proto_rawDescGZIP(), []int{24}
}

func (x *InnerCallRsp) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *InnerCallRsp) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

func (x *InnerCallRsp) GetRoomInfo() *AdminRoomInfo {
	if x != nil {
		return x.RoomInfo
	}
	return nil
}

type AdminRoomInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RoomId       int32    `protobuf:"varint,1,opt,name=room_id,json=roomId,proto3" json:"room_id,omitempty"`
	RoomName     string   `protobuf:"bytes,2,opt,name=room_name,json=roomName,proto3" json:"room_name,omitempty"`
	RoomAnnounce string   `protobuf:"bytes,3,opt,name=room_announce,json=roomAnnounce,proto3" json:"room_announce,omitempty"`
	RoomTagId    int32    `protobuf:"varint,4,opt,name=room_tag_id,json=roomTagId,proto3" json:"room_tag_id,omitempty"`
	OnlinePlayer int32    `protobuf:"varint,5,opt,name=online_player,json=onlinePlayer,proto3" json:"online_player,omitempty"`
	Hot          int64    `protobuf:"varint,6,opt,name=hot,proto3" json:"hot,omitempty"`
	Uids         []string `protobuf:"bytes,7,rep,name=uids,proto3" json:"uids,omitempty"` // 座位列表
}

func (x *AdminRoomInfo) Reset() {
	*x = AdminRoomInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_voiceroom_voiceroom_proto_msgTypes[25]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AdminRoomInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AdminRoomInfo) ProtoMessage() {}

func (x *AdminRoomInfo) ProtoReflect() protoreflect.Message {
	mi := &file_voiceroom_voiceroom_proto_msgTypes[25]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AdminRoomInfo.ProtoReflect.Descriptor instead.
func (*AdminRoomInfo) Descriptor() ([]byte, []int) {
	return file_voiceroom_voiceroom_proto_rawDescGZIP(), []int{25}
}

func (x *AdminRoomInfo) GetRoomId() int32 {
	if x != nil {
		return x.RoomId
	}
	return 0
}

func (x *AdminRoomInfo) GetRoomName() string {
	if x != nil {
		return x.RoomName
	}
	return ""
}

func (x *AdminRoomInfo) GetRoomAnnounce() string {
	if x != nil {
		return x.RoomAnnounce
	}
	return ""
}

func (x *AdminRoomInfo) GetRoomTagId() int32 {
	if x != nil {
		return x.RoomTagId
	}
	return 0
}

func (x *AdminRoomInfo) GetOnlinePlayer() int32 {
	if x != nil {
		return x.OnlinePlayer
	}
	return 0
}

func (x *AdminRoomInfo) GetHot() int64 {
	if x != nil {
		return x.Hot
	}
	return 0
}

func (x *AdminRoomInfo) GetUids() []string {
	if x != nil {
		return x.Uids
	}
	return nil
}

type PlayerChangeItem struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Uid  string `protobuf:"bytes,1,opt,name=uid,proto3" json:"uid,omitempty"`
	Type int32  `protobuf:"varint,2,opt,name=type,proto3" json:"type,omitempty"` //1加入，2退出
}

func (x *PlayerChangeItem) Reset() {
	*x = PlayerChangeItem{}
	if protoimpl.UnsafeEnabled {
		mi := &file_voiceroom_voiceroom_proto_msgTypes[26]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PlayerChangeItem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PlayerChangeItem) ProtoMessage() {}

func (x *PlayerChangeItem) ProtoReflect() protoreflect.Message {
	mi := &file_voiceroom_voiceroom_proto_msgTypes[26]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PlayerChangeItem.ProtoReflect.Descriptor instead.
func (*PlayerChangeItem) Descriptor() ([]byte, []int) {
	return file_voiceroom_voiceroom_proto_rawDescGZIP(), []int{26}
}

func (x *PlayerChangeItem) GetUid() string {
	if x != nil {
		return x.Uid
	}
	return ""
}

func (x *PlayerChangeItem) GetType() int32 {
	if x != nil {
		return x.Type
	}
	return 0
}

type PuPlayerChangeMsg struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ChangeList   []*PlayerChangeItem `protobuf:"bytes,1,rep,name=change_list,json=changeList,proto3" json:"change_list,omitempty"`
	OnlinePlayer int32               `protobuf:"varint,2,opt,name=online_player,json=onlinePlayer,proto3" json:"online_player,omitempty"` //最新的在线人数
}

func (x *PuPlayerChangeMsg) Reset() {
	*x = PuPlayerChangeMsg{}
	if protoimpl.UnsafeEnabled {
		mi := &file_voiceroom_voiceroom_proto_msgTypes[27]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PuPlayerChangeMsg) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PuPlayerChangeMsg) ProtoMessage() {}

func (x *PuPlayerChangeMsg) ProtoReflect() protoreflect.Message {
	mi := &file_voiceroom_voiceroom_proto_msgTypes[27]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PuPlayerChangeMsg.ProtoReflect.Descriptor instead.
func (*PuPlayerChangeMsg) Descriptor() ([]byte, []int) {
	return file_voiceroom_voiceroom_proto_rawDescGZIP(), []int{27}
}

func (x *PuPlayerChangeMsg) GetChangeList() []*PlayerChangeItem {
	if x != nil {
		return x.ChangeList
	}
	return nil
}

func (x *PuPlayerChangeMsg) GetOnlinePlayer() int32 {
	if x != nil {
		return x.OnlinePlayer
	}
	return 0
}

type PuSeatChangeMsg struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SeatList []*SeatInfo `protobuf:"bytes,1,rep,name=seatList,proto3" json:"seatList,omitempty"` // 变化的座位列表
}

func (x *PuSeatChangeMsg) Reset() {
	*x = PuSeatChangeMsg{}
	if protoimpl.UnsafeEnabled {
		mi := &file_voiceroom_voiceroom_proto_msgTypes[28]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PuSeatChangeMsg) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PuSeatChangeMsg) ProtoMessage() {}

func (x *PuSeatChangeMsg) ProtoReflect() protoreflect.Message {
	mi := &file_voiceroom_voiceroom_proto_msgTypes[28]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PuSeatChangeMsg.ProtoReflect.Descriptor instead.
func (*PuSeatChangeMsg) Descriptor() ([]byte, []int) {
	return file_voiceroom_voiceroom_proto_rawDescGZIP(), []int{28}
}

func (x *PuSeatChangeMsg) GetSeatList() []*SeatInfo {
	if x != nil {
		return x.SeatList
	}
	return nil
}

type LockSeatReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Opt   int32 `protobuf:"varint,1,opt,name=opt,proto3" json:"opt,omitempty"` // 1打开，2禁用
	Index int32 `protobuf:"varint,2,opt,name=index,proto3" json:"index,omitempty"`
}

func (x *LockSeatReq) Reset() {
	*x = LockSeatReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_voiceroom_voiceroom_proto_msgTypes[29]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LockSeatReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LockSeatReq) ProtoMessage() {}

func (x *LockSeatReq) ProtoReflect() protoreflect.Message {
	mi := &file_voiceroom_voiceroom_proto_msgTypes[29]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LockSeatReq.ProtoReflect.Descriptor instead.
func (*LockSeatReq) Descriptor() ([]byte, []int) {
	return file_voiceroom_voiceroom_proto_rawDescGZIP(), []int{29}
}

func (x *LockSeatReq) GetOpt() int32 {
	if x != nil {
		return x.Opt
	}
	return 0
}

func (x *LockSeatReq) GetIndex() int32 {
	if x != nil {
		return x.Index
	}
	return 0
}

type LockSeatRsp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *LockSeatRsp) Reset() {
	*x = LockSeatRsp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_voiceroom_voiceroom_proto_msgTypes[30]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LockSeatRsp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LockSeatRsp) ProtoMessage() {}

func (x *LockSeatRsp) ProtoReflect() protoreflect.Message {
	mi := &file_voiceroom_voiceroom_proto_msgTypes[30]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LockSeatRsp.ProtoReflect.Descriptor instead.
func (*LockSeatRsp) Descriptor() ([]byte, []int) {
	return file_voiceroom_voiceroom_proto_rawDescGZIP(), []int{30}
}

type PlayerManagerReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TargetUid string            `protobuf:"bytes,1,opt,name=target_uid,json=targetUid,proto3" json:"target_uid,omitempty"`
	Opt       PlayerManagerType `protobuf:"varint,2,opt,name=opt,proto3,enum=voiceroom.PlayerManagerType" json:"opt,omitempty"`
}

func (x *PlayerManagerReq) Reset() {
	*x = PlayerManagerReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_voiceroom_voiceroom_proto_msgTypes[31]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PlayerManagerReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PlayerManagerReq) ProtoMessage() {}

func (x *PlayerManagerReq) ProtoReflect() protoreflect.Message {
	mi := &file_voiceroom_voiceroom_proto_msgTypes[31]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PlayerManagerReq.ProtoReflect.Descriptor instead.
func (*PlayerManagerReq) Descriptor() ([]byte, []int) {
	return file_voiceroom_voiceroom_proto_rawDescGZIP(), []int{31}
}

func (x *PlayerManagerReq) GetTargetUid() string {
	if x != nil {
		return x.TargetUid
	}
	return ""
}

func (x *PlayerManagerReq) GetOpt() PlayerManagerType {
	if x != nil {
		return x.Opt
	}
	return PlayerManagerType_pmUndef
}

type PlayerManagerRsp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *PlayerManagerRsp) Reset() {
	*x = PlayerManagerRsp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_voiceroom_voiceroom_proto_msgTypes[32]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PlayerManagerRsp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PlayerManagerRsp) ProtoMessage() {}

func (x *PlayerManagerRsp) ProtoReflect() protoreflect.Message {
	mi := &file_voiceroom_voiceroom_proto_msgTypes[32]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PlayerManagerRsp.ProtoReflect.Descriptor instead.
func (*PlayerManagerRsp) Descriptor() ([]byte, []int) {
	return file_voiceroom_voiceroom_proto_rawDescGZIP(), []int{32}
}

type SeatInviteReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TargetUid string `protobuf:"bytes,1,opt,name=target_uid,json=targetUid,proto3" json:"target_uid,omitempty"`
	Index     int32  `protobuf:"varint,2,opt,name=index,proto3" json:"index,omitempty"`
}

func (x *SeatInviteReq) Reset() {
	*x = SeatInviteReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_voiceroom_voiceroom_proto_msgTypes[33]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SeatInviteReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SeatInviteReq) ProtoMessage() {}

func (x *SeatInviteReq) ProtoReflect() protoreflect.Message {
	mi := &file_voiceroom_voiceroom_proto_msgTypes[33]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SeatInviteReq.ProtoReflect.Descriptor instead.
func (*SeatInviteReq) Descriptor() ([]byte, []int) {
	return file_voiceroom_voiceroom_proto_rawDescGZIP(), []int{33}
}

func (x *SeatInviteReq) GetTargetUid() string {
	if x != nil {
		return x.TargetUid
	}
	return ""
}

func (x *SeatInviteReq) GetIndex() int32 {
	if x != nil {
		return x.Index
	}
	return 0
}

type SeatInviteRsp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *SeatInviteRsp) Reset() {
	*x = SeatInviteRsp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_voiceroom_voiceroom_proto_msgTypes[34]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SeatInviteRsp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SeatInviteRsp) ProtoMessage() {}

func (x *SeatInviteRsp) ProtoReflect() protoreflect.Message {
	mi := &file_voiceroom_voiceroom_proto_msgTypes[34]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SeatInviteRsp.ProtoReflect.Descriptor instead.
func (*SeatInviteRsp) Descriptor() ([]byte, []int) {
	return file_voiceroom_voiceroom_proto_rawDescGZIP(), []int{34}
}

type PuSeatInviteMsg struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SeatIndex int32 `protobuf:"varint,1,opt,name=seat_index,json=seatIndex,proto3" json:"seat_index,omitempty"`
}

func (x *PuSeatInviteMsg) Reset() {
	*x = PuSeatInviteMsg{}
	if protoimpl.UnsafeEnabled {
		mi := &file_voiceroom_voiceroom_proto_msgTypes[35]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PuSeatInviteMsg) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PuSeatInviteMsg) ProtoMessage() {}

func (x *PuSeatInviteMsg) ProtoReflect() protoreflect.Message {
	mi := &file_voiceroom_voiceroom_proto_msgTypes[35]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PuSeatInviteMsg.ProtoReflect.Descriptor instead.
func (*PuSeatInviteMsg) Descriptor() ([]byte, []int) {
	return file_voiceroom_voiceroom_proto_rawDescGZIP(), []int{35}
}

func (x *PuSeatInviteMsg) GetSeatIndex() int32 {
	if x != nil {
		return x.SeatIndex
	}
	return 0
}

type HandleSeatInviteReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Opt       int32 `protobuf:"varint,1,opt,name=opt,proto3" json:"opt,omitempty"`                        // 1同意，2拒绝
	MicOpen   bool  `protobuf:"varint,2,opt,name=mic_open,json=micOpen,proto3" json:"mic_open,omitempty"` //自己的麦是否开了
	SeatIndex int32 `protobuf:"varint,3,opt,name=seat_index,json=seatIndex,proto3" json:"seat_index,omitempty"`
}

func (x *HandleSeatInviteReq) Reset() {
	*x = HandleSeatInviteReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_voiceroom_voiceroom_proto_msgTypes[36]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HandleSeatInviteReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HandleSeatInviteReq) ProtoMessage() {}

func (x *HandleSeatInviteReq) ProtoReflect() protoreflect.Message {
	mi := &file_voiceroom_voiceroom_proto_msgTypes[36]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HandleSeatInviteReq.ProtoReflect.Descriptor instead.
func (*HandleSeatInviteReq) Descriptor() ([]byte, []int) {
	return file_voiceroom_voiceroom_proto_rawDescGZIP(), []int{36}
}

func (x *HandleSeatInviteReq) GetOpt() int32 {
	if x != nil {
		return x.Opt
	}
	return 0
}

func (x *HandleSeatInviteReq) GetMicOpen() bool {
	if x != nil {
		return x.MicOpen
	}
	return false
}

func (x *HandleSeatInviteReq) GetSeatIndex() int32 {
	if x != nil {
		return x.SeatIndex
	}
	return 0
}

type HandleSeatInviteRsp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *HandleSeatInviteRsp) Reset() {
	*x = HandleSeatInviteRsp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_voiceroom_voiceroom_proto_msgTypes[37]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HandleSeatInviteRsp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HandleSeatInviteRsp) ProtoMessage() {}

func (x *HandleSeatInviteRsp) ProtoReflect() protoreflect.Message {
	mi := &file_voiceroom_voiceroom_proto_msgTypes[37]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HandleSeatInviteRsp.ProtoReflect.Descriptor instead.
func (*HandleSeatInviteRsp) Descriptor() ([]byte, []int) {
	return file_voiceroom_voiceroom_proto_rawDescGZIP(), []int{37}
}

type UseSeatReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Opt     int32 `protobuf:"varint,1,opt,name=opt,proto3" json:"opt,omitempty"` // 1坐下，2站起
	Index   int32 `protobuf:"varint,2,opt,name=index,proto3" json:"index,omitempty"`
	MicOpen bool  `protobuf:"varint,3,opt,name=mic_open,json=micOpen,proto3" json:"mic_open,omitempty"` //自己的麦是否开了
}

func (x *UseSeatReq) Reset() {
	*x = UseSeatReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_voiceroom_voiceroom_proto_msgTypes[38]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UseSeatReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UseSeatReq) ProtoMessage() {}

func (x *UseSeatReq) ProtoReflect() protoreflect.Message {
	mi := &file_voiceroom_voiceroom_proto_msgTypes[38]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UseSeatReq.ProtoReflect.Descriptor instead.
func (*UseSeatReq) Descriptor() ([]byte, []int) {
	return file_voiceroom_voiceroom_proto_rawDescGZIP(), []int{38}
}

func (x *UseSeatReq) GetOpt() int32 {
	if x != nil {
		return x.Opt
	}
	return 0
}

func (x *UseSeatReq) GetIndex() int32 {
	if x != nil {
		return x.Index
	}
	return 0
}

func (x *UseSeatReq) GetMicOpen() bool {
	if x != nil {
		return x.MicOpen
	}
	return false
}

type UseSeatRsp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *UseSeatRsp) Reset() {
	*x = UseSeatRsp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_voiceroom_voiceroom_proto_msgTypes[39]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UseSeatRsp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UseSeatRsp) ProtoMessage() {}

func (x *UseSeatRsp) ProtoReflect() protoreflect.Message {
	mi := &file_voiceroom_voiceroom_proto_msgTypes[39]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UseSeatRsp.ProtoReflect.Descriptor instead.
func (*UseSeatRsp) Descriptor() ([]byte, []int) {
	return file_voiceroom_voiceroom_proto_rawDescGZIP(), []int{39}
}

type PuRoomCloseMsg struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *PuRoomCloseMsg) Reset() {
	*x = PuRoomCloseMsg{}
	if protoimpl.UnsafeEnabled {
		mi := &file_voiceroom_voiceroom_proto_msgTypes[40]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PuRoomCloseMsg) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PuRoomCloseMsg) ProtoMessage() {}

func (x *PuRoomCloseMsg) ProtoReflect() protoreflect.Message {
	mi := &file_voiceroom_voiceroom_proto_msgTypes[40]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PuRoomCloseMsg.ProtoReflect.Descriptor instead.
func (*PuRoomCloseMsg) Descriptor() ([]byte, []int) {
	return file_voiceroom_voiceroom_proto_rawDescGZIP(), []int{40}
}

type MicOptReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Opt int32 `protobuf:"varint,1,opt,name=opt,proto3" json:"opt,omitempty"` //1打开，2关闭
}

func (x *MicOptReq) Reset() {
	*x = MicOptReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_voiceroom_voiceroom_proto_msgTypes[41]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MicOptReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MicOptReq) ProtoMessage() {}

func (x *MicOptReq) ProtoReflect() protoreflect.Message {
	mi := &file_voiceroom_voiceroom_proto_msgTypes[41]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MicOptReq.ProtoReflect.Descriptor instead.
func (*MicOptReq) Descriptor() ([]byte, []int) {
	return file_voiceroom_voiceroom_proto_rawDescGZIP(), []int{41}
}

func (x *MicOptReq) GetOpt() int32 {
	if x != nil {
		return x.Opt
	}
	return 0
}

type MicOptRsp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *MicOptRsp) Reset() {
	*x = MicOptRsp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_voiceroom_voiceroom_proto_msgTypes[42]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MicOptRsp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MicOptRsp) ProtoMessage() {}

func (x *MicOptRsp) ProtoReflect() protoreflect.Message {
	mi := &file_voiceroom_voiceroom_proto_msgTypes[42]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MicOptRsp.ProtoReflect.Descriptor instead.
func (*MicOptRsp) Descriptor() ([]byte, []int) {
	return file_voiceroom_voiceroom_proto_rawDescGZIP(), []int{42}
}

type SendRedPackReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PropId    int32  `protobuf:"varint,1,opt,name=prop_id,json=propId,proto3" json:"prop_id,omitempty"`
	Source    int32  `protobuf:"varint,2,opt,name=source,proto3" json:"source,omitempty"`
	TargetNum int32  `protobuf:"varint,3,opt,name=target_num,json=targetNum,proto3" json:"target_num,omitempty"` //发多少份
	Message   string `protobuf:"bytes,4,opt,name=message,proto3" json:"message,omitempty"`                       //红包封面留言
}

func (x *SendRedPackReq) Reset() {
	*x = SendRedPackReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_voiceroom_voiceroom_proto_msgTypes[43]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SendRedPackReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SendRedPackReq) ProtoMessage() {}

func (x *SendRedPackReq) ProtoReflect() protoreflect.Message {
	mi := &file_voiceroom_voiceroom_proto_msgTypes[43]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SendRedPackReq.ProtoReflect.Descriptor instead.
func (*SendRedPackReq) Descriptor() ([]byte, []int) {
	return file_voiceroom_voiceroom_proto_rawDescGZIP(), []int{43}
}

func (x *SendRedPackReq) GetPropId() int32 {
	if x != nil {
		return x.PropId
	}
	return 0
}

func (x *SendRedPackReq) GetSource() int32 {
	if x != nil {
		return x.Source
	}
	return 0
}

func (x *SendRedPackReq) GetTargetNum() int32 {
	if x != nil {
		return x.TargetNum
	}
	return 0
}

func (x *SendRedPackReq) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

type SendRedPackRsp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *SendRedPackRsp) Reset() {
	*x = SendRedPackRsp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_voiceroom_voiceroom_proto_msgTypes[44]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SendRedPackRsp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SendRedPackRsp) ProtoMessage() {}

func (x *SendRedPackRsp) ProtoReflect() protoreflect.Message {
	mi := &file_voiceroom_voiceroom_proto_msgTypes[44]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SendRedPackRsp.ProtoReflect.Descriptor instead.
func (*SendRedPackRsp) Descriptor() ([]byte, []int) {
	return file_voiceroom_voiceroom_proto_rawDescGZIP(), []int{44}
}

type PuRedPackMsg struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SenderUid  string `protobuf:"bytes,1,opt,name=sender_uid,json=senderUid,proto3" json:"sender_uid,omitempty"`
	RedPackId  string `protobuf:"bytes,2,opt,name=red_pack_id,json=redPackId,proto3" json:"red_pack_id,omitempty"`
	ExpireTime int32  `protobuf:"varint,3,opt,name=expire_time,json=expireTime,proto3" json:"expire_time,omitempty"` //过期时间
	Message    string `protobuf:"bytes,4,opt,name=message,proto3" json:"message,omitempty"`                          // 透传
}

func (x *PuRedPackMsg) Reset() {
	*x = PuRedPackMsg{}
	if protoimpl.UnsafeEnabled {
		mi := &file_voiceroom_voiceroom_proto_msgTypes[45]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PuRedPackMsg) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PuRedPackMsg) ProtoMessage() {}

func (x *PuRedPackMsg) ProtoReflect() protoreflect.Message {
	mi := &file_voiceroom_voiceroom_proto_msgTypes[45]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PuRedPackMsg.ProtoReflect.Descriptor instead.
func (*PuRedPackMsg) Descriptor() ([]byte, []int) {
	return file_voiceroom_voiceroom_proto_rawDescGZIP(), []int{45}
}

func (x *PuRedPackMsg) GetSenderUid() string {
	if x != nil {
		return x.SenderUid
	}
	return ""
}

func (x *PuRedPackMsg) GetRedPackId() string {
	if x != nil {
		return x.RedPackId
	}
	return ""
}

func (x *PuRedPackMsg) GetExpireTime() int32 {
	if x != nil {
		return x.ExpireTime
	}
	return 0
}

func (x *PuRedPackMsg) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

type UserGeoInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Uid      string `protobuf:"bytes,1,opt,name=uid,proto3" json:"uid,omitempty"`
	Gender   int32  `protobuf:"varint,2,opt,name=gender,proto3" json:"gender,omitempty"`
	Nickname string `protobuf:"bytes,3,opt,name=nickname,proto3" json:"nickname,omitempty"`
	Avatar   string `protobuf:"bytes,4,opt,name=avatar,proto3" json:"avatar,omitempty"`
	BoxId    int32  `protobuf:"varint,5,opt,name=box_id,json=boxId,proto3" json:"box_id,omitempty"`
	Show     int32  `protobuf:"varint,6,opt,name=show,proto3" json:"show,omitempty"`
	Distance int32  `protobuf:"varint,7,opt,name=distance,proto3" json:"distance,omitempty"` //距离米
	RoomId   int32  `protobuf:"varint,8,opt,name=room_id,json=roomId,proto3" json:"room_id,omitempty"`
}

func (x *UserGeoInfo) Reset() {
	*x = UserGeoInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_voiceroom_voiceroom_proto_msgTypes[46]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserGeoInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserGeoInfo) ProtoMessage() {}

func (x *UserGeoInfo) ProtoReflect() protoreflect.Message {
	mi := &file_voiceroom_voiceroom_proto_msgTypes[46]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserGeoInfo.ProtoReflect.Descriptor instead.
func (*UserGeoInfo) Descriptor() ([]byte, []int) {
	return file_voiceroom_voiceroom_proto_rawDescGZIP(), []int{46}
}

func (x *UserGeoInfo) GetUid() string {
	if x != nil {
		return x.Uid
	}
	return ""
}

func (x *UserGeoInfo) GetGender() int32 {
	if x != nil {
		return x.Gender
	}
	return 0
}

func (x *UserGeoInfo) GetNickname() string {
	if x != nil {
		return x.Nickname
	}
	return ""
}

func (x *UserGeoInfo) GetAvatar() string {
	if x != nil {
		return x.Avatar
	}
	return ""
}

func (x *UserGeoInfo) GetBoxId() int32 {
	if x != nil {
		return x.BoxId
	}
	return 0
}

func (x *UserGeoInfo) GetShow() int32 {
	if x != nil {
		return x.Show
	}
	return 0
}

func (x *UserGeoInfo) GetDistance() int32 {
	if x != nil {
		return x.Distance
	}
	return 0
}

func (x *UserGeoInfo) GetRoomId() int32 {
	if x != nil {
		return x.RoomId
	}
	return 0
}

type GetNearbyReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Pos *Location `protobuf:"bytes,1,opt,name=pos,proto3" json:"pos,omitempty"`
}

func (x *GetNearbyReq) Reset() {
	*x = GetNearbyReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_voiceroom_voiceroom_proto_msgTypes[47]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetNearbyReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetNearbyReq) ProtoMessage() {}

func (x *GetNearbyReq) ProtoReflect() protoreflect.Message {
	mi := &file_voiceroom_voiceroom_proto_msgTypes[47]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetNearbyReq.ProtoReflect.Descriptor instead.
func (*GetNearbyReq) Descriptor() ([]byte, []int) {
	return file_voiceroom_voiceroom_proto_rawDescGZIP(), []int{47}
}

func (x *GetNearbyReq) GetPos() *Location {
	if x != nil {
		return x.Pos
	}
	return nil
}

type GetNearbyRsp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Users []*UserGeoInfo `protobuf:"bytes,1,rep,name=users,proto3" json:"users,omitempty"` //附近的人的信息
}

func (x *GetNearbyRsp) Reset() {
	*x = GetNearbyRsp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_voiceroom_voiceroom_proto_msgTypes[48]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetNearbyRsp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetNearbyRsp) ProtoMessage() {}

func (x *GetNearbyRsp) ProtoReflect() protoreflect.Message {
	mi := &file_voiceroom_voiceroom_proto_msgTypes[48]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetNearbyRsp.ProtoReflect.Descriptor instead.
func (*GetNearbyRsp) Descriptor() ([]byte, []int) {
	return file_voiceroom_voiceroom_proto_rawDescGZIP(), []int{48}
}

func (x *GetNearbyRsp) GetUsers() []*UserGeoInfo {
	if x != nil {
		return x.Users
	}
	return nil
}

type GetRoomListReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TagId int32     `protobuf:"varint,1,opt,name=tag_id,json=tagId,proto3" json:"tag_id,omitempty"` //房间类型
	Page  int32     `protobuf:"varint,2,opt,name=page,proto3" json:"page,omitempty"`                //第几页，从1开始
	Size  int32     `protobuf:"varint,3,opt,name=size,proto3" json:"size,omitempty"`                //每页多少条
	Pos   *Location `protobuf:"bytes,4,opt,name=pos,proto3" json:"pos,omitempty"`
}

func (x *GetRoomListReq) Reset() {
	*x = GetRoomListReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_voiceroom_voiceroom_proto_msgTypes[49]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetRoomListReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetRoomListReq) ProtoMessage() {}

func (x *GetRoomListReq) ProtoReflect() protoreflect.Message {
	mi := &file_voiceroom_voiceroom_proto_msgTypes[49]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetRoomListReq.ProtoReflect.Descriptor instead.
func (*GetRoomListReq) Descriptor() ([]byte, []int) {
	return file_voiceroom_voiceroom_proto_rawDescGZIP(), []int{49}
}

func (x *GetRoomListReq) GetTagId() int32 {
	if x != nil {
		return x.TagId
	}
	return 0
}

func (x *GetRoomListReq) GetPage() int32 {
	if x != nil {
		return x.Page
	}
	return 0
}

func (x *GetRoomListReq) GetSize() int32 {
	if x != nil {
		return x.Size
	}
	return 0
}

func (x *GetRoomListReq) GetPos() *Location {
	if x != nil {
		return x.Pos
	}
	return nil
}

type RoomListItem struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RoomId      int32  `protobuf:"varint,1,opt,name=room_id,json=roomId,proto3" json:"room_id,omitempty"`
	TagId       int32  `protobuf:"varint,2,opt,name=tag_id,json=tagId,proto3" json:"tag_id,omitempty"`
	Name        string `protobuf:"bytes,3,opt,name=name,proto3" json:"name,omitempty"`         //房间名称
	Nickname    string `protobuf:"bytes,4,opt,name=nickname,proto3" json:"nickname,omitempty"` //房主昵称
	Gender      int32  `protobuf:"varint,5,opt,name=gender,proto3" json:"gender,omitempty"`
	Avatar      string `protobuf:"bytes,6,opt,name=avatar,proto3" json:"avatar,omitempty"`
	BoxId       int32  `protobuf:"varint,7,opt,name=box_id,json=boxId,proto3" json:"box_id,omitempty"`
	TotalPlayer int32  `protobuf:"varint,8,opt,name=total_player,json=totalPlayer,proto3" json:"total_player,omitempty"`  //房间人数
	HasFriend   bool   `protobuf:"varint,9,opt,name=has_friend,json=hasFriend,proto3" json:"has_friend,omitempty"`        //是否有好友在该房间
	MinDistance int32  `protobuf:"varint,10,opt,name=min_distance,json=minDistance,proto3" json:"min_distance,omitempty"` //房间内成员离我最近的距离
	InTopk      bool   `protobuf:"varint,11,opt,name=in_topk,json=inTopk,proto3" json:"in_topk,omitempty"`                //是否是大神房间
	OwnerId     string `protobuf:"bytes,12,opt,name=owner_id,json=ownerId,proto3" json:"owner_id,omitempty"`              //房主uid
}

func (x *RoomListItem) Reset() {
	*x = RoomListItem{}
	if protoimpl.UnsafeEnabled {
		mi := &file_voiceroom_voiceroom_proto_msgTypes[50]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RoomListItem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RoomListItem) ProtoMessage() {}

func (x *RoomListItem) ProtoReflect() protoreflect.Message {
	mi := &file_voiceroom_voiceroom_proto_msgTypes[50]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RoomListItem.ProtoReflect.Descriptor instead.
func (*RoomListItem) Descriptor() ([]byte, []int) {
	return file_voiceroom_voiceroom_proto_rawDescGZIP(), []int{50}
}

func (x *RoomListItem) GetRoomId() int32 {
	if x != nil {
		return x.RoomId
	}
	return 0
}

func (x *RoomListItem) GetTagId() int32 {
	if x != nil {
		return x.TagId
	}
	return 0
}

func (x *RoomListItem) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *RoomListItem) GetNickname() string {
	if x != nil {
		return x.Nickname
	}
	return ""
}

func (x *RoomListItem) GetGender() int32 {
	if x != nil {
		return x.Gender
	}
	return 0
}

func (x *RoomListItem) GetAvatar() string {
	if x != nil {
		return x.Avatar
	}
	return ""
}

func (x *RoomListItem) GetBoxId() int32 {
	if x != nil {
		return x.BoxId
	}
	return 0
}

func (x *RoomListItem) GetTotalPlayer() int32 {
	if x != nil {
		return x.TotalPlayer
	}
	return 0
}

func (x *RoomListItem) GetHasFriend() bool {
	if x != nil {
		return x.HasFriend
	}
	return false
}

func (x *RoomListItem) GetMinDistance() int32 {
	if x != nil {
		return x.MinDistance
	}
	return 0
}

func (x *RoomListItem) GetInTopk() bool {
	if x != nil {
		return x.InTopk
	}
	return false
}

func (x *RoomListItem) GetOwnerId() string {
	if x != nil {
		return x.OwnerId
	}
	return ""
}

type GetRoomListRsp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Rooms []*RoomListItem `protobuf:"bytes,1,rep,name=rooms,proto3" json:"rooms,omitempty"`
	Total int32           `protobuf:"varint,2,opt,name=total,proto3" json:"total,omitempty"` //总共多少条
}

func (x *GetRoomListRsp) Reset() {
	*x = GetRoomListRsp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_voiceroom_voiceroom_proto_msgTypes[51]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetRoomListRsp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetRoomListRsp) ProtoMessage() {}

func (x *GetRoomListRsp) ProtoReflect() protoreflect.Message {
	mi := &file_voiceroom_voiceroom_proto_msgTypes[51]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetRoomListRsp.ProtoReflect.Descriptor instead.
func (*GetRoomListRsp) Descriptor() ([]byte, []int) {
	return file_voiceroom_voiceroom_proto_rawDescGZIP(), []int{51}
}

func (x *GetRoomListRsp) GetRooms() []*RoomListItem {
	if x != nil {
		return x.Rooms
	}
	return nil
}

func (x *GetRoomListRsp) GetTotal() int32 {
	if x != nil {
		return x.Total
	}
	return 0
}

type SearchRoomReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id  int64     `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"` //房间id或房主id
	Pos *Location `protobuf:"bytes,2,opt,name=pos,proto3" json:"pos,omitempty"`
}

func (x *SearchRoomReq) Reset() {
	*x = SearchRoomReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_voiceroom_voiceroom_proto_msgTypes[52]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SearchRoomReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SearchRoomReq) ProtoMessage() {}

func (x *SearchRoomReq) ProtoReflect() protoreflect.Message {
	mi := &file_voiceroom_voiceroom_proto_msgTypes[52]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SearchRoomReq.ProtoReflect.Descriptor instead.
func (*SearchRoomReq) Descriptor() ([]byte, []int) {
	return file_voiceroom_voiceroom_proto_rawDescGZIP(), []int{52}
}

func (x *SearchRoomReq) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *SearchRoomReq) GetPos() *Location {
	if x != nil {
		return x.Pos
	}
	return nil
}

type TopShowMember struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Uid    string `protobuf:"bytes,1,opt,name=uid,proto3" json:"uid,omitempty"`
	Avatar string `protobuf:"bytes,2,opt,name=avatar,proto3" json:"avatar,omitempty"`
}

func (x *TopShowMember) Reset() {
	*x = TopShowMember{}
	if protoimpl.UnsafeEnabled {
		mi := &file_voiceroom_voiceroom_proto_msgTypes[53]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TopShowMember) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TopShowMember) ProtoMessage() {}

func (x *TopShowMember) ProtoReflect() protoreflect.Message {
	mi := &file_voiceroom_voiceroom_proto_msgTypes[53]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TopShowMember.ProtoReflect.Descriptor instead.
func (*TopShowMember) Descriptor() ([]byte, []int) {
	return file_voiceroom_voiceroom_proto_rawDescGZIP(), []int{53}
}

func (x *TopShowMember) GetUid() string {
	if x != nil {
		return x.Uid
	}
	return ""
}

func (x *TopShowMember) GetAvatar() string {
	if x != nil {
		return x.Avatar
	}
	return ""
}

type SearchRoomRsp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RoomId      int32            `protobuf:"varint,1,opt,name=room_id,json=roomId,proto3" json:"room_id,omitempty"`
	TagId       int32            `protobuf:"varint,2,opt,name=tag_id,json=tagId,proto3" json:"tag_id,omitempty"`
	Name        string           `protobuf:"bytes,3,opt,name=name,proto3" json:"name,omitempty"`         //房间名称
	Nickname    string           `protobuf:"bytes,4,opt,name=nickname,proto3" json:"nickname,omitempty"` //房主昵称
	Gender      int32            `protobuf:"varint,5,opt,name=gender,proto3" json:"gender,omitempty"`
	Avatar      string           `protobuf:"bytes,6,opt,name=avatar,proto3" json:"avatar,omitempty"`
	BoxId       int32            `protobuf:"varint,7,opt,name=box_id,json=boxId,proto3" json:"box_id,omitempty"`
	TotalPlayer int32            `protobuf:"varint,8,opt,name=total_player,json=totalPlayer,proto3" json:"total_player,omitempty"`  //房间人数
	HasFriend   bool             `protobuf:"varint,9,opt,name=has_friend,json=hasFriend,proto3" json:"has_friend,omitempty"`        //是否有好友在该房间
	MinDistance int32            `protobuf:"varint,10,opt,name=min_distance,json=minDistance,proto3" json:"min_distance,omitempty"` //房间内成员离我最近的距离
	InTopk      bool             `protobuf:"varint,11,opt,name=in_topk,json=inTopk,proto3" json:"in_topk,omitempty"`                //是否是大神房间
	OwnerId     string           `protobuf:"bytes,12,opt,name=owner_id,json=ownerId,proto3" json:"owner_id,omitempty"`              //房主uid
	Show        int32            `protobuf:"varint,13,opt,name=show,proto3" json:"show,omitempty"`                                  //房主show值
	Charm       int32            `protobuf:"varint,14,opt,name=charm,proto3" json:"charm,omitempty"`                                //房主魅力值
	Star        int32            `protobuf:"varint,15,opt,name=star,proto3" json:"star,omitempty"`                                  //段位
	TopMember   []*TopShowMember `protobuf:"bytes,16,rep,name=top_member,json=topMember,proto3" json:"top_member,omitempty"`
}

func (x *SearchRoomRsp) Reset() {
	*x = SearchRoomRsp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_voiceroom_voiceroom_proto_msgTypes[54]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SearchRoomRsp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SearchRoomRsp) ProtoMessage() {}

func (x *SearchRoomRsp) ProtoReflect() protoreflect.Message {
	mi := &file_voiceroom_voiceroom_proto_msgTypes[54]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SearchRoomRsp.ProtoReflect.Descriptor instead.
func (*SearchRoomRsp) Descriptor() ([]byte, []int) {
	return file_voiceroom_voiceroom_proto_rawDescGZIP(), []int{54}
}

func (x *SearchRoomRsp) GetRoomId() int32 {
	if x != nil {
		return x.RoomId
	}
	return 0
}

func (x *SearchRoomRsp) GetTagId() int32 {
	if x != nil {
		return x.TagId
	}
	return 0
}

func (x *SearchRoomRsp) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *SearchRoomRsp) GetNickname() string {
	if x != nil {
		return x.Nickname
	}
	return ""
}

func (x *SearchRoomRsp) GetGender() int32 {
	if x != nil {
		return x.Gender
	}
	return 0
}

func (x *SearchRoomRsp) GetAvatar() string {
	if x != nil {
		return x.Avatar
	}
	return ""
}

func (x *SearchRoomRsp) GetBoxId() int32 {
	if x != nil {
		return x.BoxId
	}
	return 0
}

func (x *SearchRoomRsp) GetTotalPlayer() int32 {
	if x != nil {
		return x.TotalPlayer
	}
	return 0
}

func (x *SearchRoomRsp) GetHasFriend() bool {
	if x != nil {
		return x.HasFriend
	}
	return false
}

func (x *SearchRoomRsp) GetMinDistance() int32 {
	if x != nil {
		return x.MinDistance
	}
	return 0
}

func (x *SearchRoomRsp) GetInTopk() bool {
	if x != nil {
		return x.InTopk
	}
	return false
}

func (x *SearchRoomRsp) GetOwnerId() string {
	if x != nil {
		return x.OwnerId
	}
	return ""
}

func (x *SearchRoomRsp) GetShow() int32 {
	if x != nil {
		return x.Show
	}
	return 0
}

func (x *SearchRoomRsp) GetCharm() int32 {
	if x != nil {
		return x.Charm
	}
	return 0
}

func (x *SearchRoomRsp) GetStar() int32 {
	if x != nil {
		return x.Star
	}
	return 0
}

func (x *SearchRoomRsp) GetTopMember() []*TopShowMember {
	if x != nil {
		return x.TopMember
	}
	return nil
}

type StartPkReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	LeftUid  string `protobuf:"bytes,1,opt,name=left_uid,json=leftUid,proto3" json:"left_uid,omitempty"`
	RightUid string `protobuf:"bytes,2,opt,name=right_uid,json=rightUid,proto3" json:"right_uid,omitempty"`
	Seconds  int32  `protobuf:"varint,3,opt,name=seconds,proto3" json:"seconds,omitempty"`
	Type     PkType `protobuf:"varint,4,opt,name=type,proto3,enum=voiceroom.PkType" json:"type,omitempty"` // 1 投票，2 刷礼物
}

func (x *StartPkReq) Reset() {
	*x = StartPkReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_voiceroom_voiceroom_proto_msgTypes[55]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StartPkReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StartPkReq) ProtoMessage() {}

func (x *StartPkReq) ProtoReflect() protoreflect.Message {
	mi := &file_voiceroom_voiceroom_proto_msgTypes[55]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StartPkReq.ProtoReflect.Descriptor instead.
func (*StartPkReq) Descriptor() ([]byte, []int) {
	return file_voiceroom_voiceroom_proto_rawDescGZIP(), []int{55}
}

func (x *StartPkReq) GetLeftUid() string {
	if x != nil {
		return x.LeftUid
	}
	return ""
}

func (x *StartPkReq) GetRightUid() string {
	if x != nil {
		return x.RightUid
	}
	return ""
}

func (x *StartPkReq) GetSeconds() int32 {
	if x != nil {
		return x.Seconds
	}
	return 0
}

func (x *StartPkReq) GetType() PkType {
	if x != nil {
		return x.Type
	}
	return PkType_ptUndef
}

type StartPkRsp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PkInfo *PkInfo `protobuf:"bytes,1,opt,name=pk_info,json=pkInfo,proto3" json:"pk_info,omitempty"`
}

func (x *StartPkRsp) Reset() {
	*x = StartPkRsp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_voiceroom_voiceroom_proto_msgTypes[56]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StartPkRsp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StartPkRsp) ProtoMessage() {}

func (x *StartPkRsp) ProtoReflect() protoreflect.Message {
	mi := &file_voiceroom_voiceroom_proto_msgTypes[56]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StartPkRsp.ProtoReflect.Descriptor instead.
func (*StartPkRsp) Descriptor() ([]byte, []int) {
	return file_voiceroom_voiceroom_proto_rawDescGZIP(), []int{56}
}

func (x *StartPkRsp) GetPkInfo() *PkInfo {
	if x != nil {
		return x.PkInfo
	}
	return nil
}

type PuStartPkMsg struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PkInfo *PkInfo `protobuf:"bytes,1,opt,name=pk_info,json=pkInfo,proto3" json:"pk_info,omitempty"`
}

func (x *PuStartPkMsg) Reset() {
	*x = PuStartPkMsg{}
	if protoimpl.UnsafeEnabled {
		mi := &file_voiceroom_voiceroom_proto_msgTypes[57]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PuStartPkMsg) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PuStartPkMsg) ProtoMessage() {}

func (x *PuStartPkMsg) ProtoReflect() protoreflect.Message {
	mi := &file_voiceroom_voiceroom_proto_msgTypes[57]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PuStartPkMsg.ProtoReflect.Descriptor instead.
func (*PuStartPkMsg) Descriptor() ([]byte, []int) {
	return file_voiceroom_voiceroom_proto_rawDescGZIP(), []int{57}
}

func (x *PuStartPkMsg) GetPkInfo() *PkInfo {
	if x != nil {
		return x.PkInfo
	}
	return nil
}

type GetPkInfoReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *GetPkInfoReq) Reset() {
	*x = GetPkInfoReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_voiceroom_voiceroom_proto_msgTypes[58]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetPkInfoReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetPkInfoReq) ProtoMessage() {}

func (x *GetPkInfoReq) ProtoReflect() protoreflect.Message {
	mi := &file_voiceroom_voiceroom_proto_msgTypes[58]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetPkInfoReq.ProtoReflect.Descriptor instead.
func (*GetPkInfoReq) Descriptor() ([]byte, []int) {
	return file_voiceroom_voiceroom_proto_rawDescGZIP(), []int{58}
}

type GetPkInfoRsp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PkInfo *PkInfo `protobuf:"bytes,1,opt,name=pk_info,json=pkInfo,proto3" json:"pk_info,omitempty"`
}

func (x *GetPkInfoRsp) Reset() {
	*x = GetPkInfoRsp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_voiceroom_voiceroom_proto_msgTypes[59]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetPkInfoRsp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetPkInfoRsp) ProtoMessage() {}

func (x *GetPkInfoRsp) ProtoReflect() protoreflect.Message {
	mi := &file_voiceroom_voiceroom_proto_msgTypes[59]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetPkInfoRsp.ProtoReflect.Descriptor instead.
func (*GetPkInfoRsp) Descriptor() ([]byte, []int) {
	return file_voiceroom_voiceroom_proto_rawDescGZIP(), []int{59}
}

func (x *GetPkInfoRsp) GetPkInfo() *PkInfo {
	if x != nil {
		return x.PkInfo
	}
	return nil
}

type PuPkResultMsg struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	WinnerUid string `protobuf:"bytes,1,opt,name=winner_uid,json=winnerUid,proto3" json:"winner_uid,omitempty"`
	Score     int64  `protobuf:"varint,2,opt,name=score,proto3" json:"score,omitempty"`
	IsDraw    bool   `protobuf:"varint,3,opt,name=is_draw,json=isDraw,proto3" json:"is_draw,omitempty"` // 是否平局, 如果是则winner_uid为空
}

func (x *PuPkResultMsg) Reset() {
	*x = PuPkResultMsg{}
	if protoimpl.UnsafeEnabled {
		mi := &file_voiceroom_voiceroom_proto_msgTypes[60]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PuPkResultMsg) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PuPkResultMsg) ProtoMessage() {}

func (x *PuPkResultMsg) ProtoReflect() protoreflect.Message {
	mi := &file_voiceroom_voiceroom_proto_msgTypes[60]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PuPkResultMsg.ProtoReflect.Descriptor instead.
func (*PuPkResultMsg) Descriptor() ([]byte, []int) {
	return file_voiceroom_voiceroom_proto_rawDescGZIP(), []int{60}
}

func (x *PuPkResultMsg) GetWinnerUid() string {
	if x != nil {
		return x.WinnerUid
	}
	return ""
}

func (x *PuPkResultMsg) GetScore() int64 {
	if x != nil {
		return x.Score
	}
	return 0
}

func (x *PuPkResultMsg) GetIsDraw() bool {
	if x != nil {
		return x.IsDraw
	}
	return false
}

type RoomChatMsg struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SenderUid   string `protobuf:"bytes,1,opt,name=sender_uid,json=senderUid,proto3" json:"sender_uid,omitempty"`
	ChatType    int32  `protobuf:"varint,2,opt,name=chat_type,json=chatType,proto3" json:"chat_type,omitempty"`          // 9:语音房消息
	MessageType int32  `protobuf:"varint,3,opt,name=message_type,json=messageType,proto3" json:"message_type,omitempty"` // 25:系统消息, 为系统消息时仅有content和timestamp是有效的
	SysmsgType  int32  `protobuf:"varint,4,opt,name=sysmsg_type,json=sysmsgType,proto3" json:"sysmsg_type,omitempty"`    // 当message_type为25时有效 1.PK结果, 2.进入直播间, 3.抽奖结果
	Content     string `protobuf:"bytes,5,opt,name=content,proto3" json:"content,omitempty"`
	MessageId   string `protobuf:"bytes,6,opt,name=message_id,json=messageId,proto3" json:"message_id,omitempty"`
	Nickname    string `protobuf:"bytes,7,opt,name=nickname,proto3" json:"nickname,omitempty"`
	Ext         string `protobuf:"bytes,8,opt,name=ext,proto3" json:"ext,omitempty"`
	SubType     int32  `protobuf:"varint,10,opt,name=sub_type,json=subType,proto3" json:"sub_type,omitempty"`
	Timestamp   int64  `protobuf:"varint,11,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
}

func (x *RoomChatMsg) Reset() {
	*x = RoomChatMsg{}
	if protoimpl.UnsafeEnabled {
		mi := &file_voiceroom_voiceroom_proto_msgTypes[61]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RoomChatMsg) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RoomChatMsg) ProtoMessage() {}

func (x *RoomChatMsg) ProtoReflect() protoreflect.Message {
	mi := &file_voiceroom_voiceroom_proto_msgTypes[61]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RoomChatMsg.ProtoReflect.Descriptor instead.
func (*RoomChatMsg) Descriptor() ([]byte, []int) {
	return file_voiceroom_voiceroom_proto_rawDescGZIP(), []int{61}
}

func (x *RoomChatMsg) GetSenderUid() string {
	if x != nil {
		return x.SenderUid
	}
	return ""
}

func (x *RoomChatMsg) GetChatType() int32 {
	if x != nil {
		return x.ChatType
	}
	return 0
}

func (x *RoomChatMsg) GetMessageType() int32 {
	if x != nil {
		return x.MessageType
	}
	return 0
}

func (x *RoomChatMsg) GetSysmsgType() int32 {
	if x != nil {
		return x.SysmsgType
	}
	return 0
}

func (x *RoomChatMsg) GetContent() string {
	if x != nil {
		return x.Content
	}
	return ""
}

func (x *RoomChatMsg) GetMessageId() string {
	if x != nil {
		return x.MessageId
	}
	return ""
}

func (x *RoomChatMsg) GetNickname() string {
	if x != nil {
		return x.Nickname
	}
	return ""
}

func (x *RoomChatMsg) GetExt() string {
	if x != nil {
		return x.Ext
	}
	return ""
}

func (x *RoomChatMsg) GetSubType() int32 {
	if x != nil {
		return x.SubType
	}
	return 0
}

func (x *RoomChatMsg) GetTimestamp() int64 {
	if x != nil {
		return x.Timestamp
	}
	return 0
}

type PuRoomChatMsg struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Messages []*RoomChatMsg `protobuf:"bytes,1,rep,name=messages,proto3" json:"messages,omitempty"`
}

func (x *PuRoomChatMsg) Reset() {
	*x = PuRoomChatMsg{}
	if protoimpl.UnsafeEnabled {
		mi := &file_voiceroom_voiceroom_proto_msgTypes[62]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PuRoomChatMsg) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PuRoomChatMsg) ProtoMessage() {}

func (x *PuRoomChatMsg) ProtoReflect() protoreflect.Message {
	mi := &file_voiceroom_voiceroom_proto_msgTypes[62]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PuRoomChatMsg.ProtoReflect.Descriptor instead.
func (*PuRoomChatMsg) Descriptor() ([]byte, []int) {
	return file_voiceroom_voiceroom_proto_rawDescGZIP(), []int{62}
}

func (x *PuRoomChatMsg) GetMessages() []*RoomChatMsg {
	if x != nil {
		return x.Messages
	}
	return nil
}

type PkVoteReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TargetUid string `protobuf:"bytes,1,opt,name=target_uid,json=targetUid,proto3" json:"target_uid,omitempty"`
}

func (x *PkVoteReq) Reset() {
	*x = PkVoteReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_voiceroom_voiceroom_proto_msgTypes[63]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PkVoteReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PkVoteReq) ProtoMessage() {}

func (x *PkVoteReq) ProtoReflect() protoreflect.Message {
	mi := &file_voiceroom_voiceroom_proto_msgTypes[63]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PkVoteReq.ProtoReflect.Descriptor instead.
func (*PkVoteReq) Descriptor() ([]byte, []int) {
	return file_voiceroom_voiceroom_proto_rawDescGZIP(), []int{63}
}

func (x *PkVoteReq) GetTargetUid() string {
	if x != nil {
		return x.TargetUid
	}
	return ""
}

type PkVoteRsp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PkInfo *PkInfo `protobuf:"bytes,1,opt,name=pk_info,json=pkInfo,proto3" json:"pk_info,omitempty"`
}

func (x *PkVoteRsp) Reset() {
	*x = PkVoteRsp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_voiceroom_voiceroom_proto_msgTypes[64]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PkVoteRsp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PkVoteRsp) ProtoMessage() {}

func (x *PkVoteRsp) ProtoReflect() protoreflect.Message {
	mi := &file_voiceroom_voiceroom_proto_msgTypes[64]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PkVoteRsp.ProtoReflect.Descriptor instead.
func (*PkVoteRsp) Descriptor() ([]byte, []int) {
	return file_voiceroom_voiceroom_proto_rawDescGZIP(), []int{64}
}

func (x *PkVoteRsp) GetPkInfo() *PkInfo {
	if x != nil {
		return x.PkInfo
	}
	return nil
}

type PkSendGiftReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Info *SendGiftInfo `protobuf:"bytes,1,opt,name=info,proto3" json:"info,omitempty"`
}

func (x *PkSendGiftReq) Reset() {
	*x = PkSendGiftReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_voiceroom_voiceroom_proto_msgTypes[65]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PkSendGiftReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PkSendGiftReq) ProtoMessage() {}

func (x *PkSendGiftReq) ProtoReflect() protoreflect.Message {
	mi := &file_voiceroom_voiceroom_proto_msgTypes[65]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PkSendGiftReq.ProtoReflect.Descriptor instead.
func (*PkSendGiftReq) Descriptor() ([]byte, []int) {
	return file_voiceroom_voiceroom_proto_rawDescGZIP(), []int{65}
}

func (x *PkSendGiftReq) GetInfo() *SendGiftInfo {
	if x != nil {
		return x.Info
	}
	return nil
}

type PkSendGiftRsp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PkInfo *PkInfo `protobuf:"bytes,1,opt,name=pk_info,json=pkInfo,proto3" json:"pk_info,omitempty"`
}

func (x *PkSendGiftRsp) Reset() {
	*x = PkSendGiftRsp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_voiceroom_voiceroom_proto_msgTypes[66]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PkSendGiftRsp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PkSendGiftRsp) ProtoMessage() {}

func (x *PkSendGiftRsp) ProtoReflect() protoreflect.Message {
	mi := &file_voiceroom_voiceroom_proto_msgTypes[66]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PkSendGiftRsp.ProtoReflect.Descriptor instead.
func (*PkSendGiftRsp) Descriptor() ([]byte, []int) {
	return file_voiceroom_voiceroom_proto_rawDescGZIP(), []int{66}
}

func (x *PkSendGiftRsp) GetPkInfo() *PkInfo {
	if x != nil {
		return x.PkInfo
	}
	return nil
}

type SendChatReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ChatType    int32  `protobuf:"varint,1,opt,name=chat_type,json=chatType,proto3" json:"chat_type,omitempty"`
	MessageType int32  `protobuf:"varint,2,opt,name=message_type,json=messageType,proto3" json:"message_type,omitempty"`
	Content     string `protobuf:"bytes,3,opt,name=content,proto3" json:"content,omitempty"`
	MessageId   string `protobuf:"bytes,4,opt,name=message_id,json=messageId,proto3" json:"message_id,omitempty"`
	Nickname    string `protobuf:"bytes,5,opt,name=nickname,proto3" json:"nickname,omitempty"`
	Ext         string `protobuf:"bytes,6,opt,name=ext,proto3" json:"ext,omitempty"`
	SubType     int32  `protobuf:"varint,7,opt,name=sub_type,json=subType,proto3" json:"sub_type,omitempty"`
}

func (x *SendChatReq) Reset() {
	*x = SendChatReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_voiceroom_voiceroom_proto_msgTypes[67]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SendChatReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SendChatReq) ProtoMessage() {}

func (x *SendChatReq) ProtoReflect() protoreflect.Message {
	mi := &file_voiceroom_voiceroom_proto_msgTypes[67]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SendChatReq.ProtoReflect.Descriptor instead.
func (*SendChatReq) Descriptor() ([]byte, []int) {
	return file_voiceroom_voiceroom_proto_rawDescGZIP(), []int{67}
}

func (x *SendChatReq) GetChatType() int32 {
	if x != nil {
		return x.ChatType
	}
	return 0
}

func (x *SendChatReq) GetMessageType() int32 {
	if x != nil {
		return x.MessageType
	}
	return 0
}

func (x *SendChatReq) GetContent() string {
	if x != nil {
		return x.Content
	}
	return ""
}

func (x *SendChatReq) GetMessageId() string {
	if x != nil {
		return x.MessageId
	}
	return ""
}

func (x *SendChatReq) GetNickname() string {
	if x != nil {
		return x.Nickname
	}
	return ""
}

func (x *SendChatReq) GetExt() string {
	if x != nil {
		return x.Ext
	}
	return ""
}

func (x *SendChatReq) GetSubType() int32 {
	if x != nil {
		return x.SubType
	}
	return 0
}

type SendChatRsp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Success bool `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
}

func (x *SendChatRsp) Reset() {
	*x = SendChatRsp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_voiceroom_voiceroom_proto_msgTypes[68]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SendChatRsp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SendChatRsp) ProtoMessage() {}

func (x *SendChatRsp) ProtoReflect() protoreflect.Message {
	mi := &file_voiceroom_voiceroom_proto_msgTypes[68]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SendChatRsp.ProtoReflect.Descriptor instead.
func (*SendChatRsp) Descriptor() ([]byte, []int) {
	return file_voiceroom_voiceroom_proto_rawDescGZIP(), []int{68}
}

func (x *SendChatRsp) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

type SendGiftReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Info *SendGiftInfo `protobuf:"bytes,1,opt,name=info,proto3" json:"info,omitempty"`
}

func (x *SendGiftReq) Reset() {
	*x = SendGiftReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_voiceroom_voiceroom_proto_msgTypes[69]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SendGiftReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SendGiftReq) ProtoMessage() {}

func (x *SendGiftReq) ProtoReflect() protoreflect.Message {
	mi := &file_voiceroom_voiceroom_proto_msgTypes[69]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SendGiftReq.ProtoReflect.Descriptor instead.
func (*SendGiftReq) Descriptor() ([]byte, []int) {
	return file_voiceroom_voiceroom_proto_rawDescGZIP(), []int{69}
}

func (x *SendGiftReq) GetInfo() *SendGiftInfo {
	if x != nil {
		return x.Info
	}
	return nil
}

type SendGiftInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TargetUid      string `protobuf:"bytes,1,opt,name=target_uid,json=targetUid,proto3" json:"target_uid,omitempty"`
	TargetNickname string `protobuf:"bytes,2,opt,name=target_nickname,json=targetNickname,proto3" json:"target_nickname,omitempty"`
	Source         int32  `protobuf:"varint,3,opt,name=source,proto3" json:"source,omitempty"`
	IsFree         bool   `protobuf:"varint,4,opt,name=is_free,json=isFree,proto3" json:"is_free,omitempty"`
	GiftId         int32  `protobuf:"varint,5,opt,name=gift_id,json=giftId,proto3" json:"gift_id,omitempty"`
	GiftName       string `protobuf:"bytes,6,opt,name=gift_name,json=giftName,proto3" json:"gift_name,omitempty"`
	Count          int32  `protobuf:"varint,7,opt,name=count,proto3" json:"count,omitempty"`
	BagCount       int32  `protobuf:"varint,8,opt,name=bag_count,json=bagCount,proto3" json:"bag_count,omitempty"`
	MessageIndex   int32  `protobuf:"varint,9,opt,name=message_index,json=messageIndex,proto3" json:"message_index,omitempty"`
	Charm          int32  `protobuf:"varint,10,opt,name=charm,proto3" json:"charm,omitempty"`
	Ext            string `protobuf:"bytes,11,opt,name=ext,proto3" json:"ext,omitempty"`
}

func (x *SendGiftInfo) Reset() {
	*x = SendGiftInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_voiceroom_voiceroom_proto_msgTypes[70]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SendGiftInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SendGiftInfo) ProtoMessage() {}

func (x *SendGiftInfo) ProtoReflect() protoreflect.Message {
	mi := &file_voiceroom_voiceroom_proto_msgTypes[70]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SendGiftInfo.ProtoReflect.Descriptor instead.
func (*SendGiftInfo) Descriptor() ([]byte, []int) {
	return file_voiceroom_voiceroom_proto_rawDescGZIP(), []int{70}
}

func (x *SendGiftInfo) GetTargetUid() string {
	if x != nil {
		return x.TargetUid
	}
	return ""
}

func (x *SendGiftInfo) GetTargetNickname() string {
	if x != nil {
		return x.TargetNickname
	}
	return ""
}

func (x *SendGiftInfo) GetSource() int32 {
	if x != nil {
		return x.Source
	}
	return 0
}

func (x *SendGiftInfo) GetIsFree() bool {
	if x != nil {
		return x.IsFree
	}
	return false
}

func (x *SendGiftInfo) GetGiftId() int32 {
	if x != nil {
		return x.GiftId
	}
	return 0
}

func (x *SendGiftInfo) GetGiftName() string {
	if x != nil {
		return x.GiftName
	}
	return ""
}

func (x *SendGiftInfo) GetCount() int32 {
	if x != nil {
		return x.Count
	}
	return 0
}

func (x *SendGiftInfo) GetBagCount() int32 {
	if x != nil {
		return x.BagCount
	}
	return 0
}

func (x *SendGiftInfo) GetMessageIndex() int32 {
	if x != nil {
		return x.MessageIndex
	}
	return 0
}

func (x *SendGiftInfo) GetCharm() int32 {
	if x != nil {
		return x.Charm
	}
	return 0
}

func (x *SendGiftInfo) GetExt() string {
	if x != nil {
		return x.Ext
	}
	return ""
}

type SendGiftRsp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *SendGiftRsp) Reset() {
	*x = SendGiftRsp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_voiceroom_voiceroom_proto_msgTypes[71]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SendGiftRsp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SendGiftRsp) ProtoMessage() {}

func (x *SendGiftRsp) ProtoReflect() protoreflect.Message {
	mi := &file_voiceroom_voiceroom_proto_msgTypes[71]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SendGiftRsp.ProtoReflect.Descriptor instead.
func (*SendGiftRsp) Descriptor() ([]byte, []int) {
	return file_voiceroom_voiceroom_proto_rawDescGZIP(), []int{71}
}

type PuSendGiftMsg struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SenderUid string `protobuf:"bytes,1,opt,name=sender_uid,json=senderUid,proto3" json:"sender_uid,omitempty"`
	TargetUid string `protobuf:"bytes,2,opt,name=target_uid,json=targetUid,proto3" json:"target_uid,omitempty"`
	GiftId    int32  `protobuf:"varint,3,opt,name=gift_id,json=giftId,proto3" json:"gift_id,omitempty"`
	GiftNum   int32  `protobuf:"varint,4,opt,name=gift_num,json=giftNum,proto3" json:"gift_num,omitempty"`
}

func (x *PuSendGiftMsg) Reset() {
	*x = PuSendGiftMsg{}
	if protoimpl.UnsafeEnabled {
		mi := &file_voiceroom_voiceroom_proto_msgTypes[72]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PuSendGiftMsg) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PuSendGiftMsg) ProtoMessage() {}

func (x *PuSendGiftMsg) ProtoReflect() protoreflect.Message {
	mi := &file_voiceroom_voiceroom_proto_msgTypes[72]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PuSendGiftMsg.ProtoReflect.Descriptor instead.
func (*PuSendGiftMsg) Descriptor() ([]byte, []int) {
	return file_voiceroom_voiceroom_proto_rawDescGZIP(), []int{72}
}

func (x *PuSendGiftMsg) GetSenderUid() string {
	if x != nil {
		return x.SenderUid
	}
	return ""
}

func (x *PuSendGiftMsg) GetTargetUid() string {
	if x != nil {
		return x.TargetUid
	}
	return ""
}

func (x *PuSendGiftMsg) GetGiftId() int32 {
	if x != nil {
		return x.GiftId
	}
	return 0
}

func (x *PuSendGiftMsg) GetGiftNum() int32 {
	if x != nil {
		return x.GiftNum
	}
	return 0
}

type SendEmojiReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	EmojiId   int32 `protobuf:"varint,1,opt,name=emoji_id,json=emojiId,proto3" json:"emoji_id,omitempty"`
	SeatIndex int32 `protobuf:"varint,2,opt,name=seat_index,json=seatIndex,proto3" json:"seat_index,omitempty"`
}

func (x *SendEmojiReq) Reset() {
	*x = SendEmojiReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_voiceroom_voiceroom_proto_msgTypes[73]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SendEmojiReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SendEmojiReq) ProtoMessage() {}

func (x *SendEmojiReq) ProtoReflect() protoreflect.Message {
	mi := &file_voiceroom_voiceroom_proto_msgTypes[73]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SendEmojiReq.ProtoReflect.Descriptor instead.
func (*SendEmojiReq) Descriptor() ([]byte, []int) {
	return file_voiceroom_voiceroom_proto_rawDescGZIP(), []int{73}
}

func (x *SendEmojiReq) GetEmojiId() int32 {
	if x != nil {
		return x.EmojiId
	}
	return 0
}

func (x *SendEmojiReq) GetSeatIndex() int32 {
	if x != nil {
		return x.SeatIndex
	}
	return 0
}

type SendEmojiRsp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Value int32 `protobuf:"varint,1,opt,name=value,proto3" json:"value,omitempty"` // 如果是骰子表情则是骰子的结果, 1-6, 其余表情该值为 0
}

func (x *SendEmojiRsp) Reset() {
	*x = SendEmojiRsp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_voiceroom_voiceroom_proto_msgTypes[74]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SendEmojiRsp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SendEmojiRsp) ProtoMessage() {}

func (x *SendEmojiRsp) ProtoReflect() protoreflect.Message {
	mi := &file_voiceroom_voiceroom_proto_msgTypes[74]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SendEmojiRsp.ProtoReflect.Descriptor instead.
func (*SendEmojiRsp) Descriptor() ([]byte, []int) {
	return file_voiceroom_voiceroom_proto_rawDescGZIP(), []int{74}
}

func (x *SendEmojiRsp) GetValue() int32 {
	if x != nil {
		return x.Value
	}
	return 0
}

type PuSendEmojiMsg struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SeatIndex int32 `protobuf:"varint,1,opt,name=seat_index,json=seatIndex,proto3" json:"seat_index,omitempty"`
	EmojiId   int32 `protobuf:"varint,2,opt,name=emoji_id,json=emojiId,proto3" json:"emoji_id,omitempty"`
	Value     int32 `protobuf:"varint,3,opt,name=value,proto3" json:"value,omitempty"` // 骰子表情随机数结果
}

func (x *PuSendEmojiMsg) Reset() {
	*x = PuSendEmojiMsg{}
	if protoimpl.UnsafeEnabled {
		mi := &file_voiceroom_voiceroom_proto_msgTypes[75]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PuSendEmojiMsg) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PuSendEmojiMsg) ProtoMessage() {}

func (x *PuSendEmojiMsg) ProtoReflect() protoreflect.Message {
	mi := &file_voiceroom_voiceroom_proto_msgTypes[75]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PuSendEmojiMsg.ProtoReflect.Descriptor instead.
func (*PuSendEmojiMsg) Descriptor() ([]byte, []int) {
	return file_voiceroom_voiceroom_proto_rawDescGZIP(), []int{75}
}

func (x *PuSendEmojiMsg) GetSeatIndex() int32 {
	if x != nil {
		return x.SeatIndex
	}
	return 0
}

func (x *PuSendEmojiMsg) GetEmojiId() int32 {
	if x != nil {
		return x.EmojiId
	}
	return 0
}

func (x *PuSendEmojiMsg) GetValue() int32 {
	if x != nil {
		return x.Value
	}
	return 0
}

type SeatKickReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Index int32 `protobuf:"varint,1,opt,name=index,proto3" json:"index,omitempty"`
}

func (x *SeatKickReq) Reset() {
	*x = SeatKickReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_voiceroom_voiceroom_proto_msgTypes[76]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SeatKickReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SeatKickReq) ProtoMessage() {}

func (x *SeatKickReq) ProtoReflect() protoreflect.Message {
	mi := &file_voiceroom_voiceroom_proto_msgTypes[76]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SeatKickReq.ProtoReflect.Descriptor instead.
func (*SeatKickReq) Descriptor() ([]byte, []int) {
	return file_voiceroom_voiceroom_proto_rawDescGZIP(), []int{76}
}

func (x *SeatKickReq) GetIndex() int32 {
	if x != nil {
		return x.Index
	}
	return 0
}

type SeatKickRsp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *SeatKickRsp) Reset() {
	*x = SeatKickRsp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_voiceroom_voiceroom_proto_msgTypes[77]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SeatKickRsp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SeatKickRsp) ProtoMessage() {}

func (x *SeatKickRsp) ProtoReflect() protoreflect.Message {
	mi := &file_voiceroom_voiceroom_proto_msgTypes[77]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SeatKickRsp.ProtoReflect.Descriptor instead.
func (*SeatKickRsp) Descriptor() ([]byte, []int) {
	return file_voiceroom_voiceroom_proto_rawDescGZIP(), []int{77}
}

type PuSeatKickMsg struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *PuSeatKickMsg) Reset() {
	*x = PuSeatKickMsg{}
	if protoimpl.UnsafeEnabled {
		mi := &file_voiceroom_voiceroom_proto_msgTypes[78]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PuSeatKickMsg) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PuSeatKickMsg) ProtoMessage() {}

func (x *PuSeatKickMsg) ProtoReflect() protoreflect.Message {
	mi := &file_voiceroom_voiceroom_proto_msgTypes[78]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PuSeatKickMsg.ProtoReflect.Descriptor instead.
func (*PuSeatKickMsg) Descriptor() ([]byte, []int) {
	return file_voiceroom_voiceroom_proto_rawDescGZIP(), []int{78}
}

// 邀请进房间
type RoomInviteReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TargetUid string `protobuf:"bytes,1,opt,name=target_uid,json=targetUid,proto3" json:"target_uid,omitempty"`
}

func (x *RoomInviteReq) Reset() {
	*x = RoomInviteReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_voiceroom_voiceroom_proto_msgTypes[79]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RoomInviteReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RoomInviteReq) ProtoMessage() {}

func (x *RoomInviteReq) ProtoReflect() protoreflect.Message {
	mi := &file_voiceroom_voiceroom_proto_msgTypes[79]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RoomInviteReq.ProtoReflect.Descriptor instead.
func (*RoomInviteReq) Descriptor() ([]byte, []int) {
	return file_voiceroom_voiceroom_proto_rawDescGZIP(), []int{79}
}

func (x *RoomInviteReq) GetTargetUid() string {
	if x != nil {
		return x.TargetUid
	}
	return ""
}

type RoomInviteRsp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *RoomInviteRsp) Reset() {
	*x = RoomInviteRsp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_voiceroom_voiceroom_proto_msgTypes[80]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RoomInviteRsp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RoomInviteRsp) ProtoMessage() {}

func (x *RoomInviteRsp) ProtoReflect() protoreflect.Message {
	mi := &file_voiceroom_voiceroom_proto_msgTypes[80]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RoomInviteRsp.ProtoReflect.Descriptor instead.
func (*RoomInviteRsp) Descriptor() ([]byte, []int) {
	return file_voiceroom_voiceroom_proto_rawDescGZIP(), []int{80}
}

type PuRoomInviteMsg struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	InviteUid string `protobuf:"bytes,1,opt,name=invite_uid,json=inviteUid,proto3" json:"invite_uid,omitempty"`
	Rid       int32  `protobuf:"varint,2,opt,name=rid,proto3" json:"rid,omitempty"`
}

func (x *PuRoomInviteMsg) Reset() {
	*x = PuRoomInviteMsg{}
	if protoimpl.UnsafeEnabled {
		mi := &file_voiceroom_voiceroom_proto_msgTypes[81]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PuRoomInviteMsg) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PuRoomInviteMsg) ProtoMessage() {}

func (x *PuRoomInviteMsg) ProtoReflect() protoreflect.Message {
	mi := &file_voiceroom_voiceroom_proto_msgTypes[81]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PuRoomInviteMsg.ProtoReflect.Descriptor instead.
func (*PuRoomInviteMsg) Descriptor() ([]byte, []int) {
	return file_voiceroom_voiceroom_proto_rawDescGZIP(), []int{81}
}

func (x *PuRoomInviteMsg) GetInviteUid() string {
	if x != nil {
		return x.InviteUid
	}
	return ""
}

func (x *PuRoomInviteMsg) GetRid() int32 {
	if x != nil {
		return x.Rid
	}
	return 0
}

type PuPlayMusicMsg struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Music *VoiceRoomMusicInfo `protobuf:"bytes,1,opt,name=music,proto3" json:"music,omitempty"`
}

func (x *PuPlayMusicMsg) Reset() {
	*x = PuPlayMusicMsg{}
	if protoimpl.UnsafeEnabled {
		mi := &file_voiceroom_voiceroom_proto_msgTypes[82]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PuPlayMusicMsg) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PuPlayMusicMsg) ProtoMessage() {}

func (x *PuPlayMusicMsg) ProtoReflect() protoreflect.Message {
	mi := &file_voiceroom_voiceroom_proto_msgTypes[82]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PuPlayMusicMsg.ProtoReflect.Descriptor instead.
func (*PuPlayMusicMsg) Descriptor() ([]byte, []int) {
	return file_voiceroom_voiceroom_proto_rawDescGZIP(), []int{82}
}

func (x *PuPlayMusicMsg) GetMusic() *VoiceRoomMusicInfo {
	if x != nil {
		return x.Music
	}
	return nil
}

var File_voiceroom_voiceroom_proto protoreflect.FileDescriptor

var file_voiceroom_voiceroom_proto_rawDesc = []byte{
	0x0a, 0x19, 0x76, 0x6f, 0x69, 0x63, 0x65, 0x72, 0x6f, 0x6f, 0x6d, 0x2f, 0x76, 0x6f, 0x69, 0x63,
	0x65, 0x72, 0x6f, 0x6f, 0x6d, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x09, 0x76, 0x6f, 0x69,
	0x63, 0x65, 0x72, 0x6f, 0x6f, 0x6d, 0x22, 0xfe, 0x02, 0x0a, 0x08, 0x72, 0x6f, 0x6f, 0x6d, 0x49,
	0x6e, 0x66, 0x6f, 0x12, 0x17, 0x0a, 0x07, 0x72, 0x6f, 0x6f, 0x6d, 0x5f, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x72, 0x6f, 0x6f, 0x6d, 0x49, 0x64, 0x12, 0x14, 0x0a, 0x05,
	0x6f, 0x77, 0x6e, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x6f, 0x77, 0x6e,
	0x65, 0x72, 0x12, 0x30, 0x0a, 0x07, 0x73, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x76, 0x6f, 0x69, 0x63, 0x65, 0x72, 0x6f, 0x6f, 0x6d, 0x2e,
	0x72, 0x6f, 0x6f, 0x6d, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x52, 0x07, 0x73, 0x65, 0x74,
	0x74, 0x69, 0x6e, 0x67, 0x12, 0x2f, 0x0a, 0x08, 0x73, 0x65, 0x61, 0x74, 0x4c, 0x69, 0x73, 0x74,
	0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x76, 0x6f, 0x69, 0x63, 0x65, 0x72, 0x6f,
	0x6f, 0x6d, 0x2e, 0x73, 0x65, 0x61, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x08, 0x73, 0x65, 0x61,
	0x74, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x21, 0x0a, 0x02, 0x70, 0x6b, 0x18, 0x06, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x11, 0x2e, 0x76, 0x6f, 0x69, 0x63, 0x65, 0x72, 0x6f, 0x6f, 0x6d, 0x2e, 0x70, 0x6b,
	0x49, 0x6e, 0x66, 0x6f, 0x52, 0x02, 0x70, 0x6b, 0x12, 0x1d, 0x0a, 0x0a, 0x62, 0x6c, 0x61, 0x63,
	0x6b, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x07, 0x20, 0x03, 0x28, 0x09, 0x52, 0x09, 0x62, 0x6c,
	0x61, 0x63, 0x6b, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x23, 0x0a, 0x0d, 0x6f, 0x6e, 0x6c, 0x69, 0x6e,
	0x65, 0x5f, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x18, 0x08, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0c,
	0x6f, 0x6e, 0x6c, 0x69, 0x6e, 0x65, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x12, 0x20, 0x0a, 0x0c,
	0x62, 0x61, 0x6e, 0x5f, 0x6d, 0x69, 0x63, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x09, 0x20, 0x03,
	0x28, 0x09, 0x52, 0x0a, 0x62, 0x61, 0x6e, 0x4d, 0x69, 0x63, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x22,
	0x0a, 0x0d, 0x62, 0x61, 0x6e, 0x5f, 0x63, 0x68, 0x61, 0x74, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x18,
	0x0a, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0b, 0x62, 0x61, 0x6e, 0x43, 0x68, 0x61, 0x74, 0x4c, 0x69,
	0x73, 0x74, 0x12, 0x33, 0x0a, 0x05, 0x6d, 0x75, 0x73, 0x69, 0x63, 0x18, 0x0b, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x1d, 0x2e, 0x76, 0x6f, 0x69, 0x63, 0x65, 0x72, 0x6f, 0x6f, 0x6d, 0x2e, 0x76, 0x6f,
	0x69, 0x63, 0x65, 0x52, 0x6f, 0x6f, 0x6d, 0x4d, 0x75, 0x73, 0x69, 0x63, 0x49, 0x6e, 0x66, 0x6f,
	0x52, 0x05, 0x6d, 0x75, 0x73, 0x69, 0x63, 0x22, 0xe6, 0x02, 0x0a, 0x12, 0x76, 0x6f, 0x69, 0x63,
	0x65, 0x52, 0x6f, 0x6f, 0x6d, 0x4d, 0x75, 0x73, 0x69, 0x63, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x0e,
	0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x14,
	0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74,
	0x69, 0x74, 0x6c, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x61, 0x72, 0x74, 0x69, 0x73, 0x74, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x61, 0x72, 0x74, 0x69, 0x73, 0x74, 0x12, 0x37, 0x0a, 0x06,
	0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1f, 0x2e, 0x76,
	0x6f, 0x69, 0x63, 0x65, 0x72, 0x6f, 0x6f, 0x6d, 0x2e, 0x76, 0x6f, 0x69, 0x63, 0x65, 0x52, 0x6f,
	0x6f, 0x6d, 0x4d, 0x75, 0x73, 0x69, 0x63, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x06, 0x73,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x6d, 0x75, 0x73, 0x69, 0x63, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x6d, 0x75, 0x73, 0x69, 0x63, 0x12, 0x24, 0x0a, 0x0d, 0x61,
	0x63, 0x63, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x69, 0x6d, 0x65, 0x6e, 0x74, 0x18, 0x06, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0d, 0x61, 0x63, 0x63, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x69, 0x6d, 0x65, 0x6e,
	0x74, 0x12, 0x25, 0x0a, 0x0e, 0x6d, 0x75, 0x73, 0x69, 0x63, 0x5f, 0x64, 0x75, 0x72, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x18, 0x07, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0d, 0x6d, 0x75, 0x73, 0x69, 0x63,
	0x44, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x35, 0x0a, 0x16, 0x61, 0x63, 0x63, 0x6f,
	0x6d, 0x70, 0x61, 0x6e, 0x69, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x64, 0x75, 0x72, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x18, 0x08, 0x20, 0x01, 0x28, 0x05, 0x52, 0x15, 0x61, 0x63, 0x63, 0x6f, 0x6d, 0x70,
	0x61, 0x6e, 0x69, 0x6d, 0x65, 0x6e, 0x74, 0x44, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12,
	0x1a, 0x0a, 0x08, 0x75, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x65, 0x72, 0x18, 0x09, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x08, 0x75, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x65, 0x72, 0x12, 0x23, 0x0a, 0x0d, 0x75,
	0x70, 0x6c, 0x6f, 0x61, 0x64, 0x65, 0x72, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x0a, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0c, 0x75, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65,
	0x22, 0xc2, 0x01, 0x0a, 0x0b, 0x72, 0x6f, 0x6f, 0x6d, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67,
	0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x61, 0x6e, 0x6e, 0x6f, 0x75, 0x6e, 0x63, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x61, 0x6e, 0x6e, 0x6f, 0x75, 0x6e, 0x63, 0x65,
	0x12, 0x15, 0x0a, 0x06, 0x74, 0x61, 0x67, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x05, 0x74, 0x61, 0x67, 0x49, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x61, 0x73, 0x73, 0x77,
	0x6f, 0x72, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x70, 0x61, 0x73, 0x73, 0x77,
	0x6f, 0x72, 0x64, 0x12, 0x13, 0x0a, 0x05, 0x62, 0x67, 0x5f, 0x69, 0x64, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x04, 0x62, 0x67, 0x49, 0x64, 0x12, 0x19, 0x0a, 0x08, 0x62, 0x61, 0x6e, 0x5f,
	0x63, 0x68, 0x61, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x62, 0x61, 0x6e, 0x43,
	0x68, 0x61, 0x74, 0x12, 0x20, 0x0a, 0x0c, 0x62, 0x61, 0x6e, 0x5f, 0x72, 0x65, 0x64, 0x5f, 0x70,
	0x61, 0x63, 0x6b, 0x18, 0x07, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0a, 0x62, 0x61, 0x6e, 0x52, 0x65,
	0x64, 0x50, 0x61, 0x63, 0x6b, 0x22, 0x5f, 0x0a, 0x08, 0x73, 0x65, 0x61, 0x74, 0x49, 0x6e, 0x66,
	0x6f, 0x12, 0x14, 0x0a, 0x05, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x05, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x12, 0x12, 0x0a, 0x04, 0x6c, 0x6f, 0x63, 0x6b, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x04, 0x6c, 0x6f, 0x63, 0x6b, 0x12, 0x10, 0x0a, 0x03, 0x75,
	0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x75, 0x69, 0x64, 0x12, 0x17, 0x0a,
	0x07, 0x62, 0x61, 0x6e, 0x5f, 0x6d, 0x69, 0x63, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06,
	0x62, 0x61, 0x6e, 0x4d, 0x69, 0x63, 0x22, 0x91, 0x02, 0x0a, 0x06, 0x70, 0x6b, 0x49, 0x6e, 0x66,
	0x6f, 0x12, 0x12, 0x0a, 0x04, 0x6f, 0x70, 0x65, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52,
	0x04, 0x6f, 0x70, 0x65, 0x6e, 0x12, 0x1d, 0x0a, 0x0a, 0x76, 0x6f, 0x74, 0x65, 0x64, 0x5f, 0x75,
	0x73, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x76, 0x6f, 0x74, 0x65, 0x64,
	0x55, 0x73, 0x65, 0x72, 0x12, 0x1d, 0x0a, 0x0a, 0x73, 0x74, 0x61, 0x72, 0x74, 0x5f, 0x74, 0x69,
	0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x73, 0x74, 0x61, 0x72, 0x74, 0x54,
	0x69, 0x6d, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x70, 0x65, 0x72, 0x69, 0x6f, 0x64, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x06, 0x70, 0x65, 0x72, 0x69, 0x6f, 0x64, 0x12, 0x19, 0x0a, 0x08, 0x6c,
	0x65, 0x66, 0x74, 0x5f, 0x75, 0x69, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6c,
	0x65, 0x66, 0x74, 0x55, 0x69, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x6c, 0x65, 0x66, 0x74, 0x5f, 0x73,
	0x63, 0x6f, 0x72, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x6c, 0x65, 0x66, 0x74,
	0x53, 0x63, 0x6f, 0x72, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x72, 0x69, 0x67, 0x68, 0x74, 0x5f, 0x75,
	0x69, 0x64, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x72, 0x69, 0x67, 0x68, 0x74, 0x55,
	0x69, 0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x72, 0x69, 0x67, 0x68, 0x74, 0x5f, 0x73, 0x63, 0x6f, 0x72,
	0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x72, 0x69, 0x67, 0x68, 0x74, 0x53, 0x63,
	0x6f, 0x72, 0x65, 0x12, 0x25, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28,
	0x0e, 0x32, 0x11, 0x2e, 0x76, 0x6f, 0x69, 0x63, 0x65, 0x72, 0x6f, 0x6f, 0x6d, 0x2e, 0x50, 0x6b,
	0x54, 0x79, 0x70, 0x65, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x22, 0x44, 0x0a, 0x08, 0x6c, 0x6f,
	0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1c, 0x0a, 0x09, 0x6c, 0x6f, 0x6e, 0x67, 0x69, 0x74,
	0x75, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x01, 0x52, 0x09, 0x6c, 0x6f, 0x6e, 0x67, 0x69,
	0x74, 0x75, 0x64, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x6c, 0x61, 0x74, 0x69, 0x74, 0x75, 0x64, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x01, 0x52, 0x08, 0x6c, 0x61, 0x74, 0x69, 0x74, 0x75, 0x64, 0x65,
	0x22, 0x98, 0x01, 0x0a, 0x0a, 0x4e, 0x65, 0x77, 0x52, 0x6f, 0x6f, 0x6d, 0x52, 0x65, 0x71, 0x12,
	0x2c, 0x0a, 0x05, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16,
	0x2e, 0x76, 0x6f, 0x69, 0x63, 0x65, 0x72, 0x6f, 0x6f, 0x6d, 0x2e, 0x72, 0x6f, 0x6f, 0x6d, 0x53,
	0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x52, 0x05, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x12, 0x25, 0x0a,
	0x03, 0x70, 0x6f, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x76, 0x6f, 0x69,
	0x63, 0x65, 0x72, 0x6f, 0x6f, 0x6d, 0x2e, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52,
	0x03, 0x70, 0x6f, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x68, 0x6f, 0x77, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x04, 0x73, 0x68, 0x6f, 0x77, 0x12, 0x21, 0x0a, 0x0c, 0x6d, 0x6f, 0x64, 0x65,
	0x5f, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0b,
	0x6d, 0x6f, 0x64, 0x65, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x22, 0x5a, 0x0a, 0x0a, 0x4e,
	0x65, 0x77, 0x52, 0x6f, 0x6f, 0x6d, 0x52, 0x73, 0x70, 0x12, 0x27, 0x0a, 0x04, 0x72, 0x6f, 0x6f,
	0x6d, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x76, 0x6f, 0x69, 0x63, 0x65, 0x72,
	0x6f, 0x6f, 0x6d, 0x2e, 0x72, 0x6f, 0x6f, 0x6d, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x04, 0x72, 0x6f,
	0x6f, 0x6d, 0x12, 0x23, 0x0a, 0x0d, 0x62, 0x61, 0x6e, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74,
	0x61, 0x6d, 0x70, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0c, 0x62, 0x61, 0x6e, 0x54, 0x69,
	0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x22, 0x0e, 0x0a, 0x0c, 0x4d, 0x79, 0x50, 0x72, 0x65,
	0x52, 0x6f, 0x6f, 0x6d, 0x52, 0x65, 0x71, 0x22, 0x40, 0x0a, 0x0c, 0x4d, 0x79, 0x50, 0x72, 0x65,
	0x52, 0x6f, 0x6f, 0x6d, 0x52, 0x73, 0x70, 0x12, 0x30, 0x0a, 0x07, 0x73, 0x65, 0x74, 0x74, 0x69,
	0x6e, 0x67, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x76, 0x6f, 0x69, 0x63, 0x65,
	0x72, 0x6f, 0x6f, 0x6d, 0x2e, 0x72, 0x6f, 0x6f, 0x6d, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67,
	0x52, 0x07, 0x73, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x22, 0xe0, 0x01, 0x0a, 0x0c, 0x45, 0x6e,
	0x74, 0x65, 0x72, 0x52, 0x6f, 0x6f, 0x6d, 0x52, 0x65, 0x71, 0x12, 0x24, 0x0a, 0x0e, 0x74, 0x61,
	0x72, 0x67, 0x65, 0x74, 0x5f, 0x72, 0x6f, 0x6f, 0x6d, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x0c, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x52, 0x6f, 0x6f, 0x6d, 0x49, 0x64,
	0x12, 0x1a, 0x0a, 0x08, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x08, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x12, 0x25, 0x0a, 0x03,
	0x70, 0x6f, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x76, 0x6f, 0x69, 0x63,
	0x65, 0x72, 0x6f, 0x6f, 0x6d, 0x2e, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x03,
	0x70, 0x6f, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x68, 0x6f, 0x77, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x04, 0x73, 0x68, 0x6f, 0x77, 0x12, 0x21, 0x0a, 0x0c, 0x6d, 0x6f, 0x64, 0x65, 0x5f,
	0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0b, 0x6d,
	0x6f, 0x64, 0x65, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x18, 0x0a, 0x07, 0x72, 0x65,
	0x63, 0x6f, 0x76, 0x65, 0x72, 0x18, 0x06, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x72, 0x65, 0x63,
	0x6f, 0x76, 0x65, 0x72, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x18, 0x07,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x22, 0x5c, 0x0a, 0x0c,
	0x45, 0x6e, 0x74, 0x65, 0x72, 0x52, 0x6f, 0x6f, 0x6d, 0x52, 0x73, 0x70, 0x12, 0x23, 0x0a, 0x0d,
	0x6e, 0x65, 0x65, 0x64, 0x5f, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x08, 0x52, 0x0c, 0x6e, 0x65, 0x65, 0x64, 0x50, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72,
	0x64, 0x12, 0x27, 0x0a, 0x04, 0x72, 0x6f, 0x6f, 0x6d, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x13, 0x2e, 0x76, 0x6f, 0x69, 0x63, 0x65, 0x72, 0x6f, 0x6f, 0x6d, 0x2e, 0x72, 0x6f, 0x6f, 0x6d,
	0x49, 0x6e, 0x66, 0x6f, 0x52, 0x04, 0x72, 0x6f, 0x6f, 0x6d, 0x22, 0x44, 0x0a, 0x10, 0x55, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x71, 0x12, 0x30,
	0x0a, 0x07, 0x73, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x16, 0x2e, 0x76, 0x6f, 0x69, 0x63, 0x65, 0x72, 0x6f, 0x6f, 0x6d, 0x2e, 0x72, 0x6f, 0x6f, 0x6d,
	0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x52, 0x07, 0x73, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67,
	0x22, 0x12, 0x0a, 0x10, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e,
	0x67, 0x52, 0x73, 0x70, 0x22, 0x46, 0x0a, 0x12, 0x50, 0x75, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x4d, 0x73, 0x67, 0x12, 0x30, 0x0a, 0x07, 0x73, 0x65,
	0x74, 0x74, 0x69, 0x6e, 0x67, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x76, 0x6f,
	0x69, 0x63, 0x65, 0x72, 0x6f, 0x6f, 0x6d, 0x2e, 0x72, 0x6f, 0x6f, 0x6d, 0x53, 0x65, 0x74, 0x74,
	0x69, 0x6e, 0x67, 0x52, 0x07, 0x73, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x22, 0x0d, 0x0a, 0x0b,
	0x45, 0x78, 0x69, 0x74, 0x52, 0x6f, 0x6f, 0x6d, 0x52, 0x65, 0x71, 0x22, 0x0d, 0x0a, 0x0b, 0x45,
	0x78, 0x69, 0x74, 0x52, 0x6f, 0x6f, 0x6d, 0x52, 0x73, 0x70, 0x22, 0x3a, 0x0a, 0x10, 0x47, 0x65,
	0x74, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x12, 0x12,
	0x0a, 0x04, 0x70, 0x61, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x70, 0x61,
	0x67, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x04, 0x73, 0x69, 0x7a, 0x65, 0x22, 0x36, 0x0a, 0x0e, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72,
	0x4c, 0x69, 0x73, 0x74, 0x49, 0x74, 0x65, 0x6d, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x75, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x68,
	0x6f, 0x77, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x73, 0x68, 0x6f, 0x77, 0x22, 0x47,
	0x0a, 0x10, 0x47, 0x65, 0x74, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x4c, 0x69, 0x73, 0x74, 0x52,
	0x73, 0x70, 0x12, 0x33, 0x0a, 0x07, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x73, 0x18, 0x01, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x76, 0x6f, 0x69, 0x63, 0x65, 0x72, 0x6f, 0x6f, 0x6d, 0x2e,
	0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x4c, 0x69, 0x73, 0x74, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x07,
	0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x73, 0x22, 0x48, 0x0a, 0x0a, 0x4c, 0x6f, 0x74, 0x74, 0x65,
	0x72, 0x79, 0x52, 0x65, 0x71, 0x12, 0x28, 0x0a, 0x03, 0x6f, 0x70, 0x74, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0e, 0x32, 0x16, 0x2e, 0x76, 0x6f, 0x69, 0x63, 0x65, 0x72, 0x6f, 0x6f, 0x6d, 0x2e, 0x6c,
	0x6f, 0x74, 0x74, 0x65, 0x72, 0x79, 0x54, 0x79, 0x70, 0x65, 0x52, 0x03, 0x6f, 0x70, 0x74, 0x12,
	0x10, 0x0a, 0x03, 0x6e, 0x75, 0x6d, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x03, 0x6e, 0x75,
	0x6d, 0x22, 0x0c, 0x0a, 0x0a, 0x4c, 0x6f, 0x74, 0x74, 0x65, 0x72, 0x79, 0x52, 0x73, 0x70, 0x22,
	0x50, 0x0a, 0x12, 0x50, 0x75, 0x4c, 0x6f, 0x74, 0x74, 0x65, 0x72, 0x79, 0x52, 0x65, 0x73, 0x75,
	0x6c, 0x74, 0x4d, 0x73, 0x67, 0x12, 0x1b, 0x0a, 0x09, 0x6a, 0x6f, 0x69, 0x6e, 0x5f, 0x75, 0x69,
	0x64, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x08, 0x6a, 0x6f, 0x69, 0x6e, 0x55, 0x69,
	0x64, 0x73, 0x12, 0x1d, 0x0a, 0x0a, 0x6c, 0x75, 0x63, 0x6b, 0x79, 0x5f, 0x75, 0x69, 0x64, 0x73,
	0x18, 0x02, 0x20, 0x03, 0x28, 0x09, 0x52, 0x09, 0x6c, 0x75, 0x63, 0x6b, 0x79, 0x55, 0x69, 0x64,
	0x73, 0x22, 0x8e, 0x01, 0x0a, 0x0c, 0x49, 0x6e, 0x6e, 0x65, 0x72, 0x43, 0x61, 0x6c, 0x6c, 0x52,
	0x65, 0x71, 0x12, 0x35, 0x0a, 0x09, 0x63, 0x61, 0x6c, 0x6c, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x18, 0x2e, 0x76, 0x6f, 0x69, 0x63, 0x65, 0x72, 0x6f, 0x6f,
	0x6d, 0x2e, 0x69, 0x6e, 0x6e, 0x65, 0x72, 0x43, 0x61, 0x6c, 0x6c, 0x54, 0x79, 0x70, 0x65, 0x52,
	0x08, 0x63, 0x61, 0x6c, 0x6c, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x43, 0x61, 0x6c,
	0x6c, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x43, 0x61,
	0x6c, 0x6c, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x17, 0x0a, 0x07, 0x72, 0x6f, 0x6f, 0x6d, 0x5f,
	0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x72, 0x6f, 0x6f, 0x6d, 0x49, 0x64,
	0x12, 0x10, 0x0a, 0x03, 0x75, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x75,
	0x69, 0x64, 0x22, 0x6b, 0x0a, 0x0c, 0x49, 0x6e, 0x6e, 0x65, 0x72, 0x43, 0x61, 0x6c, 0x6c, 0x52,
	0x73, 0x70, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x6d, 0x73, 0x67, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x03, 0x6d, 0x73, 0x67, 0x12, 0x35, 0x0a, 0x09, 0x72, 0x6f, 0x6f, 0x6d,
	0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x76, 0x6f,
	0x69, 0x63, 0x65, 0x72, 0x6f, 0x6f, 0x6d, 0x2e, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x52, 0x6f, 0x6f,
	0x6d, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x08, 0x72, 0x6f, 0x6f, 0x6d, 0x49, 0x6e, 0x66, 0x6f, 0x22,
	0xd5, 0x01, 0x0a, 0x0d, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x52, 0x6f, 0x6f, 0x6d, 0x49, 0x6e, 0x66,
	0x6f, 0x12, 0x17, 0x0a, 0x07, 0x72, 0x6f, 0x6f, 0x6d, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x06, 0x72, 0x6f, 0x6f, 0x6d, 0x49, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x72, 0x6f,
	0x6f, 0x6d, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x72,
	0x6f, 0x6f, 0x6d, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x23, 0x0a, 0x0d, 0x72, 0x6f, 0x6f, 0x6d, 0x5f,
	0x61, 0x6e, 0x6e, 0x6f, 0x75, 0x6e, 0x63, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c,
	0x72, 0x6f, 0x6f, 0x6d, 0x41, 0x6e, 0x6e, 0x6f, 0x75, 0x6e, 0x63, 0x65, 0x12, 0x1e, 0x0a, 0x0b,
	0x72, 0x6f, 0x6f, 0x6d, 0x5f, 0x74, 0x61, 0x67, 0x5f, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x09, 0x72, 0x6f, 0x6f, 0x6d, 0x54, 0x61, 0x67, 0x49, 0x64, 0x12, 0x23, 0x0a, 0x0d,
	0x6f, 0x6e, 0x6c, 0x69, 0x6e, 0x65, 0x5f, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x0c, 0x6f, 0x6e, 0x6c, 0x69, 0x6e, 0x65, 0x50, 0x6c, 0x61, 0x79, 0x65,
	0x72, 0x12, 0x10, 0x0a, 0x03, 0x68, 0x6f, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x03, 0x52, 0x03,
	0x68, 0x6f, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x75, 0x69, 0x64, 0x73, 0x18, 0x07, 0x20, 0x03, 0x28,
	0x09, 0x52, 0x04, 0x75, 0x69, 0x64, 0x73, 0x22, 0x38, 0x0a, 0x10, 0x70, 0x6c, 0x61, 0x79, 0x65,
	0x72, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x49, 0x74, 0x65, 0x6d, 0x12, 0x10, 0x0a, 0x03, 0x75,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x75, 0x69, 0x64, 0x12, 0x12, 0x0a,
	0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x74, 0x79, 0x70,
	0x65, 0x22, 0x76, 0x0a, 0x11, 0x50, 0x75, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x43, 0x68, 0x61,
	0x6e, 0x67, 0x65, 0x4d, 0x73, 0x67, 0x12, 0x3c, 0x0a, 0x0b, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65,
	0x5f, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x76, 0x6f,
	0x69, 0x63, 0x65, 0x72, 0x6f, 0x6f, 0x6d, 0x2e, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x43, 0x68,
	0x61, 0x6e, 0x67, 0x65, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x0a, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65,
	0x4c, 0x69, 0x73, 0x74, 0x12, 0x23, 0x0a, 0x0d, 0x6f, 0x6e, 0x6c, 0x69, 0x6e, 0x65, 0x5f, 0x70,
	0x6c, 0x61, 0x79, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0c, 0x6f, 0x6e, 0x6c,
	0x69, 0x6e, 0x65, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x22, 0x42, 0x0a, 0x0f, 0x50, 0x75, 0x53,
	0x65, 0x61, 0x74, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x4d, 0x73, 0x67, 0x12, 0x2f, 0x0a, 0x08,
	0x73, 0x65, 0x61, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x13,
	0x2e, 0x76, 0x6f, 0x69, 0x63, 0x65, 0x72, 0x6f, 0x6f, 0x6d, 0x2e, 0x73, 0x65, 0x61, 0x74, 0x49,
	0x6e, 0x66, 0x6f, 0x52, 0x08, 0x73, 0x65, 0x61, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x22, 0x35, 0x0a,
	0x0b, 0x4c, 0x6f, 0x63, 0x6b, 0x53, 0x65, 0x61, 0x74, 0x52, 0x65, 0x71, 0x12, 0x10, 0x0a, 0x03,
	0x6f, 0x70, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x03, 0x6f, 0x70, 0x74, 0x12, 0x14,
	0x0a, 0x05, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x69,
	0x6e, 0x64, 0x65, 0x78, 0x22, 0x0d, 0x0a, 0x0b, 0x4c, 0x6f, 0x63, 0x6b, 0x53, 0x65, 0x61, 0x74,
	0x52, 0x73, 0x70, 0x22, 0x61, 0x0a, 0x10, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x4d, 0x61, 0x6e,
	0x61, 0x67, 0x65, 0x72, 0x52, 0x65, 0x71, 0x12, 0x1d, 0x0a, 0x0a, 0x74, 0x61, 0x72, 0x67, 0x65,
	0x74, 0x5f, 0x75, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x74, 0x61, 0x72,
	0x67, 0x65, 0x74, 0x55, 0x69, 0x64, 0x12, 0x2e, 0x0a, 0x03, 0x6f, 0x70, 0x74, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0e, 0x32, 0x1c, 0x2e, 0x76, 0x6f, 0x69, 0x63, 0x65, 0x72, 0x6f, 0x6f, 0x6d, 0x2e,
	0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x4d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x54, 0x79, 0x70,
	0x65, 0x52, 0x03, 0x6f, 0x70, 0x74, 0x22, 0x12, 0x0a, 0x10, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72,
	0x4d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x52, 0x73, 0x70, 0x22, 0x44, 0x0a, 0x0d, 0x53, 0x65,
	0x61, 0x74, 0x49, 0x6e, 0x76, 0x69, 0x74, 0x65, 0x52, 0x65, 0x71, 0x12, 0x1d, 0x0a, 0x0a, 0x74,
	0x61, 0x72, 0x67, 0x65, 0x74, 0x5f, 0x75, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x09, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x55, 0x69, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x69, 0x6e,
	0x64, 0x65, 0x78, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x69, 0x6e, 0x64, 0x65, 0x78,
	0x22, 0x0f, 0x0a, 0x0d, 0x53, 0x65, 0x61, 0x74, 0x49, 0x6e, 0x76, 0x69, 0x74, 0x65, 0x52, 0x73,
	0x70, 0x22, 0x30, 0x0a, 0x0f, 0x50, 0x75, 0x53, 0x65, 0x61, 0x74, 0x49, 0x6e, 0x76, 0x69, 0x74,
	0x65, 0x4d, 0x73, 0x67, 0x12, 0x1d, 0x0a, 0x0a, 0x73, 0x65, 0x61, 0x74, 0x5f, 0x69, 0x6e, 0x64,
	0x65, 0x78, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x73, 0x65, 0x61, 0x74, 0x49, 0x6e,
	0x64, 0x65, 0x78, 0x22, 0x61, 0x0a, 0x13, 0x48, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x53, 0x65, 0x61,
	0x74, 0x49, 0x6e, 0x76, 0x69, 0x74, 0x65, 0x52, 0x65, 0x71, 0x12, 0x10, 0x0a, 0x03, 0x6f, 0x70,
	0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x03, 0x6f, 0x70, 0x74, 0x12, 0x19, 0x0a, 0x08,
	0x6d, 0x69, 0x63, 0x5f, 0x6f, 0x70, 0x65, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07,
	0x6d, 0x69, 0x63, 0x4f, 0x70, 0x65, 0x6e, 0x12, 0x1d, 0x0a, 0x0a, 0x73, 0x65, 0x61, 0x74, 0x5f,
	0x69, 0x6e, 0x64, 0x65, 0x78, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x73, 0x65, 0x61,
	0x74, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x22, 0x15, 0x0a, 0x13, 0x48, 0x61, 0x6e, 0x64, 0x6c, 0x65,
	0x53, 0x65, 0x61, 0x74, 0x49, 0x6e, 0x76, 0x69, 0x74, 0x65, 0x52, 0x73, 0x70, 0x22, 0x4f, 0x0a,
	0x0a, 0x55, 0x73, 0x65, 0x53, 0x65, 0x61, 0x74, 0x52, 0x65, 0x71, 0x12, 0x10, 0x0a, 0x03, 0x6f,
	0x70, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x03, 0x6f, 0x70, 0x74, 0x12, 0x14, 0x0a,
	0x05, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x69, 0x6e,
	0x64, 0x65, 0x78, 0x12, 0x19, 0x0a, 0x08, 0x6d, 0x69, 0x63, 0x5f, 0x6f, 0x70, 0x65, 0x6e, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x6d, 0x69, 0x63, 0x4f, 0x70, 0x65, 0x6e, 0x22, 0x0c,
	0x0a, 0x0a, 0x55, 0x73, 0x65, 0x53, 0x65, 0x61, 0x74, 0x52, 0x73, 0x70, 0x22, 0x10, 0x0a, 0x0e,
	0x50, 0x75, 0x52, 0x6f, 0x6f, 0x6d, 0x43, 0x6c, 0x6f, 0x73, 0x65, 0x4d, 0x73, 0x67, 0x22, 0x1d,
	0x0a, 0x09, 0x4d, 0x69, 0x63, 0x4f, 0x70, 0x74, 0x52, 0x65, 0x71, 0x12, 0x10, 0x0a, 0x03, 0x6f,
	0x70, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x03, 0x6f, 0x70, 0x74, 0x22, 0x0b, 0x0a,
	0x09, 0x4d, 0x69, 0x63, 0x4f, 0x70, 0x74, 0x52, 0x73, 0x70, 0x22, 0x7a, 0x0a, 0x0e, 0x53, 0x65,
	0x6e, 0x64, 0x52, 0x65, 0x64, 0x50, 0x61, 0x63, 0x6b, 0x52, 0x65, 0x71, 0x12, 0x17, 0x0a, 0x07,
	0x70, 0x72, 0x6f, 0x70, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x70,
	0x72, 0x6f, 0x70, 0x49, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x12, 0x1d, 0x0a,
	0x0a, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x5f, 0x6e, 0x75, 0x6d, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x09, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x4e, 0x75, 0x6d, 0x12, 0x18, 0x0a, 0x07,
	0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x22, 0x10, 0x0a, 0x0e, 0x53, 0x65, 0x6e, 0x64, 0x52, 0x65,
	0x64, 0x50, 0x61, 0x63, 0x6b, 0x52, 0x73, 0x70, 0x22, 0x88, 0x01, 0x0a, 0x0c, 0x50, 0x75, 0x52,
	0x65, 0x64, 0x50, 0x61, 0x63, 0x6b, 0x4d, 0x73, 0x67, 0x12, 0x1d, 0x0a, 0x0a, 0x73, 0x65, 0x6e,
	0x64, 0x65, 0x72, 0x5f, 0x75, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x73,
	0x65, 0x6e, 0x64, 0x65, 0x72, 0x55, 0x69, 0x64, 0x12, 0x1e, 0x0a, 0x0b, 0x72, 0x65, 0x64, 0x5f,
	0x70, 0x61, 0x63, 0x6b, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x72,
	0x65, 0x64, 0x50, 0x61, 0x63, 0x6b, 0x49, 0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x65, 0x78, 0x70, 0x69,
	0x72, 0x65, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x65,
	0x78, 0x70, 0x69, 0x72, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x22, 0xcb, 0x01, 0x0a, 0x0b, 0x75, 0x73, 0x65, 0x72, 0x47, 0x65, 0x6f, 0x49,
	0x6e, 0x66, 0x6f, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x03, 0x75, 0x69, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x67, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x67, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x12, 0x1a, 0x0a,
	0x08, 0x6e, 0x69, 0x63, 0x6b, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x08, 0x6e, 0x69, 0x63, 0x6b, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x61, 0x76, 0x61,
	0x74, 0x61, 0x72, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x61, 0x76, 0x61, 0x74, 0x61,
	0x72, 0x12, 0x15, 0x0a, 0x06, 0x62, 0x6f, 0x78, 0x5f, 0x69, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x05, 0x62, 0x6f, 0x78, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x68, 0x6f, 0x77,
	0x18, 0x06, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x73, 0x68, 0x6f, 0x77, 0x12, 0x1a, 0x0a, 0x08,
	0x64, 0x69, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08,
	0x64, 0x69, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x12, 0x17, 0x0a, 0x07, 0x72, 0x6f, 0x6f, 0x6d,
	0x5f, 0x69, 0x64, 0x18, 0x08, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x72, 0x6f, 0x6f, 0x6d, 0x49,
	0x64, 0x22, 0x35, 0x0a, 0x0c, 0x47, 0x65, 0x74, 0x4e, 0x65, 0x61, 0x72, 0x62, 0x79, 0x52, 0x65,
	0x71, 0x12, 0x25, 0x0a, 0x03, 0x70, 0x6f, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13,
	0x2e, 0x76, 0x6f, 0x69, 0x63, 0x65, 0x72, 0x6f, 0x6f, 0x6d, 0x2e, 0x6c, 0x6f, 0x63, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x52, 0x03, 0x70, 0x6f, 0x73, 0x22, 0x3c, 0x0a, 0x0c, 0x47, 0x65, 0x74, 0x4e,
	0x65, 0x61, 0x72, 0x62, 0x79, 0x52, 0x73, 0x70, 0x12, 0x2c, 0x0a, 0x05, 0x75, 0x73, 0x65, 0x72,
	0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x76, 0x6f, 0x69, 0x63, 0x65, 0x72,
	0x6f, 0x6f, 0x6d, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x47, 0x65, 0x6f, 0x49, 0x6e, 0x66, 0x6f, 0x52,
	0x05, 0x75, 0x73, 0x65, 0x72, 0x73, 0x22, 0x76, 0x0a, 0x0e, 0x47, 0x65, 0x74, 0x52, 0x6f, 0x6f,
	0x6d, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x12, 0x15, 0x0a, 0x06, 0x74, 0x61, 0x67, 0x5f,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x74, 0x61, 0x67, 0x49, 0x64, 0x12,
	0x12, 0x0a, 0x04, 0x70, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x70,
	0x61, 0x67, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x04, 0x73, 0x69, 0x7a, 0x65, 0x12, 0x25, 0x0a, 0x03, 0x70, 0x6f, 0x73, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x76, 0x6f, 0x69, 0x63, 0x65, 0x72, 0x6f, 0x6f, 0x6d,
	0x2e, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x03, 0x70, 0x6f, 0x73, 0x22, 0xce,
	0x02, 0x0a, 0x0c, 0x52, 0x6f, 0x6f, 0x6d, 0x4c, 0x69, 0x73, 0x74, 0x49, 0x74, 0x65, 0x6d, 0x12,
	0x17, 0x0a, 0x07, 0x72, 0x6f, 0x6f, 0x6d, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x06, 0x72, 0x6f, 0x6f, 0x6d, 0x49, 0x64, 0x12, 0x15, 0x0a, 0x06, 0x74, 0x61, 0x67, 0x5f,
	0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x74, 0x61, 0x67, 0x49, 0x64, 0x12,
	0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e,
	0x61, 0x6d, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x6e, 0x69, 0x63, 0x6b, 0x6e, 0x61, 0x6d, 0x65, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6e, 0x69, 0x63, 0x6b, 0x6e, 0x61, 0x6d, 0x65, 0x12,
	0x16, 0x0a, 0x06, 0x67, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x06, 0x67, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x12, 0x16, 0x0a, 0x06, 0x61, 0x76, 0x61, 0x74, 0x61,
	0x72, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x61, 0x76, 0x61, 0x74, 0x61, 0x72, 0x12,
	0x15, 0x0a, 0x06, 0x62, 0x6f, 0x78, 0x5f, 0x69, 0x64, 0x18, 0x07, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x05, 0x62, 0x6f, 0x78, 0x49, 0x64, 0x12, 0x21, 0x0a, 0x0c, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x5f,
	0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x18, 0x08, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0b, 0x74, 0x6f,
	0x74, 0x61, 0x6c, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x12, 0x1d, 0x0a, 0x0a, 0x68, 0x61, 0x73,
	0x5f, 0x66, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x18, 0x09, 0x20, 0x01, 0x28, 0x08, 0x52, 0x09, 0x68,
	0x61, 0x73, 0x46, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x12, 0x21, 0x0a, 0x0c, 0x6d, 0x69, 0x6e, 0x5f,
	0x64, 0x69, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0b,
	0x6d, 0x69, 0x6e, 0x44, 0x69, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x12, 0x17, 0x0a, 0x07, 0x69,
	0x6e, 0x5f, 0x74, 0x6f, 0x70, 0x6b, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x69, 0x6e,
	0x54, 0x6f, 0x70, 0x6b, 0x12, 0x19, 0x0a, 0x08, 0x6f, 0x77, 0x6e, 0x65, 0x72, 0x5f, 0x69, 0x64,
	0x18, 0x0c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6f, 0x77, 0x6e, 0x65, 0x72, 0x49, 0x64, 0x22,
	0x55, 0x0a, 0x0e, 0x47, 0x65, 0x74, 0x52, 0x6f, 0x6f, 0x6d, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x73,
	0x70, 0x12, 0x2d, 0x0a, 0x05, 0x72, 0x6f, 0x6f, 0x6d, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x17, 0x2e, 0x76, 0x6f, 0x69, 0x63, 0x65, 0x72, 0x6f, 0x6f, 0x6d, 0x2e, 0x52, 0x6f, 0x6f,
	0x6d, 0x4c, 0x69, 0x73, 0x74, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x05, 0x72, 0x6f, 0x6f, 0x6d, 0x73,
	0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x22, 0x46, 0x0a, 0x0d, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68,
	0x52, 0x6f, 0x6f, 0x6d, 0x52, 0x65, 0x71, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x25, 0x0a, 0x03, 0x70, 0x6f, 0x73, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x76, 0x6f, 0x69, 0x63, 0x65, 0x72, 0x6f, 0x6f, 0x6d,
	0x2e, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x03, 0x70, 0x6f, 0x73, 0x22, 0x39,
	0x0a, 0x0d, 0x74, 0x6f, 0x70, 0x53, 0x68, 0x6f, 0x77, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x12,
	0x10, 0x0a, 0x03, 0x75, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x75, 0x69,
	0x64, 0x12, 0x16, 0x0a, 0x06, 0x61, 0x76, 0x61, 0x74, 0x61, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x06, 0x61, 0x76, 0x61, 0x74, 0x61, 0x72, 0x22, 0xc6, 0x03, 0x0a, 0x0d, 0x53, 0x65,
	0x61, 0x72, 0x63, 0x68, 0x52, 0x6f, 0x6f, 0x6d, 0x52, 0x73, 0x70, 0x12, 0x17, 0x0a, 0x07, 0x72,
	0x6f, 0x6f, 0x6d, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x72, 0x6f,
	0x6f, 0x6d, 0x49, 0x64, 0x12, 0x15, 0x0a, 0x06, 0x74, 0x61, 0x67, 0x5f, 0x69, 0x64, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x74, 0x61, 0x67, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e,
	0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12,
	0x1a, 0x0a, 0x08, 0x6e, 0x69, 0x63, 0x6b, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x08, 0x6e, 0x69, 0x63, 0x6b, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x67,
	0x65, 0x6e, 0x64, 0x65, 0x72, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x67, 0x65, 0x6e,
	0x64, 0x65, 0x72, 0x12, 0x16, 0x0a, 0x06, 0x61, 0x76, 0x61, 0x74, 0x61, 0x72, 0x18, 0x06, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x06, 0x61, 0x76, 0x61, 0x74, 0x61, 0x72, 0x12, 0x15, 0x0a, 0x06, 0x62,
	0x6f, 0x78, 0x5f, 0x69, 0x64, 0x18, 0x07, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x62, 0x6f, 0x78,
	0x49, 0x64, 0x12, 0x21, 0x0a, 0x0c, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x5f, 0x70, 0x6c, 0x61, 0x79,
	0x65, 0x72, 0x18, 0x08, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0b, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x50,
	0x6c, 0x61, 0x79, 0x65, 0x72, 0x12, 0x1d, 0x0a, 0x0a, 0x68, 0x61, 0x73, 0x5f, 0x66, 0x72, 0x69,
	0x65, 0x6e, 0x64, 0x18, 0x09, 0x20, 0x01, 0x28, 0x08, 0x52, 0x09, 0x68, 0x61, 0x73, 0x46, 0x72,
	0x69, 0x65, 0x6e, 0x64, 0x12, 0x21, 0x0a, 0x0c, 0x6d, 0x69, 0x6e, 0x5f, 0x64, 0x69, 0x73, 0x74,
	0x61, 0x6e, 0x63, 0x65, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0b, 0x6d, 0x69, 0x6e, 0x44,
	0x69, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x12, 0x17, 0x0a, 0x07, 0x69, 0x6e, 0x5f, 0x74, 0x6f,
	0x70, 0x6b, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x69, 0x6e, 0x54, 0x6f, 0x70, 0x6b,
	0x12, 0x19, 0x0a, 0x08, 0x6f, 0x77, 0x6e, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x0c, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x07, 0x6f, 0x77, 0x6e, 0x65, 0x72, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x73,
	0x68, 0x6f, 0x77, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x73, 0x68, 0x6f, 0x77, 0x12,
	0x14, 0x0a, 0x05, 0x63, 0x68, 0x61, 0x72, 0x6d, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05,
	0x63, 0x68, 0x61, 0x72, 0x6d, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x74, 0x61, 0x72, 0x18, 0x0f, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x04, 0x73, 0x74, 0x61, 0x72, 0x12, 0x37, 0x0a, 0x0a, 0x74, 0x6f, 0x70,
	0x5f, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x10, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x18, 0x2e,
	0x76, 0x6f, 0x69, 0x63, 0x65, 0x72, 0x6f, 0x6f, 0x6d, 0x2e, 0x74, 0x6f, 0x70, 0x53, 0x68, 0x6f,
	0x77, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x52, 0x09, 0x74, 0x6f, 0x70, 0x4d, 0x65, 0x6d, 0x62,
	0x65, 0x72, 0x22, 0x85, 0x01, 0x0a, 0x0a, 0x53, 0x74, 0x61, 0x72, 0x74, 0x50, 0x6b, 0x52, 0x65,
	0x71, 0x12, 0x19, 0x0a, 0x08, 0x6c, 0x65, 0x66, 0x74, 0x5f, 0x75, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x07, 0x6c, 0x65, 0x66, 0x74, 0x55, 0x69, 0x64, 0x12, 0x1b, 0x0a, 0x09,
	0x72, 0x69, 0x67, 0x68, 0x74, 0x5f, 0x75, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x08, 0x72, 0x69, 0x67, 0x68, 0x74, 0x55, 0x69, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x65, 0x63,
	0x6f, 0x6e, 0x64, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x73, 0x65, 0x63, 0x6f,
	0x6e, 0x64, 0x73, 0x12, 0x25, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x0e, 0x32, 0x11, 0x2e, 0x76, 0x6f, 0x69, 0x63, 0x65, 0x72, 0x6f, 0x6f, 0x6d, 0x2e, 0x50, 0x6b,
	0x54, 0x79, 0x70, 0x65, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x22, 0x38, 0x0a, 0x0a, 0x53, 0x74,
	0x61, 0x72, 0x74, 0x50, 0x6b, 0x52, 0x73, 0x70, 0x12, 0x2a, 0x0a, 0x07, 0x70, 0x6b, 0x5f, 0x69,
	0x6e, 0x66, 0x6f, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x76, 0x6f, 0x69, 0x63,
	0x65, 0x72, 0x6f, 0x6f, 0x6d, 0x2e, 0x70, 0x6b, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x06, 0x70, 0x6b,
	0x49, 0x6e, 0x66, 0x6f, 0x22, 0x3a, 0x0a, 0x0c, 0x50, 0x75, 0x53, 0x74, 0x61, 0x72, 0x74, 0x50,
	0x6b, 0x4d, 0x73, 0x67, 0x12, 0x2a, 0x0a, 0x07, 0x70, 0x6b, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x76, 0x6f, 0x69, 0x63, 0x65, 0x72, 0x6f, 0x6f,
	0x6d, 0x2e, 0x70, 0x6b, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x06, 0x70, 0x6b, 0x49, 0x6e, 0x66, 0x6f,
	0x22, 0x0e, 0x0a, 0x0c, 0x47, 0x65, 0x74, 0x50, 0x6b, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x71,
	0x22, 0x3a, 0x0a, 0x0c, 0x47, 0x65, 0x74, 0x50, 0x6b, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x73, 0x70,
	0x12, 0x2a, 0x0a, 0x07, 0x70, 0x6b, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x11, 0x2e, 0x76, 0x6f, 0x69, 0x63, 0x65, 0x72, 0x6f, 0x6f, 0x6d, 0x2e, 0x70, 0x6b,
	0x49, 0x6e, 0x66, 0x6f, 0x52, 0x06, 0x70, 0x6b, 0x49, 0x6e, 0x66, 0x6f, 0x22, 0x5d, 0x0a, 0x0d,
	0x50, 0x75, 0x50, 0x6b, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x4d, 0x73, 0x67, 0x12, 0x1d, 0x0a,
	0x0a, 0x77, 0x69, 0x6e, 0x6e, 0x65, 0x72, 0x5f, 0x75, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x09, 0x77, 0x69, 0x6e, 0x6e, 0x65, 0x72, 0x55, 0x69, 0x64, 0x12, 0x14, 0x0a, 0x05,
	0x73, 0x63, 0x6f, 0x72, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x73, 0x63, 0x6f,
	0x72, 0x65, 0x12, 0x17, 0x0a, 0x07, 0x69, 0x73, 0x5f, 0x64, 0x72, 0x61, 0x77, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x08, 0x52, 0x06, 0x69, 0x73, 0x44, 0x72, 0x61, 0x77, 0x22, 0xad, 0x02, 0x0a, 0x0b,
	0x52, 0x6f, 0x6f, 0x6d, 0x43, 0x68, 0x61, 0x74, 0x4d, 0x73, 0x67, 0x12, 0x1d, 0x0a, 0x0a, 0x73,
	0x65, 0x6e, 0x64, 0x65, 0x72, 0x5f, 0x75, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x09, 0x73, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x55, 0x69, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x63, 0x68,
	0x61, 0x74, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x63,
	0x68, 0x61, 0x74, 0x54, 0x79, 0x70, 0x65, 0x12, 0x21, 0x0a, 0x0c, 0x6d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0b, 0x6d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x73, 0x79,
	0x73, 0x6d, 0x73, 0x67, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x0a, 0x73, 0x79, 0x73, 0x6d, 0x73, 0x67, 0x54, 0x79, 0x70, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x63,
	0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x6f,
	0x6e, 0x74, 0x65, 0x6e, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x5f, 0x69, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x6d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x49, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x6e, 0x69, 0x63, 0x6b, 0x6e, 0x61, 0x6d, 0x65,
	0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6e, 0x69, 0x63, 0x6b, 0x6e, 0x61, 0x6d, 0x65,
	0x12, 0x10, 0x0a, 0x03, 0x65, 0x78, 0x74, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x65,
	0x78, 0x74, 0x12, 0x19, 0x0a, 0x08, 0x73, 0x75, 0x62, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x0a,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x73, 0x75, 0x62, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1c, 0x0a,
	0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x22, 0x43, 0x0a, 0x0d, 0x50,
	0x75, 0x52, 0x6f, 0x6f, 0x6d, 0x43, 0x68, 0x61, 0x74, 0x4d, 0x73, 0x67, 0x12, 0x32, 0x0a, 0x08,
	0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x16,
	0x2e, 0x76, 0x6f, 0x69, 0x63, 0x65, 0x72, 0x6f, 0x6f, 0x6d, 0x2e, 0x52, 0x6f, 0x6f, 0x6d, 0x43,
	0x68, 0x61, 0x74, 0x4d, 0x73, 0x67, 0x52, 0x08, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x73,
	0x22, 0x2a, 0x0a, 0x09, 0x50, 0x6b, 0x56, 0x6f, 0x74, 0x65, 0x52, 0x65, 0x71, 0x12, 0x1d, 0x0a,
	0x0a, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x5f, 0x75, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x09, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x55, 0x69, 0x64, 0x22, 0x37, 0x0a, 0x09,
	0x50, 0x6b, 0x56, 0x6f, 0x74, 0x65, 0x52, 0x73, 0x70, 0x12, 0x2a, 0x0a, 0x07, 0x70, 0x6b, 0x5f,
	0x69, 0x6e, 0x66, 0x6f, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x76, 0x6f, 0x69,
	0x63, 0x65, 0x72, 0x6f, 0x6f, 0x6d, 0x2e, 0x70, 0x6b, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x06, 0x70,
	0x6b, 0x49, 0x6e, 0x66, 0x6f, 0x22, 0x3c, 0x0a, 0x0d, 0x50, 0x6b, 0x53, 0x65, 0x6e, 0x64, 0x47,
	0x69, 0x66, 0x74, 0x52, 0x65, 0x71, 0x12, 0x2b, 0x0a, 0x04, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x76, 0x6f, 0x69, 0x63, 0x65, 0x72, 0x6f, 0x6f, 0x6d,
	0x2e, 0x53, 0x65, 0x6e, 0x64, 0x47, 0x69, 0x66, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x04, 0x69,
	0x6e, 0x66, 0x6f, 0x22, 0x3b, 0x0a, 0x0d, 0x50, 0x6b, 0x53, 0x65, 0x6e, 0x64, 0x47, 0x69, 0x66,
	0x74, 0x52, 0x73, 0x70, 0x12, 0x2a, 0x0a, 0x07, 0x70, 0x6b, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x76, 0x6f, 0x69, 0x63, 0x65, 0x72, 0x6f, 0x6f,
	0x6d, 0x2e, 0x70, 0x6b, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x06, 0x70, 0x6b, 0x49, 0x6e, 0x66, 0x6f,
	0x22, 0xcf, 0x01, 0x0a, 0x0b, 0x53, 0x65, 0x6e, 0x64, 0x43, 0x68, 0x61, 0x74, 0x52, 0x65, 0x71,
	0x12, 0x1b, 0x0a, 0x09, 0x63, 0x68, 0x61, 0x74, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x08, 0x63, 0x68, 0x61, 0x74, 0x54, 0x79, 0x70, 0x65, 0x12, 0x21, 0x0a,
	0x0c, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x0b, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x54, 0x79, 0x70, 0x65,
	0x12, 0x18, 0x0a, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x6d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09,
	0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x49, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x6e, 0x69, 0x63,
	0x6b, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6e, 0x69, 0x63,
	0x6b, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x65, 0x78, 0x74, 0x18, 0x06, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x03, 0x65, 0x78, 0x74, 0x12, 0x19, 0x0a, 0x08, 0x73, 0x75, 0x62, 0x5f, 0x74,
	0x79, 0x70, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x73, 0x75, 0x62, 0x54, 0x79,
	0x70, 0x65, 0x22, 0x27, 0x0a, 0x0b, 0x53, 0x65, 0x6e, 0x64, 0x43, 0x68, 0x61, 0x74, 0x52, 0x73,
	0x70, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x22, 0x3a, 0x0a, 0x0b, 0x53,
	0x65, 0x6e, 0x64, 0x47, 0x69, 0x66, 0x74, 0x52, 0x65, 0x71, 0x12, 0x2b, 0x0a, 0x04, 0x69, 0x6e,
	0x66, 0x6f, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x76, 0x6f, 0x69, 0x63, 0x65,
	0x72, 0x6f, 0x6f, 0x6d, 0x2e, 0x53, 0x65, 0x6e, 0x64, 0x47, 0x69, 0x66, 0x74, 0x49, 0x6e, 0x66,
	0x6f, 0x52, 0x04, 0x69, 0x6e, 0x66, 0x6f, 0x22, 0xbd, 0x02, 0x0a, 0x0c, 0x53, 0x65, 0x6e, 0x64,
	0x47, 0x69, 0x66, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x1d, 0x0a, 0x0a, 0x74, 0x61, 0x72, 0x67,
	0x65, 0x74, 0x5f, 0x75, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x74, 0x61,
	0x72, 0x67, 0x65, 0x74, 0x55, 0x69, 0x64, 0x12, 0x27, 0x0a, 0x0f, 0x74, 0x61, 0x72, 0x67, 0x65,
	0x74, 0x5f, 0x6e, 0x69, 0x63, 0x6b, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0e, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x4e, 0x69, 0x63, 0x6b, 0x6e, 0x61, 0x6d, 0x65,
	0x12, 0x16, 0x0a, 0x06, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x06, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x12, 0x17, 0x0a, 0x07, 0x69, 0x73, 0x5f, 0x66,
	0x72, 0x65, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x69, 0x73, 0x46, 0x72, 0x65,
	0x65, 0x12, 0x17, 0x0a, 0x07, 0x67, 0x69, 0x66, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x06, 0x67, 0x69, 0x66, 0x74, 0x49, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x67, 0x69,
	0x66, 0x74, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x67,
	0x69, 0x66, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74,
	0x18, 0x07, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x1b, 0x0a,
	0x09, 0x62, 0x61, 0x67, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x08, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x08, 0x62, 0x61, 0x67, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x23, 0x0a, 0x0d, 0x6d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x5f, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x18, 0x09, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x0c, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x12,
	0x14, 0x0a, 0x05, 0x63, 0x68, 0x61, 0x72, 0x6d, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05,
	0x63, 0x68, 0x61, 0x72, 0x6d, 0x12, 0x10, 0x0a, 0x03, 0x65, 0x78, 0x74, 0x18, 0x0b, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x03, 0x65, 0x78, 0x74, 0x22, 0x0d, 0x0a, 0x0b, 0x53, 0x65, 0x6e, 0x64, 0x47,
	0x69, 0x66, 0x74, 0x52, 0x73, 0x70, 0x22, 0x81, 0x01, 0x0a, 0x0d, 0x50, 0x75, 0x53, 0x65, 0x6e,
	0x64, 0x47, 0x69, 0x66, 0x74, 0x4d, 0x73, 0x67, 0x12, 0x1d, 0x0a, 0x0a, 0x73, 0x65, 0x6e, 0x64,
	0x65, 0x72, 0x5f, 0x75, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x73, 0x65,
	0x6e, 0x64, 0x65, 0x72, 0x55, 0x69, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x74, 0x61, 0x72, 0x67, 0x65,
	0x74, 0x5f, 0x75, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x74, 0x61, 0x72,
	0x67, 0x65, 0x74, 0x55, 0x69, 0x64, 0x12, 0x17, 0x0a, 0x07, 0x67, 0x69, 0x66, 0x74, 0x5f, 0x69,
	0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x67, 0x69, 0x66, 0x74, 0x49, 0x64, 0x12,
	0x19, 0x0a, 0x08, 0x67, 0x69, 0x66, 0x74, 0x5f, 0x6e, 0x75, 0x6d, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x07, 0x67, 0x69, 0x66, 0x74, 0x4e, 0x75, 0x6d, 0x22, 0x48, 0x0a, 0x0c, 0x53, 0x65,
	0x6e, 0x64, 0x45, 0x6d, 0x6f, 0x6a, 0x69, 0x52, 0x65, 0x71, 0x12, 0x19, 0x0a, 0x08, 0x65, 0x6d,
	0x6f, 0x6a, 0x69, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x65, 0x6d,
	0x6f, 0x6a, 0x69, 0x49, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x73, 0x65, 0x61, 0x74, 0x5f, 0x69, 0x6e,
	0x64, 0x65, 0x78, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x73, 0x65, 0x61, 0x74, 0x49,
	0x6e, 0x64, 0x65, 0x78, 0x22, 0x24, 0x0a, 0x0c, 0x53, 0x65, 0x6e, 0x64, 0x45, 0x6d, 0x6f, 0x6a,
	0x69, 0x52, 0x73, 0x70, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x60, 0x0a, 0x0e, 0x50, 0x75,
	0x53, 0x65, 0x6e, 0x64, 0x45, 0x6d, 0x6f, 0x6a, 0x69, 0x4d, 0x73, 0x67, 0x12, 0x1d, 0x0a, 0x0a,
	0x73, 0x65, 0x61, 0x74, 0x5f, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x09, 0x73, 0x65, 0x61, 0x74, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x12, 0x19, 0x0a, 0x08, 0x65,
	0x6d, 0x6f, 0x6a, 0x69, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x65,
	0x6d, 0x6f, 0x6a, 0x69, 0x49, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x23, 0x0a, 0x0b,
	0x53, 0x65, 0x61, 0x74, 0x4b, 0x69, 0x63, 0x6b, 0x52, 0x65, 0x71, 0x12, 0x14, 0x0a, 0x05, 0x69,
	0x6e, 0x64, 0x65, 0x78, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x69, 0x6e, 0x64, 0x65,
	0x78, 0x22, 0x0d, 0x0a, 0x0b, 0x53, 0x65, 0x61, 0x74, 0x4b, 0x69, 0x63, 0x6b, 0x52, 0x73, 0x70,
	0x22, 0x0f, 0x0a, 0x0d, 0x50, 0x75, 0x53, 0x65, 0x61, 0x74, 0x4b, 0x69, 0x63, 0x6b, 0x4d, 0x73,
	0x67, 0x22, 0x2e, 0x0a, 0x0d, 0x52, 0x6f, 0x6f, 0x6d, 0x49, 0x6e, 0x76, 0x69, 0x74, 0x65, 0x52,
	0x65, 0x71, 0x12, 0x1d, 0x0a, 0x0a, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x5f, 0x75, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x55, 0x69,
	0x64, 0x22, 0x0f, 0x0a, 0x0d, 0x52, 0x6f, 0x6f, 0x6d, 0x49, 0x6e, 0x76, 0x69, 0x74, 0x65, 0x52,
	0x73, 0x70, 0x22, 0x42, 0x0a, 0x0f, 0x50, 0x75, 0x52, 0x6f, 0x6f, 0x6d, 0x49, 0x6e, 0x76, 0x69,
	0x74, 0x65, 0x4d, 0x73, 0x67, 0x12, 0x1d, 0x0a, 0x0a, 0x69, 0x6e, 0x76, 0x69, 0x74, 0x65, 0x5f,
	0x75, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x69, 0x6e, 0x76, 0x69, 0x74,
	0x65, 0x55, 0x69, 0x64, 0x12, 0x10, 0x0a, 0x03, 0x72, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x03, 0x72, 0x69, 0x64, 0x22, 0x45, 0x0a, 0x0e, 0x50, 0x75, 0x50, 0x6c, 0x61, 0x79,
	0x4d, 0x75, 0x73, 0x69, 0x63, 0x4d, 0x73, 0x67, 0x12, 0x33, 0x0a, 0x05, 0x6d, 0x75, 0x73, 0x69,
	0x63, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x76, 0x6f, 0x69, 0x63, 0x65, 0x72,
	0x6f, 0x6f, 0x6d, 0x2e, 0x76, 0x6f, 0x69, 0x63, 0x65, 0x52, 0x6f, 0x6f, 0x6d, 0x4d, 0x75, 0x73,
	0x69, 0x63, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x05, 0x6d, 0x75, 0x73, 0x69, 0x63, 0x2a, 0xbb, 0x05,
	0x0a, 0x0b, 0x56, 0x6f, 0x69, 0x63, 0x65, 0x4f, 0x70, 0x54, 0x79, 0x70, 0x65, 0x12, 0x0a, 0x0a,
	0x06, 0x76, 0x55, 0x6e, 0x64, 0x65, 0x66, 0x10, 0x00, 0x12, 0x0b, 0x0a, 0x07, 0x4e, 0x65, 0x77,
	0x52, 0x6f, 0x6f, 0x6d, 0x10, 0x01, 0x12, 0x0d, 0x0a, 0x09, 0x4d, 0x79, 0x50, 0x72, 0x65, 0x52,
	0x6f, 0x6f, 0x6d, 0x10, 0x02, 0x12, 0x0d, 0x0a, 0x09, 0x45, 0x6e, 0x74, 0x65, 0x72, 0x52, 0x6f,
	0x6f, 0x6d, 0x10, 0x03, 0x12, 0x11, 0x0a, 0x0d, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x53, 0x65,
	0x74, 0x74, 0x69, 0x6e, 0x67, 0x10, 0x04, 0x12, 0x0c, 0x0a, 0x08, 0x45, 0x78, 0x69, 0x74, 0x52,
	0x6f, 0x6f, 0x6d, 0x10, 0x05, 0x12, 0x0c, 0x0a, 0x08, 0x4c, 0x6f, 0x63, 0x6b, 0x53, 0x65, 0x61,
	0x74, 0x10, 0x06, 0x12, 0x11, 0x0a, 0x0d, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x4d, 0x61, 0x6e,
	0x61, 0x67, 0x65, 0x72, 0x10, 0x07, 0x12, 0x0e, 0x0a, 0x0a, 0x53, 0x65, 0x61, 0x74, 0x49, 0x6e,
	0x76, 0x69, 0x74, 0x65, 0x10, 0x08, 0x12, 0x14, 0x0a, 0x10, 0x48, 0x61, 0x6e, 0x64, 0x6c, 0x65,
	0x53, 0x65, 0x61, 0x74, 0x49, 0x6e, 0x76, 0x69, 0x74, 0x65, 0x10, 0x09, 0x12, 0x0b, 0x0a, 0x07,
	0x55, 0x73, 0x65, 0x53, 0x65, 0x61, 0x74, 0x10, 0x0a, 0x12, 0x0a, 0x0a, 0x06, 0x4d, 0x69, 0x63,
	0x4f, 0x70, 0x74, 0x10, 0x0b, 0x12, 0x0f, 0x0a, 0x0b, 0x53, 0x65, 0x6e, 0x64, 0x52, 0x65, 0x64,
	0x50, 0x61, 0x63, 0x6b, 0x10, 0x0c, 0x12, 0x0d, 0x0a, 0x09, 0x47, 0x65, 0x74, 0x4e, 0x65, 0x61,
	0x72, 0x62, 0x79, 0x10, 0x0d, 0x12, 0x0f, 0x0a, 0x0b, 0x47, 0x65, 0x74, 0x52, 0x6f, 0x6f, 0x6d,
	0x4c, 0x69, 0x73, 0x74, 0x10, 0x0e, 0x12, 0x0e, 0x0a, 0x0a, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68,
	0x52, 0x6f, 0x6f, 0x6d, 0x10, 0x0f, 0x12, 0x0c, 0x0a, 0x08, 0x53, 0x65, 0x6e, 0x64, 0x43, 0x68,
	0x61, 0x74, 0x10, 0x11, 0x12, 0x0c, 0x0a, 0x08, 0x53, 0x65, 0x6e, 0x64, 0x47, 0x69, 0x66, 0x74,
	0x10, 0x12, 0x12, 0x0b, 0x0a, 0x07, 0x53, 0x74, 0x61, 0x72, 0x74, 0x50, 0x6b, 0x10, 0x13, 0x12,
	0x0a, 0x0a, 0x06, 0x50, 0x6b, 0x56, 0x6f, 0x74, 0x65, 0x10, 0x14, 0x12, 0x0d, 0x0a, 0x09, 0x53,
	0x65, 0x6e, 0x64, 0x45, 0x6d, 0x6f, 0x6a, 0x69, 0x10, 0x15, 0x12, 0x11, 0x0a, 0x0d, 0x47, 0x65,
	0x74, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x4c, 0x69, 0x73, 0x74, 0x10, 0x16, 0x12, 0x0b, 0x0a,
	0x07, 0x4c, 0x6f, 0x74, 0x74, 0x65, 0x72, 0x79, 0x10, 0x17, 0x12, 0x0c, 0x0a, 0x08, 0x53, 0x65,
	0x61, 0x74, 0x4b, 0x69, 0x63, 0x6b, 0x10, 0x18, 0x12, 0x0d, 0x0a, 0x09, 0x47, 0x65, 0x74, 0x50,
	0x6b, 0x49, 0x6e, 0x66, 0x6f, 0x10, 0x19, 0x12, 0x0e, 0x0a, 0x0a, 0x50, 0x6b, 0x53, 0x65, 0x6e,
	0x64, 0x47, 0x69, 0x66, 0x74, 0x10, 0x1a, 0x12, 0x0e, 0x0a, 0x0a, 0x52, 0x6f, 0x6f, 0x6d, 0x49,
	0x6e, 0x76, 0x69, 0x74, 0x65, 0x10, 0x1b, 0x12, 0x0d, 0x0a, 0x09, 0x49, 0x6e, 0x6e, 0x65, 0x72,
	0x43, 0x61, 0x6c, 0x6c, 0x10, 0x64, 0x12, 0x13, 0x0a, 0x0f, 0x50, 0x75, 0x55, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x10, 0x65, 0x12, 0x12, 0x0a, 0x0e, 0x50,
	0x75, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x10, 0x66, 0x12,
	0x10, 0x0a, 0x0c, 0x50, 0x75, 0x53, 0x65, 0x61, 0x74, 0x49, 0x6e, 0x76, 0x69, 0x74, 0x65, 0x10,
	0x67, 0x12, 0x10, 0x0a, 0x0c, 0x50, 0x75, 0x53, 0x65, 0x61, 0x74, 0x43, 0x68, 0x61, 0x6e, 0x67,
	0x65, 0x10, 0x68, 0x12, 0x0f, 0x0a, 0x0b, 0x50, 0x75, 0x52, 0x6f, 0x6f, 0x6d, 0x43, 0x6c, 0x6f,
	0x73, 0x65, 0x10, 0x69, 0x12, 0x0d, 0x0a, 0x09, 0x50, 0x75, 0x52, 0x65, 0x64, 0x50, 0x61, 0x63,
	0x6b, 0x10, 0x6a, 0x12, 0x0e, 0x0a, 0x0a, 0x50, 0x75, 0x52, 0x6f, 0x6f, 0x6d, 0x43, 0x68, 0x61,
	0x74, 0x10, 0x6b, 0x12, 0x0e, 0x0a, 0x0a, 0x50, 0x75, 0x50, 0x6b, 0x52, 0x65, 0x73, 0x75, 0x6c,
	0x74, 0x10, 0x6c, 0x12, 0x0f, 0x0a, 0x0b, 0x50, 0x75, 0x53, 0x65, 0x6e, 0x64, 0x45, 0x6d, 0x6f,
	0x6a, 0x69, 0x10, 0x6d, 0x12, 0x0e, 0x0a, 0x0a, 0x50, 0x75, 0x53, 0x65, 0x6e, 0x64, 0x47, 0x69,
	0x66, 0x74, 0x10, 0x6e, 0x12, 0x13, 0x0a, 0x0f, 0x50, 0x75, 0x4c, 0x6f, 0x74, 0x74, 0x65, 0x72,
	0x79, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x10, 0x6f, 0x12, 0x0e, 0x0a, 0x0a, 0x50, 0x75, 0x53,
	0x65, 0x61, 0x74, 0x4b, 0x69, 0x63, 0x6b, 0x10, 0x70, 0x12, 0x0d, 0x0a, 0x09, 0x50, 0x75, 0x53,
	0x74, 0x61, 0x72, 0x74, 0x50, 0x6b, 0x10, 0x71, 0x12, 0x10, 0x0a, 0x0c, 0x50, 0x75, 0x52, 0x6f,
	0x6f, 0x6d, 0x49, 0x6e, 0x76, 0x69, 0x74, 0x65, 0x10, 0x72, 0x12, 0x0f, 0x0a, 0x0b, 0x50, 0x75,
	0x50, 0x6c, 0x61, 0x79, 0x4d, 0x75, 0x73, 0x69, 0x63, 0x10, 0x73, 0x2a, 0x49, 0x0a, 0x14, 0x76,
	0x6f, 0x69, 0x63, 0x65, 0x52, 0x6f, 0x6f, 0x6d, 0x4d, 0x75, 0x73, 0x69, 0x63, 0x53, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x12, 0x11, 0x0a, 0x0d, 0x69, 0x6e, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x53, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x10, 0x00, 0x12, 0x08, 0x0a, 0x04, 0x4f, 0x70, 0x65, 0x6e, 0x10, 0x01,
	0x12, 0x09, 0x0a, 0x05, 0x50, 0x61, 0x75, 0x73, 0x65, 0x10, 0x02, 0x12, 0x09, 0x0a, 0x05, 0x43,
	0x6c, 0x6f, 0x73, 0x65, 0x10, 0x03, 0x2a, 0x34, 0x0a, 0x0b, 0x6c, 0x6f, 0x74, 0x74, 0x65, 0x72,
	0x79, 0x54, 0x79, 0x70, 0x65, 0x12, 0x0b, 0x0a, 0x07, 0x74, 0x70, 0x55, 0x6e, 0x64, 0x65, 0x66,
	0x10, 0x00, 0x12, 0x0b, 0x0a, 0x07, 0x4d, 0x69, 0x63, 0x55, 0x73, 0x65, 0x72, 0x10, 0x01, 0x12,
	0x0b, 0x0a, 0x07, 0x41, 0x6c, 0x6c, 0x55, 0x73, 0x65, 0x72, 0x10, 0x02, 0x2a, 0x8c, 0x01, 0x0a,
	0x0d, 0x69, 0x6e, 0x6e, 0x65, 0x72, 0x43, 0x61, 0x6c, 0x6c, 0x54, 0x79, 0x70, 0x65, 0x12, 0x0b,
	0x0a, 0x07, 0x69, 0x63, 0x55, 0x6e, 0x64, 0x65, 0x66, 0x10, 0x00, 0x12, 0x0f, 0x0a, 0x0b, 0x47,
	0x65, 0x74, 0x52, 0x6f, 0x6f, 0x6d, 0x49, 0x6e, 0x66, 0x6f, 0x10, 0x01, 0x12, 0x12, 0x0a, 0x0e,
	0x42, 0x61, 0x6e, 0x55, 0x73, 0x65, 0x72, 0x53, 0x65, 0x61, 0x74, 0x4d, 0x69, 0x63, 0x10, 0x02,
	0x12, 0x15, 0x0a, 0x11, 0x56, 0x6f, 0x69, 0x63, 0x65, 0x52, 0x6f, 0x6f, 0x6d, 0x44, 0x69, 0x73,
	0x73, 0x6f, 0x6c, 0x76, 0x65, 0x10, 0x03, 0x12, 0x16, 0x0a, 0x12, 0x56, 0x6f, 0x69, 0x63, 0x65,
	0x52, 0x6f, 0x6f, 0x6d, 0x52, 0x65, 0x73, 0x65, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x10, 0x04, 0x12,
	0x1a, 0x0a, 0x16, 0x56, 0x6f, 0x69, 0x63, 0x65, 0x52, 0x6f, 0x6f, 0x6d, 0x52, 0x65, 0x73, 0x65,
	0x74, 0x41, 0x6e, 0x6e, 0x6f, 0x75, 0x6e, 0x63, 0x65, 0x10, 0x05, 0x2a, 0x7d, 0x0a, 0x11, 0x70,
	0x6c, 0x61, 0x79, 0x65, 0x72, 0x4d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x54, 0x79, 0x70, 0x65,
	0x12, 0x0b, 0x0a, 0x07, 0x70, 0x6d, 0x55, 0x6e, 0x64, 0x65, 0x66, 0x10, 0x00, 0x12, 0x0a, 0x0a,
	0x06, 0x4d, 0x69, 0x63, 0x42, 0x61, 0x6e, 0x10, 0x01, 0x12, 0x0b, 0x0a, 0x07, 0x4d, 0x69, 0x63,
	0x4f, 0x70, 0x65, 0x6e, 0x10, 0x02, 0x12, 0x0b, 0x0a, 0x07, 0x43, 0x68, 0x61, 0x74, 0x42, 0x61,
	0x6e, 0x10, 0x03, 0x12, 0x0c, 0x0a, 0x08, 0x43, 0x68, 0x61, 0x74, 0x4f, 0x50, 0x65, 0x6e, 0x10,
	0x04, 0x12, 0x08, 0x0a, 0x04, 0x4b, 0x69, 0x63, 0x6b, 0x10, 0x05, 0x12, 0x0c, 0x0a, 0x08, 0x42,
	0x6c, 0x61, 0x63, 0x6b, 0x41, 0x64, 0x64, 0x10, 0x06, 0x12, 0x0f, 0x0a, 0x0b, 0x42, 0x6c, 0x61,
	0x63, 0x6b, 0x43, 0x61, 0x6e, 0x63, 0x65, 0x6c, 0x10, 0x07, 0x2a, 0x29, 0x0a, 0x06, 0x50, 0x6b,
	0x54, 0x79, 0x70, 0x65, 0x12, 0x0b, 0x0a, 0x07, 0x70, 0x74, 0x55, 0x6e, 0x64, 0x65, 0x66, 0x10,
	0x00, 0x12, 0x08, 0x0a, 0x04, 0x56, 0x6f, 0x74, 0x65, 0x10, 0x01, 0x12, 0x08, 0x0a, 0x04, 0x47,
	0x69, 0x66, 0x74, 0x10, 0x02, 0x42, 0x2b, 0x5a, 0x29, 0x67, 0x69, 0x74, 0x2e, 0x31, 0x37, 0x7a,
	0x6a, 0x68, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x73, 0x6e, 0x61, 0x6b, 0x65, 0x2f, 0x73, 0x6e, 0x61,
	0x6b, 0x65, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x76, 0x6f, 0x69, 0x63, 0x65, 0x72, 0x6f,
	0x6f, 0x6d, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_voiceroom_voiceroom_proto_rawDescOnce sync.Once
	file_voiceroom_voiceroom_proto_rawDescData = file_voiceroom_voiceroom_proto_rawDesc
)

func file_voiceroom_voiceroom_proto_rawDescGZIP() []byte {
	file_voiceroom_voiceroom_proto_rawDescOnce.Do(func() {
		file_voiceroom_voiceroom_proto_rawDescData = protoimpl.X.CompressGZIP(file_voiceroom_voiceroom_proto_rawDescData)
	})
	return file_voiceroom_voiceroom_proto_rawDescData
}

var file_voiceroom_voiceroom_proto_enumTypes = make([]protoimpl.EnumInfo, 6)
var file_voiceroom_voiceroom_proto_msgTypes = make([]protoimpl.MessageInfo, 83)
var file_voiceroom_voiceroom_proto_goTypes = []interface{}{
	(VoiceOpType)(0),            // 0: voiceroom.VoiceOpType
	(VoiceRoomMusicStatus)(0),   // 1: voiceroom.voiceRoomMusicStatus
	(LotteryType)(0),            // 2: voiceroom.lotteryType
	(InnerCallType)(0),          // 3: voiceroom.innerCallType
	(PlayerManagerType)(0),      // 4: voiceroom.playerManagerType
	(PkType)(0),                 // 5: voiceroom.PkType
	(*RoomInfo)(nil),            // 6: voiceroom.roomInfo
	(*VoiceRoomMusicInfo)(nil),  // 7: voiceroom.voiceRoomMusicInfo
	(*RoomSetting)(nil),         // 8: voiceroom.roomSetting
	(*SeatInfo)(nil),            // 9: voiceroom.seatInfo
	(*PkInfo)(nil),              // 10: voiceroom.pkInfo
	(*Location)(nil),            // 11: voiceroom.location
	(*NewRoomReq)(nil),          // 12: voiceroom.NewRoomReq
	(*NewRoomRsp)(nil),          // 13: voiceroom.NewRoomRsp
	(*MyPreRoomReq)(nil),        // 14: voiceroom.MyPreRoomReq
	(*MyPreRoomRsp)(nil),        // 15: voiceroom.MyPreRoomRsp
	(*EnterRoomReq)(nil),        // 16: voiceroom.EnterRoomReq
	(*EnterRoomRsp)(nil),        // 17: voiceroom.EnterRoomRsp
	(*UpdateSettingReq)(nil),    // 18: voiceroom.UpdateSettingReq
	(*UpdateSettingRsp)(nil),    // 19: voiceroom.UpdateSettingRsp
	(*PuUpdateSettingMsg)(nil),  // 20: voiceroom.PuUpdateSettingMsg
	(*ExitRoomReq)(nil),         // 21: voiceroom.ExitRoomReq
	(*ExitRoomRsp)(nil),         // 22: voiceroom.ExitRoomRsp
	(*GetMemberListReq)(nil),    // 23: voiceroom.GetMemberListReq
	(*MemberListItem)(nil),      // 24: voiceroom.MemberListItem
	(*GetMemberListRsp)(nil),    // 25: voiceroom.GetMemberListRsp
	(*LotteryReq)(nil),          // 26: voiceroom.LotteryReq
	(*LotteryRsp)(nil),          // 27: voiceroom.LotteryRsp
	(*PuLotteryResultMsg)(nil),  // 28: voiceroom.PuLotteryResultMsg
	(*InnerCallReq)(nil),        // 29: voiceroom.InnerCallReq
	(*InnerCallRsp)(nil),        // 30: voiceroom.InnerCallRsp
	(*AdminRoomInfo)(nil),       // 31: voiceroom.adminRoomInfo
	(*PlayerChangeItem)(nil),    // 32: voiceroom.playerChangeItem
	(*PuPlayerChangeMsg)(nil),   // 33: voiceroom.PuPlayerChangeMsg
	(*PuSeatChangeMsg)(nil),     // 34: voiceroom.PuSeatChangeMsg
	(*LockSeatReq)(nil),         // 35: voiceroom.LockSeatReq
	(*LockSeatRsp)(nil),         // 36: voiceroom.LockSeatRsp
	(*PlayerManagerReq)(nil),    // 37: voiceroom.PlayerManagerReq
	(*PlayerManagerRsp)(nil),    // 38: voiceroom.PlayerManagerRsp
	(*SeatInviteReq)(nil),       // 39: voiceroom.SeatInviteReq
	(*SeatInviteRsp)(nil),       // 40: voiceroom.SeatInviteRsp
	(*PuSeatInviteMsg)(nil),     // 41: voiceroom.PuSeatInviteMsg
	(*HandleSeatInviteReq)(nil), // 42: voiceroom.HandleSeatInviteReq
	(*HandleSeatInviteRsp)(nil), // 43: voiceroom.HandleSeatInviteRsp
	(*UseSeatReq)(nil),          // 44: voiceroom.UseSeatReq
	(*UseSeatRsp)(nil),          // 45: voiceroom.UseSeatRsp
	(*PuRoomCloseMsg)(nil),      // 46: voiceroom.PuRoomCloseMsg
	(*MicOptReq)(nil),           // 47: voiceroom.MicOptReq
	(*MicOptRsp)(nil),           // 48: voiceroom.MicOptRsp
	(*SendRedPackReq)(nil),      // 49: voiceroom.SendRedPackReq
	(*SendRedPackRsp)(nil),      // 50: voiceroom.SendRedPackRsp
	(*PuRedPackMsg)(nil),        // 51: voiceroom.PuRedPackMsg
	(*UserGeoInfo)(nil),         // 52: voiceroom.userGeoInfo
	(*GetNearbyReq)(nil),        // 53: voiceroom.GetNearbyReq
	(*GetNearbyRsp)(nil),        // 54: voiceroom.GetNearbyRsp
	(*GetRoomListReq)(nil),      // 55: voiceroom.GetRoomListReq
	(*RoomListItem)(nil),        // 56: voiceroom.RoomListItem
	(*GetRoomListRsp)(nil),      // 57: voiceroom.GetRoomListRsp
	(*SearchRoomReq)(nil),       // 58: voiceroom.SearchRoomReq
	(*TopShowMember)(nil),       // 59: voiceroom.topShowMember
	(*SearchRoomRsp)(nil),       // 60: voiceroom.SearchRoomRsp
	(*StartPkReq)(nil),          // 61: voiceroom.StartPkReq
	(*StartPkRsp)(nil),          // 62: voiceroom.StartPkRsp
	(*PuStartPkMsg)(nil),        // 63: voiceroom.PuStartPkMsg
	(*GetPkInfoReq)(nil),        // 64: voiceroom.GetPkInfoReq
	(*GetPkInfoRsp)(nil),        // 65: voiceroom.GetPkInfoRsp
	(*PuPkResultMsg)(nil),       // 66: voiceroom.PuPkResultMsg
	(*RoomChatMsg)(nil),         // 67: voiceroom.RoomChatMsg
	(*PuRoomChatMsg)(nil),       // 68: voiceroom.PuRoomChatMsg
	(*PkVoteReq)(nil),           // 69: voiceroom.PkVoteReq
	(*PkVoteRsp)(nil),           // 70: voiceroom.PkVoteRsp
	(*PkSendGiftReq)(nil),       // 71: voiceroom.PkSendGiftReq
	(*PkSendGiftRsp)(nil),       // 72: voiceroom.PkSendGiftRsp
	(*SendChatReq)(nil),         // 73: voiceroom.SendChatReq
	(*SendChatRsp)(nil),         // 74: voiceroom.SendChatRsp
	(*SendGiftReq)(nil),         // 75: voiceroom.SendGiftReq
	(*SendGiftInfo)(nil),        // 76: voiceroom.SendGiftInfo
	(*SendGiftRsp)(nil),         // 77: voiceroom.SendGiftRsp
	(*PuSendGiftMsg)(nil),       // 78: voiceroom.PuSendGiftMsg
	(*SendEmojiReq)(nil),        // 79: voiceroom.SendEmojiReq
	(*SendEmojiRsp)(nil),        // 80: voiceroom.SendEmojiRsp
	(*PuSendEmojiMsg)(nil),      // 81: voiceroom.PuSendEmojiMsg
	(*SeatKickReq)(nil),         // 82: voiceroom.SeatKickReq
	(*SeatKickRsp)(nil),         // 83: voiceroom.SeatKickRsp
	(*PuSeatKickMsg)(nil),       // 84: voiceroom.PuSeatKickMsg
	(*RoomInviteReq)(nil),       // 85: voiceroom.RoomInviteReq
	(*RoomInviteRsp)(nil),       // 86: voiceroom.RoomInviteRsp
	(*PuRoomInviteMsg)(nil),     // 87: voiceroom.PuRoomInviteMsg
	(*PuPlayMusicMsg)(nil),      // 88: voiceroom.PuPlayMusicMsg
}
var file_voiceroom_voiceroom_proto_depIdxs = []int32{
	8,  // 0: voiceroom.roomInfo.setting:type_name -> voiceroom.roomSetting
	9,  // 1: voiceroom.roomInfo.seatList:type_name -> voiceroom.seatInfo
	10, // 2: voiceroom.roomInfo.pk:type_name -> voiceroom.pkInfo
	7,  // 3: voiceroom.roomInfo.music:type_name -> voiceroom.voiceRoomMusicInfo
	1,  // 4: voiceroom.voiceRoomMusicInfo.status:type_name -> voiceroom.voiceRoomMusicStatus
	5,  // 5: voiceroom.pkInfo.type:type_name -> voiceroom.PkType
	8,  // 6: voiceroom.NewRoomReq.param:type_name -> voiceroom.roomSetting
	11, // 7: voiceroom.NewRoomReq.pos:type_name -> voiceroom.location
	6,  // 8: voiceroom.NewRoomRsp.room:type_name -> voiceroom.roomInfo
	8,  // 9: voiceroom.MyPreRoomRsp.setting:type_name -> voiceroom.roomSetting
	11, // 10: voiceroom.EnterRoomReq.pos:type_name -> voiceroom.location
	6,  // 11: voiceroom.EnterRoomRsp.room:type_name -> voiceroom.roomInfo
	8,  // 12: voiceroom.UpdateSettingReq.setting:type_name -> voiceroom.roomSetting
	8,  // 13: voiceroom.PuUpdateSettingMsg.setting:type_name -> voiceroom.roomSetting
	24, // 14: voiceroom.GetMemberListRsp.members:type_name -> voiceroom.MemberListItem
	2,  // 15: voiceroom.LotteryReq.opt:type_name -> voiceroom.lotteryType
	3,  // 16: voiceroom.InnerCallReq.call_type:type_name -> voiceroom.innerCallType
	31, // 17: voiceroom.InnerCallRsp.room_info:type_name -> voiceroom.adminRoomInfo
	32, // 18: voiceroom.PuPlayerChangeMsg.change_list:type_name -> voiceroom.playerChangeItem
	9,  // 19: voiceroom.PuSeatChangeMsg.seatList:type_name -> voiceroom.seatInfo
	4,  // 20: voiceroom.PlayerManagerReq.opt:type_name -> voiceroom.playerManagerType
	11, // 21: voiceroom.GetNearbyReq.pos:type_name -> voiceroom.location
	52, // 22: voiceroom.GetNearbyRsp.users:type_name -> voiceroom.userGeoInfo
	11, // 23: voiceroom.GetRoomListReq.pos:type_name -> voiceroom.location
	56, // 24: voiceroom.GetRoomListRsp.rooms:type_name -> voiceroom.RoomListItem
	11, // 25: voiceroom.SearchRoomReq.pos:type_name -> voiceroom.location
	59, // 26: voiceroom.SearchRoomRsp.top_member:type_name -> voiceroom.topShowMember
	5,  // 27: voiceroom.StartPkReq.type:type_name -> voiceroom.PkType
	10, // 28: voiceroom.StartPkRsp.pk_info:type_name -> voiceroom.pkInfo
	10, // 29: voiceroom.PuStartPkMsg.pk_info:type_name -> voiceroom.pkInfo
	10, // 30: voiceroom.GetPkInfoRsp.pk_info:type_name -> voiceroom.pkInfo
	67, // 31: voiceroom.PuRoomChatMsg.messages:type_name -> voiceroom.RoomChatMsg
	10, // 32: voiceroom.PkVoteRsp.pk_info:type_name -> voiceroom.pkInfo
	76, // 33: voiceroom.PkSendGiftReq.info:type_name -> voiceroom.SendGiftInfo
	10, // 34: voiceroom.PkSendGiftRsp.pk_info:type_name -> voiceroom.pkInfo
	76, // 35: voiceroom.SendGiftReq.info:type_name -> voiceroom.SendGiftInfo
	7,  // 36: voiceroom.PuPlayMusicMsg.music:type_name -> voiceroom.voiceRoomMusicInfo
	37, // [37:37] is the sub-list for method output_type
	37, // [37:37] is the sub-list for method input_type
	37, // [37:37] is the sub-list for extension type_name
	37, // [37:37] is the sub-list for extension extendee
	0,  // [0:37] is the sub-list for field type_name
}

func init() { file_voiceroom_voiceroom_proto_init() }
func file_voiceroom_voiceroom_proto_init() {
	if File_voiceroom_voiceroom_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_voiceroom_voiceroom_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RoomInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_voiceroom_voiceroom_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VoiceRoomMusicInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_voiceroom_voiceroom_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RoomSetting); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_voiceroom_voiceroom_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SeatInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_voiceroom_voiceroom_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PkInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_voiceroom_voiceroom_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Location); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_voiceroom_voiceroom_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NewRoomReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_voiceroom_voiceroom_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NewRoomRsp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_voiceroom_voiceroom_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MyPreRoomReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_voiceroom_voiceroom_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MyPreRoomRsp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_voiceroom_voiceroom_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EnterRoomReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_voiceroom_voiceroom_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EnterRoomRsp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_voiceroom_voiceroom_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateSettingReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_voiceroom_voiceroom_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateSettingRsp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_voiceroom_voiceroom_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PuUpdateSettingMsg); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_voiceroom_voiceroom_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ExitRoomReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_voiceroom_voiceroom_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ExitRoomRsp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_voiceroom_voiceroom_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetMemberListReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_voiceroom_voiceroom_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MemberListItem); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_voiceroom_voiceroom_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetMemberListRsp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_voiceroom_voiceroom_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LotteryReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_voiceroom_voiceroom_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LotteryRsp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_voiceroom_voiceroom_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PuLotteryResultMsg); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_voiceroom_voiceroom_proto_msgTypes[23].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*InnerCallReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_voiceroom_voiceroom_proto_msgTypes[24].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*InnerCallRsp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_voiceroom_voiceroom_proto_msgTypes[25].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AdminRoomInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_voiceroom_voiceroom_proto_msgTypes[26].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PlayerChangeItem); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_voiceroom_voiceroom_proto_msgTypes[27].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PuPlayerChangeMsg); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_voiceroom_voiceroom_proto_msgTypes[28].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PuSeatChangeMsg); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_voiceroom_voiceroom_proto_msgTypes[29].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LockSeatReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_voiceroom_voiceroom_proto_msgTypes[30].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LockSeatRsp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_voiceroom_voiceroom_proto_msgTypes[31].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PlayerManagerReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_voiceroom_voiceroom_proto_msgTypes[32].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PlayerManagerRsp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_voiceroom_voiceroom_proto_msgTypes[33].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SeatInviteReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_voiceroom_voiceroom_proto_msgTypes[34].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SeatInviteRsp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_voiceroom_voiceroom_proto_msgTypes[35].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PuSeatInviteMsg); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_voiceroom_voiceroom_proto_msgTypes[36].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*HandleSeatInviteReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_voiceroom_voiceroom_proto_msgTypes[37].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*HandleSeatInviteRsp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_voiceroom_voiceroom_proto_msgTypes[38].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UseSeatReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_voiceroom_voiceroom_proto_msgTypes[39].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UseSeatRsp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_voiceroom_voiceroom_proto_msgTypes[40].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PuRoomCloseMsg); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_voiceroom_voiceroom_proto_msgTypes[41].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MicOptReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_voiceroom_voiceroom_proto_msgTypes[42].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MicOptRsp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_voiceroom_voiceroom_proto_msgTypes[43].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SendRedPackReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_voiceroom_voiceroom_proto_msgTypes[44].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SendRedPackRsp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_voiceroom_voiceroom_proto_msgTypes[45].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PuRedPackMsg); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_voiceroom_voiceroom_proto_msgTypes[46].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserGeoInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_voiceroom_voiceroom_proto_msgTypes[47].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetNearbyReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_voiceroom_voiceroom_proto_msgTypes[48].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetNearbyRsp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_voiceroom_voiceroom_proto_msgTypes[49].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetRoomListReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_voiceroom_voiceroom_proto_msgTypes[50].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RoomListItem); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_voiceroom_voiceroom_proto_msgTypes[51].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetRoomListRsp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_voiceroom_voiceroom_proto_msgTypes[52].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SearchRoomReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_voiceroom_voiceroom_proto_msgTypes[53].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TopShowMember); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_voiceroom_voiceroom_proto_msgTypes[54].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SearchRoomRsp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_voiceroom_voiceroom_proto_msgTypes[55].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StartPkReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_voiceroom_voiceroom_proto_msgTypes[56].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StartPkRsp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_voiceroom_voiceroom_proto_msgTypes[57].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PuStartPkMsg); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_voiceroom_voiceroom_proto_msgTypes[58].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetPkInfoReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_voiceroom_voiceroom_proto_msgTypes[59].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetPkInfoRsp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_voiceroom_voiceroom_proto_msgTypes[60].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PuPkResultMsg); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_voiceroom_voiceroom_proto_msgTypes[61].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RoomChatMsg); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_voiceroom_voiceroom_proto_msgTypes[62].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PuRoomChatMsg); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_voiceroom_voiceroom_proto_msgTypes[63].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PkVoteReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_voiceroom_voiceroom_proto_msgTypes[64].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PkVoteRsp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_voiceroom_voiceroom_proto_msgTypes[65].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PkSendGiftReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_voiceroom_voiceroom_proto_msgTypes[66].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PkSendGiftRsp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_voiceroom_voiceroom_proto_msgTypes[67].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SendChatReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_voiceroom_voiceroom_proto_msgTypes[68].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SendChatRsp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_voiceroom_voiceroom_proto_msgTypes[69].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SendGiftReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_voiceroom_voiceroom_proto_msgTypes[70].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SendGiftInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_voiceroom_voiceroom_proto_msgTypes[71].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SendGiftRsp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_voiceroom_voiceroom_proto_msgTypes[72].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PuSendGiftMsg); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_voiceroom_voiceroom_proto_msgTypes[73].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SendEmojiReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_voiceroom_voiceroom_proto_msgTypes[74].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SendEmojiRsp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_voiceroom_voiceroom_proto_msgTypes[75].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PuSendEmojiMsg); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_voiceroom_voiceroom_proto_msgTypes[76].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SeatKickReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_voiceroom_voiceroom_proto_msgTypes[77].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SeatKickRsp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_voiceroom_voiceroom_proto_msgTypes[78].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PuSeatKickMsg); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_voiceroom_voiceroom_proto_msgTypes[79].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RoomInviteReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_voiceroom_voiceroom_proto_msgTypes[80].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RoomInviteRsp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_voiceroom_voiceroom_proto_msgTypes[81].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PuRoomInviteMsg); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_voiceroom_voiceroom_proto_msgTypes[82].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PuPlayMusicMsg); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_voiceroom_voiceroom_proto_rawDesc,
			NumEnums:      6,
			NumMessages:   83,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_voiceroom_voiceroom_proto_goTypes,
		DependencyIndexes: file_voiceroom_voiceroom_proto_depIdxs,
		EnumInfos:         file_voiceroom_voiceroom_proto_enumTypes,
		MessageInfos:      file_voiceroom_voiceroom_proto_msgTypes,
	}.Build()
	File_voiceroom_voiceroom_proto = out.File
	file_voiceroom_voiceroom_proto_rawDesc = nil
	file_voiceroom_voiceroom_proto_goTypes = nil
	file_voiceroom_voiceroom_proto_depIdxs = nil
}
