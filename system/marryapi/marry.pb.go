// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.31.0
// 	protoc        v4.25.1
// source: system/marryapi/marry.proto

package marryapi

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// marry_api/change_ring req
// route: marryapi.ChangeRing
type ChangeRingReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Uid    string `protobuf:"bytes,1,opt,name=uid,proto3" json:"uid,omitempty"`
	RingId int64  `protobuf:"varint,2,opt,name=ring_id,json=ringId,proto3" json:"ring_id,omitempty"`
}

func (x *ChangeRingReq) Reset() {
	*x = ChangeRingReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_system_marryapi_marry_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ChangeRingReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChangeRingReq) ProtoMessage() {}

func (x *ChangeRingReq) ProtoReflect() protoreflect.Message {
	mi := &file_system_marryapi_marry_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChangeRingReq.ProtoReflect.Descriptor instead.
func (*ChangeRingReq) Descriptor() ([]byte, []int) {
	return file_system_marryapi_marry_proto_rawDescGZIP(), []int{0}
}

func (x *ChangeRingReq) GetUid() string {
	if x != nil {
		return x.Uid
	}
	return ""
}

func (x *ChangeRingReq) GetRingId() int64 {
	if x != nil {
		return x.RingId
	}
	return 0
}

// marry_api/mark_read req
// route: marryapi.MarkRead
type MarkReadReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Uid   string `protobuf:"bytes,1,opt,name=uid,proto3" json:"uid,omitempty"`
	MsgId int64  `protobuf:"varint,2,opt,name=msg_id,json=msgId,proto3" json:"msg_id,omitempty"`
}

func (x *MarkReadReq) Reset() {
	*x = MarkReadReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_system_marryapi_marry_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MarkReadReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MarkReadReq) ProtoMessage() {}

func (x *MarkReadReq) ProtoReflect() protoreflect.Message {
	mi := &file_system_marryapi_marry_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MarkReadReq.ProtoReflect.Descriptor instead.
func (*MarkReadReq) Descriptor() ([]byte, []int) {
	return file_system_marryapi_marry_proto_rawDescGZIP(), []int{1}
}

func (x *MarkReadReq) GetUid() string {
	if x != nil {
		return x.Uid
	}
	return ""
}

func (x *MarkReadReq) GetMsgId() int64 {
	if x != nil {
		return x.MsgId
	}
	return 0
}

// marry_api/update_couple_bg_v2 req
// route: marryapi.UpdateCoupleBgV2
type UpdateCoupleBgV2Req struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Uid        string `protobuf:"bytes,1,opt,name=uid,proto3" json:"uid,omitempty"`
	CoupleBgId int64  `protobuf:"varint,2,opt,name=couple_bg_id,json=coupleBgId,proto3" json:"couple_bg_id,omitempty"`
	On         bool   `protobuf:"varint,3,opt,name=on,proto3" json:"on,omitempty"`
	Owner      string `protobuf:"bytes,4,opt,name=owner,proto3" json:"owner,omitempty"`
	Version    string `protobuf:"bytes,5,opt,name=version,proto3" json:"version,omitempty"`
}

func (x *UpdateCoupleBgV2Req) Reset() {
	*x = UpdateCoupleBgV2Req{}
	if protoimpl.UnsafeEnabled {
		mi := &file_system_marryapi_marry_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateCoupleBgV2Req) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateCoupleBgV2Req) ProtoMessage() {}

func (x *UpdateCoupleBgV2Req) ProtoReflect() protoreflect.Message {
	mi := &file_system_marryapi_marry_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateCoupleBgV2Req.ProtoReflect.Descriptor instead.
func (*UpdateCoupleBgV2Req) Descriptor() ([]byte, []int) {
	return file_system_marryapi_marry_proto_rawDescGZIP(), []int{2}
}

func (x *UpdateCoupleBgV2Req) GetUid() string {
	if x != nil {
		return x.Uid
	}
	return ""
}

func (x *UpdateCoupleBgV2Req) GetCoupleBgId() int64 {
	if x != nil {
		return x.CoupleBgId
	}
	return 0
}

func (x *UpdateCoupleBgV2Req) GetOn() bool {
	if x != nil {
		return x.On
	}
	return false
}

func (x *UpdateCoupleBgV2Req) GetOwner() string {
	if x != nil {
		return x.Owner
	}
	return ""
}

func (x *UpdateCoupleBgV2Req) GetVersion() string {
	if x != nil {
		return x.Version
	}
	return ""
}

// marry_api/get_church_info req
// route: marryapi.GetChurchInfo
type GetChurchInfoReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Uid      string `protobuf:"bytes,1,opt,name=uid,proto3" json:"uid,omitempty"`
	Platform int64  `protobuf:"varint,2,opt,name=platform,proto3" json:"platform,omitempty"`
	Source   int64  `protobuf:"varint,3,opt,name=source,proto3" json:"source,omitempty"`
}

func (x *GetChurchInfoReq) Reset() {
	*x = GetChurchInfoReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_system_marryapi_marry_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetChurchInfoReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetChurchInfoReq) ProtoMessage() {}

func (x *GetChurchInfoReq) ProtoReflect() protoreflect.Message {
	mi := &file_system_marryapi_marry_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetChurchInfoReq.ProtoReflect.Descriptor instead.
func (*GetChurchInfoReq) Descriptor() ([]byte, []int) {
	return file_system_marryapi_marry_proto_rawDescGZIP(), []int{3}
}

func (x *GetChurchInfoReq) GetUid() string {
	if x != nil {
		return x.Uid
	}
	return ""
}

func (x *GetChurchInfoReq) GetPlatform() int64 {
	if x != nil {
		return x.Platform
	}
	return 0
}

func (x *GetChurchInfoReq) GetSource() int64 {
	if x != nil {
		return x.Source
	}
	return 0
}

type GetChurchInfoRsp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MsgList     []*ChurchMsg    `protobuf:"bytes,1,rep,name=msg_list,json=msgList,proto3" json:"msg_list,omitempty"`
	WeddingList []*WeddingInfo  `protobuf:"bytes,2,rep,name=wedding_list,json=weddingList,proto3" json:"wedding_list,omitempty"` // most count is 20
	RingList    []*UserRingInfo `protobuf:"bytes,3,rep,name=ring_list,json=ringList,proto3" json:"ring_list,omitempty"`
}

func (x *GetChurchInfoRsp) Reset() {
	*x = GetChurchInfoRsp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_system_marryapi_marry_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetChurchInfoRsp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetChurchInfoRsp) ProtoMessage() {}

func (x *GetChurchInfoRsp) ProtoReflect() protoreflect.Message {
	mi := &file_system_marryapi_marry_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetChurchInfoRsp.ProtoReflect.Descriptor instead.
func (*GetChurchInfoRsp) Descriptor() ([]byte, []int) {
	return file_system_marryapi_marry_proto_rawDescGZIP(), []int{4}
}

func (x *GetChurchInfoRsp) GetMsgList() []*ChurchMsg {
	if x != nil {
		return x.MsgList
	}
	return nil
}

func (x *GetChurchInfoRsp) GetWeddingList() []*WeddingInfo {
	if x != nil {
		return x.WeddingList
	}
	return nil
}

func (x *GetChurchInfoRsp) GetRingList() []*UserRingInfo {
	if x != nil {
		return x.RingList
	}
	return nil
}

type UserRingInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RingId  int64 `protobuf:"varint,1,opt,name=ring_id,json=ringId,proto3" json:"ring_id,omitempty"`
	Num     int64 `protobuf:"varint,2,opt,name=num,proto3" json:"num,omitempty"`
	UsedNum int64 `protobuf:"varint,3,opt,name=used_num,json=usedNum,proto3" json:"used_num,omitempty"`
	Time    int64 `protobuf:"varint,4,opt,name=time,proto3" json:"time,omitempty"`
}

func (x *UserRingInfo) Reset() {
	*x = UserRingInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_system_marryapi_marry_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserRingInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserRingInfo) ProtoMessage() {}

func (x *UserRingInfo) ProtoReflect() protoreflect.Message {
	mi := &file_system_marryapi_marry_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserRingInfo.ProtoReflect.Descriptor instead.
func (*UserRingInfo) Descriptor() ([]byte, []int) {
	return file_system_marryapi_marry_proto_rawDescGZIP(), []int{5}
}

func (x *UserRingInfo) GetRingId() int64 {
	if x != nil {
		return x.RingId
	}
	return 0
}

func (x *UserRingInfo) GetNum() int64 {
	if x != nil {
		return x.Num
	}
	return 0
}

func (x *UserRingInfo) GetUsedNum() int64 {
	if x != nil {
		return x.UsedNum
	}
	return 0
}

func (x *UserRingInfo) GetTime() int64 {
	if x != nil {
		return x.Time
	}
	return 0
}

type WeddingInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	WeddingId  int64           `protobuf:"varint,1,opt,name=wedding_id,json=weddingId,proto3" json:"wedding_id,omitempty"`
	MarryId    int64           `protobuf:"varint,2,opt,name=marry_id,json=marryId,proto3" json:"marry_id,omitempty"`
	TemplateId int64           `protobuf:"varint,3,opt,name=template_id,json=templateId,proto3" json:"template_id,omitempty"`
	MusicId    int64           `protobuf:"varint,4,opt,name=music_id,json=musicId,proto3" json:"music_id,omitempty"`
	Platform   int64           `protobuf:"varint,5,opt,name=platform,proto3" json:"platform,omitempty"`
	RingId     int64           `protobuf:"varint,6,opt,name=ring_id,json=ringId,proto3" json:"ring_id,omitempty"`
	RoomLimit  int64           `protobuf:"varint,7,opt,name=room_limit,json=roomLimit,proto3" json:"room_limit,omitempty"`
	Content    string          `protobuf:"bytes,8,opt,name=content,proto3" json:"content,omitempty"`
	CpUserInfo *SimpleUserInfo `protobuf:"bytes,9,opt,name=cp_user_info,json=cpUserInfo,proto3" json:"cp_user_info,omitempty"`
	UserInfo   *SimpleUserInfo `protobuf:"bytes,10,opt,name=user_info,json=userInfo,proto3" json:"user_info,omitempty"`
	StartTime  int64           `protobuf:"varint,11,opt,name=start_time,json=startTime,proto3" json:"start_time,omitempty"`
	FinishTime int64           `protobuf:"varint,12,opt,name=finish_time,json=finishTime,proto3" json:"finish_time,omitempty"`
	AddTime    int64           `protobuf:"varint,13,opt,name=add_time,json=addTime,proto3" json:"add_time,omitempty"`
	JoinType   int64           `protobuf:"varint,14,opt,name=join_type,json=joinType,proto3" json:"join_type,omitempty"`
}

func (x *WeddingInfo) Reset() {
	*x = WeddingInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_system_marryapi_marry_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WeddingInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WeddingInfo) ProtoMessage() {}

func (x *WeddingInfo) ProtoReflect() protoreflect.Message {
	mi := &file_system_marryapi_marry_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WeddingInfo.ProtoReflect.Descriptor instead.
func (*WeddingInfo) Descriptor() ([]byte, []int) {
	return file_system_marryapi_marry_proto_rawDescGZIP(), []int{6}
}

func (x *WeddingInfo) GetWeddingId() int64 {
	if x != nil {
		return x.WeddingId
	}
	return 0
}

func (x *WeddingInfo) GetMarryId() int64 {
	if x != nil {
		return x.MarryId
	}
	return 0
}

func (x *WeddingInfo) GetTemplateId() int64 {
	if x != nil {
		return x.TemplateId
	}
	return 0
}

func (x *WeddingInfo) GetMusicId() int64 {
	if x != nil {
		return x.MusicId
	}
	return 0
}

func (x *WeddingInfo) GetPlatform() int64 {
	if x != nil {
		return x.Platform
	}
	return 0
}

func (x *WeddingInfo) GetRingId() int64 {
	if x != nil {
		return x.RingId
	}
	return 0
}

func (x *WeddingInfo) GetRoomLimit() int64 {
	if x != nil {
		return x.RoomLimit
	}
	return 0
}

func (x *WeddingInfo) GetContent() string {
	if x != nil {
		return x.Content
	}
	return ""
}

func (x *WeddingInfo) GetCpUserInfo() *SimpleUserInfo {
	if x != nil {
		return x.CpUserInfo
	}
	return nil
}

func (x *WeddingInfo) GetUserInfo() *SimpleUserInfo {
	if x != nil {
		return x.UserInfo
	}
	return nil
}

func (x *WeddingInfo) GetStartTime() int64 {
	if x != nil {
		return x.StartTime
	}
	return 0
}

func (x *WeddingInfo) GetFinishTime() int64 {
	if x != nil {
		return x.FinishTime
	}
	return 0
}

func (x *WeddingInfo) GetAddTime() int64 {
	if x != nil {
		return x.AddTime
	}
	return 0
}

func (x *WeddingInfo) GetJoinType() int64 {
	if x != nil {
		return x.JoinType
	}
	return 0
}

type ChurchMsg struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MsgId      int64           `protobuf:"varint,1,opt,name=msg_id,json=msgId,proto3" json:"msg_id,omitempty"`
	Type       int64           `protobuf:"varint,2,opt,name=type,proto3" json:"type,omitempty"`
	RequestId  int64           `protobuf:"varint,3,opt,name=request_id,json=requestId,proto3" json:"request_id,omitempty"`
	Title      string          `protobuf:"bytes,4,opt,name=title,proto3" json:"title,omitempty"`
	Content    string          `protobuf:"bytes,5,opt,name=content,proto3" json:"content,omitempty"`
	TitleV2    string          `protobuf:"bytes,6,opt,name=title_v2,json=titleV2,proto3" json:"title_v2,omitempty"`
	ContentV2  string          `protobuf:"bytes,7,opt,name=content_v2,json=contentV2,proto3" json:"content_v2,omitempty"`
	RingId     int64           `protobuf:"varint,8,opt,name=ring_id,json=ringId,proto3" json:"ring_id,omitempty"`
	WeddingId  int64           `protobuf:"varint,9,opt,name=wedding_id,json=weddingId,proto3" json:"wedding_id,omitempty"`
	InviteUid  string          `protobuf:"bytes,10,opt,name=invite_uid,json=inviteUid,proto3" json:"invite_uid,omitempty"`
	MarryId    int64           `protobuf:"varint,11,opt,name=marry_id,json=marryId,proto3" json:"marry_id,omitempty"`
	UserInfo   *SimpleUserInfo `protobuf:"bytes,12,opt,name=user_info,json=userInfo,proto3" json:"user_info,omitempty"`
	CpUserInfo *SimpleUserInfo `protobuf:"bytes,13,opt,name=cp_user_info,json=cpUserInfo,proto3" json:"cp_user_info,omitempty"`
}

func (x *ChurchMsg) Reset() {
	*x = ChurchMsg{}
	if protoimpl.UnsafeEnabled {
		mi := &file_system_marryapi_marry_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ChurchMsg) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChurchMsg) ProtoMessage() {}

func (x *ChurchMsg) ProtoReflect() protoreflect.Message {
	mi := &file_system_marryapi_marry_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChurchMsg.ProtoReflect.Descriptor instead.
func (*ChurchMsg) Descriptor() ([]byte, []int) {
	return file_system_marryapi_marry_proto_rawDescGZIP(), []int{7}
}

func (x *ChurchMsg) GetMsgId() int64 {
	if x != nil {
		return x.MsgId
	}
	return 0
}

func (x *ChurchMsg) GetType() int64 {
	if x != nil {
		return x.Type
	}
	return 0
}

func (x *ChurchMsg) GetRequestId() int64 {
	if x != nil {
		return x.RequestId
	}
	return 0
}

func (x *ChurchMsg) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *ChurchMsg) GetContent() string {
	if x != nil {
		return x.Content
	}
	return ""
}

func (x *ChurchMsg) GetTitleV2() string {
	if x != nil {
		return x.TitleV2
	}
	return ""
}

func (x *ChurchMsg) GetContentV2() string {
	if x != nil {
		return x.ContentV2
	}
	return ""
}

func (x *ChurchMsg) GetRingId() int64 {
	if x != nil {
		return x.RingId
	}
	return 0
}

func (x *ChurchMsg) GetWeddingId() int64 {
	if x != nil {
		return x.WeddingId
	}
	return 0
}

func (x *ChurchMsg) GetInviteUid() string {
	if x != nil {
		return x.InviteUid
	}
	return ""
}

func (x *ChurchMsg) GetMarryId() int64 {
	if x != nil {
		return x.MarryId
	}
	return 0
}

func (x *ChurchMsg) GetUserInfo() *SimpleUserInfo {
	if x != nil {
		return x.UserInfo
	}
	return nil
}

func (x *ChurchMsg) GetCpUserInfo() *SimpleUserInfo {
	if x != nil {
		return x.CpUserInfo
	}
	return nil
}

type SimpleUserInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Uid      string `protobuf:"bytes,1,opt,name=uid,proto3" json:"uid,omitempty"`
	Nickname string `protobuf:"bytes,2,opt,name=nickname,proto3" json:"nickname,omitempty"`
	Avatar   string `protobuf:"bytes,3,opt,name=avatar,proto3" json:"avatar,omitempty"`
	BoxId    int64  `protobuf:"varint,4,opt,name=box_id,json=boxId,proto3" json:"box_id,omitempty"`
	Gender   int64  `protobuf:"varint,5,opt,name=gender,proto3" json:"gender,omitempty"`
	Verified int64  `protobuf:"varint,6,opt,name=verified,proto3" json:"verified,omitempty"`
}

func (x *SimpleUserInfo) Reset() {
	*x = SimpleUserInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_system_marryapi_marry_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SimpleUserInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SimpleUserInfo) ProtoMessage() {}

func (x *SimpleUserInfo) ProtoReflect() protoreflect.Message {
	mi := &file_system_marryapi_marry_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SimpleUserInfo.ProtoReflect.Descriptor instead.
func (*SimpleUserInfo) Descriptor() ([]byte, []int) {
	return file_system_marryapi_marry_proto_rawDescGZIP(), []int{8}
}

func (x *SimpleUserInfo) GetUid() string {
	if x != nil {
		return x.Uid
	}
	return ""
}

func (x *SimpleUserInfo) GetNickname() string {
	if x != nil {
		return x.Nickname
	}
	return ""
}

func (x *SimpleUserInfo) GetAvatar() string {
	if x != nil {
		return x.Avatar
	}
	return ""
}

func (x *SimpleUserInfo) GetBoxId() int64 {
	if x != nil {
		return x.BoxId
	}
	return 0
}

func (x *SimpleUserInfo) GetGender() int64 {
	if x != nil {
		return x.Gender
	}
	return 0
}

func (x *SimpleUserInfo) GetVerified() int64 {
	if x != nil {
		return x.Verified
	}
	return 0
}

// route: marryapi.GetWeddingList req
// 分页查询
type GetWeddingListReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PageOffset int64 `protobuf:"varint,1,opt,name=page_offset,json=pageOffset,proto3" json:"page_offset,omitempty"` // 偏移页数，从0开始计数
	PageSize   int64 `protobuf:"varint,2,opt,name=page_size,json=pageSize,proto3" json:"page_size,omitempty"`       // 页的大小，一次查询返回的记录数
	Platform   int64 `protobuf:"varint,3,opt,name=platform,proto3" json:"platform,omitempty"`
}

func (x *GetWeddingListReq) Reset() {
	*x = GetWeddingListReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_system_marryapi_marry_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetWeddingListReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetWeddingListReq) ProtoMessage() {}

func (x *GetWeddingListReq) ProtoReflect() protoreflect.Message {
	mi := &file_system_marryapi_marry_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetWeddingListReq.ProtoReflect.Descriptor instead.
func (*GetWeddingListReq) Descriptor() ([]byte, []int) {
	return file_system_marryapi_marry_proto_rawDescGZIP(), []int{9}
}

func (x *GetWeddingListReq) GetPageOffset() int64 {
	if x != nil {
		return x.PageOffset
	}
	return 0
}

func (x *GetWeddingListReq) GetPageSize() int64 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

func (x *GetWeddingListReq) GetPlatform() int64 {
	if x != nil {
		return x.Platform
	}
	return 0
}

type GetWeddingListRsp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Total       int64          `protobuf:"varint,1,opt,name=total,proto3" json:"total,omitempty"` // 记录总数
	WeddingList []*WeddingInfo `protobuf:"bytes,2,rep,name=wedding_list,json=weddingList,proto3" json:"wedding_list,omitempty"`
}

func (x *GetWeddingListRsp) Reset() {
	*x = GetWeddingListRsp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_system_marryapi_marry_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetWeddingListRsp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetWeddingListRsp) ProtoMessage() {}

func (x *GetWeddingListRsp) ProtoReflect() protoreflect.Message {
	mi := &file_system_marryapi_marry_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetWeddingListRsp.ProtoReflect.Descriptor instead.
func (*GetWeddingListRsp) Descriptor() ([]byte, []int) {
	return file_system_marryapi_marry_proto_rawDescGZIP(), []int{10}
}

func (x *GetWeddingListRsp) GetTotal() int64 {
	if x != nil {
		return x.Total
	}
	return 0
}

func (x *GetWeddingListRsp) GetWeddingList() []*WeddingInfo {
	if x != nil {
		return x.WeddingList
	}
	return nil
}

// marry_api/get_create_wedding_state req
// route: marryapi.GetCreateWeddingState
type GetCreateWeddingStateReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Uid      string `protobuf:"bytes,1,opt,name=uid,proto3" json:"uid,omitempty"`
	Version  string `protobuf:"bytes,2,opt,name=version,proto3" json:"version,omitempty"`
	Platform int64  `protobuf:"varint,3,opt,name=platform,proto3" json:"platform,omitempty"`
	Market   string `protobuf:"bytes,4,opt,name=market,proto3" json:"market,omitempty"`
}

func (x *GetCreateWeddingStateReq) Reset() {
	*x = GetCreateWeddingStateReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_system_marryapi_marry_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetCreateWeddingStateReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetCreateWeddingStateReq) ProtoMessage() {}

func (x *GetCreateWeddingStateReq) ProtoReflect() protoreflect.Message {
	mi := &file_system_marryapi_marry_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetCreateWeddingStateReq.ProtoReflect.Descriptor instead.
func (*GetCreateWeddingStateReq) Descriptor() ([]byte, []int) {
	return file_system_marryapi_marry_proto_rawDescGZIP(), []int{11}
}

func (x *GetCreateWeddingStateReq) GetUid() string {
	if x != nil {
		return x.Uid
	}
	return ""
}

func (x *GetCreateWeddingStateReq) GetVersion() string {
	if x != nil {
		return x.Version
	}
	return ""
}

func (x *GetCreateWeddingStateReq) GetPlatform() int64 {
	if x != nil {
		return x.Platform
	}
	return 0
}

func (x *GetCreateWeddingStateReq) GetMarket() string {
	if x != nil {
		return x.Market
	}
	return ""
}

type GetCreateWeddingStateRsp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Type           int64        `protobuf:"varint,1,opt,name=type,proto3" json:"type,omitempty"`
	Msg            string       `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg,omitempty"`
	InvitationInfo *WeddingInfo `protobuf:"bytes,3,opt,name=invitation_info,json=invitationInfo,proto3" json:"invitation_info,omitempty"`
	MarryTimeList  []*Wrs       `protobuf:"bytes,4,rep,name=marry_time_list,json=marryTimeList,proto3" json:"marry_time_list,omitempty"`
}

func (x *GetCreateWeddingStateRsp) Reset() {
	*x = GetCreateWeddingStateRsp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_system_marryapi_marry_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetCreateWeddingStateRsp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetCreateWeddingStateRsp) ProtoMessage() {}

func (x *GetCreateWeddingStateRsp) ProtoReflect() protoreflect.Message {
	mi := &file_system_marryapi_marry_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetCreateWeddingStateRsp.ProtoReflect.Descriptor instead.
func (*GetCreateWeddingStateRsp) Descriptor() ([]byte, []int) {
	return file_system_marryapi_marry_proto_rawDescGZIP(), []int{12}
}

func (x *GetCreateWeddingStateRsp) GetType() int64 {
	if x != nil {
		return x.Type
	}
	return 0
}

func (x *GetCreateWeddingStateRsp) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

func (x *GetCreateWeddingStateRsp) GetInvitationInfo() *WeddingInfo {
	if x != nil {
		return x.InvitationInfo
	}
	return nil
}

func (x *GetCreateWeddingStateRsp) GetMarryTimeList() []*Wrs {
	if x != nil {
		return x.MarryTimeList
	}
	return nil
}

type Item struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FinishTime int64 `protobuf:"varint,1,opt,name=finish_time,json=finishTime,proto3" json:"finish_time,omitempty"`
	StartTime  int64 `protobuf:"varint,2,opt,name=start_time,json=startTime,proto3" json:"start_time,omitempty"`
	State      bool  `protobuf:"varint,3,opt,name=state,proto3" json:"state,omitempty"`
}

func (x *Item) Reset() {
	*x = Item{}
	if protoimpl.UnsafeEnabled {
		mi := &file_system_marryapi_marry_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Item) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Item) ProtoMessage() {}

func (x *Item) ProtoReflect() protoreflect.Message {
	mi := &file_system_marryapi_marry_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Item.ProtoReflect.Descriptor instead.
func (*Item) Descriptor() ([]byte, []int) {
	return file_system_marryapi_marry_proto_rawDescGZIP(), []int{13}
}

func (x *Item) GetFinishTime() int64 {
	if x != nil {
		return x.FinishTime
	}
	return 0
}

func (x *Item) GetStartTime() int64 {
	if x != nil {
		return x.StartTime
	}
	return 0
}

func (x *Item) GetState() bool {
	if x != nil {
		return x.State
	}
	return false
}

type Wrs struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Day          string  `protobuf:"bytes,1,opt,name=day,proto3" json:"day,omitempty"`
	Time         int64   `protobuf:"varint,2,opt,name=time,proto3" json:"time,omitempty"`
	SubList      []*Item `protobuf:"bytes,3,rep,name=sub_list,json=subList,proto3" json:"sub_list,omitempty"`
	LimitSubList []*Item `protobuf:"bytes,4,rep,name=limit_sub_list,json=limitSubList,proto3" json:"limit_sub_list,omitempty"`
}

func (x *Wrs) Reset() {
	*x = Wrs{}
	if protoimpl.UnsafeEnabled {
		mi := &file_system_marryapi_marry_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Wrs) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Wrs) ProtoMessage() {}

func (x *Wrs) ProtoReflect() protoreflect.Message {
	mi := &file_system_marryapi_marry_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Wrs.ProtoReflect.Descriptor instead.
func (*Wrs) Descriptor() ([]byte, []int) {
	return file_system_marryapi_marry_proto_rawDescGZIP(), []int{14}
}

func (x *Wrs) GetDay() string {
	if x != nil {
		return x.Day
	}
	return ""
}

func (x *Wrs) GetTime() int64 {
	if x != nil {
		return x.Time
	}
	return 0
}

func (x *Wrs) GetSubList() []*Item {
	if x != nil {
		return x.SubList
	}
	return nil
}

func (x *Wrs) GetLimitSubList() []*Item {
	if x != nil {
		return x.LimitSubList
	}
	return nil
}

var File_system_marryapi_marry_proto protoreflect.FileDescriptor

var file_system_marryapi_marry_proto_rawDesc = []byte{
	0x0a, 0x1b, 0x73, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x2f, 0x6d, 0x61, 0x72, 0x72, 0x79, 0x61, 0x70,
	0x69, 0x2f, 0x6d, 0x61, 0x72, 0x72, 0x79, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x08, 0x6d,
	0x61, 0x72, 0x72, 0x79, 0x61, 0x70, 0x69, 0x22, 0x3a, 0x0a, 0x0d, 0x43, 0x68, 0x61, 0x6e, 0x67,
	0x65, 0x52, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x71, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x75, 0x69, 0x64, 0x12, 0x17, 0x0a, 0x07, 0x72, 0x69,
	0x6e, 0x67, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x72, 0x69, 0x6e,
	0x67, 0x49, 0x64, 0x22, 0x36, 0x0a, 0x0b, 0x4d, 0x61, 0x72, 0x6b, 0x52, 0x65, 0x61, 0x64, 0x52,
	0x65, 0x71, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x03, 0x75, 0x69, 0x64, 0x12, 0x15, 0x0a, 0x06, 0x6d, 0x73, 0x67, 0x5f, 0x69, 0x64, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x6d, 0x73, 0x67, 0x49, 0x64, 0x22, 0x89, 0x01, 0x0a, 0x13,
	0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x43, 0x6f, 0x75, 0x70, 0x6c, 0x65, 0x42, 0x67, 0x56, 0x32,
	0x52, 0x65, 0x71, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x03, 0x75, 0x69, 0x64, 0x12, 0x20, 0x0a, 0x0c, 0x63, 0x6f, 0x75, 0x70, 0x6c, 0x65, 0x5f,
	0x62, 0x67, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x63, 0x6f, 0x75,
	0x70, 0x6c, 0x65, 0x42, 0x67, 0x49, 0x64, 0x12, 0x0e, 0x0a, 0x02, 0x6f, 0x6e, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x08, 0x52, 0x02, 0x6f, 0x6e, 0x12, 0x14, 0x0a, 0x05, 0x6f, 0x77, 0x6e, 0x65, 0x72,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x6f, 0x77, 0x6e, 0x65, 0x72, 0x12, 0x18, 0x0a,
	0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07,
	0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x22, 0x58, 0x0a, 0x10, 0x47, 0x65, 0x74, 0x43, 0x68,
	0x75, 0x72, 0x63, 0x68, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x71, 0x12, 0x10, 0x0a, 0x03, 0x75,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x75, 0x69, 0x64, 0x12, 0x1a, 0x0a,
	0x08, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x08, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x6f, 0x75,
	0x72, 0x63, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x73, 0x6f, 0x75, 0x72, 0x63,
	0x65, 0x22, 0xb1, 0x01, 0x0a, 0x10, 0x47, 0x65, 0x74, 0x43, 0x68, 0x75, 0x72, 0x63, 0x68, 0x49,
	0x6e, 0x66, 0x6f, 0x52, 0x73, 0x70, 0x12, 0x2e, 0x0a, 0x08, 0x6d, 0x73, 0x67, 0x5f, 0x6c, 0x69,
	0x73, 0x74, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x6d, 0x61, 0x72, 0x72, 0x79,
	0x61, 0x70, 0x69, 0x2e, 0x43, 0x68, 0x75, 0x72, 0x63, 0x68, 0x4d, 0x73, 0x67, 0x52, 0x07, 0x6d,
	0x73, 0x67, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x38, 0x0a, 0x0c, 0x77, 0x65, 0x64, 0x64, 0x69, 0x6e,
	0x67, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x6d,
	0x61, 0x72, 0x72, 0x79, 0x61, 0x70, 0x69, 0x2e, 0x57, 0x65, 0x64, 0x64, 0x69, 0x6e, 0x67, 0x49,
	0x6e, 0x66, 0x6f, 0x52, 0x0b, 0x77, 0x65, 0x64, 0x64, 0x69, 0x6e, 0x67, 0x4c, 0x69, 0x73, 0x74,
	0x12, 0x33, 0x0a, 0x09, 0x72, 0x69, 0x6e, 0x67, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x03, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x6d, 0x61, 0x72, 0x72, 0x79, 0x61, 0x70, 0x69, 0x2e, 0x55,
	0x73, 0x65, 0x72, 0x52, 0x69, 0x6e, 0x67, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x08, 0x72, 0x69, 0x6e,
	0x67, 0x4c, 0x69, 0x73, 0x74, 0x22, 0x68, 0x0a, 0x0c, 0x55, 0x73, 0x65, 0x72, 0x52, 0x69, 0x6e,
	0x67, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x17, 0x0a, 0x07, 0x72, 0x69, 0x6e, 0x67, 0x5f, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x72, 0x69, 0x6e, 0x67, 0x49, 0x64, 0x12, 0x10,
	0x0a, 0x03, 0x6e, 0x75, 0x6d, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x03, 0x6e, 0x75, 0x6d,
	0x12, 0x19, 0x0a, 0x08, 0x75, 0x73, 0x65, 0x64, 0x5f, 0x6e, 0x75, 0x6d, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x07, 0x75, 0x73, 0x65, 0x64, 0x4e, 0x75, 0x6d, 0x12, 0x12, 0x0a, 0x04, 0x74,
	0x69, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x74, 0x69, 0x6d, 0x65, 0x22,
	0xdc, 0x03, 0x0a, 0x0b, 0x57, 0x65, 0x64, 0x64, 0x69, 0x6e, 0x67, 0x49, 0x6e, 0x66, 0x6f, 0x12,
	0x1d, 0x0a, 0x0a, 0x77, 0x65, 0x64, 0x64, 0x69, 0x6e, 0x67, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x09, 0x77, 0x65, 0x64, 0x64, 0x69, 0x6e, 0x67, 0x49, 0x64, 0x12, 0x19,
	0x0a, 0x08, 0x6d, 0x61, 0x72, 0x72, 0x79, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x07, 0x6d, 0x61, 0x72, 0x72, 0x79, 0x49, 0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x74, 0x65, 0x6d,
	0x70, 0x6c, 0x61, 0x74, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a,
	0x74, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x49, 0x64, 0x12, 0x19, 0x0a, 0x08, 0x6d, 0x75,
	0x73, 0x69, 0x63, 0x5f, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x6d, 0x75,
	0x73, 0x69, 0x63, 0x49, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72,
	0x6d, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72,
	0x6d, 0x12, 0x17, 0x0a, 0x07, 0x72, 0x69, 0x6e, 0x67, 0x5f, 0x69, 0x64, 0x18, 0x06, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x06, 0x72, 0x69, 0x6e, 0x67, 0x49, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x72, 0x6f,
	0x6f, 0x6d, 0x5f, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x18, 0x07, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09,
	0x72, 0x6f, 0x6f, 0x6d, 0x4c, 0x69, 0x6d, 0x69, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x6f, 0x6e,
	0x74, 0x65, 0x6e, 0x74, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x6f, 0x6e, 0x74,
	0x65, 0x6e, 0x74, 0x12, 0x3a, 0x0a, 0x0c, 0x63, 0x70, 0x5f, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69,
	0x6e, 0x66, 0x6f, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x6d, 0x61, 0x72, 0x72,
	0x79, 0x61, 0x70, 0x69, 0x2e, 0x53, 0x69, 0x6d, 0x70, 0x6c, 0x65, 0x55, 0x73, 0x65, 0x72, 0x49,
	0x6e, 0x66, 0x6f, 0x52, 0x0a, 0x63, 0x70, 0x55, 0x73, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x12,
	0x35, 0x0a, 0x09, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x0a, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x18, 0x2e, 0x6d, 0x61, 0x72, 0x72, 0x79, 0x61, 0x70, 0x69, 0x2e, 0x53, 0x69,
	0x6d, 0x70, 0x6c, 0x65, 0x55, 0x73, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x08, 0x75, 0x73,
	0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x1d, 0x0a, 0x0a, 0x73, 0x74, 0x61, 0x72, 0x74, 0x5f,
	0x74, 0x69, 0x6d, 0x65, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x73, 0x74, 0x61, 0x72,
	0x74, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x66, 0x69, 0x6e, 0x69, 0x73, 0x68, 0x5f,
	0x74, 0x69, 0x6d, 0x65, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x66, 0x69, 0x6e, 0x69,
	0x73, 0x68, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x19, 0x0a, 0x08, 0x61, 0x64, 0x64, 0x5f, 0x74, 0x69,
	0x6d, 0x65, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x61, 0x64, 0x64, 0x54, 0x69, 0x6d,
	0x65, 0x12, 0x1b, 0x0a, 0x09, 0x6a, 0x6f, 0x69, 0x6e, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x0e,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x6a, 0x6f, 0x69, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x22, 0xa4,
	0x03, 0x0a, 0x09, 0x43, 0x68, 0x75, 0x72, 0x63, 0x68, 0x4d, 0x73, 0x67, 0x12, 0x15, 0x0a, 0x06,
	0x6d, 0x73, 0x67, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x6d, 0x73,
	0x67, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x72, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x72, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x49, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x18, 0x0a, 0x07,
	0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63,
	0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x12, 0x19, 0x0a, 0x08, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x5f,
	0x76, 0x32, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x56,
	0x32, 0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x5f, 0x76, 0x32, 0x18,
	0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x56, 0x32,
	0x12, 0x17, 0x0a, 0x07, 0x72, 0x69, 0x6e, 0x67, 0x5f, 0x69, 0x64, 0x18, 0x08, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x06, 0x72, 0x69, 0x6e, 0x67, 0x49, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x77, 0x65, 0x64,
	0x64, 0x69, 0x6e, 0x67, 0x5f, 0x69, 0x64, 0x18, 0x09, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x77,
	0x65, 0x64, 0x64, 0x69, 0x6e, 0x67, 0x49, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x69, 0x6e, 0x76, 0x69,
	0x74, 0x65, 0x5f, 0x75, 0x69, 0x64, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x69, 0x6e,
	0x76, 0x69, 0x74, 0x65, 0x55, 0x69, 0x64, 0x12, 0x19, 0x0a, 0x08, 0x6d, 0x61, 0x72, 0x72, 0x79,
	0x5f, 0x69, 0x64, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x6d, 0x61, 0x72, 0x72, 0x79,
	0x49, 0x64, 0x12, 0x35, 0x0a, 0x09, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x18,
	0x0c, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x6d, 0x61, 0x72, 0x72, 0x79, 0x61, 0x70, 0x69,
	0x2e, 0x53, 0x69, 0x6d, 0x70, 0x6c, 0x65, 0x55, 0x73, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x52,
	0x08, 0x75, 0x73, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x3a, 0x0a, 0x0c, 0x63, 0x70, 0x5f,
	0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x18, 0x2e, 0x6d, 0x61, 0x72, 0x72, 0x79, 0x61, 0x70, 0x69, 0x2e, 0x53, 0x69, 0x6d, 0x70, 0x6c,
	0x65, 0x55, 0x73, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x0a, 0x63, 0x70, 0x55, 0x73, 0x65,
	0x72, 0x49, 0x6e, 0x66, 0x6f, 0x22, 0xa1, 0x01, 0x0a, 0x0e, 0x53, 0x69, 0x6d, 0x70, 0x6c, 0x65,
	0x55, 0x73, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x75, 0x69, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x6e, 0x69,
	0x63, 0x6b, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6e, 0x69,
	0x63, 0x6b, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x61, 0x76, 0x61, 0x74, 0x61, 0x72,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x61, 0x76, 0x61, 0x74, 0x61, 0x72, 0x12, 0x15,
	0x0a, 0x06, 0x62, 0x6f, 0x78, 0x5f, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05,
	0x62, 0x6f, 0x78, 0x49, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x67, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x67, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x12, 0x1a, 0x0a,
	0x08, 0x76, 0x65, 0x72, 0x69, 0x66, 0x69, 0x65, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x08, 0x76, 0x65, 0x72, 0x69, 0x66, 0x69, 0x65, 0x64, 0x22, 0x6d, 0x0a, 0x11, 0x47, 0x65, 0x74,
	0x57, 0x65, 0x64, 0x64, 0x69, 0x6e, 0x67, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x12, 0x1f,
	0x0a, 0x0b, 0x70, 0x61, 0x67, 0x65, 0x5f, 0x6f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x0a, 0x70, 0x61, 0x67, 0x65, 0x4f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x12,
	0x1b, 0x0a, 0x09, 0x70, 0x61, 0x67, 0x65, 0x5f, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x08, 0x70, 0x61, 0x67, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x12, 0x1a, 0x0a, 0x08,
	0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08,
	0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x22, 0x63, 0x0a, 0x11, 0x47, 0x65, 0x74, 0x57,
	0x65, 0x64, 0x64, 0x69, 0x6e, 0x67, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x73, 0x70, 0x12, 0x14, 0x0a,
	0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x74, 0x6f,
	0x74, 0x61, 0x6c, 0x12, 0x38, 0x0a, 0x0c, 0x77, 0x65, 0x64, 0x64, 0x69, 0x6e, 0x67, 0x5f, 0x6c,
	0x69, 0x73, 0x74, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x6d, 0x61, 0x72, 0x72,
	0x79, 0x61, 0x70, 0x69, 0x2e, 0x57, 0x65, 0x64, 0x64, 0x69, 0x6e, 0x67, 0x49, 0x6e, 0x66, 0x6f,
	0x52, 0x0b, 0x77, 0x65, 0x64, 0x64, 0x69, 0x6e, 0x67, 0x4c, 0x69, 0x73, 0x74, 0x22, 0x7a, 0x0a,
	0x18, 0x47, 0x65, 0x74, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x57, 0x65, 0x64, 0x64, 0x69, 0x6e,
	0x67, 0x53, 0x74, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x75, 0x69, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x76,
	0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x76, 0x65,
	0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72,
	0x6d, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72,
	0x6d, 0x12, 0x16, 0x0a, 0x06, 0x6d, 0x61, 0x72, 0x6b, 0x65, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x06, 0x6d, 0x61, 0x72, 0x6b, 0x65, 0x74, 0x22, 0xb7, 0x01, 0x0a, 0x18, 0x47, 0x65,
	0x74, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x57, 0x65, 0x64, 0x64, 0x69, 0x6e, 0x67, 0x53, 0x74,
	0x61, 0x74, 0x65, 0x52, 0x73, 0x70, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x6d, 0x73,
	0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6d, 0x73, 0x67, 0x12, 0x3e, 0x0a, 0x0f,
	0x69, 0x6e, 0x76, 0x69, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x6d, 0x61, 0x72, 0x72, 0x79, 0x61, 0x70, 0x69,
	0x2e, 0x57, 0x65, 0x64, 0x64, 0x69, 0x6e, 0x67, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x0e, 0x69, 0x6e,
	0x76, 0x69, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x35, 0x0a, 0x0f,
	0x6d, 0x61, 0x72, 0x72, 0x79, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x18,
	0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x6d, 0x61, 0x72, 0x72, 0x79, 0x61, 0x70, 0x69,
	0x2e, 0x57, 0x72, 0x73, 0x52, 0x0d, 0x6d, 0x61, 0x72, 0x72, 0x79, 0x54, 0x69, 0x6d, 0x65, 0x4c,
	0x69, 0x73, 0x74, 0x22, 0x5c, 0x0a, 0x04, 0x49, 0x74, 0x65, 0x6d, 0x12, 0x1f, 0x0a, 0x0b, 0x66,
	0x69, 0x6e, 0x69, 0x73, 0x68, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x0a, 0x66, 0x69, 0x6e, 0x69, 0x73, 0x68, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x1d, 0x0a, 0x0a,
	0x73, 0x74, 0x61, 0x72, 0x74, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x09, 0x73, 0x74, 0x61, 0x72, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x73,
	0x74, 0x61, 0x74, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x05, 0x73, 0x74, 0x61, 0x74,
	0x65, 0x22, 0x8c, 0x01, 0x0a, 0x03, 0x57, 0x72, 0x73, 0x12, 0x10, 0x0a, 0x03, 0x64, 0x61, 0x79,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x64, 0x61, 0x79, 0x12, 0x12, 0x0a, 0x04, 0x74,
	0x69, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x74, 0x69, 0x6d, 0x65, 0x12,
	0x29, 0x0a, 0x08, 0x73, 0x75, 0x62, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x03, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x0e, 0x2e, 0x6d, 0x61, 0x72, 0x72, 0x79, 0x61, 0x70, 0x69, 0x2e, 0x49, 0x74, 0x65,
	0x6d, 0x52, 0x07, 0x73, 0x75, 0x62, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x34, 0x0a, 0x0e, 0x6c, 0x69,
	0x6d, 0x69, 0x74, 0x5f, 0x73, 0x75, 0x62, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x04, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x6d, 0x61, 0x72, 0x72, 0x79, 0x61, 0x70, 0x69, 0x2e, 0x49, 0x74,
	0x65, 0x6d, 0x52, 0x0c, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x53, 0x75, 0x62, 0x4c, 0x69, 0x73, 0x74,
	0x42, 0x31, 0x5a, 0x2f, 0x67, 0x69, 0x74, 0x2e, 0x31, 0x37, 0x7a, 0x6a, 0x68, 0x2e, 0x63, 0x6f,
	0x6d, 0x2f, 0x73, 0x6e, 0x61, 0x6b, 0x65, 0x2f, 0x73, 0x6e, 0x61, 0x6b, 0x65, 0x5f, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x2f, 0x73, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x2f, 0x6d, 0x61, 0x72, 0x72, 0x79,
	0x61, 0x70, 0x69, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_system_marryapi_marry_proto_rawDescOnce sync.Once
	file_system_marryapi_marry_proto_rawDescData = file_system_marryapi_marry_proto_rawDesc
)

func file_system_marryapi_marry_proto_rawDescGZIP() []byte {
	file_system_marryapi_marry_proto_rawDescOnce.Do(func() {
		file_system_marryapi_marry_proto_rawDescData = protoimpl.X.CompressGZIP(file_system_marryapi_marry_proto_rawDescData)
	})
	return file_system_marryapi_marry_proto_rawDescData
}

var file_system_marryapi_marry_proto_msgTypes = make([]protoimpl.MessageInfo, 15)
var file_system_marryapi_marry_proto_goTypes = []interface{}{
	(*ChangeRingReq)(nil),            // 0: marryapi.ChangeRingReq
	(*MarkReadReq)(nil),              // 1: marryapi.MarkReadReq
	(*UpdateCoupleBgV2Req)(nil),      // 2: marryapi.UpdateCoupleBgV2Req
	(*GetChurchInfoReq)(nil),         // 3: marryapi.GetChurchInfoReq
	(*GetChurchInfoRsp)(nil),         // 4: marryapi.GetChurchInfoRsp
	(*UserRingInfo)(nil),             // 5: marryapi.UserRingInfo
	(*WeddingInfo)(nil),              // 6: marryapi.WeddingInfo
	(*ChurchMsg)(nil),                // 7: marryapi.ChurchMsg
	(*SimpleUserInfo)(nil),           // 8: marryapi.SimpleUserInfo
	(*GetWeddingListReq)(nil),        // 9: marryapi.GetWeddingListReq
	(*GetWeddingListRsp)(nil),        // 10: marryapi.GetWeddingListRsp
	(*GetCreateWeddingStateReq)(nil), // 11: marryapi.GetCreateWeddingStateReq
	(*GetCreateWeddingStateRsp)(nil), // 12: marryapi.GetCreateWeddingStateRsp
	(*Item)(nil),                     // 13: marryapi.Item
	(*Wrs)(nil),                      // 14: marryapi.Wrs
}
var file_system_marryapi_marry_proto_depIdxs = []int32{
	7,  // 0: marryapi.GetChurchInfoRsp.msg_list:type_name -> marryapi.ChurchMsg
	6,  // 1: marryapi.GetChurchInfoRsp.wedding_list:type_name -> marryapi.WeddingInfo
	5,  // 2: marryapi.GetChurchInfoRsp.ring_list:type_name -> marryapi.UserRingInfo
	8,  // 3: marryapi.WeddingInfo.cp_user_info:type_name -> marryapi.SimpleUserInfo
	8,  // 4: marryapi.WeddingInfo.user_info:type_name -> marryapi.SimpleUserInfo
	8,  // 5: marryapi.ChurchMsg.user_info:type_name -> marryapi.SimpleUserInfo
	8,  // 6: marryapi.ChurchMsg.cp_user_info:type_name -> marryapi.SimpleUserInfo
	6,  // 7: marryapi.GetWeddingListRsp.wedding_list:type_name -> marryapi.WeddingInfo
	6,  // 8: marryapi.GetCreateWeddingStateRsp.invitation_info:type_name -> marryapi.WeddingInfo
	14, // 9: marryapi.GetCreateWeddingStateRsp.marry_time_list:type_name -> marryapi.Wrs
	13, // 10: marryapi.Wrs.sub_list:type_name -> marryapi.Item
	13, // 11: marryapi.Wrs.limit_sub_list:type_name -> marryapi.Item
	12, // [12:12] is the sub-list for method output_type
	12, // [12:12] is the sub-list for method input_type
	12, // [12:12] is the sub-list for extension type_name
	12, // [12:12] is the sub-list for extension extendee
	0,  // [0:12] is the sub-list for field type_name
}

func init() { file_system_marryapi_marry_proto_init() }
func file_system_marryapi_marry_proto_init() {
	if File_system_marryapi_marry_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_system_marryapi_marry_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ChangeRingReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_system_marryapi_marry_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MarkReadReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_system_marryapi_marry_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateCoupleBgV2Req); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_system_marryapi_marry_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetChurchInfoReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_system_marryapi_marry_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetChurchInfoRsp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_system_marryapi_marry_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserRingInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_system_marryapi_marry_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WeddingInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_system_marryapi_marry_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ChurchMsg); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_system_marryapi_marry_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SimpleUserInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_system_marryapi_marry_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetWeddingListReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_system_marryapi_marry_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetWeddingListRsp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_system_marryapi_marry_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetCreateWeddingStateReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_system_marryapi_marry_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetCreateWeddingStateRsp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_system_marryapi_marry_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Item); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_system_marryapi_marry_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Wrs); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_system_marryapi_marry_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   15,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_system_marryapi_marry_proto_goTypes,
		DependencyIndexes: file_system_marryapi_marry_proto_depIdxs,
		MessageInfos:      file_system_marryapi_marry_proto_msgTypes,
	}.Build()
	File_system_marryapi_marry_proto = out.File
	file_system_marryapi_marry_proto_rawDesc = nil
	file_system_marryapi_marry_proto_goTypes = nil
	file_system_marryapi_marry_proto_depIdxs = nil
}
