// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.27.1
// 	protoc        v3.16.1
// source: system/friendapi/friend.proto

package friendapi

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// friend_api/set_friend_remark req
// route: friendapi.SetFriendRemark
type SetFriendRemarkReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Uid       string `protobuf:"bytes,1,opt,name=uid,proto3" json:"uid,omitempty"`
	FriendUid string `protobuf:"bytes,2,opt,name=friend_uid,json=friendUid,proto3" json:"friend_uid,omitempty"`
	Remark    string `protobuf:"bytes,3,opt,name=remark,proto3" json:"remark,omitempty"`
}

func (x *SetFriendRemarkReq) Reset() {
	*x = SetFriendRemarkReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_system_friendapi_friend_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SetFriendRemarkReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetFriendRemarkReq) ProtoMessage() {}

func (x *SetFriendRemarkReq) ProtoReflect() protoreflect.Message {
	mi := &file_system_friendapi_friend_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetFriendRemarkReq.ProtoReflect.Descriptor instead.
func (*SetFriendRemarkReq) Descriptor() ([]byte, []int) {
	return file_system_friendapi_friend_proto_rawDescGZIP(), []int{0}
}

func (x *SetFriendRemarkReq) GetUid() string {
	if x != nil {
		return x.Uid
	}
	return ""
}

func (x *SetFriendRemarkReq) GetFriendUid() string {
	if x != nil {
		return x.FriendUid
	}
	return ""
}

func (x *SetFriendRemarkReq) GetRemark() string {
	if x != nil {
		return x.Remark
	}
	return ""
}

// friend_api/add_following req
// route: friendapi.AddFollowing
type AddFollowingReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Uid          string `protobuf:"bytes,1,opt,name=uid,proto3" json:"uid,omitempty"`
	FollowingUid string `protobuf:"bytes,2,opt,name=following_uid,json=followingUid,proto3" json:"following_uid,omitempty"`
	Version      string `protobuf:"bytes,3,opt,name=version,proto3" json:"version,omitempty"`
	Source       int64  `protobuf:"varint,4,opt,name=source,proto3" json:"source,omitempty"`
	SourceV2     int64  `protobuf:"varint,5,opt,name=source_v2,json=sourceV2,proto3" json:"source_v2,omitempty"`
	Platform     int64  `protobuf:"varint,6,opt,name=platform,proto3" json:"platform,omitempty"`
}

func (x *AddFollowingReq) Reset() {
	*x = AddFollowingReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_system_friendapi_friend_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddFollowingReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddFollowingReq) ProtoMessage() {}

func (x *AddFollowingReq) ProtoReflect() protoreflect.Message {
	mi := &file_system_friendapi_friend_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddFollowingReq.ProtoReflect.Descriptor instead.
func (*AddFollowingReq) Descriptor() ([]byte, []int) {
	return file_system_friendapi_friend_proto_rawDescGZIP(), []int{1}
}

func (x *AddFollowingReq) GetUid() string {
	if x != nil {
		return x.Uid
	}
	return ""
}

func (x *AddFollowingReq) GetFollowingUid() string {
	if x != nil {
		return x.FollowingUid
	}
	return ""
}

func (x *AddFollowingReq) GetVersion() string {
	if x != nil {
		return x.Version
	}
	return ""
}

func (x *AddFollowingReq) GetSource() int64 {
	if x != nil {
		return x.Source
	}
	return 0
}

func (x *AddFollowingReq) GetSourceV2() int64 {
	if x != nil {
		return x.SourceV2
	}
	return 0
}

func (x *AddFollowingReq) GetPlatform() int64 {
	if x != nil {
		return x.Platform
	}
	return 0
}

// friend_api/add_following rsp
type AddFollowingRsp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FollowingUserInfo *FriendInfo `protobuf:"bytes,1,opt,name=following_user_info,json=followingUserInfo,proto3" json:"following_user_info,omitempty"`
}

func (x *AddFollowingRsp) Reset() {
	*x = AddFollowingRsp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_system_friendapi_friend_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddFollowingRsp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddFollowingRsp) ProtoMessage() {}

func (x *AddFollowingRsp) ProtoReflect() protoreflect.Message {
	mi := &file_system_friendapi_friend_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddFollowingRsp.ProtoReflect.Descriptor instead.
func (*AddFollowingRsp) Descriptor() ([]byte, []int) {
	return file_system_friendapi_friend_proto_rawDescGZIP(), []int{2}
}

func (x *AddFollowingRsp) GetFollowingUserInfo() *FriendInfo {
	if x != nil {
		return x.FollowingUserInfo
	}
	return nil
}

// 存储好友信息
type FriendInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Uid           string            `protobuf:"bytes,1,opt,name=uid,proto3" json:"uid,omitempty"`
	Time          int64             `protobuf:"varint,2,opt,name=time,proto3" json:"time,omitempty"`
	FriendState   int64             `protobuf:"varint,3,opt,name=friend_state,json=friendState,proto3" json:"friend_state,omitempty"`
	Remark        string            `protobuf:"bytes,4,opt,name=remark,proto3" json:"remark,omitempty"`
	Nickname      string            `protobuf:"bytes,5,opt,name=nickname,proto3" json:"nickname,omitempty"`
	Avatar        string            `protobuf:"bytes,6,opt,name=avatar,proto3" json:"avatar,omitempty"`
	Gender        int64             `protobuf:"varint,7,opt,name=gender,proto3" json:"gender,omitempty"`
	BoxId         int64             `protobuf:"varint,8,opt,name=box_id,json=boxId,proto3" json:"box_id,omitempty"`
	Charm         int64             `protobuf:"varint,9,opt,name=charm,proto3" json:"charm,omitempty"`
	Show          int64             `protobuf:"varint,10,opt,name=show,proto3" json:"show,omitempty"`
	Week          int64             `protobuf:"varint,11,opt,name=week,proto3" json:"week,omitempty"`
	TwEnd         int64             `protobuf:"varint,12,opt,name=tw_end,json=twEnd,proto3" json:"tw_end,omitempty"`
	TwLimit       int64             `protobuf:"varint,13,opt,name=tw_limit,json=twLimit,proto3" json:"tw_limit,omitempty"`
	Mentorship    *Mentorship       `protobuf:"bytes,14,opt,name=mentorship,proto3" json:"mentorship,omitempty"`
	GradeInfo     *GradeInfo        `protobuf:"bytes,15,opt,name=grade_info,json=gradeInfo,proto3" json:"grade_info,omitempty"`
	ExciteInfo    *FriendExciteInfo `protobuf:"bytes,16,opt,name=excite_info,json=exciteInfo,proto3" json:"excite_info,omitempty"`
	EscapeInfo    *FriendEscapeInfo `protobuf:"bytes,17,opt,name=escape_info,json=escapeInfo,proto3" json:"escape_info,omitempty"`
	IsUnderage    int64             `protobuf:"varint,18,opt,name=is_underage,json=isUnderage,proto3" json:"is_underage,omitempty"`
	CharmExpLevel int64             `protobuf:"varint,19,opt,name=charm_exp_level,json=charmExpLevel,proto3" json:"charm_exp_level,omitempty"`
	Verified      int64             `protobuf:"varint,20,opt,name=verified,proto3" json:"verified,omitempty"`
	SocialBgId    int64             `protobuf:"varint,21,opt,name=social_bg_id,json=socialBgId,proto3" json:"social_bg_id,omitempty"`
	ChargeExp     int64             `protobuf:"varint,22,opt,name=charge_exp,json=chargeExp,proto3" json:"charge_exp,omitempty"`
}

func (x *FriendInfo) Reset() {
	*x = FriendInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_system_friendapi_friend_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FriendInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FriendInfo) ProtoMessage() {}

func (x *FriendInfo) ProtoReflect() protoreflect.Message {
	mi := &file_system_friendapi_friend_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FriendInfo.ProtoReflect.Descriptor instead.
func (*FriendInfo) Descriptor() ([]byte, []int) {
	return file_system_friendapi_friend_proto_rawDescGZIP(), []int{3}
}

func (x *FriendInfo) GetUid() string {
	if x != nil {
		return x.Uid
	}
	return ""
}

func (x *FriendInfo) GetTime() int64 {
	if x != nil {
		return x.Time
	}
	return 0
}

func (x *FriendInfo) GetFriendState() int64 {
	if x != nil {
		return x.FriendState
	}
	return 0
}

func (x *FriendInfo) GetRemark() string {
	if x != nil {
		return x.Remark
	}
	return ""
}

func (x *FriendInfo) GetNickname() string {
	if x != nil {
		return x.Nickname
	}
	return ""
}

func (x *FriendInfo) GetAvatar() string {
	if x != nil {
		return x.Avatar
	}
	return ""
}

func (x *FriendInfo) GetGender() int64 {
	if x != nil {
		return x.Gender
	}
	return 0
}

func (x *FriendInfo) GetBoxId() int64 {
	if x != nil {
		return x.BoxId
	}
	return 0
}

func (x *FriendInfo) GetCharm() int64 {
	if x != nil {
		return x.Charm
	}
	return 0
}

func (x *FriendInfo) GetShow() int64 {
	if x != nil {
		return x.Show
	}
	return 0
}

func (x *FriendInfo) GetWeek() int64 {
	if x != nil {
		return x.Week
	}
	return 0
}

func (x *FriendInfo) GetTwEnd() int64 {
	if x != nil {
		return x.TwEnd
	}
	return 0
}

func (x *FriendInfo) GetTwLimit() int64 {
	if x != nil {
		return x.TwLimit
	}
	return 0
}

func (x *FriendInfo) GetMentorship() *Mentorship {
	if x != nil {
		return x.Mentorship
	}
	return nil
}

func (x *FriendInfo) GetGradeInfo() *GradeInfo {
	if x != nil {
		return x.GradeInfo
	}
	return nil
}

func (x *FriendInfo) GetExciteInfo() *FriendExciteInfo {
	if x != nil {
		return x.ExciteInfo
	}
	return nil
}

func (x *FriendInfo) GetEscapeInfo() *FriendEscapeInfo {
	if x != nil {
		return x.EscapeInfo
	}
	return nil
}

func (x *FriendInfo) GetIsUnderage() int64 {
	if x != nil {
		return x.IsUnderage
	}
	return 0
}

func (x *FriendInfo) GetCharmExpLevel() int64 {
	if x != nil {
		return x.CharmExpLevel
	}
	return 0
}

func (x *FriendInfo) GetVerified() int64 {
	if x != nil {
		return x.Verified
	}
	return 0
}

func (x *FriendInfo) GetSocialBgId() int64 {
	if x != nil {
		return x.SocialBgId
	}
	return 0
}

func (x *FriendInfo) GetChargeExp() int64 {
	if x != nil {
		return x.ChargeExp
	}
	return 0
}

type Mentorship struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BondValue int64 `protobuf:"varint,1,opt,name=bond_value,json=bondValue,proto3" json:"bond_value,omitempty"`
	IsFade    bool  `protobuf:"varint,2,opt,name=is_fade,json=isFade,proto3" json:"is_fade,omitempty"`
	ShipType  int64 `protobuf:"varint,3,opt,name=ship_type,json=shipType,proto3" json:"ship_type,omitempty"`
}

func (x *Mentorship) Reset() {
	*x = Mentorship{}
	if protoimpl.UnsafeEnabled {
		mi := &file_system_friendapi_friend_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Mentorship) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Mentorship) ProtoMessage() {}

func (x *Mentorship) ProtoReflect() protoreflect.Message {
	mi := &file_system_friendapi_friend_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Mentorship.ProtoReflect.Descriptor instead.
func (*Mentorship) Descriptor() ([]byte, []int) {
	return file_system_friendapi_friend_proto_rawDescGZIP(), []int{4}
}

func (x *Mentorship) GetBondValue() int64 {
	if x != nil {
		return x.BondValue
	}
	return 0
}

func (x *Mentorship) GetIsFade() bool {
	if x != nil {
		return x.IsFade
	}
	return false
}

func (x *Mentorship) GetShipType() int64 {
	if x != nil {
		return x.ShipType
	}
	return 0
}

type FriendExciteInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	WeekBest    int64  `protobuf:"varint,1,opt,name=week_best,json=weekBest,proto3" json:"week_best,omitempty"`
	HistoryBest int64  `protobuf:"varint,2,opt,name=history_best,json=historyBest,proto3" json:"history_best,omitempty"`
	Week        string `protobuf:"bytes,3,opt,name=week,proto3" json:"week,omitempty"`
	Month       string `protobuf:"bytes,4,opt,name=month,proto3" json:"month,omitempty"`
}

func (x *FriendExciteInfo) Reset() {
	*x = FriendExciteInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_system_friendapi_friend_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FriendExciteInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FriendExciteInfo) ProtoMessage() {}

func (x *FriendExciteInfo) ProtoReflect() protoreflect.Message {
	mi := &file_system_friendapi_friend_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FriendExciteInfo.ProtoReflect.Descriptor instead.
func (*FriendExciteInfo) Descriptor() ([]byte, []int) {
	return file_system_friendapi_friend_proto_rawDescGZIP(), []int{5}
}

func (x *FriendExciteInfo) GetWeekBest() int64 {
	if x != nil {
		return x.WeekBest
	}
	return 0
}

func (x *FriendExciteInfo) GetHistoryBest() int64 {
	if x != nil {
		return x.HistoryBest
	}
	return 0
}

func (x *FriendExciteInfo) GetWeek() string {
	if x != nil {
		return x.Week
	}
	return ""
}

func (x *FriendExciteInfo) GetMonth() string {
	if x != nil {
		return x.Month
	}
	return ""
}

type FriendEscapeInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AccPoint int64 `protobuf:"varint,1,opt,name=acc_point,json=accPoint,proto3" json:"acc_point,omitempty"`
}

func (x *FriendEscapeInfo) Reset() {
	*x = FriendEscapeInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_system_friendapi_friend_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FriendEscapeInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FriendEscapeInfo) ProtoMessage() {}

func (x *FriendEscapeInfo) ProtoReflect() protoreflect.Message {
	mi := &file_system_friendapi_friend_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FriendEscapeInfo.ProtoReflect.Descriptor instead.
func (*FriendEscapeInfo) Descriptor() ([]byte, []int) {
	return file_system_friendapi_friend_proto_rawDescGZIP(), []int{6}
}

func (x *FriendEscapeInfo) GetAccPoint() int64 {
	if x != nil {
		return x.AccPoint
	}
	return 0
}

type GradeInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ultimate  int64   `protobuf:"varint,1,opt,name=ultimate,proto3" json:"ultimate,omitempty"`
	Star      int64   `protobuf:"varint,2,opt,name=star,proto3" json:"star,omitempty"`
	MaxStar   int64   `protobuf:"varint,3,opt,name=max_star,json=maxStar,proto3" json:"max_star,omitempty"`
	Time      int64   `protobuf:"varint,4,opt,name=time,proto3" json:"time,omitempty"`
	Unlock    int64   `protobuf:"varint,5,opt,name=unlock,proto3" json:"unlock,omitempty"`
	RankCount []int64 `protobuf:"varint,6,rep,packed,name=rank_count,json=rankCount,proto3" json:"rank_count,omitempty"`
	PvpCount  int64   `protobuf:"varint,7,opt,name=PvpCount,proto3" json:"PvpCount,omitempty"`
}

func (x *GradeInfo) Reset() {
	*x = GradeInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_system_friendapi_friend_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GradeInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GradeInfo) ProtoMessage() {}

func (x *GradeInfo) ProtoReflect() protoreflect.Message {
	mi := &file_system_friendapi_friend_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GradeInfo.ProtoReflect.Descriptor instead.
func (*GradeInfo) Descriptor() ([]byte, []int) {
	return file_system_friendapi_friend_proto_rawDescGZIP(), []int{7}
}

func (x *GradeInfo) GetUltimate() int64 {
	if x != nil {
		return x.Ultimate
	}
	return 0
}

func (x *GradeInfo) GetStar() int64 {
	if x != nil {
		return x.Star
	}
	return 0
}

func (x *GradeInfo) GetMaxStar() int64 {
	if x != nil {
		return x.MaxStar
	}
	return 0
}

func (x *GradeInfo) GetTime() int64 {
	if x != nil {
		return x.Time
	}
	return 0
}

func (x *GradeInfo) GetUnlock() int64 {
	if x != nil {
		return x.Unlock
	}
	return 0
}

func (x *GradeInfo) GetRankCount() []int64 {
	if x != nil {
		return x.RankCount
	}
	return nil
}

func (x *GradeInfo) GetPvpCount() int64 {
	if x != nil {
		return x.PvpCount
	}
	return 0
}

// friend_api/delete_following req
// route: friendapi.DeleteFollowing
type DeleteFollowingReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Uid          string `protobuf:"bytes,1,opt,name=uid,proto3" json:"uid,omitempty"`
	FollowingUid string `protobuf:"bytes,2,opt,name=following_uid,json=followingUid,proto3" json:"following_uid,omitempty"`
}

func (x *DeleteFollowingReq) Reset() {
	*x = DeleteFollowingReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_system_friendapi_friend_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteFollowingReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteFollowingReq) ProtoMessage() {}

func (x *DeleteFollowingReq) ProtoReflect() protoreflect.Message {
	mi := &file_system_friendapi_friend_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteFollowingReq.ProtoReflect.Descriptor instead.
func (*DeleteFollowingReq) Descriptor() ([]byte, []int) {
	return file_system_friendapi_friend_proto_rawDescGZIP(), []int{8}
}

func (x *DeleteFollowingReq) GetUid() string {
	if x != nil {
		return x.Uid
	}
	return ""
}

func (x *DeleteFollowingReq) GetFollowingUid() string {
	if x != nil {
		return x.FollowingUid
	}
	return ""
}

// friend_api/add_black_user req
// route: friendapi.AddBlackUser
type AddBlackUserReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Uid      string `protobuf:"bytes,1,opt,name=uid,proto3" json:"uid,omitempty"`
	BlackUid string `protobuf:"bytes,2,opt,name=black_uid,json=blackUid,proto3" json:"black_uid,omitempty"`
}

func (x *AddBlackUserReq) Reset() {
	*x = AddBlackUserReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_system_friendapi_friend_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddBlackUserReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddBlackUserReq) ProtoMessage() {}

func (x *AddBlackUserReq) ProtoReflect() protoreflect.Message {
	mi := &file_system_friendapi_friend_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddBlackUserReq.ProtoReflect.Descriptor instead.
func (*AddBlackUserReq) Descriptor() ([]byte, []int) {
	return file_system_friendapi_friend_proto_rawDescGZIP(), []int{9}
}

func (x *AddBlackUserReq) GetUid() string {
	if x != nil {
		return x.Uid
	}
	return ""
}

func (x *AddBlackUserReq) GetBlackUid() string {
	if x != nil {
		return x.BlackUid
	}
	return ""
}

var File_system_friendapi_friend_proto protoreflect.FileDescriptor

var file_system_friendapi_friend_proto_rawDesc = []byte{
	0x0a, 0x1d, 0x73, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x2f, 0x66, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x61,
	0x70, 0x69, 0x2f, 0x66, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12,
	0x09, 0x66, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x61, 0x70, 0x69, 0x22, 0x5d, 0x0a, 0x12, 0x53, 0x65,
	0x74, 0x46, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x52, 0x65, 0x6d, 0x61, 0x72, 0x6b, 0x52, 0x65, 0x71,
	0x12, 0x10, 0x0a, 0x03, 0x75, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x75,
	0x69, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x66, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x5f, 0x75, 0x69, 0x64,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x66, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x55, 0x69,
	0x64, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x6d, 0x61, 0x72, 0x6b, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x06, 0x72, 0x65, 0x6d, 0x61, 0x72, 0x6b, 0x22, 0xb3, 0x01, 0x0a, 0x0f, 0x41, 0x64,
	0x64, 0x46, 0x6f, 0x6c, 0x6c, 0x6f, 0x77, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x71, 0x12, 0x10, 0x0a,
	0x03, 0x75, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x75, 0x69, 0x64, 0x12,
	0x23, 0x0a, 0x0d, 0x66, 0x6f, 0x6c, 0x6c, 0x6f, 0x77, 0x69, 0x6e, 0x67, 0x5f, 0x75, 0x69, 0x64,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x66, 0x6f, 0x6c, 0x6c, 0x6f, 0x77, 0x69, 0x6e,
	0x67, 0x55, 0x69, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x16,
	0x0a, 0x06, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06,
	0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65,
	0x5f, 0x76, 0x32, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x73, 0x6f, 0x75, 0x72, 0x63,
	0x65, 0x56, 0x32, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x18,
	0x06, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x22,
	0x58, 0x0a, 0x0f, 0x41, 0x64, 0x64, 0x46, 0x6f, 0x6c, 0x6c, 0x6f, 0x77, 0x69, 0x6e, 0x67, 0x52,
	0x73, 0x70, 0x12, 0x45, 0x0a, 0x13, 0x66, 0x6f, 0x6c, 0x6c, 0x6f, 0x77, 0x69, 0x6e, 0x67, 0x5f,
	0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x15, 0x2e, 0x66, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x61, 0x70, 0x69, 0x2e, 0x46, 0x72, 0x69, 0x65,
	0x6e, 0x64, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x11, 0x66, 0x6f, 0x6c, 0x6c, 0x6f, 0x77, 0x69, 0x6e,
	0x67, 0x55, 0x73, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x22, 0xce, 0x05, 0x0a, 0x0a, 0x46, 0x72,
	0x69, 0x65, 0x6e, 0x64, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x75, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x69,
	0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x74, 0x69, 0x6d, 0x65, 0x12, 0x21,
	0x0a, 0x0c, 0x66, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x65, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x0b, 0x66, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x53, 0x74, 0x61, 0x74,
	0x65, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x6d, 0x61, 0x72, 0x6b, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x06, 0x72, 0x65, 0x6d, 0x61, 0x72, 0x6b, 0x12, 0x1a, 0x0a, 0x08, 0x6e, 0x69, 0x63,
	0x6b, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6e, 0x69, 0x63,
	0x6b, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x61, 0x76, 0x61, 0x74, 0x61, 0x72, 0x18,
	0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x61, 0x76, 0x61, 0x74, 0x61, 0x72, 0x12, 0x16, 0x0a,
	0x06, 0x67, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x18, 0x07, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x67,
	0x65, 0x6e, 0x64, 0x65, 0x72, 0x12, 0x15, 0x0a, 0x06, 0x62, 0x6f, 0x78, 0x5f, 0x69, 0x64, 0x18,
	0x08, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x62, 0x6f, 0x78, 0x49, 0x64, 0x12, 0x14, 0x0a, 0x05,
	0x63, 0x68, 0x61, 0x72, 0x6d, 0x18, 0x09, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x63, 0x68, 0x61,
	0x72, 0x6d, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x68, 0x6f, 0x77, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x04, 0x73, 0x68, 0x6f, 0x77, 0x12, 0x12, 0x0a, 0x04, 0x77, 0x65, 0x65, 0x6b, 0x18, 0x0b,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x77, 0x65, 0x65, 0x6b, 0x12, 0x15, 0x0a, 0x06, 0x74, 0x77,
	0x5f, 0x65, 0x6e, 0x64, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x74, 0x77, 0x45, 0x6e,
	0x64, 0x12, 0x19, 0x0a, 0x08, 0x74, 0x77, 0x5f, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x18, 0x0d, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x07, 0x74, 0x77, 0x4c, 0x69, 0x6d, 0x69, 0x74, 0x12, 0x35, 0x0a, 0x0a,
	0x6d, 0x65, 0x6e, 0x74, 0x6f, 0x72, 0x73, 0x68, 0x69, 0x70, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x15, 0x2e, 0x66, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x61, 0x70, 0x69, 0x2e, 0x4d, 0x65, 0x6e,
	0x74, 0x6f, 0x72, 0x73, 0x68, 0x69, 0x70, 0x52, 0x0a, 0x6d, 0x65, 0x6e, 0x74, 0x6f, 0x72, 0x73,
	0x68, 0x69, 0x70, 0x12, 0x33, 0x0a, 0x0a, 0x67, 0x72, 0x61, 0x64, 0x65, 0x5f, 0x69, 0x6e, 0x66,
	0x6f, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x66, 0x72, 0x69, 0x65, 0x6e, 0x64,
	0x61, 0x70, 0x69, 0x2e, 0x47, 0x72, 0x61, 0x64, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x09, 0x67,
	0x72, 0x61, 0x64, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x3c, 0x0a, 0x0b, 0x65, 0x78, 0x63, 0x69,
	0x74, 0x65, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x10, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e,
	0x66, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x61, 0x70, 0x69, 0x2e, 0x46, 0x72, 0x69, 0x65, 0x6e, 0x64,
	0x45, 0x78, 0x63, 0x69, 0x74, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x0a, 0x65, 0x78, 0x63, 0x69,
	0x74, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x3c, 0x0a, 0x0b, 0x65, 0x73, 0x63, 0x61, 0x70, 0x65,
	0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x11, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x66, 0x72,
	0x69, 0x65, 0x6e, 0x64, 0x61, 0x70, 0x69, 0x2e, 0x46, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x45, 0x73,
	0x63, 0x61, 0x70, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x0a, 0x65, 0x73, 0x63, 0x61, 0x70, 0x65,
	0x49, 0x6e, 0x66, 0x6f, 0x12, 0x1f, 0x0a, 0x0b, 0x69, 0x73, 0x5f, 0x75, 0x6e, 0x64, 0x65, 0x72,
	0x61, 0x67, 0x65, 0x18, 0x12, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x69, 0x73, 0x55, 0x6e, 0x64,
	0x65, 0x72, 0x61, 0x67, 0x65, 0x12, 0x26, 0x0a, 0x0f, 0x63, 0x68, 0x61, 0x72, 0x6d, 0x5f, 0x65,
	0x78, 0x70, 0x5f, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x18, 0x13, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0d,
	0x63, 0x68, 0x61, 0x72, 0x6d, 0x45, 0x78, 0x70, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x12, 0x1a, 0x0a,
	0x08, 0x76, 0x65, 0x72, 0x69, 0x66, 0x69, 0x65, 0x64, 0x18, 0x14, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x08, 0x76, 0x65, 0x72, 0x69, 0x66, 0x69, 0x65, 0x64, 0x12, 0x20, 0x0a, 0x0c, 0x73, 0x6f, 0x63,
	0x69, 0x61, 0x6c, 0x5f, 0x62, 0x67, 0x5f, 0x69, 0x64, 0x18, 0x15, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x0a, 0x73, 0x6f, 0x63, 0x69, 0x61, 0x6c, 0x42, 0x67, 0x49, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x63,
	0x68, 0x61, 0x72, 0x67, 0x65, 0x5f, 0x65, 0x78, 0x70, 0x18, 0x16, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x09, 0x63, 0x68, 0x61, 0x72, 0x67, 0x65, 0x45, 0x78, 0x70, 0x22, 0x61, 0x0a, 0x0a, 0x4d, 0x65,
	0x6e, 0x74, 0x6f, 0x72, 0x73, 0x68, 0x69, 0x70, 0x12, 0x1d, 0x0a, 0x0a, 0x62, 0x6f, 0x6e, 0x64,
	0x5f, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x62, 0x6f,
	0x6e, 0x64, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x17, 0x0a, 0x07, 0x69, 0x73, 0x5f, 0x66, 0x61,
	0x64, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x69, 0x73, 0x46, 0x61, 0x64, 0x65,
	0x12, 0x1b, 0x0a, 0x09, 0x73, 0x68, 0x69, 0x70, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x08, 0x73, 0x68, 0x69, 0x70, 0x54, 0x79, 0x70, 0x65, 0x22, 0x7c, 0x0a,
	0x10, 0x46, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x45, 0x78, 0x63, 0x69, 0x74, 0x65, 0x49, 0x6e, 0x66,
	0x6f, 0x12, 0x1b, 0x0a, 0x09, 0x77, 0x65, 0x65, 0x6b, 0x5f, 0x62, 0x65, 0x73, 0x74, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x77, 0x65, 0x65, 0x6b, 0x42, 0x65, 0x73, 0x74, 0x12, 0x21,
	0x0a, 0x0c, 0x68, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x5f, 0x62, 0x65, 0x73, 0x74, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x0b, 0x68, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x42, 0x65, 0x73,
	0x74, 0x12, 0x12, 0x0a, 0x04, 0x77, 0x65, 0x65, 0x6b, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x77, 0x65, 0x65, 0x6b, 0x12, 0x14, 0x0a, 0x05, 0x6d, 0x6f, 0x6e, 0x74, 0x68, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x6d, 0x6f, 0x6e, 0x74, 0x68, 0x22, 0x2f, 0x0a, 0x10, 0x46,
	0x72, 0x69, 0x65, 0x6e, 0x64, 0x45, 0x73, 0x63, 0x61, 0x70, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x12,
	0x1b, 0x0a, 0x09, 0x61, 0x63, 0x63, 0x5f, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x08, 0x61, 0x63, 0x63, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x22, 0xbd, 0x01, 0x0a,
	0x09, 0x47, 0x72, 0x61, 0x64, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x1a, 0x0a, 0x08, 0x75, 0x6c,
	0x74, 0x69, 0x6d, 0x61, 0x74, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x75, 0x6c,
	0x74, 0x69, 0x6d, 0x61, 0x74, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x74, 0x61, 0x72, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x73, 0x74, 0x61, 0x72, 0x12, 0x19, 0x0a, 0x08, 0x6d, 0x61,
	0x78, 0x5f, 0x73, 0x74, 0x61, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x6d, 0x61,
	0x78, 0x53, 0x74, 0x61, 0x72, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x04, 0x74, 0x69, 0x6d, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x75, 0x6e, 0x6c,
	0x6f, 0x63, 0x6b, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x75, 0x6e, 0x6c, 0x6f, 0x63,
	0x6b, 0x12, 0x1d, 0x0a, 0x0a, 0x72, 0x61, 0x6e, 0x6b, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18,
	0x06, 0x20, 0x03, 0x28, 0x03, 0x52, 0x09, 0x72, 0x61, 0x6e, 0x6b, 0x43, 0x6f, 0x75, 0x6e, 0x74,
	0x12, 0x1a, 0x0a, 0x08, 0x50, 0x76, 0x70, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x07, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x08, 0x50, 0x76, 0x70, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x22, 0x4b, 0x0a, 0x12,
	0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x46, 0x6f, 0x6c, 0x6c, 0x6f, 0x77, 0x69, 0x6e, 0x67, 0x52,
	0x65, 0x71, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x03, 0x75, 0x69, 0x64, 0x12, 0x23, 0x0a, 0x0d, 0x66, 0x6f, 0x6c, 0x6c, 0x6f, 0x77, 0x69, 0x6e,
	0x67, 0x5f, 0x75, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x66, 0x6f, 0x6c,
	0x6c, 0x6f, 0x77, 0x69, 0x6e, 0x67, 0x55, 0x69, 0x64, 0x22, 0x40, 0x0a, 0x0f, 0x41, 0x64, 0x64,
	0x42, 0x6c, 0x61, 0x63, 0x6b, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x71, 0x12, 0x10, 0x0a, 0x03,
	0x75, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x75, 0x69, 0x64, 0x12, 0x1b,
	0x0a, 0x09, 0x62, 0x6c, 0x61, 0x63, 0x6b, 0x5f, 0x75, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x08, 0x62, 0x6c, 0x61, 0x63, 0x6b, 0x55, 0x69, 0x64, 0x42, 0x32, 0x5a, 0x30, 0x67,
	0x69, 0x74, 0x2e, 0x31, 0x37, 0x7a, 0x6a, 0x68, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x73, 0x6e, 0x61,
	0x6b, 0x65, 0x2f, 0x73, 0x6e, 0x61, 0x6b, 0x65, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x73,
	0x79, 0x73, 0x74, 0x65, 0x6d, 0x2f, 0x66, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x61, 0x70, 0x69, 0x62,
	0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_system_friendapi_friend_proto_rawDescOnce sync.Once
	file_system_friendapi_friend_proto_rawDescData = file_system_friendapi_friend_proto_rawDesc
)

func file_system_friendapi_friend_proto_rawDescGZIP() []byte {
	file_system_friendapi_friend_proto_rawDescOnce.Do(func() {
		file_system_friendapi_friend_proto_rawDescData = protoimpl.X.CompressGZIP(file_system_friendapi_friend_proto_rawDescData)
	})
	return file_system_friendapi_friend_proto_rawDescData
}

var file_system_friendapi_friend_proto_msgTypes = make([]protoimpl.MessageInfo, 10)
var file_system_friendapi_friend_proto_goTypes = []interface{}{
	(*SetFriendRemarkReq)(nil), // 0: friendapi.SetFriendRemarkReq
	(*AddFollowingReq)(nil),    // 1: friendapi.AddFollowingReq
	(*AddFollowingRsp)(nil),    // 2: friendapi.AddFollowingRsp
	(*FriendInfo)(nil),         // 3: friendapi.FriendInfo
	(*Mentorship)(nil),         // 4: friendapi.Mentorship
	(*FriendExciteInfo)(nil),   // 5: friendapi.FriendExciteInfo
	(*FriendEscapeInfo)(nil),   // 6: friendapi.FriendEscapeInfo
	(*GradeInfo)(nil),          // 7: friendapi.GradeInfo
	(*DeleteFollowingReq)(nil), // 8: friendapi.DeleteFollowingReq
	(*AddBlackUserReq)(nil),    // 9: friendapi.AddBlackUserReq
}
var file_system_friendapi_friend_proto_depIdxs = []int32{
	3, // 0: friendapi.AddFollowingRsp.following_user_info:type_name -> friendapi.FriendInfo
	4, // 1: friendapi.FriendInfo.mentorship:type_name -> friendapi.Mentorship
	7, // 2: friendapi.FriendInfo.grade_info:type_name -> friendapi.GradeInfo
	5, // 3: friendapi.FriendInfo.excite_info:type_name -> friendapi.FriendExciteInfo
	6, // 4: friendapi.FriendInfo.escape_info:type_name -> friendapi.FriendEscapeInfo
	5, // [5:5] is the sub-list for method output_type
	5, // [5:5] is the sub-list for method input_type
	5, // [5:5] is the sub-list for extension type_name
	5, // [5:5] is the sub-list for extension extendee
	0, // [0:5] is the sub-list for field type_name
}

func init() { file_system_friendapi_friend_proto_init() }
func file_system_friendapi_friend_proto_init() {
	if File_system_friendapi_friend_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_system_friendapi_friend_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SetFriendRemarkReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_system_friendapi_friend_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddFollowingReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_system_friendapi_friend_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddFollowingRsp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_system_friendapi_friend_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FriendInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_system_friendapi_friend_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Mentorship); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_system_friendapi_friend_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FriendExciteInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_system_friendapi_friend_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FriendEscapeInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_system_friendapi_friend_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GradeInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_system_friendapi_friend_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteFollowingReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_system_friendapi_friend_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddBlackUserReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_system_friendapi_friend_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   10,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_system_friendapi_friend_proto_goTypes,
		DependencyIndexes: file_system_friendapi_friend_proto_depIdxs,
		MessageInfos:      file_system_friendapi_friend_proto_msgTypes,
	}.Build()
	File_system_friendapi_friend_proto = out.File
	file_system_friendapi_friend_proto_rawDesc = nil
	file_system_friendapi_friend_proto_goTypes = nil
	file_system_friendapi_friend_proto_depIdxs = nil
}
