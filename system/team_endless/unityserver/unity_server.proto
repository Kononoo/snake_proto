syntax = "proto3";

package unityserver;
option go_package = "git.17zjh.com/snake/snake_proto/system/team_endless/unityserver";

// 玩家结算时的一些数据，同top_list_v2/update_score接口
message TeamEndlessEndGame {
  string uid = 1; // 结算的玩家uid
  int32 platform = 3;
  string market = 4;
  string version = 5;
  string device_id = 6;
  int32 kill = 9;
  int32 length = 10;
  int32 login_type = 11;
  int32 buff = 12;
  int32 first_charge_state = 13;
  int32 relive_count = 14;
  string relive_types = 15;
  int32 skin_id = 16;
  int32 new_score = 17;
  int32 game_time = 18;
  int32 destroy_length = 19;
  string score = 20;
  int32 collect = 21;
  TeamEndlessSettleType settle_type = 22; // 结算类型
  repeated EndlessTeammate teammates = 23; // 队友
  repeated string followed_list = 24; // 被关注的 uid
  int64 game_count = 25; // 对局次数
  string game_id = 26; // 本局游戏的id，用于区分不同对局的结算，防止重复结算
  int32 tacit_count = 27; // 本局游戏默契次数
  BestTeammate best_teammate = 28;
  bool is_exit_game = 29; // 是否直接退出游戏
  bool is_join_forbidden = 30; // 是否禁止中途加入
}

message TeamEndlessEndGameRsp {
  int64 old_rank_score = 1; // 之前的段位分
  int64 new_rank_score = 2; // 新的段位分
  int64 new_rank_id = 3; // 新的段位id
  int64 add_rank_score = 4; // 增加的段位分
  AiInfo ai = 5; // 中途加入的ai,没有ai时为空
}

message TeamEndlessExitGameReq {
  bool is_join_forbidden = 1; // 是否禁止中途加入
}

message TeamEndlessExitGameRsp {
  AiInfo ai = 1; // 中途加入的ai
}

message AiInfo{
  string uid = 1;  //玩家uid
  int32 platform = 2; // 平台
}

enum TeamEndlessSettleType {
  Normal = 0; // 正常主动结算
  Abnormal = 1; // 异常结算
  Exception = 2; // 发生未知错误，默认不进行结算
}

message EndlessTeammate {
  string uid = 1;
  int32 score = 2;
  int32 skinId = 3;
  repeated int32 tag = 4;
  bool is_ai = 5; // 是否ai
}

message BestTeammate{
  string uid=1;
  int32 partner_count=2;
  int32 partner_time=3;
  int32 partner_share_length=4;
  int32 partner_kill=5;
  int32 partner_length=6;
}
