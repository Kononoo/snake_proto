syntax = "proto3";

import "snakecommon/config.proto";
package endless;
option go_package = "git.17zjh.com/snake/snake_proto/system/team_endless";

message GetRecentPartnerReq { // 获取最近队友
  int32 game_mode = 1;  // 游戏模式
}

message GetRecentPartnerRsp {
  repeated Partner user_list = 1;
}

message Partner {
  string uid = 1;
  string nickname = 2;
  string avatar = 3;
  int32 box_id = 4;
  int32 verified = 5;
  GradeInfo grade_info = 6;
}

// 玩家段位信息
message GradeInfo {
  sint32 ultimate = 1; // 是否王者，1：是
  int32 star = 2; // 星星数
}

message GetGameResultReq { // 获取结算信息
  string uid = 1;
  int64 rid = 2;
  string game_id = 3; // 本局游戏的id，用于区分不同对局的结算，防止重复结算
}

message GetGameResultRsp {
  EndGameNotify result = 1;
}

message UserGameTask {
  int64 day_progress = 1;
  int64 day_reward = 2;
  int64 week_progress = 3;
  int64 week_reward = 4;
  int64 update_time = 5;
  int64 pre_day_progress = 6;
  int64 pre_day_reward = 7;
  int64 pre_week_progress = 8;
  int64 pre_week_reward = 9;
  int64 pre_time = 10;
}

message UserEgg {
  int64 id = 1;
  int32 level = 2;
  int32 state = 3;
  int32 pos = 4;
  int64 open_time = 5;
  int64 ad_count = 6;
}

message UserEggProgress {
  repeated UserEgg egg_list = 1;
  int32 hatched = 2;
  int32 get_new = 3;
  int32 didi = 4;
}

message PassCheckExpDetail {
  int64 count = 1;
  int32 mark_id = 2;
  string from = 3;
}

message GamePassCheckExp {
  int64 exp = 1;
  int64 day = 2;
  repeated PassCheckExpDetail exp_detail = 3;
}

message ActReward {
  string desc = 1;
  repeated snakecommon.CRewardItem reward_list = 2;
}

message GameExtraReward {
  repeated snakecommon.CRewardItem reward_list = 1;
  string btn_link = 2;
}

message UserMeetupProgress {
  int64 act_id = 1;
  int64 finish = 2;
  int64 len = 3;
  int64 add_len = 4;
  int64 days = 5;
  repeated TaskInfo task_info = 6;
}

message UserMeetupProgressItem {
  UserMeetupProgress progress = 1;
  string title_url = 2;
  string button_msg = 3;
  int64 start_time = 4;
}

message UserElGameReward {
  int64 len = 1;
  int64 add_len = 2;
  repeated TaskInfo task_info = 3;
}

message EndGameNotify {
  string rank = 1;
  map<string, int32> recommend_info = 2;
  int64 cup = 3;
  int64 total_len = 4;
  map<string, int32> opened_chest = 5;
  int64 display_score = 6;
  int64 snake_coin = 7;
  int64 week_snake_coin = 8;
  repeated SnakeCoinDetailItem snake_coin_detail = 9;
  int32 ad_flag = 10;
  map<string, int32> turntable = 11;
  int32 qualifying_unlock = 12;
  UserGameTask game_task = 13;
  UserEggProgress hatch_egg = 14;
  GamePassCheckExp pass_check = 15;
  double difficulty_score = 16;
  ActReward act_reward = 17;
  repeated GameExtraReward extra_reward = 18;
  string icon_url = 19;
  repeated snakecommon.CRewardItem endless_reward_list = 20;
  UserMeetupProgress new_meetup = 21;
  UserMeetupProgress new_meetup_v2 = 22;
  UserMeetupProgress new_meetup_v3 = 23;
  repeated UserMeetupProgressItem new_meetup_v3_list = 24;
  UserElGameReward endless_game_reward = 25;
  repeated string new_end_popup_order1 = 26;
  WebBanner web_banner = 27;
  string compose_coin = 28;
  FloatingInfo floating_info = 29;
  repeated EndlessTeammate teammates = 30; // 队友信息
  repeated string followed_list = 31; // 被关注的 uid
  string game_id = 32; // 本局游戏的id，用于区分不同对局的结算，防止重复结算
  int64 rank_score = 33; // 结算后的段位分
  int64 delta_rank_score = 34; // 变化的段位分
}

message EndlessTeammate {
  string uid = 1;
  int32 score = 2;
  int32 skinId = 3;
  repeated int32 tag = 4;
}

message SnakeCoinDetailItem {
  int64 count = 1;
  int32 mark_id = 2;
  string from = 3;
}

message TaskInfo {
  int64 id = 1;
  int32 state = 2;
  int64 ad = 3;
  bool own = 4;
}

message WebBanner {
  int64 id = 1;
  string url = 2;
}

message FloatingItem {
  int64 id = 1;
  int64 num = 2;
  int64 add = 3;
  int32 state = 4;
}

message FloatingInfo {
  repeated snakecommon.CRewardItem reward_list = 1;
  int32 home_reddot = 2;
  repeated FloatingItem floating_list = 3;
}

// 更新新手引导进度
message UpdateGuideProgressReq {
  bool done = 1; // 是否已完成新手引导
}

message UpdateGuideProgressRsp {
}

// 获取新手AI信息
message GetNewbieAiReq {
}

message GetNewbieAiRsp {
  string uid = 1; // 为空时表示没有ai
  int64 skin_id = 2;
}

// 获取赛季奖励状态
message GetSeasonRewardStateReq {
}
message GetSeasonRewardStateRsp {
  repeated int32 taken_reward_rank_ids = 1; // 已领取奖励的段位id列表
}

// 一键领取赛季奖励
message GetAllSeasonRewardReq {
}
message GetAllSeasonRewardRsp {
  repeated snakecommon.CRewardItem reward_list = 1;
  repeated int32 taken_reward_rank_ids = 2; // 已领取奖励的段位id列表
}

// 领取指定段位的赛季奖励
message GetSeasonRewardReq {
  int32 rank_id = 1; // 段位id
}
message GetSeasonRewardRsp {
  repeated snakecommon.CRewardItem reward_list = 1;
}

// 获取buff活动入口信息
message GetBuffActivityEntryReq {
}
message GetBuffActivityEntryRsp {
  bool show = 1; // 是否展示入口
  string jump_link = 2; // 跳转链接
  bool has_red_dot = 3; // 是否有红点
}