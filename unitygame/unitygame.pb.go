// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.27.1
// 	protoc        v3.16.1
// source: unitygame/unitygame.proto

package unitygame

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type SnakeOpType int32

const (
	SnakeOpType_Undefined           SnakeOpType = 0
	SnakeOpType_Command             SnakeOpType = 9002
	SnakeOpType_Signal              SnakeOpType = 9003
	SnakeOpType_HistoryFrame        SnakeOpType = 9004
	SnakeOpType_Snapshot            SnakeOpType = 9005
	SnakeOpType_CheckSum            SnakeOpType = 9006
	SnakeOpType_Bind                SnakeOpType = 9010
	SnakeOpType_HeartBeat           SnakeOpType = 9011
	SnakeOpType_ReportScore         SnakeOpType = 9012
	SnakeOpType_ExitGame            SnakeOpType = 9013
	SnakeOpType_Action              SnakeOpType = 9014
	SnakeOpType_ReportRoomLockState SnakeOpType = 9015
	SnakeOpType_Loading             SnakeOpType = 9016
	SnakeOpType_ReportKuromiScore   SnakeOpType = 9017
	SnakeOpType_PuGameStart         SnakeOpType = 9101
	SnakeOpType_PuFrame             SnakeOpType = 9102
	SnakeOpType_PuSignal            SnakeOpType = 9103
	SnakeOpType_PuAbnormal          SnakeOpType = 9104
	SnakeOpType_PuGameEnd           SnakeOpType = 9105
	SnakeOpType_PuLoading           SnakeOpType = 9106
	SnakeOpType_PuScoreAbnormal     SnakeOpType = 9107 // 成绩异常
)

// Enum value maps for SnakeOpType.
var (
	SnakeOpType_name = map[int32]string{
		0:    "Undefined",
		9002: "Command",
		9003: "Signal",
		9004: "HistoryFrame",
		9005: "Snapshot",
		9006: "CheckSum",
		9010: "Bind",
		9011: "HeartBeat",
		9012: "ReportScore",
		9013: "ExitGame",
		9014: "Action",
		9015: "ReportRoomLockState",
		9016: "Loading",
		9017: "ReportKuromiScore",
		9101: "PuGameStart",
		9102: "PuFrame",
		9103: "PuSignal",
		9104: "PuAbnormal",
		9105: "PuGameEnd",
		9106: "PuLoading",
		9107: "PuScoreAbnormal",
	}
	SnakeOpType_value = map[string]int32{
		"Undefined":           0,
		"Command":             9002,
		"Signal":              9003,
		"HistoryFrame":        9004,
		"Snapshot":            9005,
		"CheckSum":            9006,
		"Bind":                9010,
		"HeartBeat":           9011,
		"ReportScore":         9012,
		"ExitGame":            9013,
		"Action":              9014,
		"ReportRoomLockState": 9015,
		"Loading":             9016,
		"ReportKuromiScore":   9017,
		"PuGameStart":         9101,
		"PuFrame":             9102,
		"PuSignal":            9103,
		"PuAbnormal":          9104,
		"PuGameEnd":           9105,
		"PuLoading":           9106,
		"PuScoreAbnormal":     9107,
	}
)

func (x SnakeOpType) Enum() *SnakeOpType {
	p := new(SnakeOpType)
	*p = x
	return p
}

func (x SnakeOpType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (SnakeOpType) Descriptor() protoreflect.EnumDescriptor {
	return file_unitygame_unitygame_proto_enumTypes[0].Descriptor()
}

func (SnakeOpType) Type() protoreflect.EnumType {
	return &file_unitygame_unitygame_proto_enumTypes[0]
}

func (x SnakeOpType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use SnakeOpType.Descriptor instead.
func (SnakeOpType) EnumDescriptor() ([]byte, []int) {
	return file_unitygame_unitygame_proto_rawDescGZIP(), []int{0}
}

type Command int32

const (
	Command_CommandAction   Command = 0
	Command_CommandRevive   Command = 1
	Command_CommandJoin     Command = 2
	Command_CommandUseProp  Command = 3
	Command_CommandExitGame Command = 4
	Command_CommandSetVoite Command = 5
)

// Enum value maps for Command.
var (
	Command_name = map[int32]string{
		0: "CommandAction",
		1: "CommandRevive",
		2: "CommandJoin",
		3: "CommandUseProp",
		4: "CommandExitGame",
		5: "CommandSetVoite",
	}
	Command_value = map[string]int32{
		"CommandAction":   0,
		"CommandRevive":   1,
		"CommandJoin":     2,
		"CommandUseProp":  3,
		"CommandExitGame": 4,
		"CommandSetVoite": 5,
	}
)

func (x Command) Enum() *Command {
	p := new(Command)
	*p = x
	return p
}

func (x Command) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Command) Descriptor() protoreflect.EnumDescriptor {
	return file_unitygame_unitygame_proto_enumTypes[1].Descriptor()
}

func (Command) Type() protoreflect.EnumType {
	return &file_unitygame_unitygame_proto_enumTypes[1]
}

func (x Command) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Command.Descriptor instead.
func (Command) EnumDescriptor() ([]byte, []int) {
	return file_unitygame_unitygame_proto_rawDescGZIP(), []int{1}
}

//push:通知游戏开始
type PuGameStartMsg struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	StartTime    int64 `protobuf:"varint,1,opt,name=start_time,json=startTime,proto3" json:"start_time,omitempty"`          //游戏开始时间
	TurnInterval int32 `protobuf:"varint,2,opt,name=turn_interval,json=turnInterval,proto3" json:"turn_interval,omitempty"` //服务器发帧间隔(ms)，客户端按除2的间隔发帧
}

func (x *PuGameStartMsg) Reset() {
	*x = PuGameStartMsg{}
	if protoimpl.UnsafeEnabled {
		mi := &file_unitygame_unitygame_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PuGameStartMsg) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PuGameStartMsg) ProtoMessage() {}

func (x *PuGameStartMsg) ProtoReflect() protoreflect.Message {
	mi := &file_unitygame_unitygame_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PuGameStartMsg.ProtoReflect.Descriptor instead.
func (*PuGameStartMsg) Descriptor() ([]byte, []int) {
	return file_unitygame_unitygame_proto_rawDescGZIP(), []int{0}
}

func (x *PuGameStartMsg) GetStartTime() int64 {
	if x != nil {
		return x.StartTime
	}
	return 0
}

func (x *PuGameStartMsg) GetTurnInterval() int32 {
	if x != nil {
		return x.TurnInterval
	}
	return 0
}

//push:发的信号
type PuSignalMsg struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Num    int32 `protobuf:"varint,1,opt,name=num,proto3" json:"num,omitempty"`
	Signal int32 `protobuf:"varint,2,opt,name=signal,proto3" json:"signal,omitempty"`
	Param  int32 `protobuf:"varint,3,opt,name=param,proto3" json:"param,omitempty"`
}

func (x *PuSignalMsg) Reset() {
	*x = PuSignalMsg{}
	if protoimpl.UnsafeEnabled {
		mi := &file_unitygame_unitygame_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PuSignalMsg) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PuSignalMsg) ProtoMessage() {}

func (x *PuSignalMsg) ProtoReflect() protoreflect.Message {
	mi := &file_unitygame_unitygame_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PuSignalMsg.ProtoReflect.Descriptor instead.
func (*PuSignalMsg) Descriptor() ([]byte, []int) {
	return file_unitygame_unitygame_proto_rawDescGZIP(), []int{1}
}

func (x *PuSignalMsg) GetNum() int32 {
	if x != nil {
		return x.Num
	}
	return 0
}

func (x *PuSignalMsg) GetSignal() int32 {
	if x != nil {
		return x.Signal
	}
	return 0
}

func (x *PuSignalMsg) GetParam() int32 {
	if x != nil {
		return x.Param
	}
	return 0
}

//push:游戏结束
type PuGameEndMsg struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ActionNo int32 `protobuf:"varint,1,opt,name=action_no,json=actionNo,proto3" json:"action_no,omitempty"`
}

func (x *PuGameEndMsg) Reset() {
	*x = PuGameEndMsg{}
	if protoimpl.UnsafeEnabled {
		mi := &file_unitygame_unitygame_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PuGameEndMsg) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PuGameEndMsg) ProtoMessage() {}

func (x *PuGameEndMsg) ProtoReflect() protoreflect.Message {
	mi := &file_unitygame_unitygame_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PuGameEndMsg.ProtoReflect.Descriptor instead.
func (*PuGameEndMsg) Descriptor() ([]byte, []int) {
	return file_unitygame_unitygame_proto_rawDescGZIP(), []int{2}
}

func (x *PuGameEndMsg) GetActionNo() int32 {
	if x != nil {
		return x.ActionNo
	}
	return 0
}

//push:出现不一致(如果要上传日志就push给所有人，发现是自己的弹游戏异常)
type PuAbnormalMsg struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AbnormalNum int32  `protobuf:"varint,1,opt,name=abnormal_num,json=abnormalNum,proto3" json:"abnormal_num,omitempty"`
	ActionNo    int32  `protobuf:"varint,2,opt,name=action_no,json=actionNo,proto3" json:"action_no,omitempty"`
	UploadLog   bool   `protobuf:"varint,3,opt,name=upload_log,json=uploadLog,proto3" json:"upload_log,omitempty"` //1本场需要上传日志
	Checksum    string `protobuf:"bytes,4,opt,name=checksum,proto3" json:"checksum,omitempty"`                     // 上报的checksum
	Correct     string `protobuf:"bytes,5,opt,name=correct,proto3" json:"correct,omitempty"`                       // 正确的checksum
}

func (x *PuAbnormalMsg) Reset() {
	*x = PuAbnormalMsg{}
	if protoimpl.UnsafeEnabled {
		mi := &file_unitygame_unitygame_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PuAbnormalMsg) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PuAbnormalMsg) ProtoMessage() {}

func (x *PuAbnormalMsg) ProtoReflect() protoreflect.Message {
	mi := &file_unitygame_unitygame_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PuAbnormalMsg.ProtoReflect.Descriptor instead.
func (*PuAbnormalMsg) Descriptor() ([]byte, []int) {
	return file_unitygame_unitygame_proto_rawDescGZIP(), []int{3}
}

func (x *PuAbnormalMsg) GetAbnormalNum() int32 {
	if x != nil {
		return x.AbnormalNum
	}
	return 0
}

func (x *PuAbnormalMsg) GetActionNo() int32 {
	if x != nil {
		return x.ActionNo
	}
	return 0
}

func (x *PuAbnormalMsg) GetUploadLog() bool {
	if x != nil {
		return x.UploadLog
	}
	return false
}

func (x *PuAbnormalMsg) GetChecksum() string {
	if x != nil {
		return x.Checksum
	}
	return ""
}

func (x *PuAbnormalMsg) GetCorrect() string {
	if x != nil {
		return x.Correct
	}
	return ""
}

//push:结算成绩不一致
type PuScoreAbnormalMsg struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AbnormalNum int32 `protobuf:"varint,1,opt,name=abnormal_num,json=abnormalNum,proto3" json:"abnormal_num,omitempty"`
}

func (x *PuScoreAbnormalMsg) Reset() {
	*x = PuScoreAbnormalMsg{}
	if protoimpl.UnsafeEnabled {
		mi := &file_unitygame_unitygame_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PuScoreAbnormalMsg) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PuScoreAbnormalMsg) ProtoMessage() {}

func (x *PuScoreAbnormalMsg) ProtoReflect() protoreflect.Message {
	mi := &file_unitygame_unitygame_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PuScoreAbnormalMsg.ProtoReflect.Descriptor instead.
func (*PuScoreAbnormalMsg) Descriptor() ([]byte, []int) {
	return file_unitygame_unitygame_proto_rawDescGZIP(), []int{4}
}

func (x *PuScoreAbnormalMsg) GetAbnormalNum() int32 {
	if x != nil {
		return x.AbnormalNum
	}
	return 0
}

//push:发帧
type PuFrameMsg struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FrameList []*FrameItem `protobuf:"bytes,1,rep,name=frame_list,json=frameList,proto3" json:"frame_list,omitempty"`
}

func (x *PuFrameMsg) Reset() {
	*x = PuFrameMsg{}
	if protoimpl.UnsafeEnabled {
		mi := &file_unitygame_unitygame_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PuFrameMsg) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PuFrameMsg) ProtoMessage() {}

func (x *PuFrameMsg) ProtoReflect() protoreflect.Message {
	mi := &file_unitygame_unitygame_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PuFrameMsg.ProtoReflect.Descriptor instead.
func (*PuFrameMsg) Descriptor() ([]byte, []int) {
	return file_unitygame_unitygame_proto_rawDescGZIP(), []int{5}
}

func (x *PuFrameMsg) GetFrameList() []*FrameItem {
	if x != nil {
		return x.FrameList
	}
	return nil
}

type PuLoadingMsg struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Loading []*NumProgress `protobuf:"bytes,1,rep,name=loading,proto3" json:"loading,omitempty"` // num => progress
}

func (x *PuLoadingMsg) Reset() {
	*x = PuLoadingMsg{}
	if protoimpl.UnsafeEnabled {
		mi := &file_unitygame_unitygame_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PuLoadingMsg) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PuLoadingMsg) ProtoMessage() {}

func (x *PuLoadingMsg) ProtoReflect() protoreflect.Message {
	mi := &file_unitygame_unitygame_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PuLoadingMsg.ProtoReflect.Descriptor instead.
func (*PuLoadingMsg) Descriptor() ([]byte, []int) {
	return file_unitygame_unitygame_proto_rawDescGZIP(), []int{6}
}

func (x *PuLoadingMsg) GetLoading() []*NumProgress {
	if x != nil {
		return x.Loading
	}
	return nil
}

type NumProgress struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Num      int64 `protobuf:"varint,1,opt,name=num,proto3" json:"num,omitempty"`
	Progress int64 `protobuf:"varint,2,opt,name=progress,proto3" json:"progress,omitempty"`
}

func (x *NumProgress) Reset() {
	*x = NumProgress{}
	if protoimpl.UnsafeEnabled {
		mi := &file_unitygame_unitygame_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NumProgress) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NumProgress) ProtoMessage() {}

func (x *NumProgress) ProtoReflect() protoreflect.Message {
	mi := &file_unitygame_unitygame_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NumProgress.ProtoReflect.Descriptor instead.
func (*NumProgress) Descriptor() ([]byte, []int) {
	return file_unitygame_unitygame_proto_rawDescGZIP(), []int{7}
}

func (x *NumProgress) GetNum() int64 {
	if x != nil {
		return x.Num
	}
	return 0
}

func (x *NumProgress) GetProgress() int64 {
	if x != nil {
		return x.Progress
	}
	return 0
}

type FrameItem struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ActionNo   int32         `protobuf:"varint,1,opt,name=action_no,json=actionNo,proto3" json:"action_no,omitempty"`
	ActionList []*GameAction `protobuf:"bytes,2,rep,name=action_list,json=actionList,proto3" json:"action_list,omitempty"` // [{},{},{}]
}

func (x *FrameItem) Reset() {
	*x = FrameItem{}
	if protoimpl.UnsafeEnabled {
		mi := &file_unitygame_unitygame_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FrameItem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FrameItem) ProtoMessage() {}

func (x *FrameItem) ProtoReflect() protoreflect.Message {
	mi := &file_unitygame_unitygame_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FrameItem.ProtoReflect.Descriptor instead.
func (*FrameItem) Descriptor() ([]byte, []int) {
	return file_unitygame_unitygame_proto_rawDescGZIP(), []int{8}
}

func (x *FrameItem) GetActionNo() int32 {
	if x != nil {
		return x.ActionNo
	}
	return 0
}

func (x *FrameItem) GetActionList() []*GameAction {
	if x != nil {
		return x.ActionList
	}
	return nil
}

//游戏帧的具体内容
type GameAction struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Num       int32          `protobuf:"varint,1,opt,name=num,proto3" json:"num,omitempty"`
	Cmd       int32          `protobuf:"varint,2,opt,name=cmd,proto3" json:"cmd,omitempty"`                              //0为移动，1复活，2中途加入，3用游戏道具，4玩家退出，5语音；如果没有某个玩家说明没发帧，按之前方向移动
	Param     int32          `protobuf:"varint,3,opt,name=param,proto3" json:"param,omitempty"`                          //根据cmd代表不同属性：0为movement，3道具id
	Attr      *UserAttribute `protobuf:"bytes,4,opt,name=attr,proto3" json:"attr,omitempty"`                             //根据cmd代表不同属性：2中途加入人的属性
	ModeParam int32          `protobuf:"varint,5,opt,name=mode_param,json=modeParam,proto3" json:"mode_param,omitempty"` //作用跟 param 一样，主要用于特定玩法的数据帧同步
}

func (x *GameAction) Reset() {
	*x = GameAction{}
	if protoimpl.UnsafeEnabled {
		mi := &file_unitygame_unitygame_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GameAction) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GameAction) ProtoMessage() {}

func (x *GameAction) ProtoReflect() protoreflect.Message {
	mi := &file_unitygame_unitygame_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GameAction.ProtoReflect.Descriptor instead.
func (*GameAction) Descriptor() ([]byte, []int) {
	return file_unitygame_unitygame_proto_rawDescGZIP(), []int{9}
}

func (x *GameAction) GetNum() int32 {
	if x != nil {
		return x.Num
	}
	return 0
}

func (x *GameAction) GetCmd() int32 {
	if x != nil {
		return x.Cmd
	}
	return 0
}

func (x *GameAction) GetParam() int32 {
	if x != nil {
		return x.Param
	}
	return 0
}

func (x *GameAction) GetAttr() *UserAttribute {
	if x != nil {
		return x.Attr
	}
	return nil
}

func (x *GameAction) GetModeParam() int32 {
	if x != nil {
		return x.ModeParam
	}
	return 0
}

//游戏内的用户属性。(头像昵称等从http请求)
type UserAttribute struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Uid               int64   `protobuf:"varint,1,opt,name=uid,proto3" json:"uid,omitempty"`
	TeamId            int32   `protobuf:"varint,2,opt,name=team_id,json=teamId,proto3" json:"team_id,omitempty"`
	Num               int32   `protobuf:"varint,3,opt,name=num,proto3" json:"num,omitempty"`
	RoleId            int32   `protobuf:"varint,4,opt,name=role_id,json=roleId,proto3" json:"role_id,omitempty"`
	RoleLevel         int32   `protobuf:"varint,5,opt,name=role_level,json=roleLevel,proto3" json:"role_level,omitempty"`
	Suit              []int32 `protobuf:"varint,7,rep,packed,name=suit,proto3" json:"suit,omitempty"` // 装扮
	AllowFollowerJoin bool    `protobuf:"varint,8,opt,name=allow_follower_join,json=allowFollowerJoin,proto3" json:"allow_follower_join,omitempty"`
	AllowRecentJoin   bool    `protobuf:"varint,9,opt,name=allow_recent_join,json=allowRecentJoin,proto3" json:"allow_recent_join,omitempty"`
	WreckId           int32   `protobuf:"varint,10,opt,name=wreck_id,json=wreckId,proto3" json:"wreck_id,omitempty"` //击杀效果
	AiScore           int32   `protobuf:"varint,11,opt,name=ai_score,json=aiScore,proto3" json:"ai_score,omitempty"` //0非机器人，其余为ai段位
	Star              int32   `protobuf:"varint,12,opt,name=star,proto3" json:"star,omitempty"`                      // 段位
	Nickname          string  `protobuf:"bytes,13,opt,name=nickname,proto3" json:"nickname,omitempty"`               //昵称
	Avatar            string  `protobuf:"bytes,14,opt,name=avatar,proto3" json:"avatar,omitempty"`                   // 头像
}

func (x *UserAttribute) Reset() {
	*x = UserAttribute{}
	if protoimpl.UnsafeEnabled {
		mi := &file_unitygame_unitygame_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserAttribute) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserAttribute) ProtoMessage() {}

func (x *UserAttribute) ProtoReflect() protoreflect.Message {
	mi := &file_unitygame_unitygame_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserAttribute.ProtoReflect.Descriptor instead.
func (*UserAttribute) Descriptor() ([]byte, []int) {
	return file_unitygame_unitygame_proto_rawDescGZIP(), []int{10}
}

func (x *UserAttribute) GetUid() int64 {
	if x != nil {
		return x.Uid
	}
	return 0
}

func (x *UserAttribute) GetTeamId() int32 {
	if x != nil {
		return x.TeamId
	}
	return 0
}

func (x *UserAttribute) GetNum() int32 {
	if x != nil {
		return x.Num
	}
	return 0
}

func (x *UserAttribute) GetRoleId() int32 {
	if x != nil {
		return x.RoleId
	}
	return 0
}

func (x *UserAttribute) GetRoleLevel() int32 {
	if x != nil {
		return x.RoleLevel
	}
	return 0
}

func (x *UserAttribute) GetSuit() []int32 {
	if x != nil {
		return x.Suit
	}
	return nil
}

func (x *UserAttribute) GetAllowFollowerJoin() bool {
	if x != nil {
		return x.AllowFollowerJoin
	}
	return false
}

func (x *UserAttribute) GetAllowRecentJoin() bool {
	if x != nil {
		return x.AllowRecentJoin
	}
	return false
}

func (x *UserAttribute) GetWreckId() int32 {
	if x != nil {
		return x.WreckId
	}
	return 0
}

func (x *UserAttribute) GetAiScore() int32 {
	if x != nil {
		return x.AiScore
	}
	return 0
}

func (x *UserAttribute) GetStar() int32 {
	if x != nil {
		return x.Star
	}
	return 0
}

func (x *UserAttribute) GetNickname() string {
	if x != nil {
		return x.Nickname
	}
	return ""
}

func (x *UserAttribute) GetAvatar() string {
	if x != nil {
		return x.Avatar
	}
	return ""
}

//发游戏内指令和帧
type CommandReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ActionNo  int32          `protobuf:"varint,1,opt,name=action_no,json=actionNo,proto3" json:"action_no,omitempty"` //客户端希望写入的帧号
	Cmd       Command        `protobuf:"varint,2,opt,name=cmd,proto3,enum=unitygame.Command" json:"cmd,omitempty"`
	Param     int32          `protobuf:"varint,3,opt,name=param,proto3" json:"param,omitempty"` //属性根据命令不同填不同的值
	Attr      *UserAttribute `protobuf:"bytes,4,opt,name=attr,proto3" json:"attr,omitempty"`
	PreRtt    int32          `protobuf:"varint,5,opt,name=preRtt,proto3" json:"preRtt,omitempty"`                        // 上个请求时延
	ModeParam int32          `protobuf:"varint,6,opt,name=mode_param,json=modeParam,proto3" json:"mode_param,omitempty"` // 作用跟 param 一样，主要用于特定玩法的数据帧同步
}

func (x *CommandReq) Reset() {
	*x = CommandReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_unitygame_unitygame_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CommandReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CommandReq) ProtoMessage() {}

func (x *CommandReq) ProtoReflect() protoreflect.Message {
	mi := &file_unitygame_unitygame_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CommandReq.ProtoReflect.Descriptor instead.
func (*CommandReq) Descriptor() ([]byte, []int) {
	return file_unitygame_unitygame_proto_rawDescGZIP(), []int{11}
}

func (x *CommandReq) GetActionNo() int32 {
	if x != nil {
		return x.ActionNo
	}
	return 0
}

func (x *CommandReq) GetCmd() Command {
	if x != nil {
		return x.Cmd
	}
	return Command_CommandAction
}

func (x *CommandReq) GetParam() int32 {
	if x != nil {
		return x.Param
	}
	return 0
}

func (x *CommandReq) GetAttr() *UserAttribute {
	if x != nil {
		return x.Attr
	}
	return nil
}

func (x *CommandReq) GetPreRtt() int32 {
	if x != nil {
		return x.PreRtt
	}
	return 0
}

func (x *CommandReq) GetModeParam() int32 {
	if x != nil {
		return x.ModeParam
	}
	return 0
}

type CommandRsp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ActionNo int32 `protobuf:"varint,1,opt,name=action_no,json=actionNo,proto3" json:"action_no,omitempty"` // command写入帧号
	TickNo   int32 `protobuf:"varint,2,opt,name=tick_no,json=tickNo,proto3" json:"tick_no,omitempty"`       // 服务器当前帧号
}

func (x *CommandRsp) Reset() {
	*x = CommandRsp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_unitygame_unitygame_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CommandRsp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CommandRsp) ProtoMessage() {}

func (x *CommandRsp) ProtoReflect() protoreflect.Message {
	mi := &file_unitygame_unitygame_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CommandRsp.ProtoReflect.Descriptor instead.
func (*CommandRsp) Descriptor() ([]byte, []int) {
	return file_unitygame_unitygame_proto_rawDescGZIP(), []int{12}
}

func (x *CommandRsp) GetActionNo() int32 {
	if x != nil {
		return x.ActionNo
	}
	return 0
}

func (x *CommandRsp) GetTickNo() int32 {
	if x != nil {
		return x.TickNo
	}
	return 0
}

//1资源加载中(可每秒一次)，2加载好可以开始。其他自定[10及以上]：快捷短语、集合
type SignalReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Signal int32 `protobuf:"varint,1,opt,name=signal,proto3" json:"signal,omitempty"`
	Param  int32 `protobuf:"varint,2,opt,name=param,proto3" json:"param,omitempty"` //目前用于资源加载进度
}

func (x *SignalReq) Reset() {
	*x = SignalReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_unitygame_unitygame_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SignalReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SignalReq) ProtoMessage() {}

func (x *SignalReq) ProtoReflect() protoreflect.Message {
	mi := &file_unitygame_unitygame_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SignalReq.ProtoReflect.Descriptor instead.
func (*SignalReq) Descriptor() ([]byte, []int) {
	return file_unitygame_unitygame_proto_rawDescGZIP(), []int{13}
}

func (x *SignalReq) GetSignal() int32 {
	if x != nil {
		return x.Signal
	}
	return 0
}

func (x *SignalReq) GetParam() int32 {
	if x != nil {
		return x.Param
	}
	return 0
}

type SignalRsp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *SignalRsp) Reset() {
	*x = SignalRsp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_unitygame_unitygame_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SignalRsp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SignalRsp) ProtoMessage() {}

func (x *SignalRsp) ProtoReflect() protoreflect.Message {
	mi := &file_unitygame_unitygame_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SignalRsp.ProtoReflect.Descriptor instead.
func (*SignalRsp) Descriptor() ([]byte, []int) {
	return file_unitygame_unitygame_proto_rawDescGZIP(), []int{14}
}

//拉取历史帧
type HistoryFrameReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	StartActionNo int32 `protobuf:"varint,1,opt,name=start_action_no,json=startActionNo,proto3" json:"start_action_no,omitempty"` //服务器给的会包含这一帧
	NeedSnapshot  bool  `protobuf:"varint,2,opt,name=need_snapshot,json=needSnapshot,proto3" json:"need_snapshot,omitempty"`
}

func (x *HistoryFrameReq) Reset() {
	*x = HistoryFrameReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_unitygame_unitygame_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HistoryFrameReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HistoryFrameReq) ProtoMessage() {}

func (x *HistoryFrameReq) ProtoReflect() protoreflect.Message {
	mi := &file_unitygame_unitygame_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HistoryFrameReq.ProtoReflect.Descriptor instead.
func (*HistoryFrameReq) Descriptor() ([]byte, []int) {
	return file_unitygame_unitygame_proto_rawDescGZIP(), []int{15}
}

func (x *HistoryFrameReq) GetStartActionNo() int32 {
	if x != nil {
		return x.StartActionNo
	}
	return 0
}

func (x *HistoryFrameReq) GetNeedSnapshot() bool {
	if x != nil {
		return x.NeedSnapshot
	}
	return false
}

type HistoryFrameRsp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FrameList        []*FrameItem `protobuf:"bytes,1,rep,name=frame_list,json=frameList,proto3" json:"frame_list,omitempty"`
	SnapshotActionNo int32        `protobuf:"varint,2,opt,name=snapshot_action_no,json=snapshotActionNo,proto3" json:"snapshot_action_no,omitempty"`
	Snapshot         []byte       `protobuf:"bytes,3,opt,name=snapshot,proto3" json:"snapshot,omitempty"`
}

func (x *HistoryFrameRsp) Reset() {
	*x = HistoryFrameRsp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_unitygame_unitygame_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HistoryFrameRsp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HistoryFrameRsp) ProtoMessage() {}

func (x *HistoryFrameRsp) ProtoReflect() protoreflect.Message {
	mi := &file_unitygame_unitygame_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HistoryFrameRsp.ProtoReflect.Descriptor instead.
func (*HistoryFrameRsp) Descriptor() ([]byte, []int) {
	return file_unitygame_unitygame_proto_rawDescGZIP(), []int{16}
}

func (x *HistoryFrameRsp) GetFrameList() []*FrameItem {
	if x != nil {
		return x.FrameList
	}
	return nil
}

func (x *HistoryFrameRsp) GetSnapshotActionNo() int32 {
	if x != nil {
		return x.SnapshotActionNo
	}
	return 0
}

func (x *HistoryFrameRsp) GetSnapshot() []byte {
	if x != nil {
		return x.Snapshot
	}
	return nil
}

//上传快照
type SnapshotReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ActionNo int32  `protobuf:"varint,1,opt,name=action_no,json=actionNo,proto3" json:"action_no,omitempty"`
	Snapshot []byte `protobuf:"bytes,2,opt,name=snapshot,proto3" json:"snapshot,omitempty"`
}

func (x *SnapshotReq) Reset() {
	*x = SnapshotReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_unitygame_unitygame_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SnapshotReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SnapshotReq) ProtoMessage() {}

func (x *SnapshotReq) ProtoReflect() protoreflect.Message {
	mi := &file_unitygame_unitygame_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SnapshotReq.ProtoReflect.Descriptor instead.
func (*SnapshotReq) Descriptor() ([]byte, []int) {
	return file_unitygame_unitygame_proto_rawDescGZIP(), []int{17}
}

func (x *SnapshotReq) GetActionNo() int32 {
	if x != nil {
		return x.ActionNo
	}
	return 0
}

func (x *SnapshotReq) GetSnapshot() []byte {
	if x != nil {
		return x.Snapshot
	}
	return nil
}

type SnapshotRsp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *SnapshotRsp) Reset() {
	*x = SnapshotRsp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_unitygame_unitygame_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SnapshotRsp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SnapshotRsp) ProtoMessage() {}

func (x *SnapshotRsp) ProtoReflect() protoreflect.Message {
	mi := &file_unitygame_unitygame_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SnapshotRsp.ProtoReflect.Descriptor instead.
func (*SnapshotRsp) Descriptor() ([]byte, []int) {
	return file_unitygame_unitygame_proto_rawDescGZIP(), []int{18}
}

//校验是否出现不一致
type CheckSumReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ActionNo int32  `protobuf:"varint,1,opt,name=action_no,json=actionNo,proto3" json:"action_no,omitempty"`
	Checksum string `protobuf:"bytes,2,opt,name=checksum,proto3" json:"checksum,omitempty"`
}

func (x *CheckSumReq) Reset() {
	*x = CheckSumReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_unitygame_unitygame_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CheckSumReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CheckSumReq) ProtoMessage() {}

func (x *CheckSumReq) ProtoReflect() protoreflect.Message {
	mi := &file_unitygame_unitygame_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CheckSumReq.ProtoReflect.Descriptor instead.
func (*CheckSumReq) Descriptor() ([]byte, []int) {
	return file_unitygame_unitygame_proto_rawDescGZIP(), []int{19}
}

func (x *CheckSumReq) GetActionNo() int32 {
	if x != nil {
		return x.ActionNo
	}
	return 0
}

func (x *CheckSumReq) GetChecksum() string {
	if x != nil {
		return x.Checksum
	}
	return ""
}

type CheckSumRsp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *CheckSumRsp) Reset() {
	*x = CheckSumRsp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_unitygame_unitygame_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CheckSumRsp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CheckSumRsp) ProtoMessage() {}

func (x *CheckSumRsp) ProtoReflect() protoreflect.Message {
	mi := &file_unitygame_unitygame_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CheckSumRsp.ProtoReflect.Descriptor instead.
func (*CheckSumRsp) Descriptor() ([]byte, []int) {
	return file_unitygame_unitygame_proto_rawDescGZIP(), []int{20}
}

//绑定游戏服
type BindReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Seed           int32  `protobuf:"varint,1,opt,name=seed,proto3" json:"seed,omitempty"`
	Num            int32  `protobuf:"varint,2,opt,name=num,proto3" json:"num,omitempty"`
	MatchTime      int64  `protobuf:"varint,3,opt,name=match_time,json=matchTime,proto3" json:"match_time,omitempty"`
	RelaySign      []byte `protobuf:"bytes,4,opt,name=relay_sign,json=relaySign,proto3" json:"relay_sign,omitempty"`
	GameMode       int32  `protobuf:"varint,5,opt,name=game_mode,json=gameMode,proto3" json:"game_mode,omitempty"`
	ModeVersion    int32  `protobuf:"varint,6,opt,name=mode_version,json=modeVersion,proto3" json:"mode_version,omitempty"`
	TimeLimit      int32  `protobuf:"varint,7,opt,name=time_limit,json=timeLimit,proto3" json:"time_limit,omitempty"`
	PlayerCount    int32  `protobuf:"varint,8,opt,name=player_count,json=playerCount,proto3" json:"player_count,omitempty"` // 匹配时的人数（排除ai）
	Platform       int32  `protobuf:"varint,9,opt,name=platform,proto3" json:"platform,omitempty"`
	MaxPlayerCount int32  `protobuf:"varint,10,opt,name=max_player_count,json=maxPlayerCount,proto3" json:"max_player_count,omitempty"` // 最多人数
}

func (x *BindReq) Reset() {
	*x = BindReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_unitygame_unitygame_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BindReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BindReq) ProtoMessage() {}

func (x *BindReq) ProtoReflect() protoreflect.Message {
	mi := &file_unitygame_unitygame_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BindReq.ProtoReflect.Descriptor instead.
func (*BindReq) Descriptor() ([]byte, []int) {
	return file_unitygame_unitygame_proto_rawDescGZIP(), []int{21}
}

func (x *BindReq) GetSeed() int32 {
	if x != nil {
		return x.Seed
	}
	return 0
}

func (x *BindReq) GetNum() int32 {
	if x != nil {
		return x.Num
	}
	return 0
}

func (x *BindReq) GetMatchTime() int64 {
	if x != nil {
		return x.MatchTime
	}
	return 0
}

func (x *BindReq) GetRelaySign() []byte {
	if x != nil {
		return x.RelaySign
	}
	return nil
}

func (x *BindReq) GetGameMode() int32 {
	if x != nil {
		return x.GameMode
	}
	return 0
}

func (x *BindReq) GetModeVersion() int32 {
	if x != nil {
		return x.ModeVersion
	}
	return 0
}

func (x *BindReq) GetTimeLimit() int32 {
	if x != nil {
		return x.TimeLimit
	}
	return 0
}

func (x *BindReq) GetPlayerCount() int32 {
	if x != nil {
		return x.PlayerCount
	}
	return 0
}

func (x *BindReq) GetPlatform() int32 {
	if x != nil {
		return x.Platform
	}
	return 0
}

func (x *BindReq) GetMaxPlayerCount() int32 {
	if x != nil {
		return x.MaxPlayerCount
	}
	return 0
}

type BindRsp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	State           int32           `protobuf:"varint,1,opt,name=state,proto3" json:"state,omitempty"` //1未开始；2已开始；3结束
	StartInfo       *PuGameStartMsg `protobuf:"bytes,2,opt,name=start_info,json=startInfo,proto3" json:"start_info,omitempty"`
	HeartbeatSecond int32           `protobuf:"varint,3,opt,name=heartbeat_second,json=heartbeatSecond,proto3" json:"heartbeat_second,omitempty"` //心跳间隔
	ActionNo        int32           `protobuf:"varint,4,opt,name=actionNo,proto3" json:"actionNo,omitempty"`                                      // 房间开始了，返回当前帧号
}

func (x *BindRsp) Reset() {
	*x = BindRsp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_unitygame_unitygame_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BindRsp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BindRsp) ProtoMessage() {}

func (x *BindRsp) ProtoReflect() protoreflect.Message {
	mi := &file_unitygame_unitygame_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BindRsp.ProtoReflect.Descriptor instead.
func (*BindRsp) Descriptor() ([]byte, []int) {
	return file_unitygame_unitygame_proto_rawDescGZIP(), []int{22}
}

func (x *BindRsp) GetState() int32 {
	if x != nil {
		return x.State
	}
	return 0
}

func (x *BindRsp) GetStartInfo() *PuGameStartMsg {
	if x != nil {
		return x.StartInfo
	}
	return nil
}

func (x *BindRsp) GetHeartbeatSecond() int32 {
	if x != nil {
		return x.HeartbeatSecond
	}
	return 0
}

func (x *BindRsp) GetActionNo() int32 {
	if x != nil {
		return x.ActionNo
	}
	return 0
}

//心跳请求
type HeartBeatReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *HeartBeatReq) Reset() {
	*x = HeartBeatReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_unitygame_unitygame_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HeartBeatReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HeartBeatReq) ProtoMessage() {}

func (x *HeartBeatReq) ProtoReflect() protoreflect.Message {
	mi := &file_unitygame_unitygame_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HeartBeatReq.ProtoReflect.Descriptor instead.
func (*HeartBeatReq) Descriptor() ([]byte, []int) {
	return file_unitygame_unitygame_proto_rawDescGZIP(), []int{23}
}

type HeartBeatRsp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *HeartBeatRsp) Reset() {
	*x = HeartBeatRsp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_unitygame_unitygame_proto_msgTypes[24]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HeartBeatRsp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HeartBeatRsp) ProtoMessage() {}

func (x *HeartBeatRsp) ProtoReflect() protoreflect.Message {
	mi := &file_unitygame_unitygame_proto_msgTypes[24]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HeartBeatRsp.ProtoReflect.Descriptor instead.
func (*HeartBeatRsp) Descriptor() ([]byte, []int) {
	return file_unitygame_unitygame_proto_rawDescGZIP(), []int{24}
}

//上报成绩
type ReportScoreReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ScoreList []*PlayerScore `protobuf:"bytes,1,rep,name=scoreList,proto3" json:"scoreList,omitempty"`
	ActionNo  int32          `protobuf:"varint,3,opt,name=action_no,json=actionNo,proto3" json:"action_no,omitempty"`   // 帧号
	BossScore []*BossScore   `protobuf:"bytes,4,rep,name=boss_score,json=bossScore,proto3" json:"boss_score,omitempty"` // 击杀boss分数
	Pid       int32          `protobuf:"zigzag32,5,opt,name=pid,proto3" json:"pid,omitempty"`
}

func (x *ReportScoreReq) Reset() {
	*x = ReportScoreReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_unitygame_unitygame_proto_msgTypes[25]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReportScoreReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReportScoreReq) ProtoMessage() {}

func (x *ReportScoreReq) ProtoReflect() protoreflect.Message {
	mi := &file_unitygame_unitygame_proto_msgTypes[25]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReportScoreReq.ProtoReflect.Descriptor instead.
func (*ReportScoreReq) Descriptor() ([]byte, []int) {
	return file_unitygame_unitygame_proto_rawDescGZIP(), []int{25}
}

func (x *ReportScoreReq) GetScoreList() []*PlayerScore {
	if x != nil {
		return x.ScoreList
	}
	return nil
}

func (x *ReportScoreReq) GetActionNo() int32 {
	if x != nil {
		return x.ActionNo
	}
	return 0
}

func (x *ReportScoreReq) GetBossScore() []*BossScore {
	if x != nil {
		return x.BossScore
	}
	return nil
}

func (x *ReportScoreReq) GetPid() int32 {
	if x != nil {
		return x.Pid
	}
	return 0
}

type PlayerScore struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 个人信息
	Uid    string `protobuf:"bytes,1,opt,name=uid,proto3" json:"uid,omitempty"`
	TeamId string `protobuf:"bytes,24,opt,name=team_id,json=teamId,proto3" json:"team_id,omitempty"` // 阵营id
	Num    string `protobuf:"bytes,25,opt,name=num,proto3" json:"num,omitempty"`                     // 玩家位置
	// 游戏数据
	Length               int32    `protobuf:"zigzag32,3,opt,name=length,proto3" json:"length,omitempty"`                                                              // 长度
	Kill                 int32    `protobuf:"zigzag32,4,opt,name=kill,proto3" json:"kill,omitempty"`                                                                  // 击杀数量
	StarScore            int32    `protobuf:"zigzag32,5,opt,name=star_score,json=starScore,proto3" json:"star_score,omitempty"`                                       // 吃星星分数
	ItemScores           []int32  `protobuf:"zigzag32,8,rep,packed,name=item_scores,json=itemScores,proto3" json:"item_scores,omitempty"`                             // 拾取道具
	ReviveCount          int32    `protobuf:"zigzag32,9,opt,name=revive_count,json=reviveCount,proto3" json:"revive_count,omitempty"`                                 // 复活次数
	EventIds             []string `protobuf:"bytes,10,rep,name=event_ids,json=eventIds,proto3" json:"event_ids,omitempty"`                                            // 触发事件（双杀...）分数
	Eat                  int32    `protobuf:"zigzag32,11,opt,name=eat,proto3" json:"eat,omitempty"`                                                                   // 累计长度，只加不减
	KilledNum            int32    `protobuf:"zigzag32,12,opt,name=killed_num,json=killedNum,proto3" json:"killed_num,omitempty"`                                      // 被击杀次数
	DestroyLength        int32    `protobuf:"zigzag32,13,opt,name=destroy_length,json=destroyLength,proto3" json:"destroy_length,omitempty"`                          // 击杀的敌人的长度的累加
	BossKillNum          int32    `protobuf:"zigzag32,14,opt,name=boss_kill_num,json=bossKillNum,proto3" json:"boss_kill_num,omitempty"`                              // boss 击杀数
	CollectStarScore     int32    `protobuf:"zigzag32,15,opt,name=collect_star_score,json=collectStarScore,proto3" json:"collect_star_score,omitempty"`               // 收集星星分数
	CollectColorDotScore int32    `protobuf:"zigzag32,16,opt,name=collect_color_dot_score,json=collectColorDotScore,proto3" json:"collect_color_dot_score,omitempty"` // 收集彩点分数
	HitWallTimes         int32    `protobuf:"zigzag32,17,opt,name=hit_wall_times,json=hitWallTimes,proto3" json:"hit_wall_times,omitempty"`                           // 撞墙次数
	CollectWreckScore    int32    `protobuf:"zigzag32,18,opt,name=collect_wreck_score,json=collectWreckScore,proto3" json:"collect_wreck_score,omitempty"`            // 收集残骸分数
	KillBonusScore       int32    `protobuf:"zigzag32,19,opt,name=kill_bonus_score,json=killBonusScore,proto3" json:"kill_bonus_score,omitempty"`                     // show 加成击杀收益分数
	UseShieldTimes       int32    `protobuf:"zigzag32,20,opt,name=use_shield_times,json=useShieldTimes,proto3" json:"use_shield_times,omitempty"`                     // 使用护盾次数
	DieTime              int32    `protobuf:"zigzag32,22,opt,name=die_time,json=dieTime,proto3" json:"die_time,omitempty"`                                            // 游戏结束前最后一次死亡时间(毫秒)
	UseSpeedShoesTimes   int32    `protobuf:"zigzag32,23,opt,name=use_speed_shoes_times,json=useSpeedShoesTimes,proto3" json:"use_speed_shoes_times,omitempty"`       // 使用加速鞋次数
}

func (x *PlayerScore) Reset() {
	*x = PlayerScore{}
	if protoimpl.UnsafeEnabled {
		mi := &file_unitygame_unitygame_proto_msgTypes[26]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PlayerScore) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PlayerScore) ProtoMessage() {}

func (x *PlayerScore) ProtoReflect() protoreflect.Message {
	mi := &file_unitygame_unitygame_proto_msgTypes[26]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PlayerScore.ProtoReflect.Descriptor instead.
func (*PlayerScore) Descriptor() ([]byte, []int) {
	return file_unitygame_unitygame_proto_rawDescGZIP(), []int{26}
}

func (x *PlayerScore) GetUid() string {
	if x != nil {
		return x.Uid
	}
	return ""
}

func (x *PlayerScore) GetTeamId() string {
	if x != nil {
		return x.TeamId
	}
	return ""
}

func (x *PlayerScore) GetNum() string {
	if x != nil {
		return x.Num
	}
	return ""
}

func (x *PlayerScore) GetLength() int32 {
	if x != nil {
		return x.Length
	}
	return 0
}

func (x *PlayerScore) GetKill() int32 {
	if x != nil {
		return x.Kill
	}
	return 0
}

func (x *PlayerScore) GetStarScore() int32 {
	if x != nil {
		return x.StarScore
	}
	return 0
}

func (x *PlayerScore) GetItemScores() []int32 {
	if x != nil {
		return x.ItemScores
	}
	return nil
}

func (x *PlayerScore) GetReviveCount() int32 {
	if x != nil {
		return x.ReviveCount
	}
	return 0
}

func (x *PlayerScore) GetEventIds() []string {
	if x != nil {
		return x.EventIds
	}
	return nil
}

func (x *PlayerScore) GetEat() int32 {
	if x != nil {
		return x.Eat
	}
	return 0
}

func (x *PlayerScore) GetKilledNum() int32 {
	if x != nil {
		return x.KilledNum
	}
	return 0
}

func (x *PlayerScore) GetDestroyLength() int32 {
	if x != nil {
		return x.DestroyLength
	}
	return 0
}

func (x *PlayerScore) GetBossKillNum() int32 {
	if x != nil {
		return x.BossKillNum
	}
	return 0
}

func (x *PlayerScore) GetCollectStarScore() int32 {
	if x != nil {
		return x.CollectStarScore
	}
	return 0
}

func (x *PlayerScore) GetCollectColorDotScore() int32 {
	if x != nil {
		return x.CollectColorDotScore
	}
	return 0
}

func (x *PlayerScore) GetHitWallTimes() int32 {
	if x != nil {
		return x.HitWallTimes
	}
	return 0
}

func (x *PlayerScore) GetCollectWreckScore() int32 {
	if x != nil {
		return x.CollectWreckScore
	}
	return 0
}

func (x *PlayerScore) GetKillBonusScore() int32 {
	if x != nil {
		return x.KillBonusScore
	}
	return 0
}

func (x *PlayerScore) GetUseShieldTimes() int32 {
	if x != nil {
		return x.UseShieldTimes
	}
	return 0
}

func (x *PlayerScore) GetDieTime() int32 {
	if x != nil {
		return x.DieTime
	}
	return 0
}

func (x *PlayerScore) GetUseSpeedShoesTimes() int32 {
	if x != nil {
		return x.UseSpeedShoesTimes
	}
	return 0
}

// 击杀boss分数
type BossScore struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TeamId int32 `protobuf:"zigzag32,1,opt,name=team_id,json=teamId,proto3" json:"team_id,omitempty"`
	Count  int32 `protobuf:"zigzag32,2,opt,name=count,proto3" json:"count,omitempty"`
}

func (x *BossScore) Reset() {
	*x = BossScore{}
	if protoimpl.UnsafeEnabled {
		mi := &file_unitygame_unitygame_proto_msgTypes[27]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BossScore) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BossScore) ProtoMessage() {}

func (x *BossScore) ProtoReflect() protoreflect.Message {
	mi := &file_unitygame_unitygame_proto_msgTypes[27]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BossScore.ProtoReflect.Descriptor instead.
func (*BossScore) Descriptor() ([]byte, []int) {
	return file_unitygame_unitygame_proto_rawDescGZIP(), []int{27}
}

func (x *BossScore) GetTeamId() int32 {
	if x != nil {
		return x.TeamId
	}
	return 0
}

func (x *BossScore) GetCount() int32 {
	if x != nil {
		return x.Count
	}
	return 0
}

type ReportScoreRsp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *ReportScoreRsp) Reset() {
	*x = ReportScoreRsp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_unitygame_unitygame_proto_msgTypes[28]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReportScoreRsp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReportScoreRsp) ProtoMessage() {}

func (x *ReportScoreRsp) ProtoReflect() protoreflect.Message {
	mi := &file_unitygame_unitygame_proto_msgTypes[28]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReportScoreRsp.ProtoReflect.Descriptor instead.
func (*ReportScoreRsp) Descriptor() ([]byte, []int) {
	return file_unitygame_unitygame_proto_rawDescGZIP(), []int{28}
}

//加载进度
type LoadingReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Progress int64 `protobuf:"varint,1,opt,name=progress,proto3" json:"progress,omitempty"` // 总进度100
}

func (x *LoadingReq) Reset() {
	*x = LoadingReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_unitygame_unitygame_proto_msgTypes[29]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LoadingReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LoadingReq) ProtoMessage() {}

func (x *LoadingReq) ProtoReflect() protoreflect.Message {
	mi := &file_unitygame_unitygame_proto_msgTypes[29]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LoadingReq.ProtoReflect.Descriptor instead.
func (*LoadingReq) Descriptor() ([]byte, []int) {
	return file_unitygame_unitygame_proto_rawDescGZIP(), []int{29}
}

func (x *LoadingReq) GetProgress() int64 {
	if x != nil {
		return x.Progress
	}
	return 0
}

type LoadingRsp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *LoadingRsp) Reset() {
	*x = LoadingRsp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_unitygame_unitygame_proto_msgTypes[30]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LoadingRsp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LoadingRsp) ProtoMessage() {}

func (x *LoadingRsp) ProtoReflect() protoreflect.Message {
	mi := &file_unitygame_unitygame_proto_msgTypes[30]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LoadingRsp.ProtoReflect.Descriptor instead.
func (*LoadingRsp) Descriptor() ([]byte, []int) {
	return file_unitygame_unitygame_proto_rawDescGZIP(), []int{30}
}

// 上报房间是否可以加入的状态
//state = 1:游戏即将结束（不给加入）
//state = 2:游戏中（可以加入）
type ReportRoomLockStateReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	State    int32 `protobuf:"zigzag32,1,opt,name=state,proto3" json:"state,omitempty"`
	ActionNo int32 `protobuf:"zigzag32,2,opt,name=actionNo,proto3" json:"actionNo,omitempty"`
	Pid      int32 `protobuf:"zigzag32,3,opt,name=pid,proto3" json:"pid,omitempty"`
}

func (x *ReportRoomLockStateReq) Reset() {
	*x = ReportRoomLockStateReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_unitygame_unitygame_proto_msgTypes[31]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReportRoomLockStateReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReportRoomLockStateReq) ProtoMessage() {}

func (x *ReportRoomLockStateReq) ProtoReflect() protoreflect.Message {
	mi := &file_unitygame_unitygame_proto_msgTypes[31]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReportRoomLockStateReq.ProtoReflect.Descriptor instead.
func (*ReportRoomLockStateReq) Descriptor() ([]byte, []int) {
	return file_unitygame_unitygame_proto_rawDescGZIP(), []int{31}
}

func (x *ReportRoomLockStateReq) GetState() int32 {
	if x != nil {
		return x.State
	}
	return 0
}

func (x *ReportRoomLockStateReq) GetActionNo() int32 {
	if x != nil {
		return x.ActionNo
	}
	return 0
}

func (x *ReportRoomLockStateReq) GetPid() int32 {
	if x != nil {
		return x.Pid
	}
	return 0
}

type ReportRoomLockStateRsp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *ReportRoomLockStateRsp) Reset() {
	*x = ReportRoomLockStateRsp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_unitygame_unitygame_proto_msgTypes[32]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReportRoomLockStateRsp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReportRoomLockStateRsp) ProtoMessage() {}

func (x *ReportRoomLockStateRsp) ProtoReflect() protoreflect.Message {
	mi := &file_unitygame_unitygame_proto_msgTypes[32]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReportRoomLockStateRsp.ProtoReflect.Descriptor instead.
func (*ReportRoomLockStateRsp) Descriptor() ([]byte, []int) {
	return file_unitygame_unitygame_proto_rawDescGZIP(), []int{32}
}

// 上报 kuromi 成绩
type ReportKuromiScoreReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TeamScores []*KuromiTeamScore `protobuf:"bytes,1,rep,name=team_scores,json=teamScores,proto3" json:"team_scores,omitempty"`
	ActionNo   int32              `protobuf:"varint,2,opt,name=action_no,json=actionNo,proto3" json:"action_no,omitempty"` // 帧号
	Pid        int32              `protobuf:"zigzag32,3,opt,name=pid,proto3" json:"pid,omitempty"`
	Rid        int32              `protobuf:"varint,4,opt,name=rid,proto3" json:"rid,omitempty"`                             // 房间号
	EndReason  string             `protobuf:"bytes,5,opt,name=end_reason,json=endReason,proto3" json:"end_reason,omitempty"` // 达到碎片时间 0，单局时间截止 1
}

func (x *ReportKuromiScoreReq) Reset() {
	*x = ReportKuromiScoreReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_unitygame_unitygame_proto_msgTypes[33]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReportKuromiScoreReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReportKuromiScoreReq) ProtoMessage() {}

func (x *ReportKuromiScoreReq) ProtoReflect() protoreflect.Message {
	mi := &file_unitygame_unitygame_proto_msgTypes[33]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReportKuromiScoreReq.ProtoReflect.Descriptor instead.
func (*ReportKuromiScoreReq) Descriptor() ([]byte, []int) {
	return file_unitygame_unitygame_proto_rawDescGZIP(), []int{33}
}

func (x *ReportKuromiScoreReq) GetTeamScores() []*KuromiTeamScore {
	if x != nil {
		return x.TeamScores
	}
	return nil
}

func (x *ReportKuromiScoreReq) GetActionNo() int32 {
	if x != nil {
		return x.ActionNo
	}
	return 0
}

func (x *ReportKuromiScoreReq) GetPid() int32 {
	if x != nil {
		return x.Pid
	}
	return 0
}

func (x *ReportKuromiScoreReq) GetRid() int32 {
	if x != nil {
		return x.Rid
	}
	return 0
}

func (x *ReportKuromiScoreReq) GetEndReason() string {
	if x != nil {
		return x.EndReason
	}
	return ""
}

type KuromiTeamScore struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TeamId       int32                `protobuf:"varint,1,opt,name=team_id,json=teamId,proto3" json:"team_id,omitempty"`
	PlayerScores []*KuromiPlayerScore `protobuf:"bytes,2,rep,name=player_scores,json=playerScores,proto3" json:"player_scores,omitempty"`
}

func (x *KuromiTeamScore) Reset() {
	*x = KuromiTeamScore{}
	if protoimpl.UnsafeEnabled {
		mi := &file_unitygame_unitygame_proto_msgTypes[34]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *KuromiTeamScore) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*KuromiTeamScore) ProtoMessage() {}

func (x *KuromiTeamScore) ProtoReflect() protoreflect.Message {
	mi := &file_unitygame_unitygame_proto_msgTypes[34]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use KuromiTeamScore.ProtoReflect.Descriptor instead.
func (*KuromiTeamScore) Descriptor() ([]byte, []int) {
	return file_unitygame_unitygame_proto_rawDescGZIP(), []int{34}
}

func (x *KuromiTeamScore) GetTeamId() int32 {
	if x != nil {
		return x.TeamId
	}
	return 0
}

func (x *KuromiTeamScore) GetPlayerScores() []*KuromiPlayerScore {
	if x != nil {
		return x.PlayerScores
	}
	return nil
}

type KuromiPlayerScore struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 个人信息
	Uid string `protobuf:"bytes,1,opt,name=uid,proto3" json:"uid,omitempty"`
	// 游戏数据
	Length               int32    `protobuf:"varint,2,opt,name=length,proto3" json:"length,omitempty"`                                                              // 长度
	Kill                 int32    `protobuf:"varint,3,opt,name=kill,proto3" json:"kill,omitempty"`                                                                  // 击杀数量
	ItemScores           []int32  `protobuf:"varint,4,rep,packed,name=item_scores,json=itemScores,proto3" json:"item_scores,omitempty"`                             // 拾取道具
	ReviveCount          int32    `protobuf:"varint,5,opt,name=revive_count,json=reviveCount,proto3" json:"revive_count,omitempty"`                                 // 复活次数
	EventIds             []string `protobuf:"bytes,6,rep,name=event_ids,json=eventIds,proto3" json:"event_ids,omitempty"`                                           // 触发事件（勇往直前...）分数
	Eat                  int32    `protobuf:"varint,7,opt,name=eat,proto3" json:"eat,omitempty"`                                                                    // 累计长度，只加不减
	KilledNum            int32    `protobuf:"varint,8,opt,name=killed_num,json=killedNum,proto3" json:"killed_num,omitempty"`                                       // 被击杀次数
	DestroyLength        int32    `protobuf:"varint,9,opt,name=destroy_length,json=destroyLength,proto3" json:"destroy_length,omitempty"`                           // 击杀的敌人的长度的累加
	CollectColorDotScore int32    `protobuf:"varint,10,opt,name=collect_color_dot_score,json=collectColorDotScore,proto3" json:"collect_color_dot_score,omitempty"` // 收集彩点分数
	HitWallTimes         int32    `protobuf:"varint,11,opt,name=hit_wall_times,json=hitWallTimes,proto3" json:"hit_wall_times,omitempty"`                           // 撞墙次数
	CollectWreckScore    int32    `protobuf:"varint,12,opt,name=collect_wreck_score,json=collectWreckScore,proto3" json:"collect_wreck_score,omitempty"`            // 收集残骸分数
	KillBonusScore       int32    `protobuf:"varint,13,opt,name=kill_bonus_score,json=killBonusScore,proto3" json:"kill_bonus_score,omitempty"`                     // show 加成击杀收益分数
	DieTime              int32    `protobuf:"varint,15,opt,name=die_time,json=dieTime,proto3" json:"die_time,omitempty"`                                            // 死了多久(毫秒)，复活的时候清零
	FragmentScore        int32    `protobuf:"varint,17,opt,name=fragment_score,json=fragmentScore,proto3" json:"fragment_score,omitempty"`                          // 碎片分数
	TreasureCount        int32    `protobuf:"varint,18,opt,name=treasure_count,json=treasureCount,proto3" json:"treasure_count,omitempty"`                          // 宝藏个数
	GroupId              int32    `protobuf:"varint,19,opt,name=group_id,json=groupId,proto3" json:"group_id,omitempty"`                                            // 队伍 id
	Num                  int32    `protobuf:"varint,20,opt,name=num,proto3" json:"num,omitempty"`                                                                   // 房间位置
	SkinId               int32    `protobuf:"varint,21,opt,name=skin_id,json=skinId,proto3" json:"skin_id,omitempty"`                                               // 本局游戏穿戴的皮肤 id
	MatchId              string   `protobuf:"bytes,22,opt,name=match_id,json=matchId,proto3" json:"match_id,omitempty"`                                             // 匹配 id
}

func (x *KuromiPlayerScore) Reset() {
	*x = KuromiPlayerScore{}
	if protoimpl.UnsafeEnabled {
		mi := &file_unitygame_unitygame_proto_msgTypes[35]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *KuromiPlayerScore) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*KuromiPlayerScore) ProtoMessage() {}

func (x *KuromiPlayerScore) ProtoReflect() protoreflect.Message {
	mi := &file_unitygame_unitygame_proto_msgTypes[35]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use KuromiPlayerScore.ProtoReflect.Descriptor instead.
func (*KuromiPlayerScore) Descriptor() ([]byte, []int) {
	return file_unitygame_unitygame_proto_rawDescGZIP(), []int{35}
}

func (x *KuromiPlayerScore) GetUid() string {
	if x != nil {
		return x.Uid
	}
	return ""
}

func (x *KuromiPlayerScore) GetLength() int32 {
	if x != nil {
		return x.Length
	}
	return 0
}

func (x *KuromiPlayerScore) GetKill() int32 {
	if x != nil {
		return x.Kill
	}
	return 0
}

func (x *KuromiPlayerScore) GetItemScores() []int32 {
	if x != nil {
		return x.ItemScores
	}
	return nil
}

func (x *KuromiPlayerScore) GetReviveCount() int32 {
	if x != nil {
		return x.ReviveCount
	}
	return 0
}

func (x *KuromiPlayerScore) GetEventIds() []string {
	if x != nil {
		return x.EventIds
	}
	return nil
}

func (x *KuromiPlayerScore) GetEat() int32 {
	if x != nil {
		return x.Eat
	}
	return 0
}

func (x *KuromiPlayerScore) GetKilledNum() int32 {
	if x != nil {
		return x.KilledNum
	}
	return 0
}

func (x *KuromiPlayerScore) GetDestroyLength() int32 {
	if x != nil {
		return x.DestroyLength
	}
	return 0
}

func (x *KuromiPlayerScore) GetCollectColorDotScore() int32 {
	if x != nil {
		return x.CollectColorDotScore
	}
	return 0
}

func (x *KuromiPlayerScore) GetHitWallTimes() int32 {
	if x != nil {
		return x.HitWallTimes
	}
	return 0
}

func (x *KuromiPlayerScore) GetCollectWreckScore() int32 {
	if x != nil {
		return x.CollectWreckScore
	}
	return 0
}

func (x *KuromiPlayerScore) GetKillBonusScore() int32 {
	if x != nil {
		return x.KillBonusScore
	}
	return 0
}

func (x *KuromiPlayerScore) GetDieTime() int32 {
	if x != nil {
		return x.DieTime
	}
	return 0
}

func (x *KuromiPlayerScore) GetFragmentScore() int32 {
	if x != nil {
		return x.FragmentScore
	}
	return 0
}

func (x *KuromiPlayerScore) GetTreasureCount() int32 {
	if x != nil {
		return x.TreasureCount
	}
	return 0
}

func (x *KuromiPlayerScore) GetGroupId() int32 {
	if x != nil {
		return x.GroupId
	}
	return 0
}

func (x *KuromiPlayerScore) GetNum() int32 {
	if x != nil {
		return x.Num
	}
	return 0
}

func (x *KuromiPlayerScore) GetSkinId() int32 {
	if x != nil {
		return x.SkinId
	}
	return 0
}

func (x *KuromiPlayerScore) GetMatchId() string {
	if x != nil {
		return x.MatchId
	}
	return ""
}

// 上报 喜灰玩法 成绩
type ReportGoatScoreReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TeamScores []*GoatTeamScore `protobuf:"bytes,1,rep,name=team_scores,json=teamScores,proto3" json:"team_scores,omitempty"`
	ActionNo   int32            `protobuf:"varint,2,opt,name=action_no,json=actionNo,proto3" json:"action_no,omitempty"` // 帧号
	Pid        int32            `protobuf:"zigzag32,3,opt,name=pid,proto3" json:"pid,omitempty"`
	Rid        int32            `protobuf:"varint,4,opt,name=rid,proto3" json:"rid,omitempty"`                             // 房间号
	EndReason  string           `protobuf:"bytes,5,opt,name=end_reason,json=endReason,proto3" json:"end_reason,omitempty"` // 达到分数 0，单局时间截止 1
}

func (x *ReportGoatScoreReq) Reset() {
	*x = ReportGoatScoreReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_unitygame_unitygame_proto_msgTypes[36]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReportGoatScoreReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReportGoatScoreReq) ProtoMessage() {}

func (x *ReportGoatScoreReq) ProtoReflect() protoreflect.Message {
	mi := &file_unitygame_unitygame_proto_msgTypes[36]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReportGoatScoreReq.ProtoReflect.Descriptor instead.
func (*ReportGoatScoreReq) Descriptor() ([]byte, []int) {
	return file_unitygame_unitygame_proto_rawDescGZIP(), []int{36}
}

func (x *ReportGoatScoreReq) GetTeamScores() []*GoatTeamScore {
	if x != nil {
		return x.TeamScores
	}
	return nil
}

func (x *ReportGoatScoreReq) GetActionNo() int32 {
	if x != nil {
		return x.ActionNo
	}
	return 0
}

func (x *ReportGoatScoreReq) GetPid() int32 {
	if x != nil {
		return x.Pid
	}
	return 0
}

func (x *ReportGoatScoreReq) GetRid() int32 {
	if x != nil {
		return x.Rid
	}
	return 0
}

func (x *ReportGoatScoreReq) GetEndReason() string {
	if x != nil {
		return x.EndReason
	}
	return ""
}

type GoatTeamScore struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TeamId       int32              `protobuf:"varint,1,opt,name=team_id,json=teamId,proto3" json:"team_id,omitempty"`
	PlayerScores []*GoatPlayerScore `protobuf:"bytes,2,rep,name=player_scores,json=playerScores,proto3" json:"player_scores,omitempty"`
}

func (x *GoatTeamScore) Reset() {
	*x = GoatTeamScore{}
	if protoimpl.UnsafeEnabled {
		mi := &file_unitygame_unitygame_proto_msgTypes[37]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GoatTeamScore) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GoatTeamScore) ProtoMessage() {}

func (x *GoatTeamScore) ProtoReflect() protoreflect.Message {
	mi := &file_unitygame_unitygame_proto_msgTypes[37]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GoatTeamScore.ProtoReflect.Descriptor instead.
func (*GoatTeamScore) Descriptor() ([]byte, []int) {
	return file_unitygame_unitygame_proto_rawDescGZIP(), []int{37}
}

func (x *GoatTeamScore) GetTeamId() int32 {
	if x != nil {
		return x.TeamId
	}
	return 0
}

func (x *GoatTeamScore) GetPlayerScores() []*GoatPlayerScore {
	if x != nil {
		return x.PlayerScores
	}
	return nil
}

type GoatPlayerScore struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 个人信息
	Uid     string `protobuf:"bytes,1,opt,name=uid,proto3" json:"uid,omitempty"`
	GroupId int32  `protobuf:"varint,2,opt,name=group_id,json=groupId,proto3" json:"group_id,omitempty"` // 队伍 id
	Num     int32  `protobuf:"varint,3,opt,name=num,proto3" json:"num,omitempty"`                        // 房间位置
	MatchId string `protobuf:"bytes,4,opt,name=match_id,json=matchId,proto3" json:"match_id,omitempty"`  // 匹配 id
	SkinId  int32  `protobuf:"varint,5,opt,name=skin_id,json=skinId,proto3" json:"skin_id,omitempty"`    // 本局游戏穿戴的皮肤 id
	// 游戏数据
	Length               int32            `protobuf:"varint,6,opt,name=length,proto3" json:"length,omitempty"`                                                              // 长度
	Kill                 int32            `protobuf:"varint,7,opt,name=kill,proto3" json:"kill,omitempty"`                                                                  // 击杀数量
	ItemScores           []int32          `protobuf:"varint,8,rep,packed,name=item_scores,json=itemScores,proto3" json:"item_scores,omitempty"`                             // 拾取道具
	ReviveCount          int32            `protobuf:"varint,9,opt,name=revive_count,json=reviveCount,proto3" json:"revive_count,omitempty"`                                 // 复活次数
	KilledNum            int32            `protobuf:"varint,10,opt,name=killed_num,json=killedNum,proto3" json:"killed_num,omitempty"`                                      // 被击杀次数
	DestroyLength        int32            `protobuf:"varint,11,opt,name=destroy_length,json=destroyLength,proto3" json:"destroy_length,omitempty"`                          // 击杀的敌人的长度的累加
	CollectColorDotScore int32            `protobuf:"varint,12,opt,name=collect_color_dot_score,json=collectColorDotScore,proto3" json:"collect_color_dot_score,omitempty"` // 收集彩点分数
	HitWallTimes         int32            `protobuf:"varint,13,opt,name=hit_wall_times,json=hitWallTimes,proto3" json:"hit_wall_times,omitempty"`                           // 撞墙次数
	CollectWreckScore    int32            `protobuf:"varint,14,opt,name=collect_wreck_score,json=collectWreckScore,proto3" json:"collect_wreck_score,omitempty"`            // 收集残骸分数
	KillBonusScore       int32            `protobuf:"varint,15,opt,name=kill_bonus_score,json=killBonusScore,proto3" json:"kill_bonus_score,omitempty"`                     // show 加成击杀收益分数
	DieTime              int32            `protobuf:"varint,16,opt,name=die_time,json=dieTime,proto3" json:"die_time,omitempty"`                                            // 死了多久(毫秒)，复活的时候清零
	CollectBucketCount   int32            `protobuf:"varint,17,opt,name=collect_bucket_count,json=collectBucketCount,proto3" json:"collect_bucket_count,omitempty"`         // 收集桶个数
	Score                int32            `protobuf:"varint,18,opt,name=score,proto3" json:"score,omitempty"`                                                               // 分数
	TaskAddProgress      []*EventTaskInfo `protobuf:"bytes,19,rep,name=task_add_progress,json=taskAddProgress,proto3" json:"task_add_progress,omitempty"`                   // 本局的任务进度情况
}

func (x *GoatPlayerScore) Reset() {
	*x = GoatPlayerScore{}
	if protoimpl.UnsafeEnabled {
		mi := &file_unitygame_unitygame_proto_msgTypes[38]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GoatPlayerScore) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GoatPlayerScore) ProtoMessage() {}

func (x *GoatPlayerScore) ProtoReflect() protoreflect.Message {
	mi := &file_unitygame_unitygame_proto_msgTypes[38]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GoatPlayerScore.ProtoReflect.Descriptor instead.
func (*GoatPlayerScore) Descriptor() ([]byte, []int) {
	return file_unitygame_unitygame_proto_rawDescGZIP(), []int{38}
}

func (x *GoatPlayerScore) GetUid() string {
	if x != nil {
		return x.Uid
	}
	return ""
}

func (x *GoatPlayerScore) GetGroupId() int32 {
	if x != nil {
		return x.GroupId
	}
	return 0
}

func (x *GoatPlayerScore) GetNum() int32 {
	if x != nil {
		return x.Num
	}
	return 0
}

func (x *GoatPlayerScore) GetMatchId() string {
	if x != nil {
		return x.MatchId
	}
	return ""
}

func (x *GoatPlayerScore) GetSkinId() int32 {
	if x != nil {
		return x.SkinId
	}
	return 0
}

func (x *GoatPlayerScore) GetLength() int32 {
	if x != nil {
		return x.Length
	}
	return 0
}

func (x *GoatPlayerScore) GetKill() int32 {
	if x != nil {
		return x.Kill
	}
	return 0
}

func (x *GoatPlayerScore) GetItemScores() []int32 {
	if x != nil {
		return x.ItemScores
	}
	return nil
}

func (x *GoatPlayerScore) GetReviveCount() int32 {
	if x != nil {
		return x.ReviveCount
	}
	return 0
}

func (x *GoatPlayerScore) GetKilledNum() int32 {
	if x != nil {
		return x.KilledNum
	}
	return 0
}

func (x *GoatPlayerScore) GetDestroyLength() int32 {
	if x != nil {
		return x.DestroyLength
	}
	return 0
}

func (x *GoatPlayerScore) GetCollectColorDotScore() int32 {
	if x != nil {
		return x.CollectColorDotScore
	}
	return 0
}

func (x *GoatPlayerScore) GetHitWallTimes() int32 {
	if x != nil {
		return x.HitWallTimes
	}
	return 0
}

func (x *GoatPlayerScore) GetCollectWreckScore() int32 {
	if x != nil {
		return x.CollectWreckScore
	}
	return 0
}

func (x *GoatPlayerScore) GetKillBonusScore() int32 {
	if x != nil {
		return x.KillBonusScore
	}
	return 0
}

func (x *GoatPlayerScore) GetDieTime() int32 {
	if x != nil {
		return x.DieTime
	}
	return 0
}

func (x *GoatPlayerScore) GetCollectBucketCount() int32 {
	if x != nil {
		return x.CollectBucketCount
	}
	return 0
}

func (x *GoatPlayerScore) GetScore() int32 {
	if x != nil {
		return x.Score
	}
	return 0
}

func (x *GoatPlayerScore) GetTaskAddProgress() []*EventTaskInfo {
	if x != nil {
		return x.TaskAddProgress
	}
	return nil
}

type EventTaskInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	EventId     int32 `protobuf:"varint,1,opt,name=event_id,json=eventId,proto3" json:"event_id,omitempty"`             // 任务活动 id
	TaskId      int32 `protobuf:"varint,2,opt,name=task_id,json=taskId,proto3" json:"task_id,omitempty"`                // 任务 id
	AddProgress int32 `protobuf:"varint,3,opt,name=add_progress,json=addProgress,proto3" json:"add_progress,omitempty"` // 增加的进度
}

func (x *EventTaskInfo) Reset() {
	*x = EventTaskInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_unitygame_unitygame_proto_msgTypes[39]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EventTaskInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EventTaskInfo) ProtoMessage() {}

func (x *EventTaskInfo) ProtoReflect() protoreflect.Message {
	mi := &file_unitygame_unitygame_proto_msgTypes[39]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EventTaskInfo.ProtoReflect.Descriptor instead.
func (*EventTaskInfo) Descriptor() ([]byte, []int) {
	return file_unitygame_unitygame_proto_rawDescGZIP(), []int{39}
}

func (x *EventTaskInfo) GetEventId() int32 {
	if x != nil {
		return x.EventId
	}
	return 0
}

func (x *EventTaskInfo) GetTaskId() int32 {
	if x != nil {
		return x.TaskId
	}
	return 0
}

func (x *EventTaskInfo) GetAddProgress() int32 {
	if x != nil {
		return x.AddProgress
	}
	return 0
}

var File_unitygame_unitygame_proto protoreflect.FileDescriptor

var file_unitygame_unitygame_proto_rawDesc = []byte{
	0x0a, 0x19, 0x75, 0x6e, 0x69, 0x74, 0x79, 0x67, 0x61, 0x6d, 0x65, 0x2f, 0x75, 0x6e, 0x69, 0x74,
	0x79, 0x67, 0x61, 0x6d, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x09, 0x75, 0x6e, 0x69,
	0x74, 0x79, 0x67, 0x61, 0x6d, 0x65, 0x22, 0x54, 0x0a, 0x0e, 0x50, 0x75, 0x47, 0x61, 0x6d, 0x65,
	0x53, 0x74, 0x61, 0x72, 0x74, 0x4d, 0x73, 0x67, 0x12, 0x1d, 0x0a, 0x0a, 0x73, 0x74, 0x61, 0x72,
	0x74, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x73, 0x74,
	0x61, 0x72, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x23, 0x0a, 0x0d, 0x74, 0x75, 0x72, 0x6e, 0x5f,
	0x69, 0x6e, 0x74, 0x65, 0x72, 0x76, 0x61, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0c,
	0x74, 0x75, 0x72, 0x6e, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x76, 0x61, 0x6c, 0x22, 0x4d, 0x0a, 0x0b,
	0x50, 0x75, 0x53, 0x69, 0x67, 0x6e, 0x61, 0x6c, 0x4d, 0x73, 0x67, 0x12, 0x10, 0x0a, 0x03, 0x6e,
	0x75, 0x6d, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x03, 0x6e, 0x75, 0x6d, 0x12, 0x16, 0x0a,
	0x06, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x73,
	0x69, 0x67, 0x6e, 0x61, 0x6c, 0x12, 0x14, 0x0a, 0x05, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x22, 0x2b, 0x0a, 0x0c, 0x50,
	0x75, 0x47, 0x61, 0x6d, 0x65, 0x45, 0x6e, 0x64, 0x4d, 0x73, 0x67, 0x12, 0x1b, 0x0a, 0x09, 0x61,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x6e, 0x6f, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08,
	0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x4e, 0x6f, 0x22, 0xa4, 0x01, 0x0a, 0x0d, 0x50, 0x75, 0x41,
	0x62, 0x6e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x4d, 0x73, 0x67, 0x12, 0x21, 0x0a, 0x0c, 0x61, 0x62,
	0x6e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x5f, 0x6e, 0x75, 0x6d, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x0b, 0x61, 0x62, 0x6e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x4e, 0x75, 0x6d, 0x12, 0x1b, 0x0a,
	0x09, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x6e, 0x6f, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x08, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x4e, 0x6f, 0x12, 0x1d, 0x0a, 0x0a, 0x75, 0x70,
	0x6c, 0x6f, 0x61, 0x64, 0x5f, 0x6c, 0x6f, 0x67, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x09,
	0x75, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x4c, 0x6f, 0x67, 0x12, 0x1a, 0x0a, 0x08, 0x63, 0x68, 0x65,
	0x63, 0x6b, 0x73, 0x75, 0x6d, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x63, 0x68, 0x65,
	0x63, 0x6b, 0x73, 0x75, 0x6d, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x6f, 0x72, 0x72, 0x65, 0x63, 0x74,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x6f, 0x72, 0x72, 0x65, 0x63, 0x74, 0x22,
	0x37, 0x0a, 0x12, 0x50, 0x75, 0x53, 0x63, 0x6f, 0x72, 0x65, 0x41, 0x62, 0x6e, 0x6f, 0x72, 0x6d,
	0x61, 0x6c, 0x4d, 0x73, 0x67, 0x12, 0x21, 0x0a, 0x0c, 0x61, 0x62, 0x6e, 0x6f, 0x72, 0x6d, 0x61,
	0x6c, 0x5f, 0x6e, 0x75, 0x6d, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0b, 0x61, 0x62, 0x6e,
	0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x4e, 0x75, 0x6d, 0x22, 0x41, 0x0a, 0x0a, 0x50, 0x75, 0x46, 0x72,
	0x61, 0x6d, 0x65, 0x4d, 0x73, 0x67, 0x12, 0x33, 0x0a, 0x0a, 0x66, 0x72, 0x61, 0x6d, 0x65, 0x5f,
	0x6c, 0x69, 0x73, 0x74, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x75, 0x6e, 0x69,
	0x74, 0x79, 0x67, 0x61, 0x6d, 0x65, 0x2e, 0x66, 0x72, 0x61, 0x6d, 0x65, 0x49, 0x74, 0x65, 0x6d,
	0x52, 0x09, 0x66, 0x72, 0x61, 0x6d, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x22, 0x40, 0x0a, 0x0c, 0x50,
	0x75, 0x4c, 0x6f, 0x61, 0x64, 0x69, 0x6e, 0x67, 0x4d, 0x73, 0x67, 0x12, 0x30, 0x0a, 0x07, 0x6c,
	0x6f, 0x61, 0x64, 0x69, 0x6e, 0x67, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x75,
	0x6e, 0x69, 0x74, 0x79, 0x67, 0x61, 0x6d, 0x65, 0x2e, 0x6e, 0x75, 0x6d, 0x50, 0x72, 0x6f, 0x67,
	0x72, 0x65, 0x73, 0x73, 0x52, 0x07, 0x6c, 0x6f, 0x61, 0x64, 0x69, 0x6e, 0x67, 0x22, 0x3b, 0x0a,
	0x0b, 0x6e, 0x75, 0x6d, 0x50, 0x72, 0x6f, 0x67, 0x72, 0x65, 0x73, 0x73, 0x12, 0x10, 0x0a, 0x03,
	0x6e, 0x75, 0x6d, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x03, 0x6e, 0x75, 0x6d, 0x12, 0x1a,
	0x0a, 0x08, 0x70, 0x72, 0x6f, 0x67, 0x72, 0x65, 0x73, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x08, 0x70, 0x72, 0x6f, 0x67, 0x72, 0x65, 0x73, 0x73, 0x22, 0x60, 0x0a, 0x09, 0x66, 0x72,
	0x61, 0x6d, 0x65, 0x49, 0x74, 0x65, 0x6d, 0x12, 0x1b, 0x0a, 0x09, 0x61, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x5f, 0x6e, 0x6f, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x61, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x4e, 0x6f, 0x12, 0x36, 0x0a, 0x0b, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x6c,
	0x69, 0x73, 0x74, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x75, 0x6e, 0x69, 0x74,
	0x79, 0x67, 0x61, 0x6d, 0x65, 0x2e, 0x67, 0x61, 0x6d, 0x65, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x52, 0x0a, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x4c, 0x69, 0x73, 0x74, 0x22, 0x93, 0x01, 0x0a,
	0x0a, 0x67, 0x61, 0x6d, 0x65, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x10, 0x0a, 0x03, 0x6e,
	0x75, 0x6d, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x03, 0x6e, 0x75, 0x6d, 0x12, 0x10, 0x0a,
	0x03, 0x63, 0x6d, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x03, 0x63, 0x6d, 0x64, 0x12,
	0x14, 0x0a, 0x05, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05,
	0x70, 0x61, 0x72, 0x61, 0x6d, 0x12, 0x2c, 0x0a, 0x04, 0x61, 0x74, 0x74, 0x72, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x75, 0x6e, 0x69, 0x74, 0x79, 0x67, 0x61, 0x6d, 0x65, 0x2e,
	0x75, 0x73, 0x65, 0x72, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x52, 0x04, 0x61,
	0x74, 0x74, 0x72, 0x12, 0x1d, 0x0a, 0x0a, 0x6d, 0x6f, 0x64, 0x65, 0x5f, 0x70, 0x61, 0x72, 0x61,
	0x6d, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x6d, 0x6f, 0x64, 0x65, 0x50, 0x61, 0x72,
	0x61, 0x6d, 0x22, 0xf2, 0x02, 0x0a, 0x0d, 0x75, 0x73, 0x65, 0x72, 0x41, 0x74, 0x74, 0x72, 0x69,
	0x62, 0x75, 0x74, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x03, 0x75, 0x69, 0x64, 0x12, 0x17, 0x0a, 0x07, 0x74, 0x65, 0x61, 0x6d, 0x5f, 0x69,
	0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x74, 0x65, 0x61, 0x6d, 0x49, 0x64, 0x12,
	0x10, 0x0a, 0x03, 0x6e, 0x75, 0x6d, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x03, 0x6e, 0x75,
	0x6d, 0x12, 0x17, 0x0a, 0x07, 0x72, 0x6f, 0x6c, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x06, 0x72, 0x6f, 0x6c, 0x65, 0x49, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x72, 0x6f,
	0x6c, 0x65, 0x5f, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09,
	0x72, 0x6f, 0x6c, 0x65, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x75, 0x69,
	0x74, 0x18, 0x07, 0x20, 0x03, 0x28, 0x05, 0x52, 0x04, 0x73, 0x75, 0x69, 0x74, 0x12, 0x2e, 0x0a,
	0x13, 0x61, 0x6c, 0x6c, 0x6f, 0x77, 0x5f, 0x66, 0x6f, 0x6c, 0x6c, 0x6f, 0x77, 0x65, 0x72, 0x5f,
	0x6a, 0x6f, 0x69, 0x6e, 0x18, 0x08, 0x20, 0x01, 0x28, 0x08, 0x52, 0x11, 0x61, 0x6c, 0x6c, 0x6f,
	0x77, 0x46, 0x6f, 0x6c, 0x6c, 0x6f, 0x77, 0x65, 0x72, 0x4a, 0x6f, 0x69, 0x6e, 0x12, 0x2a, 0x0a,
	0x11, 0x61, 0x6c, 0x6c, 0x6f, 0x77, 0x5f, 0x72, 0x65, 0x63, 0x65, 0x6e, 0x74, 0x5f, 0x6a, 0x6f,
	0x69, 0x6e, 0x18, 0x09, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0f, 0x61, 0x6c, 0x6c, 0x6f, 0x77, 0x52,
	0x65, 0x63, 0x65, 0x6e, 0x74, 0x4a, 0x6f, 0x69, 0x6e, 0x12, 0x19, 0x0a, 0x08, 0x77, 0x72, 0x65,
	0x63, 0x6b, 0x5f, 0x69, 0x64, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x77, 0x72, 0x65,
	0x63, 0x6b, 0x49, 0x64, 0x12, 0x19, 0x0a, 0x08, 0x61, 0x69, 0x5f, 0x73, 0x63, 0x6f, 0x72, 0x65,
	0x18, 0x0b, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x61, 0x69, 0x53, 0x63, 0x6f, 0x72, 0x65, 0x12,
	0x12, 0x0a, 0x04, 0x73, 0x74, 0x61, 0x72, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x73,
	0x74, 0x61, 0x72, 0x12, 0x1a, 0x0a, 0x08, 0x6e, 0x69, 0x63, 0x6b, 0x6e, 0x61, 0x6d, 0x65, 0x18,
	0x0d, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6e, 0x69, 0x63, 0x6b, 0x6e, 0x61, 0x6d, 0x65, 0x12,
	0x16, 0x0a, 0x06, 0x61, 0x76, 0x61, 0x74, 0x61, 0x72, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x06, 0x61, 0x76, 0x61, 0x74, 0x61, 0x72, 0x22, 0xca, 0x01, 0x0a, 0x0a, 0x43, 0x6f, 0x6d, 0x6d,
	0x61, 0x6e, 0x64, 0x52, 0x65, 0x71, 0x12, 0x1b, 0x0a, 0x09, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x5f, 0x6e, 0x6f, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x61, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x4e, 0x6f, 0x12, 0x24, 0x0a, 0x03, 0x63, 0x6d, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e,
	0x32, 0x12, 0x2e, 0x75, 0x6e, 0x69, 0x74, 0x79, 0x67, 0x61, 0x6d, 0x65, 0x2e, 0x63, 0x6f, 0x6d,
	0x6d, 0x61, 0x6e, 0x64, 0x52, 0x03, 0x63, 0x6d, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x70, 0x61, 0x72,
	0x61, 0x6d, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x12,
	0x2c, 0x0a, 0x04, 0x61, 0x74, 0x74, 0x72, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e,
	0x75, 0x6e, 0x69, 0x74, 0x79, 0x67, 0x61, 0x6d, 0x65, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x41, 0x74,
	0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x52, 0x04, 0x61, 0x74, 0x74, 0x72, 0x12, 0x16, 0x0a,
	0x06, 0x70, 0x72, 0x65, 0x52, 0x74, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x70,
	0x72, 0x65, 0x52, 0x74, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x6d, 0x6f, 0x64, 0x65, 0x5f, 0x70, 0x61,
	0x72, 0x61, 0x6d, 0x18, 0x06, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x6d, 0x6f, 0x64, 0x65, 0x50,
	0x61, 0x72, 0x61, 0x6d, 0x22, 0x42, 0x0a, 0x0a, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x52,
	0x73, 0x70, 0x12, 0x1b, 0x0a, 0x09, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x6e, 0x6f, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x4e, 0x6f, 0x12,
	0x17, 0x0a, 0x07, 0x74, 0x69, 0x63, 0x6b, 0x5f, 0x6e, 0x6f, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x06, 0x74, 0x69, 0x63, 0x6b, 0x4e, 0x6f, 0x22, 0x39, 0x0a, 0x09, 0x53, 0x69, 0x67, 0x6e,
	0x61, 0x6c, 0x52, 0x65, 0x71, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x6c, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x6c, 0x12, 0x14, 0x0a,
	0x05, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x70, 0x61,
	0x72, 0x61, 0x6d, 0x22, 0x0b, 0x0a, 0x09, 0x53, 0x69, 0x67, 0x6e, 0x61, 0x6c, 0x52, 0x73, 0x70,
	0x22, 0x5e, 0x0a, 0x0f, 0x48, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x46, 0x72, 0x61, 0x6d, 0x65,
	0x52, 0x65, 0x71, 0x12, 0x26, 0x0a, 0x0f, 0x73, 0x74, 0x61, 0x72, 0x74, 0x5f, 0x61, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x5f, 0x6e, 0x6f, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0d, 0x73, 0x74,
	0x61, 0x72, 0x74, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x4e, 0x6f, 0x12, 0x23, 0x0a, 0x0d, 0x6e,
	0x65, 0x65, 0x64, 0x5f, 0x73, 0x6e, 0x61, 0x70, 0x73, 0x68, 0x6f, 0x74, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x0c, 0x6e, 0x65, 0x65, 0x64, 0x53, 0x6e, 0x61, 0x70, 0x73, 0x68, 0x6f, 0x74,
	0x22, 0x90, 0x01, 0x0a, 0x0f, 0x48, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x46, 0x72, 0x61, 0x6d,
	0x65, 0x52, 0x73, 0x70, 0x12, 0x33, 0x0a, 0x0a, 0x66, 0x72, 0x61, 0x6d, 0x65, 0x5f, 0x6c, 0x69,
	0x73, 0x74, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x75, 0x6e, 0x69, 0x74, 0x79,
	0x67, 0x61, 0x6d, 0x65, 0x2e, 0x66, 0x72, 0x61, 0x6d, 0x65, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x09,
	0x66, 0x72, 0x61, 0x6d, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x2c, 0x0a, 0x12, 0x73, 0x6e, 0x61,
	0x70, 0x73, 0x68, 0x6f, 0x74, 0x5f, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x6e, 0x6f, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x10, 0x73, 0x6e, 0x61, 0x70, 0x73, 0x68, 0x6f, 0x74, 0x41,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x4e, 0x6f, 0x12, 0x1a, 0x0a, 0x08, 0x73, 0x6e, 0x61, 0x70, 0x73,
	0x68, 0x6f, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x08, 0x73, 0x6e, 0x61, 0x70, 0x73,
	0x68, 0x6f, 0x74, 0x22, 0x46, 0x0a, 0x0b, 0x53, 0x6e, 0x61, 0x70, 0x73, 0x68, 0x6f, 0x74, 0x52,
	0x65, 0x71, 0x12, 0x1b, 0x0a, 0x09, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x6e, 0x6f, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x4e, 0x6f, 0x12,
	0x1a, 0x0a, 0x08, 0x73, 0x6e, 0x61, 0x70, 0x73, 0x68, 0x6f, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0c, 0x52, 0x08, 0x73, 0x6e, 0x61, 0x70, 0x73, 0x68, 0x6f, 0x74, 0x22, 0x0d, 0x0a, 0x0b, 0x53,
	0x6e, 0x61, 0x70, 0x73, 0x68, 0x6f, 0x74, 0x52, 0x73, 0x70, 0x22, 0x46, 0x0a, 0x0b, 0x43, 0x68,
	0x65, 0x63, 0x6b, 0x53, 0x75, 0x6d, 0x52, 0x65, 0x71, 0x12, 0x1b, 0x0a, 0x09, 0x61, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x5f, 0x6e, 0x6f, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x61, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x4e, 0x6f, 0x12, 0x1a, 0x0a, 0x08, 0x63, 0x68, 0x65, 0x63, 0x6b, 0x73,
	0x75, 0x6d, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x63, 0x68, 0x65, 0x63, 0x6b, 0x73,
	0x75, 0x6d, 0x22, 0x0d, 0x0a, 0x0b, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x53, 0x75, 0x6d, 0x52, 0x73,
	0x70, 0x22, 0xb5, 0x02, 0x0a, 0x07, 0x42, 0x69, 0x6e, 0x64, 0x52, 0x65, 0x71, 0x12, 0x12, 0x0a,
	0x04, 0x73, 0x65, 0x65, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x73, 0x65, 0x65,
	0x64, 0x12, 0x10, 0x0a, 0x03, 0x6e, 0x75, 0x6d, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x03,
	0x6e, 0x75, 0x6d, 0x12, 0x1d, 0x0a, 0x0a, 0x6d, 0x61, 0x74, 0x63, 0x68, 0x5f, 0x74, 0x69, 0x6d,
	0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x6d, 0x61, 0x74, 0x63, 0x68, 0x54, 0x69,
	0x6d, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x72, 0x65, 0x6c, 0x61, 0x79, 0x5f, 0x73, 0x69, 0x67, 0x6e,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x09, 0x72, 0x65, 0x6c, 0x61, 0x79, 0x53, 0x69, 0x67,
	0x6e, 0x12, 0x1b, 0x0a, 0x09, 0x67, 0x61, 0x6d, 0x65, 0x5f, 0x6d, 0x6f, 0x64, 0x65, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x67, 0x61, 0x6d, 0x65, 0x4d, 0x6f, 0x64, 0x65, 0x12, 0x21,
	0x0a, 0x0c, 0x6d, 0x6f, 0x64, 0x65, 0x5f, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x06,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x0b, 0x6d, 0x6f, 0x64, 0x65, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f,
	0x6e, 0x12, 0x1d, 0x0a, 0x0a, 0x74, 0x69, 0x6d, 0x65, 0x5f, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x18,
	0x07, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x4c, 0x69, 0x6d, 0x69, 0x74,
	0x12, 0x21, 0x0a, 0x0c, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74,
	0x18, 0x08, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0b, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x43, 0x6f,
	0x75, 0x6e, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x18,
	0x09, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x12,
	0x28, 0x0a, 0x10, 0x6d, 0x61, 0x78, 0x5f, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x5f, 0x63, 0x6f,
	0x75, 0x6e, 0x74, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0e, 0x6d, 0x61, 0x78, 0x50, 0x6c,
	0x61, 0x79, 0x65, 0x72, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x22, 0xa0, 0x01, 0x0a, 0x07, 0x42, 0x69,
	0x6e, 0x64, 0x52, 0x73, 0x70, 0x12, 0x14, 0x0a, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x12, 0x38, 0x0a, 0x0a, 0x73,
	0x74, 0x61, 0x72, 0x74, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x19, 0x2e, 0x75, 0x6e, 0x69, 0x74, 0x79, 0x67, 0x61, 0x6d, 0x65, 0x2e, 0x50, 0x75, 0x47, 0x61,
	0x6d, 0x65, 0x53, 0x74, 0x61, 0x72, 0x74, 0x4d, 0x73, 0x67, 0x52, 0x09, 0x73, 0x74, 0x61, 0x72,
	0x74, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x29, 0x0a, 0x10, 0x68, 0x65, 0x61, 0x72, 0x74, 0x62, 0x65,
	0x61, 0x74, 0x5f, 0x73, 0x65, 0x63, 0x6f, 0x6e, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x0f, 0x68, 0x65, 0x61, 0x72, 0x74, 0x62, 0x65, 0x61, 0x74, 0x53, 0x65, 0x63, 0x6f, 0x6e, 0x64,
	0x12, 0x1a, 0x0a, 0x08, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x4e, 0x6f, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x08, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x4e, 0x6f, 0x22, 0x0e, 0x0a, 0x0c,
	0x48, 0x65, 0x61, 0x72, 0x74, 0x42, 0x65, 0x61, 0x74, 0x52, 0x65, 0x71, 0x22, 0x0e, 0x0a, 0x0c,
	0x48, 0x65, 0x61, 0x72, 0x74, 0x42, 0x65, 0x61, 0x74, 0x52, 0x73, 0x70, 0x22, 0xaa, 0x01, 0x0a,
	0x0e, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x53, 0x63, 0x6f, 0x72, 0x65, 0x52, 0x65, 0x71, 0x12,
	0x34, 0x0a, 0x09, 0x73, 0x63, 0x6f, 0x72, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x18, 0x01, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x16, 0x2e, 0x75, 0x6e, 0x69, 0x74, 0x79, 0x67, 0x61, 0x6d, 0x65, 0x2e, 0x50,
	0x6c, 0x61, 0x79, 0x65, 0x72, 0x53, 0x63, 0x6f, 0x72, 0x65, 0x52, 0x09, 0x73, 0x63, 0x6f, 0x72,
	0x65, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x1b, 0x0a, 0x09, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f,
	0x6e, 0x6f, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x4e, 0x6f, 0x12, 0x33, 0x0a, 0x0a, 0x62, 0x6f, 0x73, 0x73, 0x5f, 0x73, 0x63, 0x6f, 0x72, 0x65,
	0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x75, 0x6e, 0x69, 0x74, 0x79, 0x67, 0x61,
	0x6d, 0x65, 0x2e, 0x62, 0x6f, 0x73, 0x73, 0x53, 0x63, 0x6f, 0x72, 0x65, 0x52, 0x09, 0x62, 0x6f,
	0x73, 0x73, 0x53, 0x63, 0x6f, 0x72, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x70, 0x69, 0x64, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x11, 0x52, 0x03, 0x70, 0x69, 0x64, 0x22, 0xcf, 0x05, 0x0a, 0x0b, 0x50, 0x6c,
	0x61, 0x79, 0x65, 0x72, 0x53, 0x63, 0x6f, 0x72, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x75, 0x69, 0x64, 0x12, 0x17, 0x0a, 0x07, 0x74,
	0x65, 0x61, 0x6d, 0x5f, 0x69, 0x64, 0x18, 0x18, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x74, 0x65,
	0x61, 0x6d, 0x49, 0x64, 0x12, 0x10, 0x0a, 0x03, 0x6e, 0x75, 0x6d, 0x18, 0x19, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x03, 0x6e, 0x75, 0x6d, 0x12, 0x16, 0x0a, 0x06, 0x6c, 0x65, 0x6e, 0x67, 0x74, 0x68,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x11, 0x52, 0x06, 0x6c, 0x65, 0x6e, 0x67, 0x74, 0x68, 0x12, 0x12,
	0x0a, 0x04, 0x6b, 0x69, 0x6c, 0x6c, 0x18, 0x04, 0x20, 0x01, 0x28, 0x11, 0x52, 0x04, 0x6b, 0x69,
	0x6c, 0x6c, 0x12, 0x1d, 0x0a, 0x0a, 0x73, 0x74, 0x61, 0x72, 0x5f, 0x73, 0x63, 0x6f, 0x72, 0x65,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x11, 0x52, 0x09, 0x73, 0x74, 0x61, 0x72, 0x53, 0x63, 0x6f, 0x72,
	0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x69, 0x74, 0x65, 0x6d, 0x5f, 0x73, 0x63, 0x6f, 0x72, 0x65, 0x73,
	0x18, 0x08, 0x20, 0x03, 0x28, 0x11, 0x52, 0x0a, 0x69, 0x74, 0x65, 0x6d, 0x53, 0x63, 0x6f, 0x72,
	0x65, 0x73, 0x12, 0x21, 0x0a, 0x0c, 0x72, 0x65, 0x76, 0x69, 0x76, 0x65, 0x5f, 0x63, 0x6f, 0x75,
	0x6e, 0x74, 0x18, 0x09, 0x20, 0x01, 0x28, 0x11, 0x52, 0x0b, 0x72, 0x65, 0x76, 0x69, 0x76, 0x65,
	0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x1b, 0x0a, 0x09, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x5f, 0x69,
	0x64, 0x73, 0x18, 0x0a, 0x20, 0x03, 0x28, 0x09, 0x52, 0x08, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x49,
	0x64, 0x73, 0x12, 0x10, 0x0a, 0x03, 0x65, 0x61, 0x74, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x11, 0x52,
	0x03, 0x65, 0x61, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x6b, 0x69, 0x6c, 0x6c, 0x65, 0x64, 0x5f, 0x6e,
	0x75, 0x6d, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x11, 0x52, 0x09, 0x6b, 0x69, 0x6c, 0x6c, 0x65, 0x64,
	0x4e, 0x75, 0x6d, 0x12, 0x25, 0x0a, 0x0e, 0x64, 0x65, 0x73, 0x74, 0x72, 0x6f, 0x79, 0x5f, 0x6c,
	0x65, 0x6e, 0x67, 0x74, 0x68, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x11, 0x52, 0x0d, 0x64, 0x65, 0x73,
	0x74, 0x72, 0x6f, 0x79, 0x4c, 0x65, 0x6e, 0x67, 0x74, 0x68, 0x12, 0x22, 0x0a, 0x0d, 0x62, 0x6f,
	0x73, 0x73, 0x5f, 0x6b, 0x69, 0x6c, 0x6c, 0x5f, 0x6e, 0x75, 0x6d, 0x18, 0x0e, 0x20, 0x01, 0x28,
	0x11, 0x52, 0x0b, 0x62, 0x6f, 0x73, 0x73, 0x4b, 0x69, 0x6c, 0x6c, 0x4e, 0x75, 0x6d, 0x12, 0x2c,
	0x0a, 0x12, 0x63, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x5f, 0x73, 0x74, 0x61, 0x72, 0x5f, 0x73,
	0x63, 0x6f, 0x72, 0x65, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x11, 0x52, 0x10, 0x63, 0x6f, 0x6c, 0x6c,
	0x65, 0x63, 0x74, 0x53, 0x74, 0x61, 0x72, 0x53, 0x63, 0x6f, 0x72, 0x65, 0x12, 0x35, 0x0a, 0x17,
	0x63, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x5f, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x5f, 0x64, 0x6f,
	0x74, 0x5f, 0x73, 0x63, 0x6f, 0x72, 0x65, 0x18, 0x10, 0x20, 0x01, 0x28, 0x11, 0x52, 0x14, 0x63,
	0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x44, 0x6f, 0x74, 0x53, 0x63,
	0x6f, 0x72, 0x65, 0x12, 0x24, 0x0a, 0x0e, 0x68, 0x69, 0x74, 0x5f, 0x77, 0x61, 0x6c, 0x6c, 0x5f,
	0x74, 0x69, 0x6d, 0x65, 0x73, 0x18, 0x11, 0x20, 0x01, 0x28, 0x11, 0x52, 0x0c, 0x68, 0x69, 0x74,
	0x57, 0x61, 0x6c, 0x6c, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x12, 0x2e, 0x0a, 0x13, 0x63, 0x6f, 0x6c,
	0x6c, 0x65, 0x63, 0x74, 0x5f, 0x77, 0x72, 0x65, 0x63, 0x6b, 0x5f, 0x73, 0x63, 0x6f, 0x72, 0x65,
	0x18, 0x12, 0x20, 0x01, 0x28, 0x11, 0x52, 0x11, 0x63, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x57,
	0x72, 0x65, 0x63, 0x6b, 0x53, 0x63, 0x6f, 0x72, 0x65, 0x12, 0x28, 0x0a, 0x10, 0x6b, 0x69, 0x6c,
	0x6c, 0x5f, 0x62, 0x6f, 0x6e, 0x75, 0x73, 0x5f, 0x73, 0x63, 0x6f, 0x72, 0x65, 0x18, 0x13, 0x20,
	0x01, 0x28, 0x11, 0x52, 0x0e, 0x6b, 0x69, 0x6c, 0x6c, 0x42, 0x6f, 0x6e, 0x75, 0x73, 0x53, 0x63,
	0x6f, 0x72, 0x65, 0x12, 0x28, 0x0a, 0x10, 0x75, 0x73, 0x65, 0x5f, 0x73, 0x68, 0x69, 0x65, 0x6c,
	0x64, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x18, 0x14, 0x20, 0x01, 0x28, 0x11, 0x52, 0x0e, 0x75,
	0x73, 0x65, 0x53, 0x68, 0x69, 0x65, 0x6c, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x12, 0x19, 0x0a,
	0x08, 0x64, 0x69, 0x65, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x16, 0x20, 0x01, 0x28, 0x11, 0x52,
	0x07, 0x64, 0x69, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x31, 0x0a, 0x15, 0x75, 0x73, 0x65, 0x5f,
	0x73, 0x70, 0x65, 0x65, 0x64, 0x5f, 0x73, 0x68, 0x6f, 0x65, 0x73, 0x5f, 0x74, 0x69, 0x6d, 0x65,
	0x73, 0x18, 0x17, 0x20, 0x01, 0x28, 0x11, 0x52, 0x12, 0x75, 0x73, 0x65, 0x53, 0x70, 0x65, 0x65,
	0x64, 0x53, 0x68, 0x6f, 0x65, 0x73, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x22, 0x3a, 0x0a, 0x09, 0x62,
	0x6f, 0x73, 0x73, 0x53, 0x63, 0x6f, 0x72, 0x65, 0x12, 0x17, 0x0a, 0x07, 0x74, 0x65, 0x61, 0x6d,
	0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x11, 0x52, 0x06, 0x74, 0x65, 0x61, 0x6d, 0x49,
	0x64, 0x12, 0x14, 0x0a, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x11,
	0x52, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x22, 0x10, 0x0a, 0x0e, 0x52, 0x65, 0x70, 0x6f, 0x72,
	0x74, 0x53, 0x63, 0x6f, 0x72, 0x65, 0x52, 0x73, 0x70, 0x22, 0x28, 0x0a, 0x0a, 0x4c, 0x6f, 0x61,
	0x64, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x71, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x72, 0x6f, 0x67, 0x72,
	0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x70, 0x72, 0x6f, 0x67, 0x72,
	0x65, 0x73, 0x73, 0x22, 0x0c, 0x0a, 0x0a, 0x4c, 0x6f, 0x61, 0x64, 0x69, 0x6e, 0x67, 0x52, 0x73,
	0x70, 0x22, 0x5c, 0x0a, 0x16, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x52, 0x6f, 0x6f, 0x6d, 0x4c,
	0x6f, 0x63, 0x6b, 0x53, 0x74, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x12, 0x14, 0x0a, 0x05, 0x73,
	0x74, 0x61, 0x74, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x11, 0x52, 0x05, 0x73, 0x74, 0x61, 0x74,
	0x65, 0x12, 0x1a, 0x0a, 0x08, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x4e, 0x6f, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x11, 0x52, 0x08, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x4e, 0x6f, 0x12, 0x10, 0x0a,
	0x03, 0x70, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x11, 0x52, 0x03, 0x70, 0x69, 0x64, 0x22,
	0x18, 0x0a, 0x16, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x52, 0x6f, 0x6f, 0x6d, 0x4c, 0x6f, 0x63,
	0x6b, 0x53, 0x74, 0x61, 0x74, 0x65, 0x52, 0x73, 0x70, 0x22, 0xb3, 0x01, 0x0a, 0x14, 0x52, 0x65,
	0x70, 0x6f, 0x72, 0x74, 0x4b, 0x75, 0x72, 0x6f, 0x6d, 0x69, 0x53, 0x63, 0x6f, 0x72, 0x65, 0x52,
	0x65, 0x71, 0x12, 0x3b, 0x0a, 0x0b, 0x74, 0x65, 0x61, 0x6d, 0x5f, 0x73, 0x63, 0x6f, 0x72, 0x65,
	0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x75, 0x6e, 0x69, 0x74, 0x79, 0x67,
	0x61, 0x6d, 0x65, 0x2e, 0x4b, 0x75, 0x72, 0x6f, 0x6d, 0x69, 0x54, 0x65, 0x61, 0x6d, 0x53, 0x63,
	0x6f, 0x72, 0x65, 0x52, 0x0a, 0x74, 0x65, 0x61, 0x6d, 0x53, 0x63, 0x6f, 0x72, 0x65, 0x73, 0x12,
	0x1b, 0x0a, 0x09, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x6e, 0x6f, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x08, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x4e, 0x6f, 0x12, 0x10, 0x0a, 0x03,
	0x70, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x11, 0x52, 0x03, 0x70, 0x69, 0x64, 0x12, 0x10,
	0x0a, 0x03, 0x72, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x03, 0x72, 0x69, 0x64,
	0x12, 0x1d, 0x0a, 0x0a, 0x65, 0x6e, 0x64, 0x5f, 0x72, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x65, 0x6e, 0x64, 0x52, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x22,
	0x6d, 0x0a, 0x0f, 0x4b, 0x75, 0x72, 0x6f, 0x6d, 0x69, 0x54, 0x65, 0x61, 0x6d, 0x53, 0x63, 0x6f,
	0x72, 0x65, 0x12, 0x17, 0x0a, 0x07, 0x74, 0x65, 0x61, 0x6d, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x06, 0x74, 0x65, 0x61, 0x6d, 0x49, 0x64, 0x12, 0x41, 0x0a, 0x0d, 0x70,
	0x6c, 0x61, 0x79, 0x65, 0x72, 0x5f, 0x73, 0x63, 0x6f, 0x72, 0x65, 0x73, 0x18, 0x02, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x75, 0x6e, 0x69, 0x74, 0x79, 0x67, 0x61, 0x6d, 0x65, 0x2e, 0x4b,
	0x75, 0x72, 0x6f, 0x6d, 0x69, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x53, 0x63, 0x6f, 0x72, 0x65,
	0x52, 0x0c, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x53, 0x63, 0x6f, 0x72, 0x65, 0x73, 0x22, 0x8b,
	0x05, 0x0a, 0x11, 0x4b, 0x75, 0x72, 0x6f, 0x6d, 0x69, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x53,
	0x63, 0x6f, 0x72, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x03, 0x75, 0x69, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x6c, 0x65, 0x6e, 0x67, 0x74, 0x68,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x6c, 0x65, 0x6e, 0x67, 0x74, 0x68, 0x12, 0x12,
	0x0a, 0x04, 0x6b, 0x69, 0x6c, 0x6c, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x6b, 0x69,
	0x6c, 0x6c, 0x12, 0x1f, 0x0a, 0x0b, 0x69, 0x74, 0x65, 0x6d, 0x5f, 0x73, 0x63, 0x6f, 0x72, 0x65,
	0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x05, 0x52, 0x0a, 0x69, 0x74, 0x65, 0x6d, 0x53, 0x63, 0x6f,
	0x72, 0x65, 0x73, 0x12, 0x21, 0x0a, 0x0c, 0x72, 0x65, 0x76, 0x69, 0x76, 0x65, 0x5f, 0x63, 0x6f,
	0x75, 0x6e, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0b, 0x72, 0x65, 0x76, 0x69, 0x76,
	0x65, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x1b, 0x0a, 0x09, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x5f,
	0x69, 0x64, 0x73, 0x18, 0x06, 0x20, 0x03, 0x28, 0x09, 0x52, 0x08, 0x65, 0x76, 0x65, 0x6e, 0x74,
	0x49, 0x64, 0x73, 0x12, 0x10, 0x0a, 0x03, 0x65, 0x61, 0x74, 0x18, 0x07, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x03, 0x65, 0x61, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x6b, 0x69, 0x6c, 0x6c, 0x65, 0x64, 0x5f,
	0x6e, 0x75, 0x6d, 0x18, 0x08, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x6b, 0x69, 0x6c, 0x6c, 0x65,
	0x64, 0x4e, 0x75, 0x6d, 0x12, 0x25, 0x0a, 0x0e, 0x64, 0x65, 0x73, 0x74, 0x72, 0x6f, 0x79, 0x5f,
	0x6c, 0x65, 0x6e, 0x67, 0x74, 0x68, 0x18, 0x09, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0d, 0x64, 0x65,
	0x73, 0x74, 0x72, 0x6f, 0x79, 0x4c, 0x65, 0x6e, 0x67, 0x74, 0x68, 0x12, 0x35, 0x0a, 0x17, 0x63,
	0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x5f, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x5f, 0x64, 0x6f, 0x74,
	0x5f, 0x73, 0x63, 0x6f, 0x72, 0x65, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x05, 0x52, 0x14, 0x63, 0x6f,
	0x6c, 0x6c, 0x65, 0x63, 0x74, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x44, 0x6f, 0x74, 0x53, 0x63, 0x6f,
	0x72, 0x65, 0x12, 0x24, 0x0a, 0x0e, 0x68, 0x69, 0x74, 0x5f, 0x77, 0x61, 0x6c, 0x6c, 0x5f, 0x74,
	0x69, 0x6d, 0x65, 0x73, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0c, 0x68, 0x69, 0x74, 0x57,
	0x61, 0x6c, 0x6c, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x12, 0x2e, 0x0a, 0x13, 0x63, 0x6f, 0x6c, 0x6c,
	0x65, 0x63, 0x74, 0x5f, 0x77, 0x72, 0x65, 0x63, 0x6b, 0x5f, 0x73, 0x63, 0x6f, 0x72, 0x65, 0x18,
	0x0c, 0x20, 0x01, 0x28, 0x05, 0x52, 0x11, 0x63, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x57, 0x72,
	0x65, 0x63, 0x6b, 0x53, 0x63, 0x6f, 0x72, 0x65, 0x12, 0x28, 0x0a, 0x10, 0x6b, 0x69, 0x6c, 0x6c,
	0x5f, 0x62, 0x6f, 0x6e, 0x75, 0x73, 0x5f, 0x73, 0x63, 0x6f, 0x72, 0x65, 0x18, 0x0d, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x0e, 0x6b, 0x69, 0x6c, 0x6c, 0x42, 0x6f, 0x6e, 0x75, 0x73, 0x53, 0x63, 0x6f,
	0x72, 0x65, 0x12, 0x19, 0x0a, 0x08, 0x64, 0x69, 0x65, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x0f,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x64, 0x69, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x25, 0x0a,
	0x0e, 0x66, 0x72, 0x61, 0x67, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x73, 0x63, 0x6f, 0x72, 0x65, 0x18,
	0x11, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0d, 0x66, 0x72, 0x61, 0x67, 0x6d, 0x65, 0x6e, 0x74, 0x53,
	0x63, 0x6f, 0x72, 0x65, 0x12, 0x25, 0x0a, 0x0e, 0x74, 0x72, 0x65, 0x61, 0x73, 0x75, 0x72, 0x65,
	0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x12, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0d, 0x74, 0x72,
	0x65, 0x61, 0x73, 0x75, 0x72, 0x65, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x19, 0x0a, 0x08, 0x67,
	0x72, 0x6f, 0x75, 0x70, 0x5f, 0x69, 0x64, 0x18, 0x13, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x67,
	0x72, 0x6f, 0x75, 0x70, 0x49, 0x64, 0x12, 0x10, 0x0a, 0x03, 0x6e, 0x75, 0x6d, 0x18, 0x14, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x03, 0x6e, 0x75, 0x6d, 0x12, 0x17, 0x0a, 0x07, 0x73, 0x6b, 0x69, 0x6e,
	0x5f, 0x69, 0x64, 0x18, 0x15, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x73, 0x6b, 0x69, 0x6e, 0x49,
	0x64, 0x12, 0x19, 0x0a, 0x08, 0x6d, 0x61, 0x74, 0x63, 0x68, 0x5f, 0x69, 0x64, 0x18, 0x16, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x61, 0x74, 0x63, 0x68, 0x49, 0x64, 0x22, 0xaf, 0x01, 0x0a,
	0x12, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x47, 0x6f, 0x61, 0x74, 0x53, 0x63, 0x6f, 0x72, 0x65,
	0x52, 0x65, 0x71, 0x12, 0x39, 0x0a, 0x0b, 0x74, 0x65, 0x61, 0x6d, 0x5f, 0x73, 0x63, 0x6f, 0x72,
	0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x75, 0x6e, 0x69, 0x74, 0x79,
	0x67, 0x61, 0x6d, 0x65, 0x2e, 0x47, 0x6f, 0x61, 0x74, 0x54, 0x65, 0x61, 0x6d, 0x53, 0x63, 0x6f,
	0x72, 0x65, 0x52, 0x0a, 0x74, 0x65, 0x61, 0x6d, 0x53, 0x63, 0x6f, 0x72, 0x65, 0x73, 0x12, 0x1b,
	0x0a, 0x09, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x6e, 0x6f, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x08, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x4e, 0x6f, 0x12, 0x10, 0x0a, 0x03, 0x70,
	0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x11, 0x52, 0x03, 0x70, 0x69, 0x64, 0x12, 0x10, 0x0a,
	0x03, 0x72, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x03, 0x72, 0x69, 0x64, 0x12,
	0x1d, 0x0a, 0x0a, 0x65, 0x6e, 0x64, 0x5f, 0x72, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x09, 0x65, 0x6e, 0x64, 0x52, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x22, 0x69,
	0x0a, 0x0d, 0x47, 0x6f, 0x61, 0x74, 0x54, 0x65, 0x61, 0x6d, 0x53, 0x63, 0x6f, 0x72, 0x65, 0x12,
	0x17, 0x0a, 0x07, 0x74, 0x65, 0x61, 0x6d, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x06, 0x74, 0x65, 0x61, 0x6d, 0x49, 0x64, 0x12, 0x3f, 0x0a, 0x0d, 0x70, 0x6c, 0x61, 0x79,
	0x65, 0x72, 0x5f, 0x73, 0x63, 0x6f, 0x72, 0x65, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x1a, 0x2e, 0x75, 0x6e, 0x69, 0x74, 0x79, 0x67, 0x61, 0x6d, 0x65, 0x2e, 0x47, 0x6f, 0x61, 0x74,
	0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x53, 0x63, 0x6f, 0x72, 0x65, 0x52, 0x0c, 0x70, 0x6c, 0x61,
	0x79, 0x65, 0x72, 0x53, 0x63, 0x6f, 0x72, 0x65, 0x73, 0x22, 0x9a, 0x05, 0x0a, 0x0f, 0x47, 0x6f,
	0x61, 0x74, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x53, 0x63, 0x6f, 0x72, 0x65, 0x12, 0x10, 0x0a,
	0x03, 0x75, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x75, 0x69, 0x64, 0x12,
	0x19, 0x0a, 0x08, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x07, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x49, 0x64, 0x12, 0x10, 0x0a, 0x03, 0x6e, 0x75,
	0x6d, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x03, 0x6e, 0x75, 0x6d, 0x12, 0x19, 0x0a, 0x08,
	0x6d, 0x61, 0x74, 0x63, 0x68, 0x5f, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07,
	0x6d, 0x61, 0x74, 0x63, 0x68, 0x49, 0x64, 0x12, 0x17, 0x0a, 0x07, 0x73, 0x6b, 0x69, 0x6e, 0x5f,
	0x69, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x73, 0x6b, 0x69, 0x6e, 0x49, 0x64,
	0x12, 0x16, 0x0a, 0x06, 0x6c, 0x65, 0x6e, 0x67, 0x74, 0x68, 0x18, 0x06, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x06, 0x6c, 0x65, 0x6e, 0x67, 0x74, 0x68, 0x12, 0x12, 0x0a, 0x04, 0x6b, 0x69, 0x6c, 0x6c,
	0x18, 0x07, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x6b, 0x69, 0x6c, 0x6c, 0x12, 0x1f, 0x0a, 0x0b,
	0x69, 0x74, 0x65, 0x6d, 0x5f, 0x73, 0x63, 0x6f, 0x72, 0x65, 0x73, 0x18, 0x08, 0x20, 0x03, 0x28,
	0x05, 0x52, 0x0a, 0x69, 0x74, 0x65, 0x6d, 0x53, 0x63, 0x6f, 0x72, 0x65, 0x73, 0x12, 0x21, 0x0a,
	0x0c, 0x72, 0x65, 0x76, 0x69, 0x76, 0x65, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x09, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x0b, 0x72, 0x65, 0x76, 0x69, 0x76, 0x65, 0x43, 0x6f, 0x75, 0x6e, 0x74,
	0x12, 0x1d, 0x0a, 0x0a, 0x6b, 0x69, 0x6c, 0x6c, 0x65, 0x64, 0x5f, 0x6e, 0x75, 0x6d, 0x18, 0x0a,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x6b, 0x69, 0x6c, 0x6c, 0x65, 0x64, 0x4e, 0x75, 0x6d, 0x12,
	0x25, 0x0a, 0x0e, 0x64, 0x65, 0x73, 0x74, 0x72, 0x6f, 0x79, 0x5f, 0x6c, 0x65, 0x6e, 0x67, 0x74,
	0x68, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0d, 0x64, 0x65, 0x73, 0x74, 0x72, 0x6f, 0x79,
	0x4c, 0x65, 0x6e, 0x67, 0x74, 0x68, 0x12, 0x35, 0x0a, 0x17, 0x63, 0x6f, 0x6c, 0x6c, 0x65, 0x63,
	0x74, 0x5f, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x5f, 0x64, 0x6f, 0x74, 0x5f, 0x73, 0x63, 0x6f, 0x72,
	0x65, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x05, 0x52, 0x14, 0x63, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74,
	0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x44, 0x6f, 0x74, 0x53, 0x63, 0x6f, 0x72, 0x65, 0x12, 0x24, 0x0a,
	0x0e, 0x68, 0x69, 0x74, 0x5f, 0x77, 0x61, 0x6c, 0x6c, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x18,
	0x0d, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0c, 0x68, 0x69, 0x74, 0x57, 0x61, 0x6c, 0x6c, 0x54, 0x69,
	0x6d, 0x65, 0x73, 0x12, 0x2e, 0x0a, 0x13, 0x63, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x5f, 0x77,
	0x72, 0x65, 0x63, 0x6b, 0x5f, 0x73, 0x63, 0x6f, 0x72, 0x65, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x11, 0x63, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x57, 0x72, 0x65, 0x63, 0x6b, 0x53, 0x63,
	0x6f, 0x72, 0x65, 0x12, 0x28, 0x0a, 0x10, 0x6b, 0x69, 0x6c, 0x6c, 0x5f, 0x62, 0x6f, 0x6e, 0x75,
	0x73, 0x5f, 0x73, 0x63, 0x6f, 0x72, 0x65, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0e, 0x6b,
	0x69, 0x6c, 0x6c, 0x42, 0x6f, 0x6e, 0x75, 0x73, 0x53, 0x63, 0x6f, 0x72, 0x65, 0x12, 0x19, 0x0a,
	0x08, 0x64, 0x69, 0x65, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x10, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x07, 0x64, 0x69, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x30, 0x0a, 0x14, 0x63, 0x6f, 0x6c, 0x6c,
	0x65, 0x63, 0x74, 0x5f, 0x62, 0x75, 0x63, 0x6b, 0x65, 0x74, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74,
	0x18, 0x11, 0x20, 0x01, 0x28, 0x05, 0x52, 0x12, 0x63, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x42,
	0x75, 0x63, 0x6b, 0x65, 0x74, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x73, 0x63,
	0x6f, 0x72, 0x65, 0x18, 0x12, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x73, 0x63, 0x6f, 0x72, 0x65,
	0x12, 0x44, 0x0a, 0x11, 0x74, 0x61, 0x73, 0x6b, 0x5f, 0x61, 0x64, 0x64, 0x5f, 0x70, 0x72, 0x6f,
	0x67, 0x72, 0x65, 0x73, 0x73, 0x18, 0x13, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x75, 0x6e,
	0x69, 0x74, 0x79, 0x67, 0x61, 0x6d, 0x65, 0x2e, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x54, 0x61, 0x73,
	0x6b, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x0f, 0x74, 0x61, 0x73, 0x6b, 0x41, 0x64, 0x64, 0x50, 0x72,
	0x6f, 0x67, 0x72, 0x65, 0x73, 0x73, 0x22, 0x66, 0x0a, 0x0d, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x54,
	0x61, 0x73, 0x6b, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x19, 0x0a, 0x08, 0x65, 0x76, 0x65, 0x6e, 0x74,
	0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x65, 0x76, 0x65, 0x6e, 0x74,
	0x49, 0x64, 0x12, 0x17, 0x0a, 0x07, 0x74, 0x61, 0x73, 0x6b, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x06, 0x74, 0x61, 0x73, 0x6b, 0x49, 0x64, 0x12, 0x21, 0x0a, 0x0c, 0x61,
	0x64, 0x64, 0x5f, 0x70, 0x72, 0x6f, 0x67, 0x72, 0x65, 0x73, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x0b, 0x61, 0x64, 0x64, 0x50, 0x72, 0x6f, 0x67, 0x72, 0x65, 0x73, 0x73, 0x2a, 0xe7,
	0x02, 0x0a, 0x0b, 0x53, 0x6e, 0x61, 0x6b, 0x65, 0x4f, 0x70, 0x54, 0x79, 0x70, 0x65, 0x12, 0x0d,
	0x0a, 0x09, 0x55, 0x6e, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x64, 0x10, 0x00, 0x12, 0x0c, 0x0a,
	0x07, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x10, 0xaa, 0x46, 0x12, 0x0b, 0x0a, 0x06, 0x53,
	0x69, 0x67, 0x6e, 0x61, 0x6c, 0x10, 0xab, 0x46, 0x12, 0x11, 0x0a, 0x0c, 0x48, 0x69, 0x73, 0x74,
	0x6f, 0x72, 0x79, 0x46, 0x72, 0x61, 0x6d, 0x65, 0x10, 0xac, 0x46, 0x12, 0x0d, 0x0a, 0x08, 0x53,
	0x6e, 0x61, 0x70, 0x73, 0x68, 0x6f, 0x74, 0x10, 0xad, 0x46, 0x12, 0x0d, 0x0a, 0x08, 0x43, 0x68,
	0x65, 0x63, 0x6b, 0x53, 0x75, 0x6d, 0x10, 0xae, 0x46, 0x12, 0x09, 0x0a, 0x04, 0x42, 0x69, 0x6e,
	0x64, 0x10, 0xb2, 0x46, 0x12, 0x0e, 0x0a, 0x09, 0x48, 0x65, 0x61, 0x72, 0x74, 0x42, 0x65, 0x61,
	0x74, 0x10, 0xb3, 0x46, 0x12, 0x10, 0x0a, 0x0b, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x53, 0x63,
	0x6f, 0x72, 0x65, 0x10, 0xb4, 0x46, 0x12, 0x0d, 0x0a, 0x08, 0x45, 0x78, 0x69, 0x74, 0x47, 0x61,
	0x6d, 0x65, 0x10, 0xb5, 0x46, 0x12, 0x0b, 0x0a, 0x06, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x10,
	0xb6, 0x46, 0x12, 0x18, 0x0a, 0x13, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x52, 0x6f, 0x6f, 0x6d,
	0x4c, 0x6f, 0x63, 0x6b, 0x53, 0x74, 0x61, 0x74, 0x65, 0x10, 0xb7, 0x46, 0x12, 0x0c, 0x0a, 0x07,
	0x4c, 0x6f, 0x61, 0x64, 0x69, 0x6e, 0x67, 0x10, 0xb8, 0x46, 0x12, 0x16, 0x0a, 0x11, 0x52, 0x65,
	0x70, 0x6f, 0x72, 0x74, 0x4b, 0x75, 0x72, 0x6f, 0x6d, 0x69, 0x53, 0x63, 0x6f, 0x72, 0x65, 0x10,
	0xb9, 0x46, 0x12, 0x10, 0x0a, 0x0b, 0x50, 0x75, 0x47, 0x61, 0x6d, 0x65, 0x53, 0x74, 0x61, 0x72,
	0x74, 0x10, 0x8d, 0x47, 0x12, 0x0c, 0x0a, 0x07, 0x50, 0x75, 0x46, 0x72, 0x61, 0x6d, 0x65, 0x10,
	0x8e, 0x47, 0x12, 0x0d, 0x0a, 0x08, 0x50, 0x75, 0x53, 0x69, 0x67, 0x6e, 0x61, 0x6c, 0x10, 0x8f,
	0x47, 0x12, 0x0f, 0x0a, 0x0a, 0x50, 0x75, 0x41, 0x62, 0x6e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x10,
	0x90, 0x47, 0x12, 0x0e, 0x0a, 0x09, 0x50, 0x75, 0x47, 0x61, 0x6d, 0x65, 0x45, 0x6e, 0x64, 0x10,
	0x91, 0x47, 0x12, 0x0e, 0x0a, 0x09, 0x50, 0x75, 0x4c, 0x6f, 0x61, 0x64, 0x69, 0x6e, 0x67, 0x10,
	0x92, 0x47, 0x12, 0x14, 0x0a, 0x0f, 0x50, 0x75, 0x53, 0x63, 0x6f, 0x72, 0x65, 0x41, 0x62, 0x6e,
	0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x10, 0x93, 0x47, 0x2a, 0x7e, 0x0a, 0x07, 0x63, 0x6f, 0x6d, 0x6d,
	0x61, 0x6e, 0x64, 0x12, 0x11, 0x0a, 0x0d, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x41, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x10, 0x00, 0x12, 0x11, 0x0a, 0x0d, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e,
	0x64, 0x52, 0x65, 0x76, 0x69, 0x76, 0x65, 0x10, 0x01, 0x12, 0x0f, 0x0a, 0x0b, 0x43, 0x6f, 0x6d,
	0x6d, 0x61, 0x6e, 0x64, 0x4a, 0x6f, 0x69, 0x6e, 0x10, 0x02, 0x12, 0x12, 0x0a, 0x0e, 0x43, 0x6f,
	0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x55, 0x73, 0x65, 0x50, 0x72, 0x6f, 0x70, 0x10, 0x03, 0x12, 0x13,
	0x0a, 0x0f, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x45, 0x78, 0x69, 0x74, 0x47, 0x61, 0x6d,
	0x65, 0x10, 0x04, 0x12, 0x13, 0x0a, 0x0f, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x53, 0x65,
	0x74, 0x56, 0x6f, 0x69, 0x74, 0x65, 0x10, 0x05, 0x42, 0x2b, 0x5a, 0x29, 0x67, 0x69, 0x74, 0x2e,
	0x31, 0x37, 0x7a, 0x6a, 0x68, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x73, 0x6e, 0x61, 0x6b, 0x65, 0x2f,
	0x73, 0x6e, 0x61, 0x6b, 0x65, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x75, 0x6e, 0x69, 0x74,
	0x79, 0x67, 0x61, 0x6d, 0x65, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_unitygame_unitygame_proto_rawDescOnce sync.Once
	file_unitygame_unitygame_proto_rawDescData = file_unitygame_unitygame_proto_rawDesc
)

func file_unitygame_unitygame_proto_rawDescGZIP() []byte {
	file_unitygame_unitygame_proto_rawDescOnce.Do(func() {
		file_unitygame_unitygame_proto_rawDescData = protoimpl.X.CompressGZIP(file_unitygame_unitygame_proto_rawDescData)
	})
	return file_unitygame_unitygame_proto_rawDescData
}

var file_unitygame_unitygame_proto_enumTypes = make([]protoimpl.EnumInfo, 2)
var file_unitygame_unitygame_proto_msgTypes = make([]protoimpl.MessageInfo, 40)
var file_unitygame_unitygame_proto_goTypes = []interface{}{
	(SnakeOpType)(0),               // 0: unitygame.SnakeOpType
	(Command)(0),                   // 1: unitygame.command
	(*PuGameStartMsg)(nil),         // 2: unitygame.PuGameStartMsg
	(*PuSignalMsg)(nil),            // 3: unitygame.PuSignalMsg
	(*PuGameEndMsg)(nil),           // 4: unitygame.PuGameEndMsg
	(*PuAbnormalMsg)(nil),          // 5: unitygame.PuAbnormalMsg
	(*PuScoreAbnormalMsg)(nil),     // 6: unitygame.PuScoreAbnormalMsg
	(*PuFrameMsg)(nil),             // 7: unitygame.PuFrameMsg
	(*PuLoadingMsg)(nil),           // 8: unitygame.PuLoadingMsg
	(*NumProgress)(nil),            // 9: unitygame.numProgress
	(*FrameItem)(nil),              // 10: unitygame.frameItem
	(*GameAction)(nil),             // 11: unitygame.gameAction
	(*UserAttribute)(nil),          // 12: unitygame.userAttribute
	(*CommandReq)(nil),             // 13: unitygame.CommandReq
	(*CommandRsp)(nil),             // 14: unitygame.CommandRsp
	(*SignalReq)(nil),              // 15: unitygame.SignalReq
	(*SignalRsp)(nil),              // 16: unitygame.SignalRsp
	(*HistoryFrameReq)(nil),        // 17: unitygame.HistoryFrameReq
	(*HistoryFrameRsp)(nil),        // 18: unitygame.HistoryFrameRsp
	(*SnapshotReq)(nil),            // 19: unitygame.SnapshotReq
	(*SnapshotRsp)(nil),            // 20: unitygame.SnapshotRsp
	(*CheckSumReq)(nil),            // 21: unitygame.CheckSumReq
	(*CheckSumRsp)(nil),            // 22: unitygame.CheckSumRsp
	(*BindReq)(nil),                // 23: unitygame.BindReq
	(*BindRsp)(nil),                // 24: unitygame.BindRsp
	(*HeartBeatReq)(nil),           // 25: unitygame.HeartBeatReq
	(*HeartBeatRsp)(nil),           // 26: unitygame.HeartBeatRsp
	(*ReportScoreReq)(nil),         // 27: unitygame.ReportScoreReq
	(*PlayerScore)(nil),            // 28: unitygame.PlayerScore
	(*BossScore)(nil),              // 29: unitygame.bossScore
	(*ReportScoreRsp)(nil),         // 30: unitygame.ReportScoreRsp
	(*LoadingReq)(nil),             // 31: unitygame.LoadingReq
	(*LoadingRsp)(nil),             // 32: unitygame.LoadingRsp
	(*ReportRoomLockStateReq)(nil), // 33: unitygame.ReportRoomLockStateReq
	(*ReportRoomLockStateRsp)(nil), // 34: unitygame.ReportRoomLockStateRsp
	(*ReportKuromiScoreReq)(nil),   // 35: unitygame.ReportKuromiScoreReq
	(*KuromiTeamScore)(nil),        // 36: unitygame.KuromiTeamScore
	(*KuromiPlayerScore)(nil),      // 37: unitygame.KuromiPlayerScore
	(*ReportGoatScoreReq)(nil),     // 38: unitygame.ReportGoatScoreReq
	(*GoatTeamScore)(nil),          // 39: unitygame.GoatTeamScore
	(*GoatPlayerScore)(nil),        // 40: unitygame.GoatPlayerScore
	(*EventTaskInfo)(nil),          // 41: unitygame.EventTaskInfo
}
var file_unitygame_unitygame_proto_depIdxs = []int32{
	10, // 0: unitygame.PuFrameMsg.frame_list:type_name -> unitygame.frameItem
	9,  // 1: unitygame.PuLoadingMsg.loading:type_name -> unitygame.numProgress
	11, // 2: unitygame.frameItem.action_list:type_name -> unitygame.gameAction
	12, // 3: unitygame.gameAction.attr:type_name -> unitygame.userAttribute
	1,  // 4: unitygame.CommandReq.cmd:type_name -> unitygame.command
	12, // 5: unitygame.CommandReq.attr:type_name -> unitygame.userAttribute
	10, // 6: unitygame.HistoryFrameRsp.frame_list:type_name -> unitygame.frameItem
	2,  // 7: unitygame.BindRsp.start_info:type_name -> unitygame.PuGameStartMsg
	28, // 8: unitygame.ReportScoreReq.scoreList:type_name -> unitygame.PlayerScore
	29, // 9: unitygame.ReportScoreReq.boss_score:type_name -> unitygame.bossScore
	36, // 10: unitygame.ReportKuromiScoreReq.team_scores:type_name -> unitygame.KuromiTeamScore
	37, // 11: unitygame.KuromiTeamScore.player_scores:type_name -> unitygame.KuromiPlayerScore
	39, // 12: unitygame.ReportGoatScoreReq.team_scores:type_name -> unitygame.GoatTeamScore
	40, // 13: unitygame.GoatTeamScore.player_scores:type_name -> unitygame.GoatPlayerScore
	41, // 14: unitygame.GoatPlayerScore.task_add_progress:type_name -> unitygame.EventTaskInfo
	15, // [15:15] is the sub-list for method output_type
	15, // [15:15] is the sub-list for method input_type
	15, // [15:15] is the sub-list for extension type_name
	15, // [15:15] is the sub-list for extension extendee
	0,  // [0:15] is the sub-list for field type_name
}

func init() { file_unitygame_unitygame_proto_init() }
func file_unitygame_unitygame_proto_init() {
	if File_unitygame_unitygame_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_unitygame_unitygame_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PuGameStartMsg); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_unitygame_unitygame_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PuSignalMsg); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_unitygame_unitygame_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PuGameEndMsg); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_unitygame_unitygame_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PuAbnormalMsg); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_unitygame_unitygame_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PuScoreAbnormalMsg); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_unitygame_unitygame_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PuFrameMsg); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_unitygame_unitygame_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PuLoadingMsg); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_unitygame_unitygame_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NumProgress); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_unitygame_unitygame_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FrameItem); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_unitygame_unitygame_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GameAction); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_unitygame_unitygame_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserAttribute); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_unitygame_unitygame_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CommandReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_unitygame_unitygame_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CommandRsp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_unitygame_unitygame_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SignalReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_unitygame_unitygame_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SignalRsp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_unitygame_unitygame_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*HistoryFrameReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_unitygame_unitygame_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*HistoryFrameRsp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_unitygame_unitygame_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SnapshotReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_unitygame_unitygame_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SnapshotRsp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_unitygame_unitygame_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CheckSumReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_unitygame_unitygame_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CheckSumRsp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_unitygame_unitygame_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BindReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_unitygame_unitygame_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BindRsp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_unitygame_unitygame_proto_msgTypes[23].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*HeartBeatReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_unitygame_unitygame_proto_msgTypes[24].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*HeartBeatRsp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_unitygame_unitygame_proto_msgTypes[25].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReportScoreReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_unitygame_unitygame_proto_msgTypes[26].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PlayerScore); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_unitygame_unitygame_proto_msgTypes[27].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BossScore); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_unitygame_unitygame_proto_msgTypes[28].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReportScoreRsp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_unitygame_unitygame_proto_msgTypes[29].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LoadingReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_unitygame_unitygame_proto_msgTypes[30].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LoadingRsp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_unitygame_unitygame_proto_msgTypes[31].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReportRoomLockStateReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_unitygame_unitygame_proto_msgTypes[32].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReportRoomLockStateRsp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_unitygame_unitygame_proto_msgTypes[33].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReportKuromiScoreReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_unitygame_unitygame_proto_msgTypes[34].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*KuromiTeamScore); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_unitygame_unitygame_proto_msgTypes[35].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*KuromiPlayerScore); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_unitygame_unitygame_proto_msgTypes[36].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReportGoatScoreReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_unitygame_unitygame_proto_msgTypes[37].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GoatTeamScore); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_unitygame_unitygame_proto_msgTypes[38].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GoatPlayerScore); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_unitygame_unitygame_proto_msgTypes[39].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EventTaskInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_unitygame_unitygame_proto_rawDesc,
			NumEnums:      2,
			NumMessages:   40,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_unitygame_unitygame_proto_goTypes,
		DependencyIndexes: file_unitygame_unitygame_proto_depIdxs,
		EnumInfos:         file_unitygame_unitygame_proto_enumTypes,
		MessageInfos:      file_unitygame_unitygame_proto_msgTypes,
	}.Build()
	File_unitygame_unitygame_proto = out.File
	file_unitygame_unitygame_proto_rawDesc = nil
	file_unitygame_unitygame_proto_goTypes = nil
	file_unitygame_unitygame_proto_depIdxs = nil
}
