// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.31.0
// 	protoc        v4.25.1
// source: snakecommon/config.proto

package snakecommon

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type CRewardItem struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Type       int32       `protobuf:"varint,1,opt,name=type,proto3" json:"type,omitempty"`                                // 奖励类型
	SkinId     int32       `protobuf:"varint,2,opt,name=skin_id,json=skinId,proto3" json:"skin_id,omitempty"`              // 奖励 id
	Num        int64       `protobuf:"varint,3,opt,name=num,proto3" json:"num,omitempty"`                                  // 奖励数量
	BigNum     *string     `protobuf:"bytes,4,opt,name=big_num,json=bigNum,proto3,oneof" json:"big_num,omitempty"`         // 奖励数量，大数
	Name       string      `protobuf:"bytes,5,opt,name=name,proto3" json:"name,omitempty"`                                 // 奖励名称
	Imgurl     string      `protobuf:"bytes,6,opt,name=imgurl,proto3" json:"imgurl,omitempty"`                             // 奖励图片
	UseInfo    *string     `protobuf:"bytes,7,opt,name=use_info,json=useInfo,proto3,oneof" json:"use_info,omitempty"`      // 有效期，单位秒
	Index      *int32      `protobuf:"varint,8,opt,name=index,proto3,oneof" json:"index,omitempty"`                        // 奖励序号
	WorthLevel int32       `protobuf:"varint,9,opt,name=worth_level,json=worthLevel,proto3" json:"worth_level,omitempty"`  // 稀有度
	MarkId     *int32      `protobuf:"varint,10,opt,name=mark_id,json=markId,proto3,oneof" json:"mark_id,omitempty"`       // 来源标签id
	Convert    []*CConvert `protobuf:"bytes,11,rep,name=convert,proto3" json:"convert,omitempty"`                          // 奖励折算
	IsValuable int32       `protobuf:"varint,12,opt,name=is_valuable,json=isValuable,proto3" json:"is_valuable,omitempty"` // 是否高价值：0否1是，客户端会显示特殊边框
}

func (x *CRewardItem) Reset() {
	*x = CRewardItem{}
	if protoimpl.UnsafeEnabled {
		mi := &file_snakecommon_config_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CRewardItem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CRewardItem) ProtoMessage() {}

func (x *CRewardItem) ProtoReflect() protoreflect.Message {
	mi := &file_snakecommon_config_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CRewardItem.ProtoReflect.Descriptor instead.
func (*CRewardItem) Descriptor() ([]byte, []int) {
	return file_snakecommon_config_proto_rawDescGZIP(), []int{0}
}

func (x *CRewardItem) GetType() int32 {
	if x != nil {
		return x.Type
	}
	return 0
}

func (x *CRewardItem) GetSkinId() int32 {
	if x != nil {
		return x.SkinId
	}
	return 0
}

func (x *CRewardItem) GetNum() int64 {
	if x != nil {
		return x.Num
	}
	return 0
}

func (x *CRewardItem) GetBigNum() string {
	if x != nil && x.BigNum != nil {
		return *x.BigNum
	}
	return ""
}

func (x *CRewardItem) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *CRewardItem) GetImgurl() string {
	if x != nil {
		return x.Imgurl
	}
	return ""
}

func (x *CRewardItem) GetUseInfo() string {
	if x != nil && x.UseInfo != nil {
		return *x.UseInfo
	}
	return ""
}

func (x *CRewardItem) GetIndex() int32 {
	if x != nil && x.Index != nil {
		return *x.Index
	}
	return 0
}

func (x *CRewardItem) GetWorthLevel() int32 {
	if x != nil {
		return x.WorthLevel
	}
	return 0
}

func (x *CRewardItem) GetMarkId() int32 {
	if x != nil && x.MarkId != nil {
		return *x.MarkId
	}
	return 0
}

func (x *CRewardItem) GetConvert() []*CConvert {
	if x != nil {
		return x.Convert
	}
	return nil
}

func (x *CRewardItem) GetIsValuable() int32 {
	if x != nil {
		return x.IsValuable
	}
	return 0
}

// 奖励折算结构
type CConvert struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Type   int32 `protobuf:"varint,1,opt,name=type,proto3" json:"type,omitempty"`                   // 类型
	Num    int64 `protobuf:"varint,2,opt,name=num,proto3" json:"num,omitempty"`                     // 数量
	SkinId int32 `protobuf:"varint,3,opt,name=skin_id,json=skinId,proto3" json:"skin_id,omitempty"` // id
}

func (x *CConvert) Reset() {
	*x = CConvert{}
	if protoimpl.UnsafeEnabled {
		mi := &file_snakecommon_config_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CConvert) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CConvert) ProtoMessage() {}

func (x *CConvert) ProtoReflect() protoreflect.Message {
	mi := &file_snakecommon_config_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CConvert.ProtoReflect.Descriptor instead.
func (*CConvert) Descriptor() ([]byte, []int) {
	return file_snakecommon_config_proto_rawDescGZIP(), []int{1}
}

func (x *CConvert) GetType() int32 {
	if x != nil {
		return x.Type
	}
	return 0
}

func (x *CConvert) GetNum() int64 {
	if x != nil {
		return x.Num
	}
	return 0
}

func (x *CConvert) GetSkinId() int32 {
	if x != nil {
		return x.SkinId
	}
	return 0
}

// 通用价格结构
type CPriceInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Type          int32 `protobuf:"varint,1,opt,name=type,proto3" json:"type,omitempty"`
	Num           int32 `protobuf:"varint,2,opt,name=num,proto3" json:"num,omitempty"` //RMB 类型时候  这个字段 代表 goodsid
	Discount      int32 `protobuf:"varint,3,opt,name=discount,proto3" json:"discount,omitempty"`
	DiscountPrice int32 `protobuf:"varint,4,opt,name=discountPrice,proto3" json:"discountPrice,omitempty"`
}

func (x *CPriceInfo) Reset() {
	*x = CPriceInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_snakecommon_config_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CPriceInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CPriceInfo) ProtoMessage() {}

func (x *CPriceInfo) ProtoReflect() protoreflect.Message {
	mi := &file_snakecommon_config_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CPriceInfo.ProtoReflect.Descriptor instead.
func (*CPriceInfo) Descriptor() ([]byte, []int) {
	return file_snakecommon_config_proto_rawDescGZIP(), []int{2}
}

func (x *CPriceInfo) GetType() int32 {
	if x != nil {
		return x.Type
	}
	return 0
}

func (x *CPriceInfo) GetNum() int32 {
	if x != nil {
		return x.Num
	}
	return 0
}

func (x *CPriceInfo) GetDiscount() int32 {
	if x != nil {
		return x.Discount
	}
	return 0
}

func (x *CPriceInfo) GetDiscountPrice() int32 {
	if x != nil {
		return x.DiscountPrice
	}
	return 0
}

type RMBPackGoodsInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CoolpadProductId int64  `protobuf:"varint,1,opt,name=coolpad_product_id,json=coolpadProductId,proto3" json:"coolpad_product_id,omitempty"`
	GoodsPrice       int32  `protobuf:"varint,2,opt,name=goods_price,json=goodsPrice,proto3" json:"goods_price,omitempty"`
	Diamond          int32  `protobuf:"varint,3,opt,name=diamond,proto3" json:"diamond,omitempty"`
	GoodsName        string `protobuf:"bytes,4,opt,name=goods_name,json=goodsName,proto3" json:"goods_name,omitempty"`
	BaiduProductId   string `protobuf:"bytes,5,opt,name=baidu_product_id,json=baiduProductId,proto3" json:"baidu_product_id,omitempty"`
	GoodsId          int64  `protobuf:"varint,6,opt,name=goods_id,json=goodsId,proto3" json:"goods_id,omitempty"`
	LenovoProductId  int64  `protobuf:"varint,7,opt,name=lenovo_product_id,json=lenovoProductId,proto3" json:"lenovo_product_id,omitempty"`
	XiaomiProductId  string `protobuf:"bytes,8,opt,name=xiaomi_product_id,json=xiaomiProductId,proto3" json:"xiaomi_product_id,omitempty"`
	AppleProductId   string `protobuf:"bytes,9,opt,name=apple_product_id,json=appleProductId,proto3" json:"apple_product_id,omitempty"`
	Subscribe        int32  `protobuf:"varint,10,opt,name=subscribe,proto3" json:"subscribe,omitempty"`
	Imgurl           string `protobuf:"bytes,11,opt,name=imgurl,proto3" json:"imgurl,omitempty"`
	Tips             string `protobuf:"bytes,12,opt,name=tips,proto3" json:"tips,omitempty"`
}

func (x *RMBPackGoodsInfo) Reset() {
	*x = RMBPackGoodsInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_snakecommon_config_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RMBPackGoodsInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RMBPackGoodsInfo) ProtoMessage() {}

func (x *RMBPackGoodsInfo) ProtoReflect() protoreflect.Message {
	mi := &file_snakecommon_config_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RMBPackGoodsInfo.ProtoReflect.Descriptor instead.
func (*RMBPackGoodsInfo) Descriptor() ([]byte, []int) {
	return file_snakecommon_config_proto_rawDescGZIP(), []int{3}
}

func (x *RMBPackGoodsInfo) GetCoolpadProductId() int64 {
	if x != nil {
		return x.CoolpadProductId
	}
	return 0
}

func (x *RMBPackGoodsInfo) GetGoodsPrice() int32 {
	if x != nil {
		return x.GoodsPrice
	}
	return 0
}

func (x *RMBPackGoodsInfo) GetDiamond() int32 {
	if x != nil {
		return x.Diamond
	}
	return 0
}

func (x *RMBPackGoodsInfo) GetGoodsName() string {
	if x != nil {
		return x.GoodsName
	}
	return ""
}

func (x *RMBPackGoodsInfo) GetBaiduProductId() string {
	if x != nil {
		return x.BaiduProductId
	}
	return ""
}

func (x *RMBPackGoodsInfo) GetGoodsId() int64 {
	if x != nil {
		return x.GoodsId
	}
	return 0
}

func (x *RMBPackGoodsInfo) GetLenovoProductId() int64 {
	if x != nil {
		return x.LenovoProductId
	}
	return 0
}

func (x *RMBPackGoodsInfo) GetXiaomiProductId() string {
	if x != nil {
		return x.XiaomiProductId
	}
	return ""
}

func (x *RMBPackGoodsInfo) GetAppleProductId() string {
	if x != nil {
		return x.AppleProductId
	}
	return ""
}

func (x *RMBPackGoodsInfo) GetSubscribe() int32 {
	if x != nil {
		return x.Subscribe
	}
	return 0
}

func (x *RMBPackGoodsInfo) GetImgurl() string {
	if x != nil {
		return x.Imgurl
	}
	return ""
}

func (x *RMBPackGoodsInfo) GetTips() string {
	if x != nil {
		return x.Tips
	}
	return ""
}

var File_snakecommon_config_proto protoreflect.FileDescriptor

var file_snakecommon_config_proto_rawDesc = []byte{
	0x0a, 0x18, 0x73, 0x6e, 0x61, 0x6b, 0x65, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2f, 0x63, 0x6f,
	0x6e, 0x66, 0x69, 0x67, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0b, 0x73, 0x6e, 0x61, 0x6b,
	0x65, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x22, 0x91, 0x03, 0x0a, 0x0b, 0x43, 0x52, 0x65, 0x77,
	0x61, 0x72, 0x64, 0x49, 0x74, 0x65, 0x6d, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x17, 0x0a, 0x07, 0x73,
	0x6b, 0x69, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x73, 0x6b,
	0x69, 0x6e, 0x49, 0x64, 0x12, 0x10, 0x0a, 0x03, 0x6e, 0x75, 0x6d, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x03, 0x6e, 0x75, 0x6d, 0x12, 0x1c, 0x0a, 0x07, 0x62, 0x69, 0x67, 0x5f, 0x6e, 0x75,
	0x6d, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x06, 0x62, 0x69, 0x67, 0x4e, 0x75,
	0x6d, 0x88, 0x01, 0x01, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x69, 0x6d, 0x67, 0x75,
	0x72, 0x6c, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x69, 0x6d, 0x67, 0x75, 0x72, 0x6c,
	0x12, 0x1e, 0x0a, 0x08, 0x75, 0x73, 0x65, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x07, 0x20, 0x01,
	0x28, 0x09, 0x48, 0x01, 0x52, 0x07, 0x75, 0x73, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x88, 0x01, 0x01,
	0x12, 0x19, 0x0a, 0x05, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x18, 0x08, 0x20, 0x01, 0x28, 0x05, 0x48,
	0x02, 0x52, 0x05, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x88, 0x01, 0x01, 0x12, 0x1f, 0x0a, 0x0b, 0x77,
	0x6f, 0x72, 0x74, 0x68, 0x5f, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x18, 0x09, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x0a, 0x77, 0x6f, 0x72, 0x74, 0x68, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x12, 0x1c, 0x0a, 0x07,
	0x6d, 0x61, 0x72, 0x6b, 0x5f, 0x69, 0x64, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x05, 0x48, 0x03, 0x52,
	0x06, 0x6d, 0x61, 0x72, 0x6b, 0x49, 0x64, 0x88, 0x01, 0x01, 0x12, 0x2f, 0x0a, 0x07, 0x63, 0x6f,
	0x6e, 0x76, 0x65, 0x72, 0x74, 0x18, 0x0b, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x73, 0x6e,
	0x61, 0x6b, 0x65, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x43, 0x43, 0x6f, 0x6e, 0x76, 0x65,
	0x72, 0x74, 0x52, 0x07, 0x63, 0x6f, 0x6e, 0x76, 0x65, 0x72, 0x74, 0x12, 0x1f, 0x0a, 0x0b, 0x69,
	0x73, 0x5f, 0x76, 0x61, 0x6c, 0x75, 0x61, 0x62, 0x6c, 0x65, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x0a, 0x69, 0x73, 0x56, 0x61, 0x6c, 0x75, 0x61, 0x62, 0x6c, 0x65, 0x42, 0x0a, 0x0a, 0x08,
	0x5f, 0x62, 0x69, 0x67, 0x5f, 0x6e, 0x75, 0x6d, 0x42, 0x0b, 0x0a, 0x09, 0x5f, 0x75, 0x73, 0x65,
	0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x42, 0x08, 0x0a, 0x06, 0x5f, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x42,
	0x0a, 0x0a, 0x08, 0x5f, 0x6d, 0x61, 0x72, 0x6b, 0x5f, 0x69, 0x64, 0x22, 0x49, 0x0a, 0x08, 0x43,
	0x43, 0x6f, 0x6e, 0x76, 0x65, 0x72, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x6e,
	0x75, 0x6d, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x03, 0x6e, 0x75, 0x6d, 0x12, 0x17, 0x0a,
	0x07, 0x73, 0x6b, 0x69, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06,
	0x73, 0x6b, 0x69, 0x6e, 0x49, 0x64, 0x22, 0x74, 0x0a, 0x0a, 0x43, 0x50, 0x72, 0x69, 0x63, 0x65,
	0x49, 0x6e, 0x66, 0x6f, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x6e, 0x75, 0x6d, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x03, 0x6e, 0x75, 0x6d, 0x12, 0x1a, 0x0a, 0x08, 0x64, 0x69,
	0x73, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x64, 0x69,
	0x73, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x24, 0x0a, 0x0d, 0x64, 0x69, 0x73, 0x63, 0x6f, 0x75,
	0x6e, 0x74, 0x50, 0x72, 0x69, 0x63, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0d, 0x64,
	0x69, 0x73, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x50, 0x72, 0x69, 0x63, 0x65, 0x22, 0xab, 0x03, 0x0a,
	0x10, 0x52, 0x4d, 0x42, 0x50, 0x61, 0x63, 0x6b, 0x47, 0x6f, 0x6f, 0x64, 0x73, 0x49, 0x6e, 0x66,
	0x6f, 0x12, 0x2c, 0x0a, 0x12, 0x63, 0x6f, 0x6f, 0x6c, 0x70, 0x61, 0x64, 0x5f, 0x70, 0x72, 0x6f,
	0x64, 0x75, 0x63, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x10, 0x63,
	0x6f, 0x6f, 0x6c, 0x70, 0x61, 0x64, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x49, 0x64, 0x12,
	0x1f, 0x0a, 0x0b, 0x67, 0x6f, 0x6f, 0x64, 0x73, 0x5f, 0x70, 0x72, 0x69, 0x63, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x67, 0x6f, 0x6f, 0x64, 0x73, 0x50, 0x72, 0x69, 0x63, 0x65,
	0x12, 0x18, 0x0a, 0x07, 0x64, 0x69, 0x61, 0x6d, 0x6f, 0x6e, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x07, 0x64, 0x69, 0x61, 0x6d, 0x6f, 0x6e, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x67, 0x6f,
	0x6f, 0x64, 0x73, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09,
	0x67, 0x6f, 0x6f, 0x64, 0x73, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x28, 0x0a, 0x10, 0x62, 0x61, 0x69,
	0x64, 0x75, 0x5f, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0e, 0x62, 0x61, 0x69, 0x64, 0x75, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63,
	0x74, 0x49, 0x64, 0x12, 0x19, 0x0a, 0x08, 0x67, 0x6f, 0x6f, 0x64, 0x73, 0x5f, 0x69, 0x64, 0x18,
	0x06, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x67, 0x6f, 0x6f, 0x64, 0x73, 0x49, 0x64, 0x12, 0x2a,
	0x0a, 0x11, 0x6c, 0x65, 0x6e, 0x6f, 0x76, 0x6f, 0x5f, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74,
	0x5f, 0x69, 0x64, 0x18, 0x07, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0f, 0x6c, 0x65, 0x6e, 0x6f, 0x76,
	0x6f, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x49, 0x64, 0x12, 0x2a, 0x0a, 0x11, 0x78, 0x69,
	0x61, 0x6f, 0x6d, 0x69, 0x5f, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x5f, 0x69, 0x64, 0x18,
	0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x78, 0x69, 0x61, 0x6f, 0x6d, 0x69, 0x50, 0x72, 0x6f,
	0x64, 0x75, 0x63, 0x74, 0x49, 0x64, 0x12, 0x28, 0x0a, 0x10, 0x61, 0x70, 0x70, 0x6c, 0x65, 0x5f,
	0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0e, 0x61, 0x70, 0x70, 0x6c, 0x65, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x49, 0x64,
	0x12, 0x1c, 0x0a, 0x09, 0x73, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x18, 0x0a, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x09, 0x73, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x12, 0x16,
	0x0a, 0x06, 0x69, 0x6d, 0x67, 0x75, 0x72, 0x6c, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06,
	0x69, 0x6d, 0x67, 0x75, 0x72, 0x6c, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x69, 0x70, 0x73, 0x18, 0x0c,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x69, 0x70, 0x73, 0x42, 0x2d, 0x5a, 0x2b, 0x67, 0x69,
	0x74, 0x2e, 0x31, 0x37, 0x7a, 0x6a, 0x68, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x73, 0x6e, 0x61, 0x6b,
	0x65, 0x2f, 0x73, 0x6e, 0x61, 0x6b, 0x65, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x73, 0x6e,
	0x61, 0x6b, 0x65, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x33,
}

var (
	file_snakecommon_config_proto_rawDescOnce sync.Once
	file_snakecommon_config_proto_rawDescData = file_snakecommon_config_proto_rawDesc
)

func file_snakecommon_config_proto_rawDescGZIP() []byte {
	file_snakecommon_config_proto_rawDescOnce.Do(func() {
		file_snakecommon_config_proto_rawDescData = protoimpl.X.CompressGZIP(file_snakecommon_config_proto_rawDescData)
	})
	return file_snakecommon_config_proto_rawDescData
}

var file_snakecommon_config_proto_msgTypes = make([]protoimpl.MessageInfo, 4)
var file_snakecommon_config_proto_goTypes = []interface{}{
	(*CRewardItem)(nil),      // 0: snakecommon.CRewardItem
	(*CConvert)(nil),         // 1: snakecommon.CConvert
	(*CPriceInfo)(nil),       // 2: snakecommon.CPriceInfo
	(*RMBPackGoodsInfo)(nil), // 3: snakecommon.RMBPackGoodsInfo
}
var file_snakecommon_config_proto_depIdxs = []int32{
	1, // 0: snakecommon.CRewardItem.convert:type_name -> snakecommon.CConvert
	1, // [1:1] is the sub-list for method output_type
	1, // [1:1] is the sub-list for method input_type
	1, // [1:1] is the sub-list for extension type_name
	1, // [1:1] is the sub-list for extension extendee
	0, // [0:1] is the sub-list for field type_name
}

func init() { file_snakecommon_config_proto_init() }
func file_snakecommon_config_proto_init() {
	if File_snakecommon_config_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_snakecommon_config_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CRewardItem); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_snakecommon_config_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CConvert); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_snakecommon_config_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CPriceInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_snakecommon_config_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RMBPackGoodsInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_snakecommon_config_proto_msgTypes[0].OneofWrappers = []interface{}{}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_snakecommon_config_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   4,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_snakecommon_config_proto_goTypes,
		DependencyIndexes: file_snakecommon_config_proto_depIdxs,
		MessageInfos:      file_snakecommon_config_proto_msgTypes,
	}.Build()
	File_snakecommon_config_proto = out.File
	file_snakecommon_config_proto_rawDesc = nil
	file_snakecommon_config_proto_goTypes = nil
	file_snakecommon_config_proto_depIdxs = nil
}
