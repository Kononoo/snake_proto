syntax = "proto3";
package snakecommon;
option go_package = "git.17zjh.com/snake/snake_proto/snakecommon";

import "snakecommon/config.proto";
import "snakecommon/task.proto";
import "snakeapi/config/SKStore.Proto";
import "snakecommon/project_config.proto";


// ======== charge_vip_config start ====================================================
message ChargeVipConfig {
  repeated VipLevel level_list = 1;
  string intro_url = 2;
  string start_time_str = 3;
}

message VipLevel {
  int32 level = 1;
  int32 charge_exp = 2; // 需要的积分，是人民币的10倍
  repeated VipPrivilege privilege = 3; // 特权展示
  repeated SnakeMain.Config.RewardConfig reward_list = 4; // 特权奖励
  string anim_url = 5; // 大icon动效
  int32 anim_type = 6;
  string icon_url = 7; // 小icon动效
  int32 icon_anim_type = 8;
  repeated SnakeMain.Config.RewardConfig week_reward = 9; // 每周好礼奖励
}

message VipPrivilege {
  string imgurl = 1;
  string desc = 2;
  int32 type = 3; // 特权类型，1:照片数量加上限
  int32 photo_num = 4;
}
// ======== charge_vip_config end ====================================================

// ======== month_card start ====================================================
message MonthCardConfig {
  string card_desc = 1; // 底部叠加获得奖励及特权点击打开后弹窗的文案
  int64 start_time = 2;
  int64 end_time = 3;
  MonthCardInfo little_month_card = 4; // 超值月卡
  MonthCardInfo super_month_card = 5; // 至尊月卡
  string source = 6;
  string mail_title = 7;
  string mail_content = 8;
  int32 duration = 9;
  int64 max_time = 10;
}

message MonthCardInfo{
  string url = 1;//背景图
  repeated SnakeMain.Config.RewardConfig daily_reward = 2;
  string title = 3;//特权标题
  string desc = 4;//特权描述
  int32 total_reward = 5;
  int32 free_pack = 6;//免费礼包id
  int32 pack_id = 7;//月卡id，也是礼包id
  repeated MonthCardPackItem pack_list = 8;//礼包列表
}

message MonthCardPackItem{
  int32 original_price = 1;//原价
  int32 pack_id = 2;//礼包id
}
// ======== month_card end ====================================================

// ======== show_badge start ====================================================
message ShowBadgeConfig {
  string intro = 1;
  repeated BadgeTitle title_list = 2;
  string show_illustration_desc_url = 3;
  string activity_id = 4;
  int64  show_pack_pop_cd_sec = 5;
}

message BadgeTitle {
  int32 id = 1;
  repeated SnakeMain.Config.RewardConfig rewards = 2;
  int32 need_collect = 3;
  int32 start_show_level = 4;
  int32 end_show_level = 5;
  string desc = 6;
  string name = 7;
  int64  pack_id = 8;
  int64  effect_sec = 9;
}
// ======== show_badge end ====================================================

// ======== charm_tours start ====================================================
message CharmTourConfig {
  string intro = 1;
  repeated CharmTourTitleItem charm_title_list = 2;
  repeated CharmTourLevelItem charm_level_list = 3;
  string wish_gift_desc_url = 4;
  int64 all_tag_show_time = 5;
  string start_time = 6;
  repeated string white_list = 7;
  string illustration_desc = 8;
  string guide_url = 9;
  repeated NameplateItem nameplate_list = 10;
  int64  gift_wall_online_date = 11;
}

message CharmTourTitleItem {
  int32 id = 1;
  string name_url = 2; // 标题艺术字图片
  string title = 3; // 标题文字
  string icon_url = 4;
  string anim_url = 5;
  int32 anim_type = 6;
  repeated SnakeMain.Config.RewardConfig rewards = 7;
  int32 need_collect = 8; // 达到该等级需要解锁的礼物个数
  int32 start_charm_level = 9;
  int32 end_charm_level = 10;
}

message CharmTourLevelItem {
  int32 level = 1;
  int64 charm = 2;
}

message NameplateItem {
  int32 id = 1;
  int32 nameplate_type = 2;
  string name = 3;
  int32 need_star = 4;
  int32 need_gift = 5;
  string imgurl = 6;
}
// ======== charm_tours end ====================================================

// ======== gift_wall start ====================================================
message GiftWallConfig{
  string gift_wall_desc = 1;
  repeated NamePlate nameplate_list = 2;

  message NamePlate{
    int32 id = 1;
    string imgurl = 2;
    int32 nameplate_type = 3; // 1-集星周铭牌；2-累计集星铭牌；3-点亮铭牌
    int32 need_star = 4;
    string name = 5;
  }
}
// ======== gift_wall end ====================================================


//message ActivityConfig {
//  PassCheckV2 pass_check_v2 = 1;
//  string pass_check_pack_act_id = 2;
//  NewMeetupV3Config new_meetup_v3 = 3;
//  HatchEgg hatch_egg = 4;
//  EndlessGameRewardConfig endless_game_reward = 5; // 无尽送好礼
//  TurntableConfig turntable = 6; // 许愿池
//  SkinUgcV2Config skin_ugc_v2 = 7;
//}

//======== hatch_egg start
message HatchEgg {
  int64 start_time = 1;
  int64 finish_time = 2;
  int64 disappear_time = 3;
  int32 disappear = 4;
  string intro = 5;
  string reward_review_url = 6;
  repeated SnakeMain.Config.RewardConfig reward_review_list = 7;
  int32 ad_reduce_second = 8;
  repeated EggLevelInfo egg_list = 9;
  string title_desc = 10;
  string title_url = 11;
  string bg_url = 12;
  int64 id = 13;
  int64 reward_review_id = 14;
  string reward_review_title = 15;
  string admin_title = 16;
  string title = 17;
}

message EggLevelInfo {
  repeated SnakeMain.Config.RewardConfig reward_list = 1; // 奖励配置
  int32 level = 2; // 等级 1 普通；2 中级；3高级
  int32 need_collect = 3; // 每个蛋需要收集数量
  int64 hatch_time = 4; // 孵化时间
  int32 diamond_value = 5; // 彩蛋价值
}
//======== hatch_egg end

//======== new_meetup_v3 start
message NewMeetupV3Config {
  // Define fields for MeetupConfig
  string homepage_icon = 1;
  string homepage_icon_link = 2;
  int64 homepage_icon_start = 3;
  int64 homepage_icon_end = 4;
  repeated MeetupConfigItem list = 5;
  map<int64, MeetupShowItem> show_config = 6;
}

message MeetupShowItem {
  int64 show = 1;
  int64 worth_diamond = 2;
}

message MeetupConfigItem {
  // Define fields for MeetupConfigItem
  int32 act_id = 1;
  int64 start_time = 2;
  int64 finish_time = 3;
  int64 offline_time = 4; // buff下线时间
  string finish_date = 5;
  string intro = 6;
  repeated SingleDayReward days_list = 7;
  string buff_desc = 8;
  repeated MeetupBuffItem buff = 9;
  string title_url = 10;
  string button_msg = 11;
}

message SingleDayReward {
  repeated SingleRewardItem length_list = 1;
}

message SingleRewardItem {
  int32 id = 1;
  int32 unlock_days = 2;
  int32 unlock_length = 3;
  int32 price = 4;
  int32 diamond = 5;
  string desc = 6;
  int32 popup_count = 7;//弹窗次数
  int32 important = 8;//是否重点奖励，0否，1是
  int32 watch_ad = 9;
  repeated SnakeMain.Config.RewardConfig reward_list = 10;
  int32 rmb_price = 11;// rmb购买价格
  int32 pack_id = 12;// rmb购买礼包id
  int32 goods_id = 13;// 礼包档位id
  SnakeMain.Config.RewardConfig extra_reward = 14;
}

message MeetupBuffItem {
  int32 id = 1;
  int32 need = 2;
  repeated SnakeMain.Config.RewardConfig reward_list = 3;
}
//======== new_meetup_v3 end

//======== endless_game_reward start
message EndlessGameRewardConfig {
  string title_img = 1;
  string intro = 2;
  int32 act_id = 3;
  string period = 4;
  repeated EndlessGameRewardItem list = 5;
  int64 start_time = 6;
  int64 finish_time = 7;
}

message EndlessGameRewardItem {
  int32 id = 1;
  string desc = 2;
  int32 important = 3;  //是否重点奖励，0否，1是
  int32 popup_count = 4;  //弹窗次数
  int32 diamond_price = 5; // 增加苹果购买配置，0表示不可用苹果购买，>0表示苹果价格
  int32 unlock_length = 6;
  int64 unlock_time = 7; // 默认0，没有时间限制
  string unlock_tip = 8; // 某日活动开启后才可领取
  int32 diamond = 9; // 苹果购买价格
  int32 watch_ad = 10;  //需要看广告次数
  int32 rmb_price = 11; // rmb购买价格
  int32 pack_id = 12; // rmb购买礼包id
  int32 goods_id = 13; // 礼包档位id
  SnakeMain.Config.RewardConfig reward = 14;
}
//======== endless_game_reward end

// ======pass check start ======
message PassCheckV2 {
  int32 item_id = 1;
  PassCommonConfig common = 2;
  PassRewardConfig reward_config = 3;
  PassTaskConfig task_config = 4;
  PassStoreConfig store_config = 5;
  int32 max_break_level = 6; // 最大突破礼等级
  repeated PassTotalRankReward total_reward = 7;//榜单奖励
  PassSeasonNotifyConfig season_notify = 8;
  repeated PassCheckDailyWelfare daily_welfare = 9;
  repeated PassCheckBreakReward break_reward = 10;
  int64 out_loop_level = 11;
  string pass_check_pack_act_id = 12;
}

message PassCheckDailyWelfare {
  SnakeMain.Config.RewardConfig reward = 1;
  int64 weight = 2;
}

message PassCheckBreakReward {
  SnakeMain.Config.RewardConfig reward = 1;
  int64 level = 2;
}

message PassSeasonNotifyConfig {
  string bottom = 1;
  repeated string top = 2;
  string jumpurl = 3;
}

message PassCommonConfig {
  string title = 1;
  int64 start_time = 2;
  int64 finish_time = 3;
  string show_finish = 4;
  int32 season = 5;
  string rule_desc = 6; //玩法说明
  string exp_desc = 7; //积分(经验)说明
  string task_desc = 8; //任务说明
  string top_desc = 9; //排行榜说明
  string top_reward_imgurl = 10; //排行榜奖励说明图
  string upgrade_imgurl = 11; //进阶说明图
  string guide_imgurl = 12;
  repeated int32 has_exp_mode = 13; //能获得且要展示经验的游戏模式
  int32 per_rank_exp = 14; //每个等级需要的经验
  // 活动首页
  string bg_url = 15; // 背景url
  int32 bg_anim_type = 16; // 主页背景动效类型
  string main_reward_url = 17; // 主奖励展示动效svga
  int32 main_reward_anim_type = 18; // 主奖励动效类型
  string main_reward_bottom = 19; // 主奖励底图
  string main_reward_condition = 20; // 主奖励获取条件文案

  // 通行证进阶
  string advance_bg_url = 21; // 进阶通行证背景url
  int32 advance_bg_anim_type = 22; // 进阶通行证背景动效类型
  string advance_honor_url = 23; // 荣耀通行证卡片
  string advance_luxury_url = 24; // 豪华通行证卡片

  //
  string rule_desc_tmpl = 25;
  string desc = 26;
  int32 task_card_id = 27; // 任务卡id

  // 游戏首页icon
  string level_color = 28; // 等级数值的颜色
  string icon = 29;        // 首页icon
  bool   icon_position_switch = 30; // 首页icon位置开关
}

message PassRewardConfig {
  string infinity_rank_imgurl = 1;
  int32 normal_rank = 2;// 奖励list里超过此数的关卡循环展示
  repeated PassCheckRankItem reward_list = 3;
  PassCheckRewardPreview reward_preview = 4;
  repeated SnakeMain.Config.RewardConfig reward_sort = 5;
  int32 icon_open = 6;
  repeated PassCheckIcon icon_list = 7;
}

message PassCheckIcon {
  int32 id = 1;
  string icon = 2;
  int32 icon_start = 3;
  int32 icon_end = 4;
  string tips = 5;
  string link_type = 6;
  string link = 7;
  string link_dev = 8;
}

message PassCheckRankItem {
  int32 rank = 1;
  repeated SnakeMain.Config.RewardConfig free_reward = 2;
  repeated SnakeMain.Config.RewardConfig high_reward = 3;
  int64 total_exp = 4;
}

message PassCheckRewardPreview {
  repeated SnakeMain.Config.RewardConfig free_reward = 1;
  repeated SnakeMain.Config.RewardConfig high_reward = 2;
  // 奖励橱窗
  repeated PassCheckWindowReward window_reward = 3;
  repeated SnakeMain.Config.RewardConfig honor_reward = 4;
  repeated SnakeMain.Config.RewardConfig luxury_reward = 5;
}

message PassCheckWindowReward {
  int32 type = 1;                     // 奖励类型
  int32 skin_id = 2;                  // 奖励 id
  int64 num = 3;                      // 奖励数量
  optional string big_num = 4;        // 奖励数量，大数
  string name = 5;                    // 奖励名称
  string imgurl = 6;                  // 奖励图片
  optional string use_info = 7;       // 有效期，单位秒
  optional int32 index = 8;           // 奖励序号
  int32 worth_level = 9;              // 稀有度
  optional int32 mark_id = 10;         // 来源标签id，0: 忽略 1: 豪华版通行证加成 2: 回归加成 3: 师徒加成
  repeated CConvert convert = 11;      // 奖励折算
  int32 is_valuable = 12;//是否有高价值弹框，默认没有
  string desc = 13;
}

message PassTaskConfig {
  SeasonTask season_task = 1;
  GradeTask grade_task = 2;
  repeated WeeklyTask weekly_task = 3;
  repeated DailyTask daily_task = 4;
  int64 week_exp_limit = 5;
  int64 day_exp_limit = 6;
}

message DailyTask {
  string title = 1;
  string desc = 2;
  int32 btn_type = 3;
  string btn_link = 4;
  string btn_link_dev = 5;
}

message WeeklyTask {
  int64 start_time = 1;
  int64 finish_time = 2;
  repeated PassTaskModel task_list = 3;
}

message SeasonTask {
  repeated PassTaskModel task_list = 1;
}

message GradeTask {
  repeated PassTaskModel task_list = 1;
}

message PassTaskModel {
  int32 task_id = 1;
  string desc = 2;
  string btn_link = 3;
  int32 param = 4;
  int32 reward_exp = 5;
  int32 need_task_card_num = 6; // 完成周任务需要的任务卡数量
  string title = 7; // 日常任务才有
  int32 btn_type = 8;
  string btn_link_dev = 9;
}

message PassStoreConfig {
  CPriceInfo rank_price = 1;
  repeated ExchangeStore exchange_store = 2;
  string high_store_imgurl = 3;
  string high_store_anim = 4;
  repeated SnakeMain.Config.PackModel high_store = 5;
  int64 max_exchange_id = 6;
}

message ExchangeStore {
  int32 type = 1;
  int32 skin_id = 2;
  int32 id = 3; // 请求兑换接口时传入的id
  int32 num = 4;
  string name = 5;
  string imgurl = 6;
  string use_info = 7;
  int64 time_unit = 8;
  string desc = 9;
  int32 buy_limit = 10; // 次数限制
  CPriceInfo price = 11;
  int32 rank_limit = 12; // 通行证等级
  int32 need_vip = 13; // 通行证版本 0免费 1 荣耀 2 豪华
  double nabob_addition = 14; // 限购加成百分比，豪华版才有
  int32 buy_limitation = 15; // 限购类型
}

message PassTotalRankReward {
  int32 rank = 1;
  string rank_desc = 2;
  string mail = 3;
  repeated SnakeMain.Config.RewardConfig reward = 4;
}
// ======pass check end ======


// turntable_config start
message TurntableConfig {
  int32 popup_interval = 1;
  repeated TurntableRewardTable reward_table = 2;
  TurntableSubConfig config = 3;
  int64 ad_times = 4;
}

message TurntableRewardTable {
  string imgurl = 1;
  int32 count = 2;
  int32 mode = 3;
}

message TurntableSubConfig {
  string lottery_link = 1;
  string lottery_link_ios = 2;
  string endless_icon_url = 3;
  string gold_coin_icon_url = 4;
  int64 endless_endtime = 5; // 单机轮盘结束时间，以s计算
}
// turntable_config end

// ugc_v2_config start
message SkinUgcV2Config {
  int64 start_time = 1;
  int64 end_time = 2;
  string icon_imgurl = 3;
  string btn_link = 4;
  repeated UgcTopic skin_topic_list = 5;
  repeated UgcTopic ks_topic_list = 6;
  repeated UgcTopic bg_topic_list = 7;
  repeated UgcTopic suit_topic_list = 8;
  int64 vip_cost = 9;
  string title_url = 10;
  bool hide_on_homepage = 11;
  repeated string topic_white_list = 12; // 主题白名单
}

message UgcTopic {
  int32 id = 1;
  string name = 2;
  string bg = 3;
  string bg_small = 4;
  bool is_topic_create = 5;
  int64 upload_time = 6; // 主题开启时间
  string music = 7;
  bool is_delete = 8; // 是否删除
}
// ugc_v2_config end

// show_illustration start
message ShowIllustrationConfig {
  string desc_url = 1;// 说明文案
  repeated ShowIllustrationTitle title_list = 2;
  repeated ShowIllustrationSeason  season_list = 4;
}

message ShowIllustrationTitle {
  int32 id = 1;
  string name = 2;
  string img = 3;// 背景
  int64 start_time = 4;// 开始和结束时间不为0的为活动主题
  int64 end_time = 5;
}

message ShowIllustrationSeason {
  int32 id = 1;
  string name = 2;
  string img = 3;
  int64 start_time = 4;
  int64 end_time = 5;
  string bg_imgurl = 6;
  repeated SnakeMain.Config.RewardConfig rewards = 7;
  repeated SeasonResource resources = 8;
}

message SeasonResource {
  int32 type = 1;
  int32 skin_id = 2;
  string imgurl = 3;
  string gray_imgurl = 4;
  uint32 x = 5;
  uint32 y = 6;
}
// show_illustration end

// gift_illustration Start
message GiftIllustrationConfig{
  string desc_url = 1;
  string guide_url = 2;
  repeated GiftTitleItemConfig title_list = 3;
}

message GiftTitleItemConfig{
  int32 id = 1;
  string name = 2;
  string img = 3;
}
// gift_illustration End

// endless floating v2 start

message EndlessFloatingV2 {
  string act_id = 1;
  int64 start_time = 2;
  int64 end_time = 3;
  repeated IllustrateFloatingRefreshConfig floating_refresh_config_v2 = 4;
  repeated FloatingInfo floating_config = 5;
  repeated TreasureHouseThemeInfo treasure_house = 6;
  repeated BossTheme boss = 7;
  ExtraBuff extra_buff = 8;
  repeated FloatingAiSkin ai_skin = 9;
  repeated FloatingAiSkinRateInfo ai_skin_rate = 10;
  repeated FloatingAiKillEffect ai_killeffect = 11;
  repeated FloatingAiKillEffectRateInfo ai_killeffect_rate = 12;
  repeated FloatingMainMapTheme main_map_theme = 13;
  repeated IllustrateConfig illustrate_config = 14;
  int64 icon_start_time = 15;
  int64 icon_end_time = 16;
  string homepage_url = 17;
}

message IllustrateConfig {
  int32 id = 1;
  int32 type = 2;
}

message IllustrateFloatingRefreshConfig{
  int32 pool_id = 1;
  int64 start_time = 2;
  int64 end_time = 3;
  FloatingRefreshConfig floating_refresh_config = 4;
}

message FloatingRefreshConfig {
  repeated int32 refresh_interval = 1;
  repeated int32 floating_kind = 2;
  repeated int32 floating_num = 3;
  int32 floating_range = 4;
  int32 floating_min_distance = 5;
  int32 wall_rate = 6;
  repeated int32 wall_distance = 7;
  int32 wall_floating_num = 8;
}

message FloatingInfo {
  int32 id = 1;
  string name = 2;
  string desc = 3;
  int32 length_limit = 4;
  int32 time_limit = 5;
  int32 not_collect_all_rate = 6;
  int32 collect_all_rate = 7;
  int32 first_add_score = 8;
  int32 add_score = 9;
  string imgurl = 10;
  string area = 11;
  int32 need_num = 12;
  int32 diamond_limit = 13;
  int32 relive_limit = 14;
  int32 is_rare = 15;
  double img_scale = 16;
  repeated int32 maps = 17;
  string period = 18;
  int32 middle_item_id = 19;
  string unlock_desc = 20;
  int32 total_limit = 21;
  int32 wall_not_collect_all_rate = 22;
  int32 wall_collect_all_rate = 23;
  int32 type = 24;
}

message TreasureHouseThemeInfo {
  int32 ThemeId = 1;
  string MapAssetPath = 2;
  string CenterSpawnPrefabPath = 3;
  int32 CandyElementId = 4;
  int32 MushroomElementId = 5;
  int32 SpawnScale = 6;
  int32 MushRoomId = 7;
  string broadcast_url = 8;
  string progress_content = 9;
  int32 StartTime = 10;
  int32 EndTime = 11;
}

message BossTheme {
  int32 theme_id = 1;
  repeated int32 boss_firecracker = 2;
  string blood = 3;
  string desc = 4;
  int32 entity_id = 5;
  int32 add_score = 6;
  repeated int32 add_floating = 7;
  repeated int32 add_floating_rate = 8;
  int32 prop_id = 9;
  int64 prop_time = 10;
  int64 start_time = 11;
  int64 end_time = 12;
  int32 type = 13;
}

message ExtraBuff {
  int32 cold_second = 1;
  int32 interval = 2;
  int32 daily_limit = 3;
  message ExtraBuffInfo {
    int32 id = 1;
    int32 value = 2;
    string name = 3;
    int32 rate = 4;
    string tips = 5;
  }
  repeated ExtraBuffInfo buff_list = 4;
}

message FloatingAiSkinRateInfo {
  int32 illustrate_id = 1;
  int32 special_skin_rate = 2;
}

message FloatingAiKillEffect {
  int32 kill_effect_id = 1;
  int32 random_weight = 2;
  int64 start_time = 3;
  int64 end_time = 4;
  int32 illustrate_id = 5;
}

message FloatingAiKillEffectRateInfo {
  int32 illustrate_id = 1;
  int32 special_kill_effect_rate = 2;
}

message FloatingMainMapTheme{
  int32 illustrate_id = 1;
  string map_asset_path = 2;
}

message FloatingAiSkin {
  int32 skin_id = 1;
  int32 random_weight = 2;
  int64 start_time = 3;
  int64 end_time = 4;
  int32 illustrate_id = 5;
}

//endless floating v2 end

//season activity start
message SeasonCaiDan {
  int32 id = 1;
  string name = 2;
  string desc = 3;
  string imgurl = 4;
}

message SeasonActivity {
  int32 season_id = 1;
  int64 start_time = 2;
  int64 end_time = 3;
  repeated SeasonCaiDan caidan_list = 4;
  string season_homepage_url = 5;
  string passport_url = 6;
  string treasure_hunting_url = 7;
  string chase_sea_url = 8;
  string true_love_url = 9;
  string game_url = 10;
  string meetup_url = 11;
  string season_illustration_url = 12;
  repeated SeasonRollSkin roll_skin = 13;
  string current_pv_url = 14;
  string review_pv_url = 15;
}

message SeasonRollSkin {
  int32 skin_id = 1;
  int64 unlock_time = 2;
}
//season activity end

// 照片墙 Start
message PhotoWallConfig {
  PhotoWallActivityConfig activity = 1;
  string photo_wall_text = 2;
}

message PhotoWallActivityConfig {
  int32 id = 1;
  string name = 2;
  string activity_text = 3;
  string media_url = 4;
  string upgrade_text = 5;
  string reset_text = 6;
  string title_url = 7;
  int64 start_time = 8;
  int64 end_time = 9;
  int64 lastest_end_time = 10;
  int32 gift_id = 11;
  string exp_name = 12;
  int32 like_reward_limit = 13;
  repeated PhotoWallIconConfig icon_config = 14;
  repeated PhotoWallLevelsItem levels = 15;
  PhotoWallGuardian guardian = 16;
  string media_url_v2 = 17; // unity使用
}

message PhotoWallIconConfig {
  int64 start_time = 1;
  int64 end_time = 2;
  string btn_url = 3;
  string img_url = 4;
}

message PhotoWallLevelsItem {
  int32 level = 1;
  string img_url = 2;
  string like_reward_name = 3;
  int32 anim_type = 4;
  string anim_url = 5;
  int32 chest_id = 6;
  int32 exp = 7;
}

message PhotoWallGuardian {
  int32 continue_sec = 1;
  int64 start_time = 2;
  string continue_img = 3;
  int32 anim_type = 4;
  string anim_url = 5;
  int32 middle_item_id = 6;
}
// 照片墙 End

message GoatEndlessChest {
  int64 start_time = 1;
  int64 end_time = 2;
}

message EndlessThroughWall{
  int64 start_time = 1;
  int64 end_time = 2;
  repeated string white_list = 3;
}

// super_show start
message SuperShow {
  string start_time_str = 1;
  string end_time_str = 2;
  int64 start_time = 3;
  int64 end_time = 4;
  int64 skin_id = 5;
  int64 anim_type = 6;
  string anim_url = 7;
}
// super_show end

// 贪吃蛇首充 Start
message FirstChargeConfig {
  string act_id = 1;
  int64 start_time = 2;
  int64 end_time = 3;
  string support_version = 4;
  int32 unlock_money = 5;
  string unlock_money_url = 6;
  repeated FirstChargeSkinRewardInfo skin_list = 7;
  repeated FirstChargeUnlockRewardInfo unlock_rewards = 8;
}

message FirstChargeSkinRewardInfo {
  int32 item_id = 1;
  string imgurl = 2;
  string name = 3;
}

message FirstChargeUnlockRewardInfo{
  int32 day = 1;
  repeated snakecommon.CRewardItem rewards = 2;
}
// 贪吃蛇首充 End


// ======== couple_pass_check 双人通行证配置 start ====================================================
message CouplePassCheck {
  string act_id = 1;                                  // 活动ID
  CPCPrompt prompt = 2;                               // 活动引导配置
  string title = 3;                                   // 活动标题
  string desc = 4;                                    // 活动说明
  int64 start_time = 5;                               // 开始时间
  int64 end_time = 6;                                 // 结束时间
  repeated CPCMainSkin main_skins = 7;                // 主资源皮肤配置
  CPCLevelConf level_conf = 8;                        // 等级配置
  CPCPackConf pack_conf = 9;                          // 礼包配置
  CPCCoupleMilestone couple_milestone = 10;           // 双人里程碑配置
  string pack_buff_activity_link = 11;                // 礼包buff活动跳转链接
  CPCTaskConf task_conf = 12;                         // 任务配置
  CPCExchangeStore exchange_store = 13;               // 兑换商店配置
  CPCIntimateRelationship intimate_relationship = 14; // 亲密关系配置
  int32 single_pb_item_id = 15;                       // 单人经验值道具 ID
  int32 couple_pb_item_id = 16;                       // 双人经验值道具 ID
  int32 intimacy_item_id = 17;                        // 亲密度道具 ID
  string ios_hotfix_unity_version = 18;
  string android_hotfix_unity_version = 19;
  CouplePassCheckMatchChat match_chat = 20; // 亲密速配
  CouplePassCheckSpace couple_space = 21; // 亲密空间
}

message CPCPrompt {
  string title = 1;                // 标题
  string skin_url = 2;              // 第一步：情侣皮肤
  int32 couple_background_id = 3;  // 第二步：情侣背景
  int32 box_id_1 = 4;               // 第三步：情侣头框1
  int32 box_id_2 = 5;               // 第三步：情侣头框2
  int32 designation_id = 6;        // 第三步：亲密称谓
}

message CPCMainSkin {
  int32 skin_id = 1;                      // 皮肤ID
  string skin_anim = 2;                   // 皮肤动效
  string backgroud_img_url = 3;           // 获取详情底图链接
  string backgroud_color = 4;             // 获取详情底图颜色
  repeated string button_urls = 5;         // 获取详情按钮跳转链接
}

message CPCLevelConf {
  int32 max_level = 1;                               // 上限等级
  int32 pb_per_level = 2;                            // 每级需要的经验值
  SnakeMain.Config.RewardConfig repeat_reward = 3;   // 达到上限等级后每五级的重复奖励，付费线
  repeated CPCLevel levels = 4;                      // 等级配置
  repeated CPCMilestone milestones = 5;              // 里程碑配置
}

message CPCLevel {
  int32 level = 1;                        // 等级
  repeated SnakeMain.Config.RewardConfig free_rewards = 2;          // 免费奖励配置
  repeated SnakeMain.Config.RewardConfig pay_rewards = 3;          // 付费奖励配置
}

message CPCMilestone {
  int32 id = 1;                           // 里程碑ID
  int32 level = 2;                        // 里程碑等级
  string mark = 3;                        // 里程碑标记
  string prompt = 4;                      // 里程碑提示文案
}

message CPCPackConf {
  CPCPackInfo basic_pack = 1;             // 基础礼包
  CPCPackInfo advanced_pack = 2;          // 进阶礼包
  CPCPackInfo luxury_pack = 3;            // 豪华礼包
  string luxury_img_url = 4;              // 豪华礼包图片
}

message CPCPackInfo {
  int32 pack_id = 1;                      // 礼包ID
  repeated SnakeMain.Config.RewardConfig rewards = 2; // 奖励配置，其中基础礼包仅用作展示，不发奖
  string prompt_1 = 3;                    // 当前距离活动结束大于24小时时提示文案
  string prompt_2 = 4;                    // 当前距离活动结束小于24小时时提示文案
}

message CPCCoupleMilestone {
  repeated int32 pack_ids = 1;            // 礼包ID列表
}

message CPCTaskConf {
  repeated CPCTaskSkin main_skins = 1;    // 皮肤配置
  CPCTaskInfo daily_task = 2;             // 每日挑战
  CPCTaskInfo weekly_task = 3;            // 每周挑战
  CPCTaskInfo gift_task = 4;              // 送礼挑战
  repeated CPCGiftInfo gift = 5;          // 礼物配置
  int64 intimacy_qualifying_daily_limit = 6;  // 与好友组队团战亲密度每日上限
  int64 intimacy_up_star_daily_limit = 7;     // 与好友组队升星星亲密度每日上限
  int64 intimacy_send_gift_daily_limit = 8;   // 与好友互赠指定礼物亲密度每日上限
  int64 single_game_intimacy = 9; // 单局增加亲密值
  int64 single_star_intimacy = 10; // 每颗星星增加亲密值
  repeated CPCGiftIntimacyItem gift_intimacy_list = 11; // 送礼亲密值配置
}

message CPCGiftIntimacyItem {
  int64 gift_id = 1;
  int64 intimacy = 2; // 每个礼物增加亲密值
  int64 milestone = 3; // 每个礼物增加里程
}

message CPCTaskSkin {
  int32 skin_id = 1;                         // 皮肤ID
  string skin_anim = 2;                      // 皮肤动效
  string exchange_buff_activity_link = 3;     // 兑换buff活动跳转链接
  string background_color = 4;               // 皮肤背景颜色
}

message CPCTaskInfo {
  string desc = 1;                           // 描述
  repeated int32 event_ids = 2;              // 任务活动ID列表
  repeated int32 intimate_event_ids = 3;      // 亲密任务活动ID列表
  repeated EventTask event_infos = 4;         // 任务配置，服务器读取填充
}

message CPCGiftInfo {
  int32 gift_id = 1;                         // 礼物ID
  int64 pb = 2;                              // 增加经验值
  int64 intimacy = 3;                        // 增加的亲密度
}

message CPCExchangeStore {
  int32 gift_box_voucher_id = 1;             // 礼盒兑换券ID
  int32 exchange_currency_id = 2;             // 兑换货币ID
  string gift_box_voucher_img = 3;             // 礼盒图片
  string exchange_currency_img = 4;             // 兑换货币图片
  string gift_box_voucher_name = 5;             // 礼盒兑换券名称
  string exchange_currency_name = 6;           // 兑换货币名称
  repeated CPCExchangeItem items = 7;         // 兑换物品列表
}

message CPCExchangeItem {
  int32 index = 1;                             // 索引
  SnakeMain.Config.RewardConfig reward_info = 2;    // 奖励信息
  int64 exchange_limit = 3;                   // 兑换上限，0表示无上限
  int64 gift_box_voucher_count = 4;           // 需要的礼盒兑换券数量
  int64 exchange_currency_count = 5;          // 需要的兑换货币数量
  string reward_anim = 6;                    // 奖励动效，不配置则读取资源配置
}

message CPCIntimateRelationship {
  int64 invite_cd_sec = 1;                    // 邀请冷却时间，单位秒
  int64 invite_expire_sec = 2;                // 邀请有效期，单位秒
  string invite_message = 3;                  // 邀请文案
  int64 dissolve_limit = 5;                   // 解除关系次数上限
  repeated CPCIntimateLevelItem level_config = 6; // 亲密度等级配置
  int64 apply_expire_sec = 7;                   // 申请亲密称谓有效期，单位秒
  repeated int32 default_owned_designation_ids = 8; // 默认拥有的亲密称谓ID列表
}

message CPCIntimateLevelItem {
  int32 level = 1; // 亲密度等级
  int64 intimacy = 2; // 需要的亲密度
}

message CouplePassCheckMatchChat {
  string match_rule = 1; // 匹配规则
  int64 match_timeout_sec = 2; // 匹配超时时间（秒）
  int64 chat_time_limit_sec = 3; // 聊天时间限制（秒）
  repeated string greetings = 4; // 招呼文案列表
  repeated string quick_phrase_text_list = 5; // 快捷文案列表
  string invite_prompt = 6; // 邀请提示文案
  string invite_msg = 7; // 邀请文案
}

message CouplePassCheckSpace {
  string intro = 1; // 介绍文案
  repeated int32 background_need_heart_values = 2; // 背景需要的心动值
  int32 heart_value_item_id = 3; // 心动值道具ID
  CouplePassCheckSpaceChallenge challenge = 4; // 旅途挑战
  CouplePassCheckSpaceTreasure treasure = 5; // 旅途宝藏
}


message CouplePassCheckSpaceChallenge {
  repeated int32 event_ids = 1; // 任务活动ID列表
  repeated EventTask event_infos = 2; // 任务配置，服务器读取填充
}

message CouplePassCheckSpaceTreasure {
  int32 id = 1; // 宝藏阶段ID
  int64 need_heart_value = 2; // 需要的心动值
  SnakeMain.Config.RewardConfig reward = 3; // 奖励配置
}
// ======== couple_pass_check end ====================================================

// ======== star_field_bp start ====================================================
message StarFieldBp {
  string act_id = 1; // 活动id
  int32 turn = 2; // 活动轮次（每12期1轮）
  int32 constellation_id = 3; // 星座id
  int64 start_time = 4; // 开始时间
  int64 end_time = 5; // 结束时间
  string title = 6; // 活动标题
  string desc = 7; // 活动描述
  map<int32, string> constellation_name = 8; // 星座名称映射
  snakecommon.GameIcon icon_config = 9; // 主页图标配置
  repeated StarFieldBpMainReward main_rewards = 10; // 主资源皮肤配置
  StarFieldLevelConf level_conf = 11; // 等级配置
  StarFieldPackConf pack_conf = 12; // 礼包配置
  StarFieldRankConf rank_conf = 13; // 排行榜配置
  StarFieldHonorPage honor_page = 14; // 冠名页
  StarFieldExchangeStore exchange_store = 15; // 兑换商店
  StarFieldLottery lottery = 16; // 抽奖配置
  StarFieldTask task_conf = 17; // 任务配置
  StarFieldWish wish_conf = 18; // 祈福配置
  string buff_link = 19; // 活动buff链接
}

message StarFieldBpMainReward {
  int32 type = 1; // 奖励类型
  int32 item_id = 2; // 奖励id
  string anim_url = 3; // 奖励动效
}

message StarFieldLevelConf {
  int32 pb_item_id = 1; // 经验道具 ID
  int64 diamond_per_level = 2; // 每级需要的苹果数
  int64 max_level = 3; // 最高等级，该登记后面重复奖励
  int64 pb_per_level = 4; // 每级需要的经验值
  int64 repeat_per_level = 5; // 每多少级重复奖励
  SnakeMain.Config.RewardConfig  repeat_reward = 6; // 重复奖励配置
  repeated StarFieldLevel levels = 7; // 等级配置
  map<int32, SnakeMain.Config.RewardConfig> main_rewards = 8; // 重点奖励，key为等级
}

message StarFieldLevel {
  int32 level = 1; // 等级
  repeated SnakeMain.Config.RewardConfig free_rewards = 2; // 免费奖励配置
  repeated SnakeMain.Config.RewardConfig pay_rewards = 3; // 付费奖励配置
}

message StarFieldPackConf {
  StarFieldPackInfo basic_pack = 1; // 基础礼包
  StarFieldPackInfo luxury_pack = 2; // 豪华礼包
  string background_img = 3; // 背景图片
}

message StarFieldPackInfo {
  int32 pack_id = 1; // 礼包ID
  repeated SnakeMain.Config.RewardConfig rewards = 2; // 奖励配置
  string prompt_1 = 3; // 当前距离活动结束大于24小时时提示文案
  string prompt_2 = 4; // 当前距离活动结束小于24小时时提示文案
}

message StarFieldRankConf {
  SFRankSettleConf level_total_rank = 1; // 等级总榜
  SFRankSettleConf level_daily_rank = 2; // 等级日榜
  SFRankSettleConf gift_total_rank = 3; // 收礼总榜
  SFRankSettleConf gift_daily_rank = 4; // 收礼日榜
  repeated int32 gift_ids = 5; // 指定礼物 ID 列表
}

message SFRankSettleConf {
  repeated SFSettleReward settle_rewards = 1; // 结算奖励配置
}

message SFSettleReward {
  int32 min_rank = 1; // 最小排名
  int32 max_rank = 2; // 最大排名
  string mail_content = 3; // 邮件内容
  repeated SnakeMain.Config.RewardConfig rewards = 4; // 奖励配置
  string mail_title = 5; // 邮件标题
}

message StarFieldHonorPage {
  string intro = 1; // 冠名页说明文案
  SFHonorSendReward send_reward = 2; // 赠礼配置
}

message SFHonorSendReward {
  int64 daily_limit = 1; // 每日赠送次数上限
  string mail_content = 2; // 邮件内容
  repeated SFHonorSendRewardItem reward_pool = 3; // 奖励池
  string mail_title = 4; // 邮件标题
}

message SFHonorSendRewardItem {
  SnakeMain.Config.RewardConfig reward = 1; // 奖励配置
  int64 weight = 2; // 权重
}

message StarFieldExchangeStore {
  int32 middle_item_id = 1; // 中间物品ID
  string middle_item_img = 2; // 中间物品图片
  string middle_item_name = 3; // 中间物品名称
  repeated SFExchangeItem items = 4; // 兑换物品列表
}

message SFExchangeItem {
  int32 index = 1; // 索引
  SnakeMain.Config.RewardConfig reward_info = 2; // 奖励配置
  int64 exchange_limit = 3; // 兑换上限，0表示无上限
  int64 middle_item_count = 4; // 需要的中间物品数量
}

message StarFieldLottery {
  int64 one_price = 1; // 一次抽奖价格
  int64 ten_price = 2; // 十次抽奖价格
  int32 lottery_coin_id = 3; // 抽奖币ID
  string lottery_coin_img = 4; // 抽奖币图片
  string lottery_coin_name = 5; // 抽奖币名称
  repeated SFLotteryRewardItem reward_pool = 6; // 奖励池
  repeated SFLotteryGuaranteed guaranteed_config = 7; // 保底配置
  repeated SFLotteryGuaranteedPool guaranteed_reward = 8; // 保底奖励池
  repeated SFLotteryAccuReward accu_rewards = 9; // 累抽奖励
  int64 diamond_per_coin = 11; // 1个代币需要多少个苹果
}

message SFLotteryRewardItem {
  int64 id = 1; // 唯一标识
  SnakeMain.Config.RewardConfig reward_info = 2; // 奖励配置
  int64 weight = 3; // 权重
  bool is_special = 4; // 是否为特殊奖励
  int64 coin_num = 5; // 唯一性资源折算的抽奖代币数量
  int64 show_item_num = 6; // 唯一性资源折算的 show 卡数量
  int64 limit = 7; // 抽中次数限制，0 表示无上限
}

message SFLotteryGuaranteed {
  int64 low = 1; // 抽奖次数左值（包含）
  int64 high = 2; // 抽奖次数右值（包含）
  int64 probability = 3; // 概率
}

message SFLotteryGuaranteedPool {
  int64 low = 1; // 保底次数左值（包含）
  int64 high = 2; // 保底次数右值（包含）
  repeated SFLotteryRewardItem reward_pool = 3; // 奖励池
}


message SFLotteryAccuReward {
  int64 accu_id = 1; // 唯一标识
  int64 lottery_count = 2; // 抽奖次数
  SnakeMain.Config.RewardConfig reward = 3; // 奖励
}


message StarFieldTask {
  SFDailyTask daily_task = 1; // 每日任务
  repeated SFWeeklyTaskItem week_task_list = 2; // 每周任务（阶段式开放）
  SFDailyTask weekly_task = 3; // 每周任务（自动刷新）
}


message SFDailyTask {
  repeated int32 event_ids = 1; // 任务活动 ID 列表
  repeated EventTask event_infos = 2;         // 任务配置，服务器读取填充
}

message SFWeeklyTaskItem {
  int64 week_num = 1; // 第几周
  int64 unlock_time = 2; // 解锁时间
  repeated int32 event_ids = 3; // 任务活动 ID 列表
  repeated EventTask event_infos = 4;   // 任务配置，服务器读取填充
}

message StarFieldWish {
  repeated SFWishItem reward_pool = 1; // 祈福奖励池
}

message SFWishItem {
  SnakeMain.Config.RewardConfig reward_info  = 1; // 奖励配置
  int64 weight = 2; // 权重
  int64 global_daily_limit = 3; // 单服每日限制
  int32 rarity = 4; // 稀有度(1,2,3,4)
  int64 index = 5; // 奖励唯一标识
}

// ======== star_field_bp end ====================================================

// ======== newbie_checkin start ====================================================
message NewbieCheckinConfig {
  int64 endless_show_count = 1;
  int64 user_register_time = 2;
  repeated NewbieCheckinDayItem day_list = 3;
}

message NewbieCheckinDayItem {
  string imgurl = 1;
  string anim_url = 2;
  repeated SnakeMain.Config.RewardConfig reward_list = 3;
  string unity_anim_url = 4;
}
// ======== newbie_checkin end ====================================================
