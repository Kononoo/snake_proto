// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.27.1
// 	protoc        v3.16.1
// source: snakecommon/task.proto

package snakecommon

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// 任务状态
type TaskState int32

const (
	TaskState_UnDef     TaskState = 0 // 未定义
	TaskState_Init      TaskState = 1 // 初始化
	TaskState_CanReward TaskState = 2 // 可领奖
	TaskState_Finish    TaskState = 3 // 已领奖
)

// Enum value maps for TaskState.
var (
	TaskState_name = map[int32]string{
		0: "UnDef",
		1: "Init",
		2: "CanReward",
		3: "Finish",
	}
	TaskState_value = map[string]int32{
		"UnDef":     0,
		"Init":      1,
		"CanReward": 2,
		"Finish":    3,
	}
)

func (x TaskState) Enum() *TaskState {
	p := new(TaskState)
	*p = x
	return p
}

func (x TaskState) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (TaskState) Descriptor() protoreflect.EnumDescriptor {
	return file_snakecommon_task_proto_enumTypes[0].Descriptor()
}

func (TaskState) Type() protoreflect.EnumType {
	return &file_snakecommon_task_proto_enumTypes[0]
}

func (x TaskState) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use TaskState.Descriptor instead.
func (TaskState) EnumDescriptor() ([]byte, []int) {
	return file_snakecommon_task_proto_rawDescGZIP(), []int{0}
}

// 任务信息
type EventTask struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TaskId         int32          `protobuf:"varint,1,opt,name=task_id,json=taskId,proto3" json:"task_id,omitempty"`                          // 任务id
	EventId        int32          `protobuf:"varint,2,opt,name=event_id,json=eventId,proto3" json:"event_id,omitempty"`                       // 任务所属任务活动id
	NeedNum        int64          `protobuf:"varint,3,opt,name=need_num,json=needNum,proto3" json:"need_num,omitempty"`                       // 所需数量
	Desc           string         `protobuf:"bytes,4,opt,name=desc,proto3" json:"desc,omitempty"`                                             // 任务描述，将 {} 替换成 need_num
	BtnLink        string         `protobuf:"bytes,5,opt,name=btn_link,json=btnLink,proto3" json:"btn_link,omitempty"`                        // 跳转链接
	BtnType        string         `protobuf:"bytes,6,opt,name=btn_type,json=btnType,proto3" json:"btn_type,omitempty"`                        // 跳转类型
	State          TaskState      `protobuf:"varint,7,opt,name=state,proto3,enum=snakecommon.TaskState" json:"state,omitempty"`               // 任务状态
	ProgressNum    int64          `protobuf:"varint,8,opt,name=progress_num,json=progressNum,proto3" json:"progress_num,omitempty"`           // 玩家进度
	RewardItemList []*CRewardItem `protobuf:"bytes,9,rep,name=reward_item_list,json=rewardItemList,proto3" json:"reward_item_list,omitempty"` // 奖励列表
	FilterType     int32          `protobuf:"varint,10,opt,name=filter_type,json=filterType,proto3" json:"filter_type,omitempty"`             // 指定任务需要的资源类型（可选）
	FilterId       int32          `protobuf:"varint,11,opt,name=filter_id,json=filterId,proto3" json:"filter_id,omitempty"`                   // 指定任务需要的资源 id（可选）
	FilterArgs     string         `protobuf:"bytes,12,opt,name=filter_args,json=filterArgs,proto3" json:"filter_args,omitempty"`              // 其他参数（自行解析并定义规则判断，可选）
}

func (x *EventTask) Reset() {
	*x = EventTask{}
	if protoimpl.UnsafeEnabled {
		mi := &file_snakecommon_task_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EventTask) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EventTask) ProtoMessage() {}

func (x *EventTask) ProtoReflect() protoreflect.Message {
	mi := &file_snakecommon_task_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EventTask.ProtoReflect.Descriptor instead.
func (*EventTask) Descriptor() ([]byte, []int) {
	return file_snakecommon_task_proto_rawDescGZIP(), []int{0}
}

func (x *EventTask) GetTaskId() int32 {
	if x != nil {
		return x.TaskId
	}
	return 0
}

func (x *EventTask) GetEventId() int32 {
	if x != nil {
		return x.EventId
	}
	return 0
}

func (x *EventTask) GetNeedNum() int64 {
	if x != nil {
		return x.NeedNum
	}
	return 0
}

func (x *EventTask) GetDesc() string {
	if x != nil {
		return x.Desc
	}
	return ""
}

func (x *EventTask) GetBtnLink() string {
	if x != nil {
		return x.BtnLink
	}
	return ""
}

func (x *EventTask) GetBtnType() string {
	if x != nil {
		return x.BtnType
	}
	return ""
}

func (x *EventTask) GetState() TaskState {
	if x != nil {
		return x.State
	}
	return TaskState_UnDef
}

func (x *EventTask) GetProgressNum() int64 {
	if x != nil {
		return x.ProgressNum
	}
	return 0
}

func (x *EventTask) GetRewardItemList() []*CRewardItem {
	if x != nil {
		return x.RewardItemList
	}
	return nil
}

func (x *EventTask) GetFilterType() int32 {
	if x != nil {
		return x.FilterType
	}
	return 0
}

func (x *EventTask) GetFilterId() int32 {
	if x != nil {
		return x.FilterId
	}
	return 0
}

func (x *EventTask) GetFilterArgs() string {
	if x != nil {
		return x.FilterArgs
	}
	return ""
}

var File_snakecommon_task_proto protoreflect.FileDescriptor

var file_snakecommon_task_proto_rawDesc = []byte{
	0x0a, 0x16, 0x73, 0x6e, 0x61, 0x6b, 0x65, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2f, 0x74, 0x61,
	0x73, 0x6b, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0b, 0x73, 0x6e, 0x61, 0x6b, 0x65, 0x63,
	0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x1a, 0x18, 0x73, 0x6e, 0x61, 0x6b, 0x65, 0x63, 0x6f, 0x6d, 0x6d,
	0x6f, 0x6e, 0x2f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22,
	0x98, 0x03, 0x0a, 0x09, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x54, 0x61, 0x73, 0x6b, 0x12, 0x17, 0x0a,
	0x07, 0x74, 0x61, 0x73, 0x6b, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06,
	0x74, 0x61, 0x73, 0x6b, 0x49, 0x64, 0x12, 0x19, 0x0a, 0x08, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x5f,
	0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x49,
	0x64, 0x12, 0x19, 0x0a, 0x08, 0x6e, 0x65, 0x65, 0x64, 0x5f, 0x6e, 0x75, 0x6d, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x07, 0x6e, 0x65, 0x65, 0x64, 0x4e, 0x75, 0x6d, 0x12, 0x12, 0x0a, 0x04,
	0x64, 0x65, 0x73, 0x63, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x64, 0x65, 0x73, 0x63,
	0x12, 0x19, 0x0a, 0x08, 0x62, 0x74, 0x6e, 0x5f, 0x6c, 0x69, 0x6e, 0x6b, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x07, 0x62, 0x74, 0x6e, 0x4c, 0x69, 0x6e, 0x6b, 0x12, 0x19, 0x0a, 0x08, 0x62,
	0x74, 0x6e, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x62,
	0x74, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x12, 0x2c, 0x0a, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x18,
	0x07, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x16, 0x2e, 0x73, 0x6e, 0x61, 0x6b, 0x65, 0x63, 0x6f, 0x6d,
	0x6d, 0x6f, 0x6e, 0x2e, 0x54, 0x61, 0x73, 0x6b, 0x53, 0x74, 0x61, 0x74, 0x65, 0x52, 0x05, 0x73,
	0x74, 0x61, 0x74, 0x65, 0x12, 0x21, 0x0a, 0x0c, 0x70, 0x72, 0x6f, 0x67, 0x72, 0x65, 0x73, 0x73,
	0x5f, 0x6e, 0x75, 0x6d, 0x18, 0x08, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0b, 0x70, 0x72, 0x6f, 0x67,
	0x72, 0x65, 0x73, 0x73, 0x4e, 0x75, 0x6d, 0x12, 0x42, 0x0a, 0x10, 0x72, 0x65, 0x77, 0x61, 0x72,
	0x64, 0x5f, 0x69, 0x74, 0x65, 0x6d, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x09, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x18, 0x2e, 0x73, 0x6e, 0x61, 0x6b, 0x65, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e,
	0x43, 0x52, 0x65, 0x77, 0x61, 0x72, 0x64, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x0e, 0x72, 0x65, 0x77,
	0x61, 0x72, 0x64, 0x49, 0x74, 0x65, 0x6d, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x1f, 0x0a, 0x0b, 0x66,
	0x69, 0x6c, 0x74, 0x65, 0x72, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x0a, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1b, 0x0a, 0x09,
	0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x08, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x49, 0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x66, 0x69, 0x6c,
	0x74, 0x65, 0x72, 0x5f, 0x61, 0x72, 0x67, 0x73, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a,
	0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x41, 0x72, 0x67, 0x73, 0x2a, 0x3b, 0x0a, 0x09, 0x54, 0x61,
	0x73, 0x6b, 0x53, 0x74, 0x61, 0x74, 0x65, 0x12, 0x09, 0x0a, 0x05, 0x55, 0x6e, 0x44, 0x65, 0x66,
	0x10, 0x00, 0x12, 0x08, 0x0a, 0x04, 0x49, 0x6e, 0x69, 0x74, 0x10, 0x01, 0x12, 0x0d, 0x0a, 0x09,
	0x43, 0x61, 0x6e, 0x52, 0x65, 0x77, 0x61, 0x72, 0x64, 0x10, 0x02, 0x12, 0x0a, 0x0a, 0x06, 0x46,
	0x69, 0x6e, 0x69, 0x73, 0x68, 0x10, 0x03, 0x42, 0x2d, 0x5a, 0x2b, 0x67, 0x69, 0x74, 0x2e, 0x31,
	0x37, 0x7a, 0x6a, 0x68, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x73, 0x6e, 0x61, 0x6b, 0x65, 0x2f, 0x73,
	0x6e, 0x61, 0x6b, 0x65, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x73, 0x6e, 0x61, 0x6b, 0x65,
	0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_snakecommon_task_proto_rawDescOnce sync.Once
	file_snakecommon_task_proto_rawDescData = file_snakecommon_task_proto_rawDesc
)

func file_snakecommon_task_proto_rawDescGZIP() []byte {
	file_snakecommon_task_proto_rawDescOnce.Do(func() {
		file_snakecommon_task_proto_rawDescData = protoimpl.X.CompressGZIP(file_snakecommon_task_proto_rawDescData)
	})
	return file_snakecommon_task_proto_rawDescData
}

var file_snakecommon_task_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_snakecommon_task_proto_msgTypes = make([]protoimpl.MessageInfo, 1)
var file_snakecommon_task_proto_goTypes = []interface{}{
	(TaskState)(0),      // 0: snakecommon.TaskState
	(*EventTask)(nil),   // 1: snakecommon.EventTask
	(*CRewardItem)(nil), // 2: snakecommon.CRewardItem
}
var file_snakecommon_task_proto_depIdxs = []int32{
	0, // 0: snakecommon.EventTask.state:type_name -> snakecommon.TaskState
	2, // 1: snakecommon.EventTask.reward_item_list:type_name -> snakecommon.CRewardItem
	2, // [2:2] is the sub-list for method output_type
	2, // [2:2] is the sub-list for method input_type
	2, // [2:2] is the sub-list for extension type_name
	2, // [2:2] is the sub-list for extension extendee
	0, // [0:2] is the sub-list for field type_name
}

func init() { file_snakecommon_task_proto_init() }
func file_snakecommon_task_proto_init() {
	if File_snakecommon_task_proto != nil {
		return
	}
	file_snakecommon_config_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_snakecommon_task_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EventTask); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_snakecommon_task_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   1,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_snakecommon_task_proto_goTypes,
		DependencyIndexes: file_snakecommon_task_proto_depIdxs,
		EnumInfos:         file_snakecommon_task_proto_enumTypes,
		MessageInfos:      file_snakecommon_task_proto_msgTypes,
	}.Build()
	File_snakecommon_task_proto = out.File
	file_snakecommon_task_proto_rawDesc = nil
	file_snakecommon_task_proto_goTypes = nil
	file_snakecommon_task_proto_depIdxs = nil
}
