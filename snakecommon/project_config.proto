syntax = "proto3";
package snakecommon;
option go_package = "git.17zjh.com/snake/snake_proto/snakecommon";

import "snakecommon/config.proto";
import "snakeapi/config/SKStore.Proto";
import "snakecommon/task.proto";


message ConfigVersionInfo {
  map<string, string> flags = 1;
}

// === endless_buff_prop begin ======================================
message EndLessBuffPropConfigV2 {
  repeated EndLessBuffPropInfo list = 1;
}

message EndLessBuffPropInfo{
  int32 buff_type = 1;
  int32 free_times = 2;
  repeated CPriceInfo price_list = 3;
  repeated RandomPropInfo prop_list = 4;
}

message RandomPropInfo{
  int32 type = 1;
  int32 skin_id = 2;
  int32 num = 3;
  string name = 4;
  string imgurl = 5;
}
// === endless_buff_prop end ======================================

// === huawei_highlight begin ======================================
message HuaweiHighlight {
  repeated HighLightInfo highlight_list = 1;
  int32 open = 2;
  string template_id_three = 3;
  string template_id_four = 4;
}

message HighLightInfo {
  int32 type = 1;
  int32 obj = 2;
  int32 time = 3;
  int32 delay_time = 4;
  int32 level = 5;
}
// === huawei_highlight end ======================================

// === ol_game_config start ======================================
message OlGameConfig {
  int32 team_boss_skin_id = 1;
  GameStatusTrack game_status_track = 2;
  string team_suit_text_config = 3; // 团战队服说明文案
  GrassConfig grass_config = 4; // 草场配置，应该已废弃
  int32 show_friend_game_will_end_time_gap = 5;
  repeated int32 hc_match_cancel_time = 6;
  repeated int32 no_team_skin_id_list = 7;
  int32 ol_up_action_double = 8;
  int32 team_mode_win_length = 9;
  int32 ol_game_offline_tip_time = 10;
  repeated int32 no_team_second_head_point_skins = 11;
  double ol_game_stable_turn_count = 12;
  repeated string team_neck_urls = 13;
  string fly_food_url = 14;
  int32 ol_game_predict_data_count = 15;
  TeamSuit team_suit = 16;
  TeamKillConfig team_kill_config = 17;
  TeamMeleeConfig team_melee_config = 18;
  QualifyingConfig qualifying_config = 19;
  RaceNormalConfig race_normal_config = 20;
  TeamKillProp team_kill_prop = 21;
  int32 exit_button_plan = 22; // 4.3.28新增,中途退出按钮状态方案
  int32 qualifying_guide = 23; //1:强引导，2：弱引导
  int32 ol_game_predict_data_count_new = 24;
  MatchBackgroundConfig match_background = 25;
  JumpIcon jump_icon = 26; // 匹配界面跳转按钮
}

message JumpIcon {
  string icon = 1; // 图标url
  string link = 2; // 跳转链接
  int64 start_time = 3; // 开始时间
  int64 end_time = 4; // 结束时间
  string support_version = 5; // 支持版本>=
}

message MatchBackgroundConfig {
  int32 anim_type = 1;
  string anim_src = 2;
  string static_imgurl = 3;
}

message GameStatusTrack {
  int32 frame_min_delay = 1;
  int32 ping_interval = 2;
}
message GrassConfig {
  repeated GrassInfo grass = 1;
  int32 grid_count = 2;
}
message GrassInfo {
  repeated int32 position = 1;
  string url = 2;
}
message TeamSuit {
  repeated string head = 1;
  repeated string body = 2;
  repeated int32 repeat_rate = 3;
  string imgurl = 4;
  string name = 5;
  repeated TeamSuitNewSuitInfo new_suit = 6;
}
message TeamSuitNewSuitInfo {
  repeated int32 skin_ids = 1;
  int32 id = 2;
  string imgurl = 3;
  string name = 4;
}
message TeamKillConfig {
  int32 first_blood_sound_effect = 1;
  string clan_point_rule = 2;
  repeated string intro_urls = 3;
  repeated string intro_urls_ipad = 4;
  string top_reward_desc = 5;
  string top_intro = 6;
  string top_first_intro = 7;
  int32 use_season_score = 8;
}
message TeamMeleeConfig {
  string team_melee_rule = 1;
  string game_rule = 2;
  string clan_point_rule = 3;
  repeated string intro_urls = 4;
  int32 show_feedback = 5;
  string feedback_url = 6;
  int32 show_grade_info = 7;
}
message QualifyingConfig {
  repeated string intro_urls = 1;
  repeated string intro_urls_v2 = 2;
  repeated string intro_urls_ipad = 3;
  repeated string intro_urls_ipad_v2 = 4;
  string unlock_tip = 5; // 解锁提示"无尽模式达到***分解锁"
  string game_rule = 6; // 结算页点赞说明
  int32 force_guide = 7; //1有引导 // 对于未玩过团战的玩家,无尽模式以高于一定分数的成绩结束后是否出现强制团战引导
  int32 pretty_page = 8;
  string banner_url = 9;
  string banner_link = 10;
  int32 use_kcp_v2 = 11;
  int32 use_netty_v2 = 12;
  int32 use_netty = 13;
  int32 network_survey = 14;
  int32 use_render_offset = 15;
  int32 network_survey_v2 = 16;
  string icon_link = 17;
  string icon_url = 18;
  int32 use_kcp = 19;
}
message RaceNormalConfig {
  string banner_url = 1;
  string banner_link = 2;
  repeated string intro_urls = 3;
}
message TeamKillProp {
  repeated CPriceInfo price_list = 1;
  repeated SnakeMain.Config.RewardConfig prop_list = 2;
  int32 game_free = 3;
  int32 show_icon = 4;
}
// === ol_game_config end ======================================



// === clan_config begin =======================================
message ClanConfig {
  RuleDesc rule_desc = 1; // 战队赛增加活跃点规则
  repeated RaceTimeConfig race_time_config = 2;
  map<int32, ClanRaceReward> clan_race_reward = 3;
  repeated ClanLevelInfo level_config = 4;
  string clan_reward_tips = 5;
  string qrcode_format = 6;
  int32 unlock_star = 7;
  repeated int32 reward_partition = 8; // 这是老的，结算的时候用，[0]为高，[1]为中，[2]为低
  repeated int32 reward_explain_partition = 9; // 这是新的，预览的时候用，[0]为高，[1]为中，[2]为低
  string permission_imgurl = 10;
  string add_cup_rule = 11;
  string team_add_cup_rule = 12;
  int32 create_clan_cost_diamond = 13;
  string season_cup_url = 14;
  string reward_web = 15;
  repeated NewClanRewardItem reward_config = 16; // 这是老的，结算的时候用，服务器返回从大到小的顺序，客户端从小到大展示
  repeated NewClanRewardItem reward_explain_config = 17; // 这是新的，预览的时候用，服务器返回从大到小的顺序，客户端从小到大展示
  string desc_url_v2 = 18;
}

message RuleDesc {
  string team_add_cup_rule = 1;//战队赛增加活跃点规则
  string add_cup_rule = 2;//团战增加活跃点规则
  int32 formal_member_cup = 3;//候补队员转正提示
  string level_explain_url = 4;//战队等级介绍 url
  repeated ActivePointAddition active_point_addition = 5; //排位赛战队成员组队加成
  int32 race_cup_rate = 6;//战队赛倍数
}

message ActivePointAddition {
  int32 member = 1;
  string desc = 2;
}

message RaceTimeConfig {
  int32 week_day = 1;  // 星期日为7
  string start_time = 2;  // 格式24:00:00
  string end_time = 3; // 格式24:00:00
}

message ClanRaceReward {
  int32 type = 1;
  int32 value = 2;
  string desc = 3;
  string progress = 4;
  int32 state = 5;
}

message ClanLevelInfo {
  int32 member_num = 1;
  int32 cup_start = 2;
  int32 level = 3;
  string name = 4;
  string icon_url = 5;
  int32 elite_num = 6;
}

message NewClanRewardItem {
  int32 index = 1;   // 只代表id，不代表等级的高低
  string badge_imgurl = 2;
  string grade = 3;
  string border_imgurl = 4;
  int32 rank = 5;
  int32 diamond = 6;
  repeated SnakeMain.Config.RewardConfig reward = 7;
  int32 cup_start = 8;
  int32 reward_id = 9;
  // 下一个不同 grade 的 rank 位置
  int32 nextRank = 10;
  int32 degree = 11;  // 依据服务器返回来的等级列表位置，小的一定等级低，最低等级为0；0,1,2,3...n-1 中间没有空位
}
// === clan_config end ======================================

// === rank_config begin ======================================
message RankConfig {
  int64 start_time = 1;
  int64 end_time = 2;
  string season_name = 3;
  string season_introduce_url = 4;
  string title = 5;
  string imgurl = 6;
  int32 height = 7;
  int32 width = 8;
  int32 season_id = 9;
  int32 skin_id = 10;
  int32 prime_king_range = 11; //最强王者数目
  repeated string prime_top_urls = 12;
  repeated RankLevel level = 13;
  repeated RankReward rank_reward = 14;
  string prime_king_range_text = 15;
  int64 rank_reward_v2_start_time = 16; // 段位奖励v2开始时间
  DailyGameRewards daily_game_rewards = 17; // 每日游戏奖励
  NewerGuide newer_guide = 18; // 新手引导
  repeated RankRewardV2 rank_reward_v2 = 19; // 段位奖励v2
}

message RankReward {
  // "star_range": [0, 3],
  repeated int32 star_range = 1;
  // "reward_list": [通用奖励数组]
  repeated SnakeMain.Config.RewardConfig reward_list = 2;
}

message RankRewardV2 {
  int32 rank_id = 1; // 大段位 id
  string rank_name = 2; // 大段位名称
  string reward_preview = 3; // 段位奖励预览
  // "star_range": [0, 3],
  repeated int32 star_range = 4;
  // "reward_list": [通用奖励数组]
  repeated SnakeMain.Config.RewardConfig reward_list = 5; // 段位奖励列表
}

message RankLevel {
  int32 star_start_num = 1;
  repeated int32 rule = 2;
  int32 star_end_num = 3;
  string url = 4;
  string name = 5;
  int32 mvp = 6;
  string sprite_name = 7;
  int32 level_id = 8; // 段位的 id
}

message DailyGameRewards {
  int64 start_time = 1; // 每日游戏奖励开始时间
  repeated DailyGameRewardItem list = 3; // 每日游戏奖励列表
  map<int64, BoxPool> box_pool = 4; // 宝箱 id 对应的奖池
}

message DailyGameRewardItem {
  int64 game_num = 1; // 每日第几局
  int64 box_num = 2; // 发几个宝箱
  int64 box_id = 3; // 宝箱 id
}

message BoxPool {
  string prob_intro = 1; // 概率说明
  repeated BoxPoolItem pool = 2; // 宝箱奖池
}

message BoxPoolItem {
  int64 id = 1; // 奖励唯一标识
  int32 type = 2;                     // 奖励类型
  int32 skin_id = 3;                  // 奖励 id
  int64 num = 4;                      // 奖励数量
  optional string big_num = 5;        // 奖励数量，大数
  string name = 6;                    // 奖励名称
  string imgurl = 7;                  // 奖励图片
  optional string use_info = 8;       // 有效期，单位秒
  int32 worth_level = 9;              // 稀有度
  repeated CConvert convert = 10;      // 奖励折算
  int32 is_valuable = 11;              // 是否高价值：0否1是，客户端会显示特殊边框
  int32 quality_level = 12;            // 品质等级
  BoxPoolItemType reward_type = 13;      // 奖励类型
  int64 rate = 14;                     // 权重
  repeated int64 expected_time = 15;   // 特殊奖励期望抽数区间，不配则无限制
  int64 prize_percent = 16;            // 特殊奖励单抽中奖概率(0~100)，不配时默认为 1/x-y
}

enum BoxPoolItemType {
  Normal = 0; // 普通填充奖励
  Special = 1; // 特殊奖励
}

message NewerGuide {
  int32 box_id = 1; // 宝箱 ID
  int64 box_num = 2; // 新手引导数量
}


message SeasonInfo {
  int64 start_time = 1;
  int64 end_time = 2;
  string season_name = 3;
  string season_introduce_url = 4;
  string title = 5;
  string imgurl = 6;
  int32 height = 7;
  int32 width = 8;
  int32 season_id = 9;
  int32 skin_id = 10;
  DailyGameRewards daily_game_rewards = 12; // 每日游戏奖励
  repeated RankRewardV2 rank_reward_v2 = 13; // 段位奖励v2
}
// === rank_config end ======================================


// === share_config begin ======================================
message ShareConfig {
  string share_url = 1;
  string share_title = 2;
  string share_text = 3;
  string my_qr_url = 4;
  ChannelConfig channel_config = 5;
  GameInvite game_invite = 6;
  repeated VideoShareIcon video_share_icon = 7;
  repeated ClipBoardCheck clipboard_check = 8;
  ShareTag share_tag = 9;
  int32 new_wx_universal_link = 10;
}

message ShareTag {
  string kuaishou = 1;
  string douyin = 2;
  string weibo = 3;
}

message ClipBoardCheck {
  int64 start_time = 1;
  int64 finish_time = 2;
  string act = 3;
  string reg = 4;
}

message VideoShareIcon {
  string key = 1;
  int64 start_time = 2;
  int64 finish_time = 3;
  string imgurl = 4;
  string link = 5;
}

message ChannelConfig {
  int32 wechat_friend = 1;
  int32 wechat_circle = 2;
  int32 qq_circle = 3;
  int32 qq_friend = 4;
  int32 weibo = 5;
}

message GameInvite {
  string title = 1;
  string url = 2;
  string text = 3;
  string xiaomi_img = 4;
}
// === share_config end ======================================

// === social_config begin ======================================
message SocialConfig {
  int32 broadcast_interval_time = 1; // 广播刷新时间
  repeated CharmLevelItem charm_level = 2;
  CharmTopConfig charm_top_config = 3;
  int32 marry_point = 4;
  string marriage_vow_head = 5;
  string marriage_vow_content = 6;
  string marriage_vow_foot = 7;
  string marry_reward_mail_title = 8;
  string marry_reward_mail_content = 9;
  repeated SnakeMain.Config.RewardConfig marry_rewards = 10;
  int32 world_speak_interval_time = 11;
  int32 world_speak_min_star = 12; // 世界发言最低星数
  int32 world_speak_min_star_v2 = 13; // 查看世界发言最低星数
  int32 group_speak_min_star = 14;
  SocialThreshold unlock_send_gift = 15; // 解锁送礼
  SocialThreshold unlock_clan = 16; // 解锁战队
  SocialThreshold unlock_world_chat = 17; // 解锁世界发言
}

message CharmTopConfig {
  string increase_desc = 1;
  int32 list_count = 2;
  int32 user_show_day = 3;
}

message CharmLevelItem {
  int32 charm_start = 1;
  string icon_url = 2;
  string icon_url_v2 = 3;
  int32 num = 4;
}

message SocialThreshold {
  SocialThresholdPlatform ios = 1; // ios 配置
  SocialThresholdPlatform android = 2; // android 配置
}

message SocialThresholdPlatform {
  int32 current_star = 1; // 当前段位需要达到的星数
  int64 history_max_length = 2; // 历史最高长度需要达到的长度
  string prompt = 3; // 错误提示
}

// === social_config end ======================================

// === charm_exp_config begin ======================================
message CharmExpConfig {
  repeated CharmExpRank charm_exp_ranks = 1; // 魅力勋章等级配置
  repeated CharmPrivilegeItem privilege_config = 2; // 特权配置
  string rule_url = 3; // 规则说明url
  string privilege_desc = 4; // 特权说明
  string charm_detail = 5; // 魅力勋章详情页
}

message CharmExpRank {
  int32 level = 1;
  string name = 2;
  string icon = 3;
  int32 need_exp = 4;
  repeated int32 privilege_ids = 5;
  string text_bg_url = 6; // 首页魅力勋章背景图
  int32 keep_exp = 7; // 勋章保留经验值，用于计算勋章升级
}

message CharmPrivilegeItem {
  int32 id = 1;
  string name = 2;
  string imgurl = 3;
  int32 min_level = 4;
  string desc = 5;
}
// === charm_exp_config end ======================================

// === text_config begin ======================================
message TextConfig {
  string charm_star = 1;
  string happycoin_title = 2;
  string coin_deal_notify = 3;
  repeated string share_text_list = 4;
  string qualifying_beta_rule = 5;
  string gift_rule = 6;
  string endless_tips = 7;
  GiftLikeTextList gift_like_text_list = 8;
  repeated ShortCutConfig quick_phrase_text_list = 9;
  repeated string ai_anchor_nickname_list = 10;
  repeated ReportBehavior report_behavior_list = 11;
  repeated ReportBehavior ad_report_behavior_list = 12;
  string follower_top_list_tips = 13;
  repeated string home_broadcast_scenes = 14; // 首页播报秀播报场景
}

message GiftLikeTextList {
  repeated string enemy = 1;
  repeated string partner = 2;
}

message ShortCutConfig {
  enum SceneType {
    invalidStatus = 0;
    SceneFriend = 1;
    SceneWorld = 2;
    SceneMatch = 3;
    SceneClan = 5;
    SceneCoupleMatch = 7;
    SceneRaceRoom = 8;
    SceneGoatGame = 9;
  }

  int32 type = 1;
  string name = 2;
  repeated string list = 3;
}


message ReportBehavior {
  int32 id = 1;
  string desc = 2;
}
// === text_config end ======================================

// === ui_config_v3 start =======================================
message UiConfigV3 {
  GameIcon endless_icon_v2 = 1;
  GameIcon qualifying_icon_v2 = 2;
  GameIcon left_corner = 3;
  GameIcon right_corner = 4;
  repeated GameIcon more_game = 5;
  NewbieCondition newbie_condition = 6;
  GameIcon endless_huge_icon = 7;
  int64 game_slide_interval_sec = 8;
  repeated GameIcon game_slide_list = 9;
  GameIcon endless_icon = 10;
  GameIcon qualifying_icon = 11;
  HomeBackground home_background = 12;
  GameIcon ar_icon = 13;
  GameIcon plant_icon = 14;
  string more_game_bgurl = 15;
  GameIcon fallguys_icon = 16;
  repeated LittleGameIcon little_game_icon = 17;
  GameIcon compose = 18;
  GameIcon couple_passcheck = 19;
  bool use_5275_icon_layout = 20; // 是否使用5275版本优化后的首页icon布局
  string teamendless_bgurl = 21; // 多人无尽按钮背景
  GameIcon points_champ_icon = 22; // 新春大赏入口 icon https://wepie.feishu.cn/docx/LFuLdbWnco1DjuxVi9AcRUdfnyc
}

message GameIcon {
  string url = 1;
  string lock_url = 2;
  string link = 3;
  Bubble bubble = 4;
  string support_version = 5;
  string text_imgurl = 6; // 文字底图
  string anim_url = 7; // icon 动效，引导动效
  int32 anim_type = 8; // 动效类型
  string vap_url = 9;
  int32 review_hide = 10; // 审核模式是否隐藏
  int32 newbie_hide = 11; // 对新手是否隐藏，1是，0否
  int32 model_hide = 12; // 0 全关 1 客户端判断机型
  int32 size_type = 13; // 大图0
  int32 game_mode = 14;
  string open_day_start = 15;
  string open_day_end = 16;
  int64 start_time = 17;
  int64 end_time = 18;
}

message LittleGameIcon {
  GameIcon game_icon = 1;
  string eid_dev = 2;
  string eid_online = 3;
  string e_flag = 4;
}

message Bubble {
  string url = 1; // 动画/图片链接
  int32 stay_second = 2; // 动画展示秒数
  int64 show_start = 3;
  int64 show_end = 4;
}

message NewbieCondition {
  int32 register_day = 1;
  int64 single_len = 2;
}

message HomeBackground {
  int32 anim_type = 1;
  string anim_src = 2;
  string static_imgurl = 3;
  string bottom_shadow_imgurl = 4;
  string skin_light_bg_imgurl = 5;
  string skin_floor_bg_imgurl = 6;
  string top_shadow_imgurl = 7;
  string left_shadow_imgurl = 8;
  int64 unity_home_bg = 9;
}

// === ui_config_v3 end =======================================


// === ping_config start =======================================
message PingConfig {
  int32 ping_strategy = 1;
  int32 new_ping_count = 2;
  double ping_loss_rate = 3;
  int32 ping_interval_time = 4;
  int32 ping_interval_count = 5;
  map<string, string> ping_ip_list = 6;
  int32 ping_count = 7;
  bool ping_interval_switch = 8;
}
// === ping_config end =======================================

// === reward_config start =======================================
message RewardMarkConfig {
  repeated RewardMark reward_marks = 1;
}

message RewardMark {
  int32 id = 1;      // 角标id
  string icon = 2;   // 角标图片
}
// === reward_config end =======================================

// === show_ad_config start =======================================
message ShowAdConfig {
  repeated AdRewardModel snake_coin_ad_config = 1;
  repeated AdRewardModel coupon_ad_config = 2;
  repeated AdRewardModel happycoin_ad_config = 3;
  repeated AdGoodsItem goods_list = 4;
  int32 iron_source_switch = 5;
  int32 ad_diamond_state = 6;
  int32 ad_relive_state = 7;
  int32 times = 8;
  int32 first_times = 9;
  int32 ad_chest_reduce_time = 10;
  int32 ad_snake_coin_state = 11;
  int32 double_snake_coin_state = 12;
  string single_add_buff_ui = 13;
  EndlessBuff endless_buff = 14;
  AdPopupsConfig ad_popups_config = 15;
  AdPopupsConfig android_ad_popups_config = 16;
  AdPopupsConfig ab_ad_popups_config = 17;
  repeated EndlessAdRecommend endless_checkout_recommend = 18;
  repeated EndlessAdRecommend noad_endless_checkout_recommend = 19;
  repeated EndlessAdRecommend melee_checkout_recommend = 20;
  map<string, int32> ad_percent = 21;
  CrossPromotions cross_promotions = 22;
  bool open_buy_link = 23; // 是否开启购买链接
  string buy_month_card_link = 24; // 购买月卡弹窗链接
  string buy_ad_card_link = 25; // 购买广告券弹窗链接
  string buy_toast = 26; // 购买弹窗toast
  string special_buy_toast = 27; // 特殊购买弹窗toast
  repeated string buy_toast_list = 28; // 购买弹窗toast列表
  repeated string special_buy_toast_list = 29; // 特殊购买弹窗toast列表
  string ad_act_set_link = 30; // 广告券合集活动跳转链接
  map<string, AdPopupsConfig> ab_ad_popups_configs = 31; // 广告弹窗 ab 实验配置合集
}

message CrossPromotions {
  repeated int32 strategy = 1;
  repeated CrossPromotionsSource source = 2;
}

message CrossPromotionsSource {
  string app_id = 1;
  string desc = 2;
  string download = 3;
  string id = 4;
  string rate = 5;
  string show = 6;
  string url = 7;
}

message EndlessBuff {
  int32 times = 1;
  int32 interval_times = 2;
  int32 protect_times = 3;
}

message PopupPosition {
  int32 times = 1;//首次弹出的局数
  int32 interval_times = 2;//弹出间隔局数
  int32 show_limit = 3;//每日展示上限
  int32 threshold = 4;
  int32 incr_times = 5;
}

message AdPopupsConfig {
  int32 popups_total_limit = 1;
  repeated string popus_order = 2; //重来时皮肤与buff都满足触发条件，优先顺序可配（默认皮肤优先）
  int32 end_popup_count = 3;
  repeated string end_popup_order = 4;
  repeated string new_end_popup_order1 = 5;
  repeated string new_end_popup_order2 = 6;
  int32 newbie_protect_day = 7;
  int32 trio_game_count = 8; //新用户首次允许弹出弹窗的局数（新手保护）
  map<string, PopupPosition> popup_position_config = 9;
}

message EndlessAdRecommend {
  int32 item_id = 1;//id
  int32 anim_type = 2;//通用动画类型,1:图片,5:视频
  string anim_url = 3;//动画链接
  string link = 4;//通用跳转链接
  int32 probability = 5;//权重
}

message AdRewardModel {
  int32 cold_time = 1;
  int32 index = 2;
  int32 num = 3;
  int32 type = 4; //货币类型
  int32 happycoin = 5;
}

message AdGoodsItem {
  int32 diamond = 1;
  string apple_product_id = 2;
  int32 goods_id = 3;
  int32 goods_price = 4;
  string goods_name = 5;
}
// === show_ad_config end =======================================

// === order_config start =======================================
message OrderConfig {
  repeated int32 alive_popup_order = 1;
  int32 iapppay_switch = 2;
  string service_contact = 3;
  repeated RMBPackGoodsInfo pack_goods_list = 4;
  repeated int32 alive_pack_popup = 5;
  repeated RMBPackGoodsInfo diamond_goods_list = 6;
  FirstChargePopup first_charge_popup = 7;
  repeated RMBPackGoodsInfo red_pack_goods_list = 8;
  repeated int32 excite_popup_order = 9;
  int32 need_bind = 10;
  RandomDoubleClientInfo random_double_client_info = 11; // 需要返回给客户端的数据
  AlipayDiscount alipay_discount = 12;
}

message AlipayDiscount {
  int64 start_time = 1;
  int64 end_time = 2;
  string copy_writing = 3;
}

message FirstChargePopup {
  int32 range = 1;
  int32 count = 2;
}

message RandomDoubleClientInfo {
  string title_imgurl = 5;
}
// === order_config end =======================================

// === unity_qualifying_open_config start =======================================
message UnityQualifyingOpenConfig{
  repeated int32 weekdays = 1;
  string day_start_time = 2;
  string day_end_time = 3;
  repeated string markets = 4;
  repeated string versions = 5;
  int32 relay_type = 6; // 控制游戏内是原生还是 unity 团战，0 表示 unity，1 表示原生
}
// === unity_qualifying_open_config end =======================================


// === top_list_config start =======================================
message TopListConfig {
  repeated string province_list = 1;
  string user_top_list_reset_tips = 2;
  string clan_top_list_reset_tips = 3;
  string qualifying_top_list_reset_tips = 4;
}
// === top_list_config end =======================================






// === show_config begin ======================================
message ShowConfig {
  repeated ShowLevelConfig level_config = 1;
  repeated ShowSkillName skill_name = 2;
  string intro_v2 = 3;
  string addition_intro = 4;
  string intro = 5;
  repeated ShowIconStyle icon_style = 6;
  repeated ShowPackItem pack_config = 7;
  int32 pack_pop_cd_sec = 8;
}

message ShowPackItem {
  int32 show_level = 1;
  int32 effect_sec = 2;
  SnakeMain.Config.PackModel pack_info = 3;
}

message ShowIconStyle {
  int32 num = 1;
  string img_url = 2;
}

message ShowLevelConfig {
  string game_skill = 1;
  repeated SnakeMain.Config.RewardConfig reward = 2;
  string thumbnail = 3;
  string thum_anim_url = 4;
  string icon_url = 5;
  string anim_url = 6;
  int32 total_show = 7;
  int32 level = 8;
  repeated ShowSkillBuff game_skill_list = 9; // 不返回客户端
  string show = 10;
}

message ShowSkillName {
  int32 skill_type = 1;
  string name = 2;
}

message ShowSkillBuff {
  int32 skill_type = 1;
  string value = 2;
  string value_text = 3;
}
// === show_config end ======================================

// === user_config begin ======================================
message UserConfig {
  int32 gender_cost = 1; //性别修改需要的苹果数量
  string certify_url = 2; // 实名认证 url 地址
  int32 cache_clean_switch = 3; //1开2关
  int32 snake_coin_limit = 4; // 彩豆周上限
  string single_text_config = 5; // 单机右上角文案说明
  string qualifying_text_config = 6; // 团战右上角文案说明
  string clan_text_config = 7; // 战队赛结算右上角文案说明
  repeated DeviceConfig abnormal_store = 8;
  string zhi_token_url2 = 9; // 吱口令
  int32 send_red_pack_need_care = 10; // 红包守护值
  string upload_avatar_tips = 11; // 上传头像奖励
  int32 start_endless_flag = 12; // 是否首页直接进无尽，0否1是
  repeated int32 home_login_days = 13;//新用户第多少天登录 首次回首页后弹登录
  int32 nickname_home_count = 14;//新用户第三天登录 多少次回首页后弹改名
  AntiAddiction anti_addiction = 16;
  int32 online_interval_seconds = 17;
  GameEndSkin game_end_skin = 18;
  repeated string workday_list = 19;
  repeated string holiday_list = 20;
  RenamePopupRule rename_popup_rule = 21;
  BindConfig bind_config = 22;
  SettingConfig setting_conf = 23;
  FeedbackConfig feedback = 24;
  FlagsConfig flags = 25;
  repeated SnakeMain.Config.RewardConfig certify_reward = 26;
  RegisterSurvey register_survey = 27;
  RecruitPopup recruit_popup = 28;
  MinorLimit minor_limit = 29;
  string login_limit_msg = 30;
  string age_tips_text = 31;
  string certify_reward_image = 32;  // 实名认证奖励图片
  NewUserConfig new_user_config = 33;
  int32 open_cp_button = 34; // 是否开启cp背景更换按钮，1为开
  int32 alipay_certify = 35;
  int32 channel_login_flag = 36;
  CommentConfig comment_config = 37; // 评论配置
  int32 login_page_flag = 38;
  string contact_text = 39;
  int32 login_home_count = 40;
  UnityFlags unity_flags = 41;
  int32 use_topon = 42;
  IdfaConfig idfa_config = 43; // ios idfa 弹窗配置
  int32 visitor_flag = 44;
  int32 third_failed_visitor_flag = 45;
  repeated string third_failed_visitor_market = 46;
  int32 relive_pack_auto_pop_count = 47;
  string certify_vedio_url_v2 = 48; // 实名认证视频链接
  string certify_reward_image_v2 = 49; // 实名认证奖励图片
  repeated SnakeMain.Config.RewardConfig certify_reward_v2 = 50; // 实名认证奖励
}

message UnityFlags {

}

message MinorLimit {
  int32 max_age = 1;//小于这个18值的是未成年
  int32 hide_game_voice = 2; //1隐藏
  int32 hide_friend_rank = 3; //1隐藏
  OrderCurator order_curator = 4;
}

message OrderCurator {
  string link = 1;
  int32 need = 2; //1要弹
}

message FlagsConfig {
  int32 visitor_flag = 1;
  int32 delete_array_oes = 2;
  int32 first_blood_sound_effect = 3; //1是新音效，0默认音效
  int32 open_wedding_list_anim = 4; // 是否开启教堂婚礼列表动画
  int32 tcp_push_stash = 5; //是否开启暂存
  int32 open_goto_unity_endless = 6;
  int32 old_single_game_settle = 7;
  int32 sg_end_ui_flag = 8;
  int32 sigmob_delay = 9;
  int32 close_off_screen_rendering = 10;
  int32 memory_dot_delay = 11;
  int32 gl_check_app_state = 12;
  int32 ios_optimize_home_skin_flag = 13;
  int32 channel_social_huawei_state = 14;
  int32 channel_social_oppo_state = 15;
  int32 channel_social_vivo_state = 16;
  int32 new_image_chooser = 17;
  int32 close_native_operator_flag = 18;
  int32 downloader_state = 19;
  int32 downloader_pause_state_v2 = 20;
  int32 close_video_metal_render = 21;
  int32 jsbridge_stop_handle_special_charater = 22;
  int32 oppo_login_flag = 23;
  int32 oppo_login_retry_count = 24;
  int32 enable_webveiw_copy_file_to_temp = 25;
  int32 open_game_profiler = 26;
  int32 disable_invisible_memory_reclamation = 27;
  int32 yyb_tobid_ad_switch = 28;
  int32 not_show_idfa = 29;
  int32 silence_download = 30;
  int32 chat_backup = 31; // 聊天备份, 默认0为不备份
  int32 unity_endless_v2 = 32; // 是否开启复刻unity无尽
  int32 new_pay_api = 33; // unity是否使用新支付接口
  int32 open_certify_guide_v2 = 34; // 是否开启实名认证 & 新手引导v2
  int32 open_endless_spring_bgm = 35; // 是否开启无尽春节背景音乐
  int32 open_teamgame_spring_bgm = 36; // 是否开启团战春节背景音乐
  int32 open_teamendless_spring_bgm = 37; // 是否开启多人无尽春节背景音乐
  int32 open_endless_adapt_low_device = 38; // 是否开启适配低端设备
  int32 open_unity_voice_room = 39; // 是否开启unity语音房
  int32 use_tobid_ad = 40; // ios双聚合广告选择开关
  int32 open_snake_area_toast = 41; // 游戏内提示地域榜弹窗实验
  int32 gift_anim_single_flag = 42; // 礼物动效 0：同时播放多个 1：同时只能播放一个
  int32 join_snake_area_team = 43; // 今天是否进入过蛇蛇小队
  int32 team_endless_new_icon = 44; // 双人无尽新图标，0：不显示 1：显示
}

message FeedbackConfig {
  int32 switch = 1;
  string version = 2;
  int32 register_days = 3;
  int32 play_count = 4;
  int32 score = 5;
  int32 limit = 6;
}

message SettingConfig {
  int32 game_multi_trans = 1;
  bool enable_volc = 2;
  bool enable_koom = 3;
  bool native_crash_report = 4;

  DocVersion doc_version = 5;
  NetworkCheck network_check = 6;
  Prometheus prometheus = 7;
  OkhttpDispatcher okhttp_dispatcher = 8;
  MemSwitch mem_switch = 9;
}

// 用户协议、隐私政策、未成年声明
message DocVersion {
  string agreement = 1;
  string privacy = 2;
  string announce = 3;
  string info_sharing_list = 4;
  string personal_info = 5;
}

message NetworkCheck {
  string resource = 1;
  string target = 2;
  int32 open = 3; //1开0隐藏
}

message Prometheus {
  int32 batch = 1;
  int32 bitmap_mem_threshold = 2;
  bool enabled = 3;
}

message OkhttpDispatcher {
  int32 queue_capacity = 1;
  int32 keep_live_time = 2;
}

message MemSwitch {
  bool rgb565_enabled = 1;
  bool rgb565_transform = 2;
  bool image_bg_opt = 3;
  bool anim_report_enabled = 4;
  bool fix_start_page_mem_leak = 5;
  double anim_sample_rate = 6;
}

message BindConfig {
  string bg_url = 1;
  int32 can_close = 2;
}

message RenamePopupRule {
  NewbieClub newbie_club = 1;
  QualifyingMatch qualifying_match = 2;
}

message QualifyingMatch {
  int32 limit = 1;
}

message NewbieClub {
  int64 interval = 1;
  int32 limit = 2;
}

message GameEndSkin {
  string notice_url = 1; //气泡图
  string link = 2; //跳转库
}

message DeviceConfig {
  string model = 1;//手机型号(MODEL)
  string product = 2;//当前手机品牌(PRODUCT)
  string brand = 3;//手机厂商(BOARD)
  string manufacturer = 4;//设备制造商(MANUFACTURER)
}

message AntiAddiction {// 防沉迷配置
  Notify notify = 1;
  MinorNotify minor_notify = 2; // 14岁以上未成年防沉迷配置
  string safe_game_notify = 3;
  PayNotify pay_notify = 4;
  SocialDesc social_desc = 5;
  IdentityAge identity_age = 6;
  CertifyNotify certify_notify = 7;
  string certify_url = 8;
  MinorNotify infant_notify = 9; // 12岁以下防沉迷配置，已废弃
  int32 need_certify = 10; // 实名开关，已废弃
}

message Notify {
  repeated CertifyGameConfig uncertified = 1;
  repeated CertifyGameConfig minor = 2;
}

/**
 * game_time : 10800
 * msg : 【健康系统】您今日的累计游戏时间已经超过3小时，为了您的健康，请您下线休息，做适当身体活动，注意劳逸结合。
 */
message CertifyGameConfig {
  int32 game_time = 1;
  string msg = 2;
  int32 interval_time = 3;
}

/**
 * "login_text": "为空则没有宵禁","begin": "22:00","end": "08:00",
 *         "workday_active": 3600,"holiday_active": 10800,"active_text": "超时提醒",
 *         "active_notice": "剩余活跃时间提醒{remain}占位","notice_interval": 1800
 */
message MinorNotify {
  string login_text = 1;
  string begin = 2;
  string end = 3;
  int32 workday_active = 4;
  int32 holiday_active = 5;
  string active_text = 6;
  string active_notice = 7;
  int32 notice_interval = 8;
  int32 addicted_flag = 9; //防沉迷开关 0关闭，1打开
  string title = 10;
  int32 active_time = 11;
}

message PayNotify {
  string minor = 1;
  int32 certify_flag = 2; //0不弹窗，1弹窗可充值，2弹窗不可充值
}

message SocialDesc {
  string broadcast = 1;
  string world = 2;
  string friend = 3;
  string clan = 4;
}

message IdentityAge {
  int32 minor = 1;
  int32 infant = 2;
}

message CertifyNotify {
  int32 active_limit = 1;
  int32 interval = 2;
  int32 limit = 3;
  int32 flag = 4; // 0不弹，1弹窗可关，2弹窗不可关
  repeated string ignore_market = 5;
  repeated string force_market = 6;
}

message IdfaConfig {
  repeated SnakeMain.Config.RewardConfig reward = 1;
  string ios_version = 2;
  bool force = 3;
  int32 login_count = 4;
  int32 first_pop = 5;
  int32 interval = 6;
}

message CommentConfig {
  int32 score = 1;
  int32 switch_state = 2;
}

message RegisterSurvey {
  int32 switch = 1; //1开0关
  int64 score = 2; //分数条件
  int32 new_user_day = 3; //注册多少天内算新手
  string qa_url = 4; //问卷链接，需替换 {uid}
  string mail_title = 5;
  string mail_content = 6;
  repeated SnakeMain.Config.RewardConfig reward = 7;
  string secretary_msg = 8;
  repeated int32 survey_ids = 9;
}

message RecruitPopup {
  int32 switch = 1;//1开0关
  int64 play_count = 2;//局数条件
  int64 score = 3;//分数条件
  string qa_url = 4;//问卷链接，需替换 {uid}
  int32 id = 5;// 期数
  string banner_url = 6;
  int32 screen_share = 7;
  string secretary_msg = 8;
  string unity_banner_link = 9;
}

/**
* "new_user_config": {
 *     "player_eat_food_rate_change_scope": 200,
*     "player_eat_food_count_for_increase_node": 10,
 * 		"eat_food_rate_change_scope": 200,
*     "eat_food_count_for_increase_node": 10,
 *     "guide_candy_total_count": 100, //新手引导糖果总个数
 *   	"guide_candy_score": 100, //新手引导糖果分数
 *     "free_revive_game_count": 5, //新手无尽前几局每局第一次免费复活
 *   }
 */
message NewUserConfig {
  int32 player_eat_food_rate_change_scope = 1;
  int32 player_eat_food_count_for_increase_node = 2;
  int32 eat_food_rate_change_scope = 3;
  int32 eat_food_count_for_increase_node = 4;
  int32 guide_candy_total_count = 5;
  int32 guide_candy_score = 6;
  int32 free_revive_game_count = 7;
  int32 newbie_login_days = 8;
  int32 newbie_qualifying_count = 9;
  int32 newbie_endless_count = 10;
  int32 guide_type = 11;
  string new_user_img = 12;
  string old_user_img = 13;
  repeated SnakeMain.Config.RewardConfig guide_reward = 14;
  int32 guide_skip_flag = 15; // 0关1开 新手引导流程修改实验开关
}
// === user_config end ========================================

// === offline_game_config start ========================================
message ReviveConfigItem {
  int32 ad_revive = 1;
  int32 card_revive = 2;
  int32 diamond_revive = 3;
}

message SingleGameAiConfigItem {
  int64 start_length = 1;
  double border_dis_factor = 2;
  double snake_dis_factor = 3;
  double wreck_dis_factor = 4;
  double ai_snake_view_angle = 5;
}

message FloaterConfigOld {
  repeated int32 born_len = 1;
  int32 born_count = 2;
  int32 born_count_v2 = 3;
  int32 born_radius = 4;
  int32 floater_score = 5;
  int32 interval_time = 6;
  repeated int32 born_len2 = 7;
  int64 max_count = 8;
  string desc = 9;
  string svga_url = 10;
  string imgurl = 11;
  string reward_img = 12;
  int64 refresh_type = 13;
}

message ActivityMapConfig {
  int64 start_time = 1;
  int64 end_time = 2;
  int32 new_map_theme_id = 3;
}

message EndlessLimitConfig {
  int64 ios_length_endless_limit_1 = 1;
  int64 ios_length_endless_limit_2 = 2;
  double ios_length_endless_time_limit_1 = 3;
  double ios_length_endless_time_limit_2 = 4;
  int64 android_length_endless_limit_1 = 5;
  int64 android_length_endless_limit_2 = 6;
  double android_length_endless_time_limit_1 = 7;
  double android_length_endless_time_limit_2 = 8;
  int64 ios_kill_endless_limit_1 = 9;
  int64 ios_kill_endless_limit_2 = 10;
  double ios_kill_endless_time_limit_1 = 11;
  double ios_kill_endless_time_limit_2 = 12;
  int64 android_kill_endless_limit_1 = 13;
  int64 android_kill_endless_limit_2 = 14;
  double android_kill_endless_time_limit_1 = 15;
  double android_kill_endless_time_limit_2 = 16;
}

message EndlessBubbleConfig {
  int64 start_time = 1;
  int64 finish_time = 2;
  string link = 3;
}

message EndlessTrackConfig {
  int32 start_len = 1;
  int32 interval_len = 2;
  int32 interval_second = 3;
}

message WildStormListItem {
  int32 duration = 1;
  double speed_rate = 2;
}

message WildStormConfig {
  double max_speed_rate = 1;
  repeated WildStormListItem wild_storm_list = 2;
}

message OfflineGameConfig {
  int32 big_snake_rate = 1;
  int32 medium_snake_rate = 2;
  int32 relive_length_limit = 3;
  int32 relive_need_diamond = 4;
  int32 snake_direction = 5;
  int32 twice_relive_diamond = 6;
  int32 twice_relive_length = 7;
  repeated ReviveConfigItem endless_revive_config = 8;
  repeated ReviveConfigItem endless_revive_config_ab1 = 9;
  repeated ReviveConfigItem endless_revive_config_ab2 = 10;
  repeated ReviveConfigItem excite_revive_config = 11;
  repeated ReviveConfigItem limit_revive_config = 12;
  int32 voice_broadcast = 13;
  int32 use_ai_v3 = 14;
  int32 new_kill_broadcast = 15;
  int32 new_map = 16;
  int32 recover = 17;
  FloaterConfigOld floater_config = 18; // 貌似已经废弃，移到到ai_config_v3配置里了
  EndlessLimitConfig endless_limit_config = 19;
  ActivityMapConfig activity_map_config = 20;
  EndlessBubbleConfig endless_bubble = 21;
  EndlessTrackConfig endless_track = 22;
  WildStormConfig wild_storm = 23;
  EndLessBuffPropInfo  endless_buff_prop = 24;
  int32 anthap_shake = 25; // 震动开关
  bool open_unity_endless_black_hole = 26; // 是否开启 unity 无尽黑洞
}

// === offline_game_config end ========================================

// === mentorship_config start ========================================
message MentorshipConfig {
  repeated MentorPrivilegeInfo master_privilege_config = 1;
  repeated MentorshipBondTitleItem bond_title_config = 2;
  MentorFinishReward finish_reward = 3;
  repeated MasterPrenticeStrategyItem master_prentice_strategy = 4;
  int32 master_star_limit = 5;
  int32 break_hour_limit = 6;
  int32 mentorship_open = 7;
}

message MentorPrivilegeInfo {
  string title = 1;
  int32 level = 2;
  int32 level_exp = 3;
  string title_img = 4;
  int32 anim_type = 5;
  int32 addition = 6; // 名师加成百分比1～100
  repeated PrivilegeDetailInfo privilege = 7; // 当前名师等级特权配图
  repeated SnakeMain.Config.RewardConfig reward_list = 8; // 名师特权奖励
}

message PrivilegeDetailInfo {
  string img_url = 1;
  string desc = 2;
}

message MentorshipBondTitleItem {
  int64 fade_time = 1;  // 褪色时间(s)
  int32 bond_level = 2;  // 羁绊等级
  int32 bond_level_exp = 3;  // 羁绊等级对应经验值
}

message MentorFinishReward {
  repeated SnakeMain.Config.RewardConfig master_reward = 1;
  repeated SnakeMain.Config.RewardConfig prentice_reward = 2;
}

message MasterPrenticeStrategyItem {
  string title = 1;
  string img = 2;
}
// === mentorship_config end ========================================

// === hot_config start ========================================
message HotConfig {
  int32 market_state = 1;
  string sub_config = 2; // 小秘书配置
  string unity_loading_url = 3; // unity loading配置资源包
}
// === hot_config end ========================================

// product_config start =========================================
message ProductConfig {
  SnakeMain.Config.Property property = 1;
  SnakeMain.Config.CurrencyStore currency_store = 2;
  repeated SnakeMain.Config.MiddleItem middle_item_list = 3; // 中间道具配置
  SnakeMain.Config.DrawCardGuideConfig draw_card_guide_config = 4;
  SnakeMain.Config.StoreConfig store_config = 5; // proto商店配置
}
// product_config end =========================================

// wedding_config start
message WeddingConfig {
  int64 force_divorce_need_diamond = 1;
  string contact = 2;
  repeated WeddingTemplate template_list = 3;
  repeated WeddingTemplate limited_template_list = 4;
  string template_url = 5;
  repeated WeddingMusic music_list = 6;
  string music_url = 7;
  repeated string text_list = 8;
}

message WeddingTemplate {
  string imgurl = 1;
  string name = 2;
  int64 template_id = 3;
  int64 version = 4;
}

message WeddingMusic {
  string name = 1;
  int64 music_id = 2;
}
// wedding_config end

// happy_mode_config start
message HappycoinConfig {
  int64 happycoin_id = 1;
  int64 happycoin = 2;
  int64 free_happycoin = 3;
  int64 cost_diamond = 4;
  string imgurl = 5;
  string free_imgurl = 6;
}

message LengthFee {
  int64 length = 1;
  int64 fee = 2;
}

message HappyModeRace {
  int64 race_id = 1;
  string name = 2;
  int64 entrance_fee = 3;
  int64 low_limit = 4;
  int64 upper_limit = 5;
  string img_url = 6;
  repeated LengthFee length_config = 7;
  int64 hide_nick_name = 8;
}

message LowIncomeConfig {
  int64 num = 1;
  int64 happycoin = 2;
}

message HappyModeTitleConfig {
  int64 start_num = 1;
  int64 rank = 2;
  string name = 3;
  string bg_index = 4;
}

message HappyModeConfig {
  repeated HappycoinConfig happycoin_list = 1;
  LowIncomeConfig low_income_config = 2;
  repeated HappyModeRace race_config = 3;
  repeated HappyModeTitleConfig title_config = 4;
  RaceTimeConfig race_time_config = 5;
}
// happy_mode_config end

// ai_config_v3 start
message StarSnakeItem {
  int64 start_time = 1;
  int64 end_time = 2;
  int32 skin_id = 3;
  string nickname = 4;
  int32 ks_id = 5;
  int32 use_probability = 6;
  string limit_version = 7;
}

message StarSnake {
  int32 max_rank = 1;
  int32 min_rank = 2;
  int32 probability = 3;
  int32 snake_num = 4;
  repeated StarSnakeItem snake_list = 5;
}

message AiWreckNodeScoreRange {
  int32 ai_body_node = 1;
  int32 wreck_score = 2;
}

message AiLevel {
  int32 level = 1;
  float border_dis_factor = 2;
  float snake_dis_factor = 3;
  float wreck_dis_factor = 4;
  float ai_snake_view_angle = 5;
  float floater_dis_factor = 6;

  float speedup_rate = 7;
  float speedup_time = 8;
  float change_direction_rate = 9;

  float attack_border_dis_factor = 10;
  float attack_snake_dis_factor = 11;
  float attack_wreck_dis_factor = 12;
  float attack_ai_snake_view_angle = 13;

  float attack_circle_dis_factor = 14;
  float attack_rate = 15;
  float attacking_score = 16;
  float delay_direction_rate = 17;
  float attack_floater_dis_factor = 18;

  repeated AttackTime attack_times = 19;

  float wreck_rate = 20;
  float wreck_born_rate = 21;
  float wreck_score_rate = 22;
}

message AttackTime {
  int32 time = 1;
  int32 weight = 2;
}

message AiLevelWeight {
  int32 level = 1;
  int32 weight = 2;
}

message AiLengthRange {
  int64 min_length = 1;
  int64 max_length = 2;
  int32 initial_count = 3;
  int32 max_count = 4;
  repeated AiLevelWeight level_list = 5;
  int32 weight = 6;
}

message FloaterConfig {
  repeated int32 born_len = 1;
  int32 born_count = 2;
  int32 born_count_v2 = 3;
  int32 born_radius = 4;
  int32 floater_score = 5;
  int32 interval_time = 6;
  repeated int64 born_len2 = 7;
  int32 max_count = 8;
  string desc = 9;
  string svga_url = 10;
  string imgurl = 11;
  string reward_img = 12;
  int32 refresh_type = 13;
}

message AiDifficultyConfig {
  int32 level = 1;
  float start_score = 2;
  float end_score = 3;
  int64 promotion_length = 4;
  repeated AiLengthRange ai_length_range = 5;
  AiBorn ai_born = 6;
}

message AiBornPool {
  int32 id = 1;
  int64 min_length = 2;
  int64 max_length = 3;
  int32 max_count = 4;
  repeated AiLevelWeight level_list = 5;
}

message ScorePool {
  int64 min_score = 1;
  int64 max_score = 2;
  int32 ai_count = 3;
  repeated ScorePoolItem pool_list = 4;
}

message ScorePoolItem {
  int32 id = 1;
  int32 weight = 2;
}

message AiBorn {
  repeated AiBornPool ai_born_pools = 1;
  repeated ScorePool score_pools = 2;
  float score_weight = 3;
  float time_weight = 4;
  float get_score_speed = 5;
  int32 score_refresh_time = 6;
  float init_level_score = 7;
  float k_pow = 8;
  float k_min_limit = 9;
  float k_max_limit = 10;
}

message BonusTriggerCondition {
  int32 score_show_progress = 1;
  int32 score_show_door = 2;
  int32 bonus_duration = 3;
  int32 bonus_food_level = 4;
  int32 open_door_type = 5;
}

message BonusFood {
  int32 food_type = 1;
  int32 food_score = 2;
  int32 food_weight = 3;
  int32 food_size = 4;
}

message HoleFood {
  repeated BonusFood food_list = 1;
  int32 food_add_interval = 2;
  int32 food_add_count = 3;
  int32 food_position_min_radius = 4;
  int32 food_position_max_radius = 5;
}

message DotFood {
  int32 count = 1;
  int32 score = 2;
}

message BonusFoodLevel {
  int32 level = 1;
  HoleFood hole_food = 2;
  DotFood dot_food = 3;
}

message BonusLevel {
  int32 bonus_level = 1;
  repeated AiLevelWeight bonus_ai_level_list = 2;
}

message BonusLevelSettings {
  int32 use_bonus_ai = 1;
  int32 default_bonus_level = 2;
  repeated BonusLevel bonus_levels = 3;
}

message EndlessBonusNew {
  int32 open_bonus = 1;
  MapBorder map_border = 2;
  repeated BonusTriggerCondition bonus_trigger_condition = 3;
  int32 ai_snake_max_move_distance = 4;
  int32 ai_snake_enter_bonus_score = 5;
  int32 ai_snake_enter_bonus_count = 6;
  int32 ai_snake_enter_bonus_time = 7;
  int32 ai_snake_leave_bonus_min_time = 8;
  int32 ai_snake_leave_bonus_max_time = 9;
  repeated BonusFoodLevel bonus_food_level_list = 10;
  BonusLevelSettings bonus_level_settings = 11;
}

message SpringSugarInfo {
  int64 start_time = 1;
  int64 end_time = 2;
  repeated BonusFood food_list = 3;
}

message MapBorder {
  int32 door_open_animation_duration = 1;
  int32 door_close_animation_duration = 2;
  int32 door_close_warning_time = 3;
  float door_width = 4;
  int32 map_visible_distance = 5;
  int32 map_invisible_duration = 6;
}

message AiNickListItem {
  string id = 1;
  repeated string ai_nick_list = 2;
}

message AiSkinListItem {
  string id = 1;
  repeated int64 ai_skin_list = 2;
}

message AiConfigV3 {
  StarSnake star_snake = 1;
  float map_rate = 3;
  float camera_max_factor = 4;
  float camera_min_factor = 5;
  float eat_food_rate_change_scope = 6;
  float eat_food_count_for_increase_node = 7;
  float player_eat_food_rate_change_scope = 8;
  float player_eat_food_count_for_increase_node = 9;
  float ai_born_length_limit_rate = 10;
  float ai_wreck_convert_rate = 11;
  float revive_weaken_percent = 12;
  int64 length_camera_param = 14;
  int64 length_width_param = 15;
  float eat_food_rate_change_scope_low = 20;
  float eat_food_count_for_increase_node_low = 21;
  repeated AiWreckNodeScoreRange ai_wreck_node_score_range = 22;
  repeated AiWreckNodeScoreRange ai_wreck_node_score_range_low = 23;
  repeated AiLevel ai_level_list = 24;
  repeated AiLengthRange ai_length_range = 25;
  FloaterConfig floater_config = 26;
  repeated AiDifficultyConfig ai_difficulty_config_list = 27;
  EndlessBonusNew endless_bonus_new = 29;
  int64 born_length = 31;
  int32 min_born_kill = 32;
  int32 max_born_kill = 33;
  int32 born_kill = 34;
  SpringSugarInfo spring_sugar_info = 35;  // 春节糖果信息
  int64 is_anchor = 36;
  repeated AiNickListItem ai_nick_lists = 37;
  string ai_nick_list_id = 38;
  int64 ai_nick_num = 39;
  repeated AiSkinListItem ai_skin_lists = 40;
  string ai_skin_list_id = 41;
  int64 ai_skin_num = 42;
  int64 direction_limit = 43;
}

// ai_config_v3 end

message LimitAiConfigV3 {
  AiConfigV3 base = 1;
  int64 limit_time = 2; // 限制时间
}


// =====  system_config start  =======
message GameConfig {
  int64 beta_flag = 1;     // 0:未开启，1:正式开启：2:公测中, 3:入口屏蔽
  int64 process_flag = 2;  // 0:主进程，1:独立进程
  string start_time = 3;   // 开始时间，格式：01：00
  string end_time = 4;     // 结束时间
  int64 star_limit = 5;
  int64 use_mode_version = 6;
  int64 rate = 7;
}

message SystemConfig {
  map<string, GameConfig> game_configs = 1;     // key: game_mode
  map<string, bool> endless_exp = 2;            // 无尽难度实验白名单
  map<string, bool> ol_endless_pk = 3;          // 多人无尽比赛模式名单
  map<string, bool> voice_room_uids = 4;        // 语音房白名单
  map<string, bool> telephone_black_list = 5;   // 手机号黑名单
  map<string, bool> idcard_black_list = 6;      // 身份证黑名单
  map<string, bool> voice_white_owner_list = 7; // 主播白名单
  map<string, bool> ol_endless_entrance = 8;    // 无尽对决白名单
  map<string, bool> ios_shake = 9;              // iOS震动白名单
}
// ======  system_config end  =========



// ==========  reward_config start  =======
message RewardConfig {
  int64 directly_share_switch = 1;
  int64 invite_per_reward = 2;
  int64 invite_reward_day_limit = 3;
  int64 invite_total_reward = 4;
  string money_reward_contact = 5;
  repeated RegisterReward register_reward = 6;
  int64 share_per_reward = 7;
  int64 share_reward_day_limit = 8;
  int64 share_reward_week_limit = 9;
  int64 wechat_appeal_switch = 10;
  string wechat_qr_code_url = 11;
  int64 wechat_reward_coin = 12;
}

message RegisterReward {
  string bg_img = 1;
  string gif_img = 2;
  string source = 3;
}
// ==========   reward_config end  ========



//  ===== interface_expire  start  =======
message InterfaceExpire {
  ActivityAPI activity_api = 1;
  ClanAPI clan_api = 2;
  ExpireConfig config = 3;
  EventAPI event_api = 4;
  FriendAPI friend_api = 5;
  InboxAPI inbox_api = 6;
  NearbyAPI nearby_api = 7;
  ScoreAPI score_api = 8;
  ShareAPI share_api = 9;
  TopListV2 top_list_v2 = 10;
  VoiceRoomAPI voice_room_api = 11;
}
message ActivityAPI {
  int64 get_activity_list = 1;
  int64 get_latest_activity = 2;
}

message ClanAPI {
  int64 get_clan_info = 1;
  int64 get_clan_member_list = 2;
}

message ExpireConfig {
  int64 get_beta_state = 1;
}

message EventAPI {
  int64 get_event_list = 1;
  int64 get_event_list_v2 = 2;
}

message FriendAPI {
  int64 get_friend_list = 1;
}

message InboxAPI {
  int64 get_mail_list = 1;
}

message NearbyAPI {
  int64 get_nearby = 1;
}

message ScoreAPI {
  int64 get_prime_info = 1;
  int64 get_rank = 2;
  int64 get_user_score_info = 3;
}

message ShareAPI {
  int64 get_share_info = 1;
}

message TopListV2 {
  int64 get_clan_top_list = 1;
  int64 get_clan_top_list_v2 = 2;
  int64 get_excite_top_list = 3;
  int64 get_marry_top_list = 4;
  int64 get_skin_top_list = 5;
  int64 get_top_list = 6;
  int64 get_top_list_v2 = 7;
}

message VoiceRoomAPI {
  int64 get_config = 1;
}
//  ===== interface_expire  start  =======




// =========   ms_config start   ========
message MsConfig {
  int64 hb_rate = 1;
  repeated string log_relay = 2;
  repeated MsAddr ms_addr = 3;
  repeated MsAddr ms_addr2 = 4;
  int64 relay_hb_rate = 5;
}
message MsAddr {
  string host = 1;
  int64  port = 2;
  string host_bak = 3;
}
// ========  ms_config end  ==========




// ==========   province_config start ========
message ProvinceConfig {
  repeated string province_list = 1;
  repeated string province_pinyin_list = 2;
}
// ==========   province_config end ========




// ========   excite_mode_config  start  ===========
message ExciteModeConfig {
  repeated int64 ad_hat_popup = 1;
  repeated GamePropList game_prop_list = 2;
  repeated GamePropList game_prop_list2 = 3;
  ParamConfig param_config = 4;
  int64 life_ab_test = 5;
  repeated string text_config = 6;
  ModeGameConfig game_config = 7;
}
message GamePropList {
  string desc = 1;
  string effect_desc = 2;
  repeated ModeLevelInfo level_info = 3;
  string name = 4;
  int64 prop_id = 5;
  string upgrade_desc = 6;
}
message ModeLevelInfo {
  int64 cost_goldcoin = 1;
  double effect = 2;
  int64 level = 3;
}

message ParamConfig {
  InGame in_game = 1;
  repeated PropRate prop_rate = 2;
  RateConfig rate_config = 3;
  int64 relive_limit = 4;
}
message InGame {
  int64 combo_interval = 1;
  double eat_efficiency = 2;
  int64 max_prop_num = 3;
  repeated int64 speed_up_reduce = 4;
}

message PropRate {
  int64 AI = 1;
  int64 map = 2;
  int64 prop_id = 3;
  int64 stone = 4;
}

message Ai {
  double K = 1;
  double boss = 2;
  double normal = 3;
  double special = 4;
}

message Map {
  int64 cycle_time = 1;
  int64 num = 2;
}

message Stone {
  double rate = 1;
}

message RateConfig {
  Ai AI = 1;
  Map map = 2;
  Stone stone = 3;
}

message ModeGameConfig {
  repeated AiLevelList ai_level_list = 1;
  double eat_efficiency = 2;
  int64 food_count = 3;
  int64 helmet_limit_count = 4;
  int64 map_height = 5;
  int64 map_width = 6;
  int64 prop_fury_electricity = 7;
  int64 prop_kill_fury = 8;
  SelfElectricityConfig self_electricity_config = 9;
  int64 self_start_len = 10;
  ShockConfig shock_config = 11;
  int64 speed_up_reduce = 12;
  repeated StageConfigs stage_configs = 13;
  int64 stone_count = 14;
  int64 stone_relive_time = 15;
}
message AiLevelList {
  double brain_attack_chosen_per_frame_rate = 1;
  double brain_attack_circle_inner_radius = 2;
  int64 brain_attack_circle_outer_radius = 3;
  repeated BrainAttackTime brain_attack_time = 4;
  int64 brain_visible_degree = 5;
  int64 collision_ai_rate = 6;
  int64 collision_border_rate = 7;
  int64 collision_stone_rate = 8;
  int64 collision_wreck_rate = 9;
  int64 level = 10;
}

message BrainAttackTime {
  int64 time = 1;
  int64 weight = 2;
}

message SelfElectricityConfig {
  int64 electricity_cd_time = 1;
  double electricity_explore_max_radius = 2;
  int64 electricity_explore_time = 3;
  double electricity_warning_induction_distance = 4;
  int64 electricity_warning_time = 5;
}

message ShockConfig {
  double shock_explore_max_radius = 1;
  double shock_explore_time = 2;
}

message AiTypeList {
  int64 ai_count = 1;
  int64 ai_type = 2;
  int64 attacker_count = 3;
  int64 level = 4;
  int64 range_len = 5;
  repeated int64 skin_list = 6;
  int64 start_len = 7;
}

message ElectricityConfig {
  int64 electricity_cd_time = 1;
  double electricity_explore_max_radius = 2;
  int64 electricity_explore_time = 3;
  double electricity_warning_induction_distance = 4;
  int64 electricity_warning_time = 5;
}

message MissileConfig {
  double missile_ai_detect_distance = 1;
  int64 missile_cd_time = 2;
  double missile_explode_induction_distance = 3;
  double missile_explode_radius = 4;
  double missile_explode_time = 5;
  int64 missile_fly_time = 6;
  double missile_prepare_time = 7;
  int64 missile_scanning_time = 8;
  double missile_speed_rate = 9;
}

message AiConfig {
  repeated AiTypeList ai_type_list = 1;
  ElectricityConfig electricity_config = 2;
  MissileConfig missile_config = 3;
}

message PropBornInfos {
  int64 prop_born_time = 1;
  int64 prop_count = 2;
  int64 prop_refresh_time = 3;
  int64 prop_type = 4;
}

message PropWeightList {
  int64 prop_weight_battery = 1;
  int64 prop_weight_coin = 2;
  int64 prop_weight_cordial = 3;
  int64 prop_weight_double_score = 4;
  int64 prop_weight_hamburger = 5;
  int64 prop_weight_helmet = 6;
  int64 prop_weight_invincible = 7;
  int64 prop_weight_magnet = 8;
  int64 prop_weight_time = 9;
  int64 type = 10;
}

message PropConfig {
  repeated PropBornInfos prop_born_infos = 1;
  int64 prop_refresh_max_survival_count = 2;
  repeated PropWeightList prop_weight_list = 3;
}

message StageConfigs {
  AiConfig ai_config = 1;
  int64 ai_revive_time = 2;
  PropConfig prop_config = 3;
  int64 stage_end_time = 4;
  int64 stage_start_time = 5;
  int64 stage_type = 6;
}
// ========   excite_mode_config  end  ===========




// ========   emulator start  =========
message Emulator {
  repeated AppCheck app_check = 1;
  repeated CheatAppCheck cheat_app_check = 2;
  repeated ShellCheck shell_check = 3;
  repeated string weak_cpu = 4;
}
message AppCheck {
  string emulator_type = 1;
  repeated string packege_names = 2;
}
message CheatAppCheck {
  string cheat_type = 1;
  repeated string package_names = 2;
}
message ShellCheck {
  string cmd = 1;
  string emulator_type = 2;
  repeated string features = 3;
}
// =========  emulator end  ==========




// ======  little_game start =====
message LittleGame {
  map<string, LittleGameSrc> little_games = 1;
}
message LittleGameSrc {
  repeated LittleGameSrcItem items = 1;
}
message LittleGameSrcItem {
  int64 game_id = 1;
  string md5 = 2;
  string src = 3;
  string loading_url = 4;
  int64 exit_flag = 5;
  int64 transparent = 6;
  int64 use_web = 7;
}
//  ======= little_game  end ========



// ======= review_market  start ======
message ReviewMarket {
  map<string, string> review_market = 1;
}
// ======= review_market  end ======



// ====== little_game_ui_config  start ========
message LittleGameUiConf {
  map<string, LittleGameUi> config = 1;
}
message LittleGameUi {
  repeated GameList game_list = 1;
  string home_corner_url = 2;
  string home_text_url = 3;
  string recommend_jump_url = 4;
}
message GameList {
  string game_corner_url = 1;
  string game_url = 2;
  string home_url = 3;
  string jump_url = 4;
  int64 open_flag = 5;
  string text_url = 6;
}
// ====== little_game_ui_config  end ========




// ============   score_config start  ==========
message ScoreInfoConfig {
  QualifyingDisplayScoreConfig qualifying_display_score_rule = 1;
  repeated SnakeCoinConfig qualifying_score_coin_rule = 2;
  repeated SnakeCoinConfig escape_score_coin_rule = 3;
  EscapePointRule escape_point_rule = 4;
  repeated KVInt escape_cup_map = 5;
  SeasonNotifyConfig season_notify = 6;
  repeated SingleDoubleSnakeCoin single_double_snake_coin_rule = 7;
  repeated SnakeCoinCalcConfig endless_snake_coin_rule = 8;
  repeated SnakeCoinCalcConfig limit_snake_coin_rule = 9;
}
message QualifyingDisplayScoreConfig {
  repeated DisplayScoreCalcConfig length_config = 1;
  repeated DisplayScoreCalcConfig kill_config = 2;
  repeated DisplayScoreCalcConfig eat_config = 3;
  repeated DisplayScoreCalcConfig killed_config = 4;
  repeated DisplayScoreCalcConfig destroy_config = 5;
  repeated DisplayScoreCalcConfig boss_kill_config = 6;
}
message SnakeCoinConfig {
  int64 team_rank = 1;
  int64 coin_start = 2;
  int64 coin_end = 3;
}
message EscapePointRule {
  repeated KVInt rank_point = 1;
  repeated KVInt action_point = 2;
  repeated KVInt kill_point = 3;
}
message KVInt {
  int64 Key = 1;
  int64 Value = 2;
}
message DisplayScoreCalcConfig {
  int64 length_start = 1;
  int64 length_end = 2;
  double rate = 3;
}
message SeasonNotifyConfig {
  string bottom = 1;
  repeated string top = 2;
  string jumpurl = 3;
}
message SingleDoubleSnakeCoin {
  int64 length_start = 1;
  int64 length_end = 2;
  repeated double rate_config = 3;
  repeated SnakeCoinAdCalcConfig calc_config = 4;
}
message SnakeCoinAdCalcConfig {
  double rate = 1;
  int64 probability = 2;
}
message SnakeCoinCalcConfig {
  int64 length_start = 1;
  int64 length_end = 2;
  int64 coin_start = 3;
  int64 coin_end = 4;
}
// ===========    score_config end   ===========




// =======   android_market start  ========
message AndroidMarket {
  repeated string official_market = 1;    // 官方市场列表
  repeated string no_ad_market = 2;       // 无广告市场列表
  repeated string hide_act_market = 3;    // 审核模式隐藏活动入口的市场列表
}
// =========  android_market end  ==========




// ==========  simulation  start   ========
message SimulConfig {
  repeated string default_building_list = 1;
  repeated string default_role_list = 2;
  repeated string default_staff_list = 3;
  repeated string default_scene_list = 4;
  repeated string default_special_list = 5;
  repeated SimulTaskItem task_list = 6;
  int64 default_coin = 7;
  map<string, BuildingSet> building_set = 8;
  map<string, StaffSet> staff_set = 9;
  SimulRewardConfig reward_config = 10;
  repeated TimedTaskInfo timed_task_list = 11;
  repeated TimedTaskCoinConfig timed_task_coin_config = 12;
}

message SimulRewardConfig {
  SimulRewardCondition reward_condition = 1;
  SimulRewardMail reward_mail = 2;
}
message SimulRewardCondition {
  int64 likes = 1;
}
message SimulRewardMail {
  string title = 1;
  string content = 2;
  repeated SnakeMain.Config.RewardConfig reward_list = 3;
}

message SimulTaskItem {
  string title = 1;
  string task_id = 2;
  int64 task_category = 3;
  int64 task_type = 4;
  string obj_id = 5;
  int64 process = 6;
  int64 need_num = 7;
  repeated SimulReward reward = 8;
}

message SimulReward {
  int64 type = 1;
  int64 num = 2;
}

message BuildingSet {
  int64 max_level = 1;
  repeated Detail detail = 2;
}

message Detail {
  int64 likes = 1;
}

message StaffSet {
  int64 max_level = 1;
  repeated Detail detail = 2;
}

message TimedTaskInfo {
  string title = 1;
  int64 task_category = 2;
  int64 task_type = 3;
  string obj_type = 4;
  int64 index = 5;
  int64 process = 6;
  int64 need_num = 7;
  int64 coin = 8;
  int64 start_time = 9;
  int64 duration = 10;
  int64 is_valid = 11;
  int64 is_taken = 12;
}

message TimedTaskCoinConfig {
  int64 likes = 1;
  int64 coins = 2;
}
// =========  simulation  end ===========



// ========   summon_config start   =========
message SummonConfig {
  repeated  SummonAiConfig aiConfig = 1;
  int64     enableDebug = 2;
  MapConfig mapConfig = 3;
}
message SummonAiConfig {
  repeated SummonConfigItem config = 1;
}
message SummonConfigItem {
  int64 level = 1;
  int64 num = 2;
}
message MapConfig {
  int64 height = 1;
  int64 width = 2;
}
//  =========  summon_config end  ============



// ======  ios_patch  start ======
message IosPatch {
  map<string, IosPatchList> path = 1;
}
message IosPatchList {
  repeated IosPatchItem ios_patch = 1;
}
message IosPatchItem {
  repeated string os_version = 1;
  repeated string device_name = 2;
  repeated string device_id = 3;
  string patch = 4;
  string patch_version = 5;
  int64 enable = 6;
}
// ======  ios_patch end ==========




// ===== unity_assets  start ======
message UnityAssets {
  map<string, AssetMap> versions = 1;
}
message AssetMap {
  map<string, Asset> platforms = 1;
}
message Asset {
  repeated AssetItem assets = 1;
}
message AssetItem {
  string name = 1;
  string src = 2;
  string md5 = 3;
  string hmac = 4;
}
// =======  unity_assets  end

//----------------------------------------------------------------------------------------------------------------------
// 多人无尽 start
// ---------------------------------------------------------------------------------------------------------------------

message TeamEndlessConfig {
  bool switch = 1;
  string desc = 2;

  message Guide {// 新手引导配置
    int64 game_count = 1; // 需要的单人无尽游戏局数
    int64 highest_score = 2; // 单人无尽最高分数要求
    repeated string instruction_texts = 3; // 引导文案
    int64 back_game_count = 4; // 回流用户需要游戏的局数
    int32 register_day = 5; // 需要注册天数>=x天
    int64 before_register_time = 6; // 需要注册的时间戳 <=x
  }
  Guide guide = 3;

  // 赛季配置
  message SeasonRewardItem {
    int32 rank_id = 1; // 大段位id
    repeated snakecommon.CRewardItem reward_list = 2; // 奖励列表
  }
  message Season {// 赛季配置
    int32 id = 1; // 赛季id
    int64 start_time = 2; // 赛季开始时间
    int64 end_time = 3; // 赛季结束时间
    repeated SeasonRewardItem reward_list = 4; // 奖励列表
  }
  repeated Season seasons = 4; // 赛季配置

  // 段位配置
  message BigRankItem {
    int32 id = 1; // 大段位id
    string name = 2; // 大段位名称
  }
  message SmallRankItem {
    int32 id = 1; // 小段位id
    string name = 2; // 小段位名称
    int64 min = 3; // 小段位分数区间最小值
    int64 max = 4; // 小段位分数区间最大值
  }
  message Rank {// 段位配置
    repeated BigRankItem big_rank = 1; // 大段位列表
    repeated SmallRankItem small_rank = 2; // 小段位列表
    string rank_desc = 3; // 段位说明
  }
  Rank rank = 5;
  string android_unlock_tip = 6; // 安卓解锁提示
  string ios_unlock_tip = 7; // ios解锁提示
  int32 boss = 18; // 是否开启boss功能，0: 未开启 1: 开启
  CoupleSkinActivity couple_skin_activity = 19; // cp皮肤直售活动
}

message CoupleSkinActivity {
  string activity_id = 1;
  int64 start_time = 2;
  int64 end_time = 3;
  string jump_url = 4;
}

//----------------------------------------------------------------------------------------------------------------------
// 多人无尽 end
// ---------------------------------------------------------------------------------------------------------------------

message NativeQualifyAIPool { // 原生团战 AI 行为配置
  int32 level = 1;
  string comment = 2;
  double border_dis_factor = 3;
  double snake_dis_factor = 4;
  double wreck_dis_factor = 5;
  double floater_dis_factor = 6;
  double props_dis_factor = 7;
  double ai_snake_view_angle = 8;
  double attack_border_dis_factor = 9;
  double attack_snake_dis_factor = 10;
  double attack_wreck_dis_factor = 11;
  double attack_ai_snake_view_angle = 12;
  double attack_floater_dis_factor = 13;
  double attack_props_dis_factor = 14;
  double attack_circle_dis_factor = 15;
  double attack_rate = 16;
  double change_direction_rate = 17;
  double delay_direction_rate = 18;
  repeated int64 attack_times = 19;
  repeated int64 attack_weights = 20;
  double speedup_rate = 21;
  int64 speedup_time = 22;
  double ai_snake_view_radius_factor = 23;
  double attack_ai_snake_view_radius_factor = 24;
}

message BannerInfo {
  int32 banner_id = 1;
  string btn_type = 2;
  string btn_link = 3;
  string btn_link_dev = 4;
  string btn_text = 5;
  BannerExtraInfo extra = 6;
  string imgurl = 7;
  string imgurl2 = 8;
  string title = 9;
  int32 type = 10;
  int32 show_limitation = 11;
  int32 show_limit = 12;
  int32 notify = 13;
  int32 init_notify = 14;
  int32 stay_second = 15;
  int32 total_limit = 16;
  int32 pure_flag = 17;
  string carton_bg_url = 18;
  repeated CartonList carton_list = 19;
  int32 status = 20;
  int32 sort = 21;
  int32 direct_jump = 22;
  bool is_major_banner = 23;
  int32 homepage_sort = 24;
  int32 home_position = 25;
}
message CartonList {
  string imgurl = 1;
  string btn_type = 2;
  string btn_link = 3;
}
message BannerExtraInfo {
  string need_login = 1;
  repeated string able_market = 2;
  repeated string disable_market = 3;
  string version_operator = 4;
  string version = 5;
  string version_operator2 = 6;
  string version2 = 7;
  int32 start = 8;
  int32 finish = 9;
  string limit_type = 10;
}

message RelationConfig {
  repeated SingleRelationConfig relation_list = 1; // 关系列表
  int64 first_cold_sec = 2; // 首次冷却时间,单位秒
  int64 second_cold_sec = 3; // 第二次冷却时间,单位秒
  int64 send_coin_daily_limit = 4; // 每日赠送道具上限
  int64 receive_coin_daily_limit= 5; // 每日领取道具上限
  repeated RelationLimitItem relation_limit_list = 6; // 关系数量增加列表
  repeated int32 challenge_event_ids = 7; // 特殊成就任务活动ID列表
  repeated int32 level_event_ids = 8; // 等级奖励任务活动ID列表
  repeated EventTask challenge_events = 9;         // 特殊成就任务配置，服务器读取填充
  repeated EventTask level_events = 10;             // 等级奖励任务配置，服务器读取填充
}

message RelationLimitItem {
  int64 level = 1; // 关系上限等级,从0开始
  int64 need_diamond = 2; // 需要苹果数
  int64 num = 3; // 关系上限
}

message SingleRelationConfig {
  int64 relation_type = 1; // 关系类型
  string name = 2; // 关系名称
  repeated RelationLevelItem level_config = 3; // 关系等级配置
}

message RelationLevelItem {
  int64 level = 1; // 关系等级
  int64 need = 2; // 需要守护值
}