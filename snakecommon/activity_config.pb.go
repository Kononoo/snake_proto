// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.27.1
// 	protoc        v3.16.1
// source: snakecommon/activity_config.proto

package snakecommon

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type FarmConfig struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ActId             string          `protobuf:"bytes,1,opt,name=act_id,json=actId,proto3" json:"act_id,omitempty"`                                          // 活动id
	LinkUrl           string          `protobuf:"bytes,2,opt,name=link_url,json=linkUrl,proto3" json:"link_url,omitempty"`                                    // 玩法链接
	StartTime         int64           `protobuf:"varint,3,opt,name=start_time,json=startTime,proto3" json:"start_time,omitempty"`                             // 开始时间
	EndTime           int64           `protobuf:"varint,4,opt,name=end_time,json=endTime,proto3" json:"end_time,omitempty"`                                   // 结束时间
	UnlockNeedSkinNum int32           `protobuf:"varint,5,opt,name=unlock_need_skin_num,json=unlockNeedSkinNum,proto3" json:"unlock_need_skin_num,omitempty"` // 解锁玩法需要的皮肤数量
	HomePrompt        *FarmHomePrompt `protobuf:"bytes,6,opt,name=home_prompt,json=homePrompt,proto3" json:"home_prompt,omitempty"`                           // 首页提示
	BubbleIntervalSec int64           `protobuf:"varint,7,opt,name=bubble_interval_sec,json=bubbleIntervalSec,proto3" json:"bubble_interval_sec,omitempty"`   // 首页气泡提示间隔时间
}

func (x *FarmConfig) Reset() {
	*x = FarmConfig{}
	if protoimpl.UnsafeEnabled {
		mi := &file_snakecommon_activity_config_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FarmConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FarmConfig) ProtoMessage() {}

func (x *FarmConfig) ProtoReflect() protoreflect.Message {
	mi := &file_snakecommon_activity_config_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FarmConfig.ProtoReflect.Descriptor instead.
func (*FarmConfig) Descriptor() ([]byte, []int) {
	return file_snakecommon_activity_config_proto_rawDescGZIP(), []int{0}
}

func (x *FarmConfig) GetActId() string {
	if x != nil {
		return x.ActId
	}
	return ""
}

func (x *FarmConfig) GetLinkUrl() string {
	if x != nil {
		return x.LinkUrl
	}
	return ""
}

func (x *FarmConfig) GetStartTime() int64 {
	if x != nil {
		return x.StartTime
	}
	return 0
}

func (x *FarmConfig) GetEndTime() int64 {
	if x != nil {
		return x.EndTime
	}
	return 0
}

func (x *FarmConfig) GetUnlockNeedSkinNum() int32 {
	if x != nil {
		return x.UnlockNeedSkinNum
	}
	return 0
}

func (x *FarmConfig) GetHomePrompt() *FarmHomePrompt {
	if x != nil {
		return x.HomePrompt
	}
	return nil
}

func (x *FarmConfig) GetBubbleIntervalSec() int64 {
	if x != nil {
		return x.BubbleIntervalSec
	}
	return 0
}

type FarmHomePrompt struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OpenSwitch    bool   `protobuf:"varint,1,opt,name=open_switch,json=openSwitch,proto3" json:"open_switch,omitempty"`         // 强引导开关
	UnlockContent string `protobuf:"bytes,2,opt,name=unlock_content,json=unlockContent,proto3" json:"unlock_content,omitempty"` // 解锁引导内容
}

func (x *FarmHomePrompt) Reset() {
	*x = FarmHomePrompt{}
	if protoimpl.UnsafeEnabled {
		mi := &file_snakecommon_activity_config_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FarmHomePrompt) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FarmHomePrompt) ProtoMessage() {}

func (x *FarmHomePrompt) ProtoReflect() protoreflect.Message {
	mi := &file_snakecommon_activity_config_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FarmHomePrompt.ProtoReflect.Descriptor instead.
func (*FarmHomePrompt) Descriptor() ([]byte, []int) {
	return file_snakecommon_activity_config_proto_rawDescGZIP(), []int{1}
}

func (x *FarmHomePrompt) GetOpenSwitch() bool {
	if x != nil {
		return x.OpenSwitch
	}
	return false
}

func (x *FarmHomePrompt) GetUnlockContent() string {
	if x != nil {
		return x.UnlockContent
	}
	return ""
}

type MagicSkinConfig struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	StartTime int64                       `protobuf:"varint,1,opt,name=start_time,json=startTime,proto3" json:"start_time,omitempty"`
	EndTime   int64                       `protobuf:"varint,2,opt,name=end_time,json=endTime,proto3" json:"end_time,omitempty"`
	BtnLink   string                      `protobuf:"bytes,3,opt,name=btn_link,json=btnLink,proto3" json:"btn_link,omitempty"`
	Data      []*MagicSkinData            `protobuf:"bytes,4,rep,name=data,proto3" json:"data,omitempty"`
	Desc      []*MagicSkinConfig_DescItem `protobuf:"bytes,5,rep,name=desc,proto3" json:"desc,omitempty"` //  幻化屋活动说明
}

func (x *MagicSkinConfig) Reset() {
	*x = MagicSkinConfig{}
	if protoimpl.UnsafeEnabled {
		mi := &file_snakecommon_activity_config_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MagicSkinConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MagicSkinConfig) ProtoMessage() {}

func (x *MagicSkinConfig) ProtoReflect() protoreflect.Message {
	mi := &file_snakecommon_activity_config_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MagicSkinConfig.ProtoReflect.Descriptor instead.
func (*MagicSkinConfig) Descriptor() ([]byte, []int) {
	return file_snakecommon_activity_config_proto_rawDescGZIP(), []int{2}
}

func (x *MagicSkinConfig) GetStartTime() int64 {
	if x != nil {
		return x.StartTime
	}
	return 0
}

func (x *MagicSkinConfig) GetEndTime() int64 {
	if x != nil {
		return x.EndTime
	}
	return 0
}

func (x *MagicSkinConfig) GetBtnLink() string {
	if x != nil {
		return x.BtnLink
	}
	return ""
}

func (x *MagicSkinConfig) GetData() []*MagicSkinData {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *MagicSkinConfig) GetDesc() []*MagicSkinConfig_DescItem {
	if x != nil {
		return x.Desc
	}
	return nil
}

type MagicSkinData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ActId     string `protobuf:"bytes,1,opt,name=act_id,json=actId,proto3" json:"act_id,omitempty"`              // 活动id
	Name      string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`                             // 活动名称
	ImgUrl    string `protobuf:"bytes,3,opt,name=img_url,json=imgUrl,proto3" json:"img_url,omitempty"`           // 活动图片
	StartTime int64  `protobuf:"varint,4,opt,name=start_time,json=startTime,proto3" json:"start_time,omitempty"` // 开始时间
	EndTime   int64  `protobuf:"varint,5,opt,name=end_time,json=endTime,proto3" json:"end_time,omitempty"`       // 结束时间
}

func (x *MagicSkinData) Reset() {
	*x = MagicSkinData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_snakecommon_activity_config_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MagicSkinData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MagicSkinData) ProtoMessage() {}

func (x *MagicSkinData) ProtoReflect() protoreflect.Message {
	mi := &file_snakecommon_activity_config_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MagicSkinData.ProtoReflect.Descriptor instead.
func (*MagicSkinData) Descriptor() ([]byte, []int) {
	return file_snakecommon_activity_config_proto_rawDescGZIP(), []int{3}
}

func (x *MagicSkinData) GetActId() string {
	if x != nil {
		return x.ActId
	}
	return ""
}

func (x *MagicSkinData) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *MagicSkinData) GetImgUrl() string {
	if x != nil {
		return x.ImgUrl
	}
	return ""
}

func (x *MagicSkinData) GetStartTime() int64 {
	if x != nil {
		return x.StartTime
	}
	return 0
}

func (x *MagicSkinData) GetEndTime() int64 {
	if x != nil {
		return x.EndTime
	}
	return 0
}

type SnakeAreaConfig struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ActId        string       `protobuf:"bytes,1,opt,name=act_id,json=actId,proto3" json:"act_id,omitempty"`                       // 活动id
	StartTime    int64        `protobuf:"varint,2,opt,name=start_time,json=startTime,proto3" json:"start_time,omitempty"`          // 开始时间
	EndTime      int64        `protobuf:"varint,3,opt,name=end_time,json=endTime,proto3" json:"end_time,omitempty"`                // 结束时间
	TargetLength int64        `protobuf:"varint,4,opt,name=target_length,json=targetLength,proto3" json:"target_length,omitempty"` // 达成挑战的目标长度
	RewardItem   *CRewardItem `protobuf:"bytes,5,opt,name=rewardItem,proto3" json:"rewardItem,omitempty"`                          // 奖励
	BtnUrl       string       `protobuf:"bytes,6,opt,name=btn_url,json=btnUrl,proto3" json:"btn_url,omitempty"`                    // 跳转链接
	Desc         string       `protobuf:"bytes,7,opt,name=desc,proto3" json:"desc,omitempty"`                                      // 活动说明
}

func (x *SnakeAreaConfig) Reset() {
	*x = SnakeAreaConfig{}
	if protoimpl.UnsafeEnabled {
		mi := &file_snakecommon_activity_config_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SnakeAreaConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SnakeAreaConfig) ProtoMessage() {}

func (x *SnakeAreaConfig) ProtoReflect() protoreflect.Message {
	mi := &file_snakecommon_activity_config_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SnakeAreaConfig.ProtoReflect.Descriptor instead.
func (*SnakeAreaConfig) Descriptor() ([]byte, []int) {
	return file_snakecommon_activity_config_proto_rawDescGZIP(), []int{4}
}

func (x *SnakeAreaConfig) GetActId() string {
	if x != nil {
		return x.ActId
	}
	return ""
}

func (x *SnakeAreaConfig) GetStartTime() int64 {
	if x != nil {
		return x.StartTime
	}
	return 0
}

func (x *SnakeAreaConfig) GetEndTime() int64 {
	if x != nil {
		return x.EndTime
	}
	return 0
}

func (x *SnakeAreaConfig) GetTargetLength() int64 {
	if x != nil {
		return x.TargetLength
	}
	return 0
}

func (x *SnakeAreaConfig) GetRewardItem() *CRewardItem {
	if x != nil {
		return x.RewardItem
	}
	return nil
}

func (x *SnakeAreaConfig) GetBtnUrl() string {
	if x != nil {
		return x.BtnUrl
	}
	return ""
}

func (x *SnakeAreaConfig) GetDesc() string {
	if x != nil {
		return x.Desc
	}
	return ""
}

type PointsChampConfig struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ActId           string                 `protobuf:"bytes,1,opt,name=act_id,json=actId,proto3" json:"act_id,omitempty"`
	StartTime       int64                  `protobuf:"varint,2,opt,name=start_time,json=startTime,proto3" json:"start_time,omitempty"`
	EndTime         int64                  `protobuf:"varint,3,opt,name=end_time,json=endTime,proto3" json:"end_time,omitempty"`
	ToplistTabName  string                 `protobuf:"bytes,4,opt,name=toplist_tab_name,json=toplistTabName,proto3" json:"toplist_tab_name,omitempty"` // 排行榜页签名称
	CompTypes       []*PointsChampCompType `protobuf:"bytes,5,rep,name=comp_types,json=compTypes,proto3" json:"comp_types,omitempty"`                  // 竞争维度
	Areas           []*PointsChampAreaType `protobuf:"bytes,6,rep,name=areas,proto3" json:"areas,omitempty"`                                           // 大区
	RegionalLink    string                 `protobuf:"bytes,7,opt,name=regional_link,json=regionalLink,proto3" json:"regional_link,omitempty"`         // 地区选拔赛跳转链接
	NationalLink    string                 `protobuf:"bytes,8,opt,name=national_link,json=nationalLink,proto3" json:"national_link,omitempty"`         // 总决赛跳转链接
	UserInfo        *PointsChampUserInfo   `protobuf:"bytes,9,opt,name=user_info,json=userInfo,proto3" json:"user_info,omitempty"`
	Phases          []*PointsChampPhase    `protobuf:"bytes,10,rep,name=phases,proto3" json:"phases,omitempty"`                                            // 阶段配置
	CurPhaseNum     int64                  `protobuf:"varint,11,opt,name=cur_phase_num,json=curPhaseNum,proto3" json:"cur_phase_num,omitempty"`            // 当前阶段
	ToplistItemLink string                 `protobuf:"bytes,12,opt,name=toplist_item_link,json=toplistItemLink,proto3" json:"toplist_item_link,omitempty"` // 情缘排行榜中的按钮跳转链接
}

func (x *PointsChampConfig) Reset() {
	*x = PointsChampConfig{}
	if protoimpl.UnsafeEnabled {
		mi := &file_snakecommon_activity_config_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PointsChampConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PointsChampConfig) ProtoMessage() {}

func (x *PointsChampConfig) ProtoReflect() protoreflect.Message {
	mi := &file_snakecommon_activity_config_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PointsChampConfig.ProtoReflect.Descriptor instead.
func (*PointsChampConfig) Descriptor() ([]byte, []int) {
	return file_snakecommon_activity_config_proto_rawDescGZIP(), []int{5}
}

func (x *PointsChampConfig) GetActId() string {
	if x != nil {
		return x.ActId
	}
	return ""
}

func (x *PointsChampConfig) GetStartTime() int64 {
	if x != nil {
		return x.StartTime
	}
	return 0
}

func (x *PointsChampConfig) GetEndTime() int64 {
	if x != nil {
		return x.EndTime
	}
	return 0
}

func (x *PointsChampConfig) GetToplistTabName() string {
	if x != nil {
		return x.ToplistTabName
	}
	return ""
}

func (x *PointsChampConfig) GetCompTypes() []*PointsChampCompType {
	if x != nil {
		return x.CompTypes
	}
	return nil
}

func (x *PointsChampConfig) GetAreas() []*PointsChampAreaType {
	if x != nil {
		return x.Areas
	}
	return nil
}

func (x *PointsChampConfig) GetRegionalLink() string {
	if x != nil {
		return x.RegionalLink
	}
	return ""
}

func (x *PointsChampConfig) GetNationalLink() string {
	if x != nil {
		return x.NationalLink
	}
	return ""
}

func (x *PointsChampConfig) GetUserInfo() *PointsChampUserInfo {
	if x != nil {
		return x.UserInfo
	}
	return nil
}

func (x *PointsChampConfig) GetPhases() []*PointsChampPhase {
	if x != nil {
		return x.Phases
	}
	return nil
}

func (x *PointsChampConfig) GetCurPhaseNum() int64 {
	if x != nil {
		return x.CurPhaseNum
	}
	return 0
}

func (x *PointsChampConfig) GetToplistItemLink() string {
	if x != nil {
		return x.ToplistItemLink
	}
	return ""
}

type PointsChampPhase struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PhaseNum  int64  `protobuf:"varint,1,opt,name=phase_num,json=phaseNum,proto3" json:"phase_num,omitempty"` // 阶段
	Title     string `protobuf:"bytes,2,opt,name=title,proto3" json:"title,omitempty"`
	StartTime int64  `protobuf:"varint,3,opt,name=start_time,json=startTime,proto3" json:"start_time,omitempty"`
	EndTime   int64  `protobuf:"varint,4,opt,name=end_time,json=endTime,proto3" json:"end_time,omitempty"`
	BtnLink   string `protobuf:"bytes,5,opt,name=btn_link,json=btnLink,proto3" json:"btn_link,omitempty"`         // 跳转链接
	BtnImgUrl string `protobuf:"bytes,6,opt,name=btn_img_url,json=btnImgUrl,proto3" json:"btn_img_url,omitempty"` // 展示图片
}

func (x *PointsChampPhase) Reset() {
	*x = PointsChampPhase{}
	if protoimpl.UnsafeEnabled {
		mi := &file_snakecommon_activity_config_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PointsChampPhase) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PointsChampPhase) ProtoMessage() {}

func (x *PointsChampPhase) ProtoReflect() protoreflect.Message {
	mi := &file_snakecommon_activity_config_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PointsChampPhase.ProtoReflect.Descriptor instead.
func (*PointsChampPhase) Descriptor() ([]byte, []int) {
	return file_snakecommon_activity_config_proto_rawDescGZIP(), []int{6}
}

func (x *PointsChampPhase) GetPhaseNum() int64 {
	if x != nil {
		return x.PhaseNum
	}
	return 0
}

func (x *PointsChampPhase) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *PointsChampPhase) GetStartTime() int64 {
	if x != nil {
		return x.StartTime
	}
	return 0
}

func (x *PointsChampPhase) GetEndTime() int64 {
	if x != nil {
		return x.EndTime
	}
	return 0
}

func (x *PointsChampPhase) GetBtnLink() string {
	if x != nil {
		return x.BtnLink
	}
	return ""
}

func (x *PointsChampPhase) GetBtnImgUrl() string {
	if x != nil {
		return x.BtnImgUrl
	}
	return ""
}

type PointsChampCompType struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CompType    int64  `protobuf:"varint,1,opt,name=comp_type,json=compType,proto3" json:"comp_type,omitempty"`
	CompName    string `protobuf:"bytes,2,opt,name=comp_name,json=compName,proto3" json:"comp_name,omitempty"`
	PointName   string `protobuf:"bytes,3,opt,name=point_name,json=pointName,proto3" json:"point_name,omitempty"`        // 积分名称
	WithPartner bool   `protobuf:"varint,4,opt,name=with_partner,json=withPartner,proto3" json:"with_partner,omitempty"` // 是否组队上榜
}

func (x *PointsChampCompType) Reset() {
	*x = PointsChampCompType{}
	if protoimpl.UnsafeEnabled {
		mi := &file_snakecommon_activity_config_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PointsChampCompType) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PointsChampCompType) ProtoMessage() {}

func (x *PointsChampCompType) ProtoReflect() protoreflect.Message {
	mi := &file_snakecommon_activity_config_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PointsChampCompType.ProtoReflect.Descriptor instead.
func (*PointsChampCompType) Descriptor() ([]byte, []int) {
	return file_snakecommon_activity_config_proto_rawDescGZIP(), []int{7}
}

func (x *PointsChampCompType) GetCompType() int64 {
	if x != nil {
		return x.CompType
	}
	return 0
}

func (x *PointsChampCompType) GetCompName() string {
	if x != nil {
		return x.CompName
	}
	return ""
}

func (x *PointsChampCompType) GetPointName() string {
	if x != nil {
		return x.PointName
	}
	return ""
}

func (x *PointsChampCompType) GetWithPartner() bool {
	if x != nil {
		return x.WithPartner
	}
	return false
}

type PointsChampAreaType struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AreaType int64  `protobuf:"varint,1,opt,name=area_type,json=areaType,proto3" json:"area_type,omitempty"`
	AreaName string `protobuf:"bytes,2,opt,name=area_name,json=areaName,proto3" json:"area_name,omitempty"`
}

func (x *PointsChampAreaType) Reset() {
	*x = PointsChampAreaType{}
	if protoimpl.UnsafeEnabled {
		mi := &file_snakecommon_activity_config_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PointsChampAreaType) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PointsChampAreaType) ProtoMessage() {}

func (x *PointsChampAreaType) ProtoReflect() protoreflect.Message {
	mi := &file_snakecommon_activity_config_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PointsChampAreaType.ProtoReflect.Descriptor instead.
func (*PointsChampAreaType) Descriptor() ([]byte, []int) {
	return file_snakecommon_activity_config_proto_rawDescGZIP(), []int{8}
}

func (x *PointsChampAreaType) GetAreaType() int64 {
	if x != nil {
		return x.AreaType
	}
	return 0
}

func (x *PointsChampAreaType) GetAreaName() string {
	if x != nil {
		return x.AreaName
	}
	return ""
}

type PointsChampUserInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AreaType            int64 `protobuf:"varint,1,opt,name=area_type,json=areaType,proto3" json:"area_type,omitempty"`
	AreaTypeWithPartner int64 `protobuf:"varint,2,opt,name=area_type_with_partner,json=areaTypeWithPartner,proto3" json:"area_type_with_partner,omitempty"`
}

func (x *PointsChampUserInfo) Reset() {
	*x = PointsChampUserInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_snakecommon_activity_config_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PointsChampUserInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PointsChampUserInfo) ProtoMessage() {}

func (x *PointsChampUserInfo) ProtoReflect() protoreflect.Message {
	mi := &file_snakecommon_activity_config_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PointsChampUserInfo.ProtoReflect.Descriptor instead.
func (*PointsChampUserInfo) Descriptor() ([]byte, []int) {
	return file_snakecommon_activity_config_proto_rawDescGZIP(), []int{9}
}

func (x *PointsChampUserInfo) GetAreaType() int64 {
	if x != nil {
		return x.AreaType
	}
	return 0
}

func (x *PointsChampUserInfo) GetAreaTypeWithPartner() int64 {
	if x != nil {
		return x.AreaTypeWithPartner
	}
	return 0
}

type MagicSkinConfig_DescItem struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Title   string `protobuf:"bytes,1,opt,name=title,proto3" json:"title,omitempty"`     // 标题
	Content string `protobuf:"bytes,2,opt,name=content,proto3" json:"content,omitempty"` // 内容
	Type    int32  `protobuf:"varint,3,opt,name=type,proto3" json:"type,omitempty"`      //1 文字 2 图片 3 视频
}

func (x *MagicSkinConfig_DescItem) Reset() {
	*x = MagicSkinConfig_DescItem{}
	if protoimpl.UnsafeEnabled {
		mi := &file_snakecommon_activity_config_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MagicSkinConfig_DescItem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MagicSkinConfig_DescItem) ProtoMessage() {}

func (x *MagicSkinConfig_DescItem) ProtoReflect() protoreflect.Message {
	mi := &file_snakecommon_activity_config_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MagicSkinConfig_DescItem.ProtoReflect.Descriptor instead.
func (*MagicSkinConfig_DescItem) Descriptor() ([]byte, []int) {
	return file_snakecommon_activity_config_proto_rawDescGZIP(), []int{2, 0}
}

func (x *MagicSkinConfig_DescItem) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *MagicSkinConfig_DescItem) GetContent() string {
	if x != nil {
		return x.Content
	}
	return ""
}

func (x *MagicSkinConfig_DescItem) GetType() int32 {
	if x != nil {
		return x.Type
	}
	return 0
}

var File_snakecommon_activity_config_proto protoreflect.FileDescriptor

var file_snakecommon_activity_config_proto_rawDesc = []byte{
	0x0a, 0x21, 0x73, 0x6e, 0x61, 0x6b, 0x65, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2f, 0x61, 0x63,
	0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x5f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x12, 0x0b, 0x73, 0x6e, 0x61, 0x6b, 0x65, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e,
	0x1a, 0x18, 0x73, 0x6e, 0x61, 0x6b, 0x65, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2f, 0x63, 0x6f,
	0x6e, 0x66, 0x69, 0x67, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x97, 0x02, 0x0a, 0x0a, 0x46,
	0x61, 0x72, 0x6d, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12, 0x15, 0x0a, 0x06, 0x61, 0x63, 0x74,
	0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x61, 0x63, 0x74, 0x49, 0x64,
	0x12, 0x19, 0x0a, 0x08, 0x6c, 0x69, 0x6e, 0x6b, 0x5f, 0x75, 0x72, 0x6c, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x07, 0x6c, 0x69, 0x6e, 0x6b, 0x55, 0x72, 0x6c, 0x12, 0x1d, 0x0a, 0x0a, 0x73,
	0x74, 0x61, 0x72, 0x74, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x09, 0x73, 0x74, 0x61, 0x72, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x19, 0x0a, 0x08, 0x65, 0x6e,
	0x64, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x65, 0x6e,
	0x64, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x2f, 0x0a, 0x14, 0x75, 0x6e, 0x6c, 0x6f, 0x63, 0x6b, 0x5f,
	0x6e, 0x65, 0x65, 0x64, 0x5f, 0x73, 0x6b, 0x69, 0x6e, 0x5f, 0x6e, 0x75, 0x6d, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x11, 0x75, 0x6e, 0x6c, 0x6f, 0x63, 0x6b, 0x4e, 0x65, 0x65, 0x64, 0x53,
	0x6b, 0x69, 0x6e, 0x4e, 0x75, 0x6d, 0x12, 0x3c, 0x0a, 0x0b, 0x68, 0x6f, 0x6d, 0x65, 0x5f, 0x70,
	0x72, 0x6f, 0x6d, 0x70, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x73, 0x6e,
	0x61, 0x6b, 0x65, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x46, 0x61, 0x72, 0x6d, 0x48, 0x6f,
	0x6d, 0x65, 0x50, 0x72, 0x6f, 0x6d, 0x70, 0x74, 0x52, 0x0a, 0x68, 0x6f, 0x6d, 0x65, 0x50, 0x72,
	0x6f, 0x6d, 0x70, 0x74, 0x12, 0x2e, 0x0a, 0x13, 0x62, 0x75, 0x62, 0x62, 0x6c, 0x65, 0x5f, 0x69,
	0x6e, 0x74, 0x65, 0x72, 0x76, 0x61, 0x6c, 0x5f, 0x73, 0x65, 0x63, 0x18, 0x07, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x11, 0x62, 0x75, 0x62, 0x62, 0x6c, 0x65, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x76, 0x61,
	0x6c, 0x53, 0x65, 0x63, 0x22, 0x58, 0x0a, 0x0e, 0x46, 0x61, 0x72, 0x6d, 0x48, 0x6f, 0x6d, 0x65,
	0x50, 0x72, 0x6f, 0x6d, 0x70, 0x74, 0x12, 0x1f, 0x0a, 0x0b, 0x6f, 0x70, 0x65, 0x6e, 0x5f, 0x73,
	0x77, 0x69, 0x74, 0x63, 0x68, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0a, 0x6f, 0x70, 0x65,
	0x6e, 0x53, 0x77, 0x69, 0x74, 0x63, 0x68, 0x12, 0x25, 0x0a, 0x0e, 0x75, 0x6e, 0x6c, 0x6f, 0x63,
	0x6b, 0x5f, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0d, 0x75, 0x6e, 0x6c, 0x6f, 0x63, 0x6b, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x22, 0xa1,
	0x02, 0x0a, 0x0f, 0x4d, 0x61, 0x67, 0x69, 0x63, 0x53, 0x6b, 0x69, 0x6e, 0x43, 0x6f, 0x6e, 0x66,
	0x69, 0x67, 0x12, 0x1d, 0x0a, 0x0a, 0x73, 0x74, 0x61, 0x72, 0x74, 0x5f, 0x74, 0x69, 0x6d, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x73, 0x74, 0x61, 0x72, 0x74, 0x54, 0x69, 0x6d,
	0x65, 0x12, 0x19, 0x0a, 0x08, 0x65, 0x6e, 0x64, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x07, 0x65, 0x6e, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x19, 0x0a, 0x08,
	0x62, 0x74, 0x6e, 0x5f, 0x6c, 0x69, 0x6e, 0x6b, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07,
	0x62, 0x74, 0x6e, 0x4c, 0x69, 0x6e, 0x6b, 0x12, 0x2e, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18,
	0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x73, 0x6e, 0x61, 0x6b, 0x65, 0x63, 0x6f, 0x6d,
	0x6d, 0x6f, 0x6e, 0x2e, 0x4d, 0x61, 0x67, 0x69, 0x63, 0x53, 0x6b, 0x69, 0x6e, 0x44, 0x61, 0x74,
	0x61, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x12, 0x39, 0x0a, 0x04, 0x64, 0x65, 0x73, 0x63, 0x18,
	0x05, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x25, 0x2e, 0x73, 0x6e, 0x61, 0x6b, 0x65, 0x63, 0x6f, 0x6d,
	0x6d, 0x6f, 0x6e, 0x2e, 0x4d, 0x61, 0x67, 0x69, 0x63, 0x53, 0x6b, 0x69, 0x6e, 0x43, 0x6f, 0x6e,
	0x66, 0x69, 0x67, 0x2e, 0x44, 0x65, 0x73, 0x63, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x04, 0x64, 0x65,
	0x73, 0x63, 0x1a, 0x4e, 0x0a, 0x08, 0x44, 0x65, 0x73, 0x63, 0x49, 0x74, 0x65, 0x6d, 0x12, 0x14,
	0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74,
	0x69, 0x74, 0x6c, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x12, 0x12,
	0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x74, 0x79,
	0x70, 0x65, 0x22, 0x8d, 0x01, 0x0a, 0x0d, 0x4d, 0x61, 0x67, 0x69, 0x63, 0x53, 0x6b, 0x69, 0x6e,
	0x44, 0x61, 0x74, 0x61, 0x12, 0x15, 0x0a, 0x06, 0x61, 0x63, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x61, 0x63, 0x74, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e,
	0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12,
	0x17, 0x0a, 0x07, 0x69, 0x6d, 0x67, 0x5f, 0x75, 0x72, 0x6c, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x06, 0x69, 0x6d, 0x67, 0x55, 0x72, 0x6c, 0x12, 0x1d, 0x0a, 0x0a, 0x73, 0x74, 0x61, 0x72,
	0x74, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x73, 0x74,
	0x61, 0x72, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x19, 0x0a, 0x08, 0x65, 0x6e, 0x64, 0x5f, 0x74,
	0x69, 0x6d, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x65, 0x6e, 0x64, 0x54, 0x69,
	0x6d, 0x65, 0x22, 0xee, 0x01, 0x0a, 0x0f, 0x53, 0x6e, 0x61, 0x6b, 0x65, 0x41, 0x72, 0x65, 0x61,
	0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12, 0x15, 0x0a, 0x06, 0x61, 0x63, 0x74, 0x5f, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x61, 0x63, 0x74, 0x49, 0x64, 0x12, 0x1d, 0x0a,
	0x0a, 0x73, 0x74, 0x61, 0x72, 0x74, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x09, 0x73, 0x74, 0x61, 0x72, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x19, 0x0a, 0x08,
	0x65, 0x6e, 0x64, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07,
	0x65, 0x6e, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x23, 0x0a, 0x0d, 0x74, 0x61, 0x72, 0x67, 0x65,
	0x74, 0x5f, 0x6c, 0x65, 0x6e, 0x67, 0x74, 0x68, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0c,
	0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x4c, 0x65, 0x6e, 0x67, 0x74, 0x68, 0x12, 0x38, 0x0a, 0x0a,
	0x72, 0x65, 0x77, 0x61, 0x72, 0x64, 0x49, 0x74, 0x65, 0x6d, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x18, 0x2e, 0x73, 0x6e, 0x61, 0x6b, 0x65, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x43,
	0x52, 0x65, 0x77, 0x61, 0x72, 0x64, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x0a, 0x72, 0x65, 0x77, 0x61,
	0x72, 0x64, 0x49, 0x74, 0x65, 0x6d, 0x12, 0x17, 0x0a, 0x07, 0x62, 0x74, 0x6e, 0x5f, 0x75, 0x72,
	0x6c, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x62, 0x74, 0x6e, 0x55, 0x72, 0x6c, 0x12,
	0x12, 0x0a, 0x04, 0x64, 0x65, 0x73, 0x63, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x64,
	0x65, 0x73, 0x63, 0x22, 0x97, 0x04, 0x0a, 0x11, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x73, 0x43, 0x68,
	0x61, 0x6d, 0x70, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12, 0x15, 0x0a, 0x06, 0x61, 0x63, 0x74,
	0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x61, 0x63, 0x74, 0x49, 0x64,
	0x12, 0x1d, 0x0a, 0x0a, 0x73, 0x74, 0x61, 0x72, 0x74, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x73, 0x74, 0x61, 0x72, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x12,
	0x19, 0x0a, 0x08, 0x65, 0x6e, 0x64, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x07, 0x65, 0x6e, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x28, 0x0a, 0x10, 0x74, 0x6f,
	0x70, 0x6c, 0x69, 0x73, 0x74, 0x5f, 0x74, 0x61, 0x62, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x74, 0x6f, 0x70, 0x6c, 0x69, 0x73, 0x74, 0x54, 0x61, 0x62,
	0x4e, 0x61, 0x6d, 0x65, 0x12, 0x3f, 0x0a, 0x0a, 0x63, 0x6f, 0x6d, 0x70, 0x5f, 0x74, 0x79, 0x70,
	0x65, 0x73, 0x18, 0x05, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x73, 0x6e, 0x61, 0x6b, 0x65,
	0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x73, 0x43, 0x68, 0x61,
	0x6d, 0x70, 0x43, 0x6f, 0x6d, 0x70, 0x54, 0x79, 0x70, 0x65, 0x52, 0x09, 0x63, 0x6f, 0x6d, 0x70,
	0x54, 0x79, 0x70, 0x65, 0x73, 0x12, 0x36, 0x0a, 0x05, 0x61, 0x72, 0x65, 0x61, 0x73, 0x18, 0x06,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x73, 0x6e, 0x61, 0x6b, 0x65, 0x63, 0x6f, 0x6d, 0x6d,
	0x6f, 0x6e, 0x2e, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x73, 0x43, 0x68, 0x61, 0x6d, 0x70, 0x41, 0x72,
	0x65, 0x61, 0x54, 0x79, 0x70, 0x65, 0x52, 0x05, 0x61, 0x72, 0x65, 0x61, 0x73, 0x12, 0x23, 0x0a,
	0x0d, 0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x61, 0x6c, 0x5f, 0x6c, 0x69, 0x6e, 0x6b, 0x18, 0x07,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x61, 0x6c, 0x4c, 0x69,
	0x6e, 0x6b, 0x12, 0x23, 0x0a, 0x0d, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x61, 0x6c, 0x5f, 0x6c,
	0x69, 0x6e, 0x6b, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x6e, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x61, 0x6c, 0x4c, 0x69, 0x6e, 0x6b, 0x12, 0x3d, 0x0a, 0x09, 0x75, 0x73, 0x65, 0x72, 0x5f,
	0x69, 0x6e, 0x66, 0x6f, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x73, 0x6e, 0x61,
	0x6b, 0x65, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x73, 0x43,
	0x68, 0x61, 0x6d, 0x70, 0x55, 0x73, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x08, 0x75, 0x73,
	0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x35, 0x0a, 0x06, 0x70, 0x68, 0x61, 0x73, 0x65, 0x73,
	0x18, 0x0a, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x73, 0x6e, 0x61, 0x6b, 0x65, 0x63, 0x6f,
	0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x73, 0x43, 0x68, 0x61, 0x6d, 0x70,
	0x50, 0x68, 0x61, 0x73, 0x65, 0x52, 0x06, 0x70, 0x68, 0x61, 0x73, 0x65, 0x73, 0x12, 0x22, 0x0a,
	0x0d, 0x63, 0x75, 0x72, 0x5f, 0x70, 0x68, 0x61, 0x73, 0x65, 0x5f, 0x6e, 0x75, 0x6d, 0x18, 0x0b,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x0b, 0x63, 0x75, 0x72, 0x50, 0x68, 0x61, 0x73, 0x65, 0x4e, 0x75,
	0x6d, 0x12, 0x2a, 0x0a, 0x11, 0x74, 0x6f, 0x70, 0x6c, 0x69, 0x73, 0x74, 0x5f, 0x69, 0x74, 0x65,
	0x6d, 0x5f, 0x6c, 0x69, 0x6e, 0x6b, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x74, 0x6f,
	0x70, 0x6c, 0x69, 0x73, 0x74, 0x49, 0x74, 0x65, 0x6d, 0x4c, 0x69, 0x6e, 0x6b, 0x22, 0xba, 0x01,
	0x0a, 0x10, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x73, 0x43, 0x68, 0x61, 0x6d, 0x70, 0x50, 0x68, 0x61,
	0x73, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x70, 0x68, 0x61, 0x73, 0x65, 0x5f, 0x6e, 0x75, 0x6d, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x70, 0x68, 0x61, 0x73, 0x65, 0x4e, 0x75, 0x6d, 0x12,
	0x14, 0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05,
	0x74, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x73, 0x74, 0x61, 0x72, 0x74, 0x5f, 0x74,
	0x69, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x73, 0x74, 0x61, 0x72, 0x74,
	0x54, 0x69, 0x6d, 0x65, 0x12, 0x19, 0x0a, 0x08, 0x65, 0x6e, 0x64, 0x5f, 0x74, 0x69, 0x6d, 0x65,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x65, 0x6e, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x12,
	0x19, 0x0a, 0x08, 0x62, 0x74, 0x6e, 0x5f, 0x6c, 0x69, 0x6e, 0x6b, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x07, 0x62, 0x74, 0x6e, 0x4c, 0x69, 0x6e, 0x6b, 0x12, 0x1e, 0x0a, 0x0b, 0x62, 0x74,
	0x6e, 0x5f, 0x69, 0x6d, 0x67, 0x5f, 0x75, 0x72, 0x6c, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x09, 0x62, 0x74, 0x6e, 0x49, 0x6d, 0x67, 0x55, 0x72, 0x6c, 0x22, 0x91, 0x01, 0x0a, 0x13, 0x50,
	0x6f, 0x69, 0x6e, 0x74, 0x73, 0x43, 0x68, 0x61, 0x6d, 0x70, 0x43, 0x6f, 0x6d, 0x70, 0x54, 0x79,
	0x70, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x63, 0x6f, 0x6d, 0x70, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x63, 0x6f, 0x6d, 0x70, 0x54, 0x79, 0x70, 0x65, 0x12,
	0x1b, 0x0a, 0x09, 0x63, 0x6f, 0x6d, 0x70, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x08, 0x63, 0x6f, 0x6d, 0x70, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1d, 0x0a, 0x0a,
	0x70, 0x6f, 0x69, 0x6e, 0x74, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x09, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x21, 0x0a, 0x0c, 0x77,
	0x69, 0x74, 0x68, 0x5f, 0x70, 0x61, 0x72, 0x74, 0x6e, 0x65, 0x72, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x08, 0x52, 0x0b, 0x77, 0x69, 0x74, 0x68, 0x50, 0x61, 0x72, 0x74, 0x6e, 0x65, 0x72, 0x22, 0x4f,
	0x0a, 0x13, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x73, 0x43, 0x68, 0x61, 0x6d, 0x70, 0x41, 0x72, 0x65,
	0x61, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x61, 0x72, 0x65, 0x61, 0x5f, 0x74, 0x79,
	0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x61, 0x72, 0x65, 0x61, 0x54, 0x79,
	0x70, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x61, 0x72, 0x65, 0x61, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x61, 0x72, 0x65, 0x61, 0x4e, 0x61, 0x6d, 0x65, 0x22,
	0x67, 0x0a, 0x13, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x73, 0x43, 0x68, 0x61, 0x6d, 0x70, 0x55, 0x73,
	0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x1b, 0x0a, 0x09, 0x61, 0x72, 0x65, 0x61, 0x5f, 0x74,
	0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x61, 0x72, 0x65, 0x61, 0x54,
	0x79, 0x70, 0x65, 0x12, 0x33, 0x0a, 0x16, 0x61, 0x72, 0x65, 0x61, 0x5f, 0x74, 0x79, 0x70, 0x65,
	0x5f, 0x77, 0x69, 0x74, 0x68, 0x5f, 0x70, 0x61, 0x72, 0x74, 0x6e, 0x65, 0x72, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x13, 0x61, 0x72, 0x65, 0x61, 0x54, 0x79, 0x70, 0x65, 0x57, 0x69, 0x74,
	0x68, 0x50, 0x61, 0x72, 0x74, 0x6e, 0x65, 0x72, 0x42, 0x2d, 0x5a, 0x2b, 0x67, 0x69, 0x74, 0x2e,
	0x31, 0x37, 0x7a, 0x6a, 0x68, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x73, 0x6e, 0x61, 0x6b, 0x65, 0x2f,
	0x73, 0x6e, 0x61, 0x6b, 0x65, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x73, 0x6e, 0x61, 0x6b,
	0x65, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_snakecommon_activity_config_proto_rawDescOnce sync.Once
	file_snakecommon_activity_config_proto_rawDescData = file_snakecommon_activity_config_proto_rawDesc
)

func file_snakecommon_activity_config_proto_rawDescGZIP() []byte {
	file_snakecommon_activity_config_proto_rawDescOnce.Do(func() {
		file_snakecommon_activity_config_proto_rawDescData = protoimpl.X.CompressGZIP(file_snakecommon_activity_config_proto_rawDescData)
	})
	return file_snakecommon_activity_config_proto_rawDescData
}

var file_snakecommon_activity_config_proto_msgTypes = make([]protoimpl.MessageInfo, 11)
var file_snakecommon_activity_config_proto_goTypes = []interface{}{
	(*FarmConfig)(nil),               // 0: snakecommon.FarmConfig
	(*FarmHomePrompt)(nil),           // 1: snakecommon.FarmHomePrompt
	(*MagicSkinConfig)(nil),          // 2: snakecommon.MagicSkinConfig
	(*MagicSkinData)(nil),            // 3: snakecommon.MagicSkinData
	(*SnakeAreaConfig)(nil),          // 4: snakecommon.SnakeAreaConfig
	(*PointsChampConfig)(nil),        // 5: snakecommon.PointsChampConfig
	(*PointsChampPhase)(nil),         // 6: snakecommon.PointsChampPhase
	(*PointsChampCompType)(nil),      // 7: snakecommon.PointsChampCompType
	(*PointsChampAreaType)(nil),      // 8: snakecommon.PointsChampAreaType
	(*PointsChampUserInfo)(nil),      // 9: snakecommon.PointsChampUserInfo
	(*MagicSkinConfig_DescItem)(nil), // 10: snakecommon.MagicSkinConfig.DescItem
	(*CRewardItem)(nil),              // 11: snakecommon.CRewardItem
}
var file_snakecommon_activity_config_proto_depIdxs = []int32{
	1,  // 0: snakecommon.FarmConfig.home_prompt:type_name -> snakecommon.FarmHomePrompt
	3,  // 1: snakecommon.MagicSkinConfig.data:type_name -> snakecommon.MagicSkinData
	10, // 2: snakecommon.MagicSkinConfig.desc:type_name -> snakecommon.MagicSkinConfig.DescItem
	11, // 3: snakecommon.SnakeAreaConfig.rewardItem:type_name -> snakecommon.CRewardItem
	7,  // 4: snakecommon.PointsChampConfig.comp_types:type_name -> snakecommon.PointsChampCompType
	8,  // 5: snakecommon.PointsChampConfig.areas:type_name -> snakecommon.PointsChampAreaType
	9,  // 6: snakecommon.PointsChampConfig.user_info:type_name -> snakecommon.PointsChampUserInfo
	6,  // 7: snakecommon.PointsChampConfig.phases:type_name -> snakecommon.PointsChampPhase
	8,  // [8:8] is the sub-list for method output_type
	8,  // [8:8] is the sub-list for method input_type
	8,  // [8:8] is the sub-list for extension type_name
	8,  // [8:8] is the sub-list for extension extendee
	0,  // [0:8] is the sub-list for field type_name
}

func init() { file_snakecommon_activity_config_proto_init() }
func file_snakecommon_activity_config_proto_init() {
	if File_snakecommon_activity_config_proto != nil {
		return
	}
	file_snakecommon_config_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_snakecommon_activity_config_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FarmConfig); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_snakecommon_activity_config_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FarmHomePrompt); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_snakecommon_activity_config_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MagicSkinConfig); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_snakecommon_activity_config_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MagicSkinData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_snakecommon_activity_config_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SnakeAreaConfig); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_snakecommon_activity_config_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PointsChampConfig); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_snakecommon_activity_config_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PointsChampPhase); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_snakecommon_activity_config_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PointsChampCompType); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_snakecommon_activity_config_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PointsChampAreaType); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_snakecommon_activity_config_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PointsChampUserInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_snakecommon_activity_config_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MagicSkinConfig_DescItem); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_snakecommon_activity_config_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   11,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_snakecommon_activity_config_proto_goTypes,
		DependencyIndexes: file_snakecommon_activity_config_proto_depIdxs,
		MessageInfos:      file_snakecommon_activity_config_proto_msgTypes,
	}.Build()
	File_snakecommon_activity_config_proto = out.File
	file_snakecommon_activity_config_proto_rawDesc = nil
	file_snakecommon_activity_config_proto_goTypes = nil
	file_snakecommon_activity_config_proto_depIdxs = nil
}
