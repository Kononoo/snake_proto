// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.27.1
// 	protoc        v3.16.1
// source: snakehead/snakehead.proto

package snakehead

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// 用户语言
type Lang int32

const (
	Lang__     Lang = 0
	Lang_zh_CN Lang = 8  //简体中文
	Lang_zh_TC Lang = 9  //繁体中文
	Lang_en    Lang = 14 //英语
	Lang_ja    Lang = 27 //日语
	Lang_ko    Lang = 28 //韩语
)

// Enum value maps for Lang.
var (
	Lang_name = map[int32]string{
		0:  "_",
		8:  "zh_CN",
		9:  "zh_TC",
		14: "en",
		27: "ja",
		28: "ko",
	}
	Lang_value = map[string]int32{
		"_":     0,
		"zh_CN": 8,
		"zh_TC": 9,
		"en":    14,
		"ja":    27,
		"ko":    28,
	}
)

func (x Lang) Enum() *Lang {
	p := new(Lang)
	*p = x
	return p
}

func (x Lang) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Lang) Descriptor() protoreflect.EnumDescriptor {
	return file_snakehead_snakehead_proto_enumTypes[0].Descriptor()
}

func (Lang) Type() protoreflect.EnumType {
	return &file_snakehead_snakehead_proto_enumTypes[0]
}

func (x Lang) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Lang.Descriptor instead.
func (Lang) EnumDescriptor() ([]byte, []int) {
	return file_snakehead_snakehead_proto_rawDescGZIP(), []int{0}
}

// 游戏模式，除100可得gameId
type GameMode int32

const (
	GameMode_Undef           GameMode = 0
	GameMode_UnityPlatform   GameMode = 900 // unity
	GameMode_UnityQualifying GameMode = 901 // unity 团战
	GameMode_UnityKuromi     GameMode = 902 // 库洛米双人玩法
	GameMode_UnityGoat       GameMode = 906 // 喜灰玩法
)

// Enum value maps for GameMode.
var (
	GameMode_name = map[int32]string{
		0:   "Undef",
		900: "UnityPlatform",
		901: "UnityQualifying",
		902: "UnityKuromi",
		906: "UnityGoat",
	}
	GameMode_value = map[string]int32{
		"Undef":           0,
		"UnityPlatform":   900,
		"UnityQualifying": 901,
		"UnityKuromi":     902,
		"UnityGoat":       906,
	}
)

func (x GameMode) Enum() *GameMode {
	p := new(GameMode)
	*p = x
	return p
}

func (x GameMode) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (GameMode) Descriptor() protoreflect.EnumDescriptor {
	return file_snakehead_snakehead_proto_enumTypes[1].Descriptor()
}

func (GameMode) Type() protoreflect.EnumType {
	return &file_snakehead_snakehead_proto_enumTypes[1]
}

func (x GameMode) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use GameMode.Descriptor instead.
func (GameMode) EnumDescriptor() ([]byte, []int) {
	return file_snakehead_snakehead_proto_rawDescGZIP(), []int{1}
}

type RspCode int32

const (
	RspCode_Undefined    RspCode = 0
	RspCode_Ok           RspCode = 200
	RspCode_Err          RspCode = 500
	RspCode_UnAuth       RspCode = 401 //sid不对
	RspCode_NoGame       RspCode = 410 //游戏不存在
	RspCode_BadPing      RspCode = 411 //ping值有问题，需要重ping
	RspCode_UnBind       RspCode = 412 //未绑定，需重新绑定服务器
	RspCode_RoomNotExist RspCode = 501 // 房间不存在(之前在def里面定义的)
)

// Enum value maps for RspCode.
var (
	RspCode_name = map[int32]string{
		0:   "Undefined",
		200: "Ok",
		500: "Err",
		401: "UnAuth",
		410: "NoGame",
		411: "BadPing",
		412: "UnBind",
		501: "RoomNotExist",
	}
	RspCode_value = map[string]int32{
		"Undefined":    0,
		"Ok":           200,
		"Err":          500,
		"UnAuth":       401,
		"NoGame":       410,
		"BadPing":      411,
		"UnBind":       412,
		"RoomNotExist": 501,
	}
)

func (x RspCode) Enum() *RspCode {
	p := new(RspCode)
	*p = x
	return p
}

func (x RspCode) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (RspCode) Descriptor() protoreflect.EnumDescriptor {
	return file_snakehead_snakehead_proto_enumTypes[2].Descriptor()
}

func (RspCode) Type() protoreflect.EnumType {
	return &file_snakehead_snakehead_proto_enumTypes[2]
}

func (x RspCode) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use RspCode.Descriptor instead.
func (RspCode) EnumDescriptor() ([]byte, []int) {
	return file_snakehead_snakehead_proto_rawDescGZIP(), []int{2}
}

type UnityReqHead struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Uid  string `protobuf:"bytes,1,opt,name=uid,proto3" json:"uid,omitempty"`
	Type int32  `protobuf:"varint,2,opt,name=type,proto3" json:"type,omitempty"` // 标记具体请求，值见不同包下OpType
	Rid  int64  `protobuf:"varint,3,opt,name=rid,proto3" json:"rid,omitempty"`   // 游戏房间id，暂只在游戏服请求有用
	Pid  int32  `protobuf:"varint,4,opt,name=pid,proto3" json:"pid,omitempty"`   // 请求包id，每次请求唯一
	Lang Lang   `protobuf:"varint,5,opt,name=lang,proto3,enum=snakehead.Lang" json:"lang,omitempty"`
}

func (x *UnityReqHead) Reset() {
	*x = UnityReqHead{}
	if protoimpl.UnsafeEnabled {
		mi := &file_snakehead_snakehead_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UnityReqHead) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UnityReqHead) ProtoMessage() {}

func (x *UnityReqHead) ProtoReflect() protoreflect.Message {
	mi := &file_snakehead_snakehead_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UnityReqHead.ProtoReflect.Descriptor instead.
func (*UnityReqHead) Descriptor() ([]byte, []int) {
	return file_snakehead_snakehead_proto_rawDescGZIP(), []int{0}
}

func (x *UnityReqHead) GetUid() string {
	if x != nil {
		return x.Uid
	}
	return ""
}

func (x *UnityReqHead) GetType() int32 {
	if x != nil {
		return x.Type
	}
	return 0
}

func (x *UnityReqHead) GetRid() int64 {
	if x != nil {
		return x.Rid
	}
	return 0
}

func (x *UnityReqHead) GetPid() int32 {
	if x != nil {
		return x.Pid
	}
	return 0
}

func (x *UnityReqHead) GetLang() Lang {
	if x != nil {
		return x.Lang
	}
	return Lang__
}

type UnityRspHead struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Uid  string `protobuf:"bytes,1,opt,name=uid,proto3" json:"uid,omitempty"`
	Type int32  `protobuf:"varint,3,opt,name=type,proto3" json:"type,omitempty"` // 透传请求值
	Rid  int64  `protobuf:"varint,4,opt,name=rid,proto3" json:"rid,omitempty"`
	Code int32  `protobuf:"varint,5,opt,name=code,proto3" json:"code,omitempty"` // 200成功，500失败
	Msg  string `protobuf:"bytes,6,opt,name=msg,proto3" json:"msg,omitempty"`    // 一般500时有用，弹toast
	Pid  int32  `protobuf:"varint,7,opt,name=pid,proto3" json:"pid,omitempty"`   // 透传请求值
}

func (x *UnityRspHead) Reset() {
	*x = UnityRspHead{}
	if protoimpl.UnsafeEnabled {
		mi := &file_snakehead_snakehead_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UnityRspHead) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UnityRspHead) ProtoMessage() {}

func (x *UnityRspHead) ProtoReflect() protoreflect.Message {
	mi := &file_snakehead_snakehead_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UnityRspHead.ProtoReflect.Descriptor instead.
func (*UnityRspHead) Descriptor() ([]byte, []int) {
	return file_snakehead_snakehead_proto_rawDescGZIP(), []int{1}
}

func (x *UnityRspHead) GetUid() string {
	if x != nil {
		return x.Uid
	}
	return ""
}

func (x *UnityRspHead) GetType() int32 {
	if x != nil {
		return x.Type
	}
	return 0
}

func (x *UnityRspHead) GetRid() int64 {
	if x != nil {
		return x.Rid
	}
	return 0
}

func (x *UnityRspHead) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *UnityRspHead) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

func (x *UnityRspHead) GetPid() int32 {
	if x != nil {
		return x.Pid
	}
	return 0
}

// --------------grpc做网关(忽略)-------------
type CommonUnityReqMsg struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Head *UnityReqHead `protobuf:"bytes,1,opt,name=head,proto3" json:"head,omitempty"`
	Body []byte        `protobuf:"bytes,2,opt,name=body,proto3" json:"body,omitempty"`
}

func (x *CommonUnityReqMsg) Reset() {
	*x = CommonUnityReqMsg{}
	if protoimpl.UnsafeEnabled {
		mi := &file_snakehead_snakehead_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CommonUnityReqMsg) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CommonUnityReqMsg) ProtoMessage() {}

func (x *CommonUnityReqMsg) ProtoReflect() protoreflect.Message {
	mi := &file_snakehead_snakehead_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CommonUnityReqMsg.ProtoReflect.Descriptor instead.
func (*CommonUnityReqMsg) Descriptor() ([]byte, []int) {
	return file_snakehead_snakehead_proto_rawDescGZIP(), []int{2}
}

func (x *CommonUnityReqMsg) GetHead() *UnityReqHead {
	if x != nil {
		return x.Head
	}
	return nil
}

func (x *CommonUnityReqMsg) GetBody() []byte {
	if x != nil {
		return x.Body
	}
	return nil
}

type CommonUnityRspMsg struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Head *UnityRspHead `protobuf:"bytes,1,opt,name=head,proto3" json:"head,omitempty"`
	Body []byte        `protobuf:"bytes,2,opt,name=body,proto3" json:"body,omitempty"`
}

func (x *CommonUnityRspMsg) Reset() {
	*x = CommonUnityRspMsg{}
	if protoimpl.UnsafeEnabled {
		mi := &file_snakehead_snakehead_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CommonUnityRspMsg) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CommonUnityRspMsg) ProtoMessage() {}

func (x *CommonUnityRspMsg) ProtoReflect() protoreflect.Message {
	mi := &file_snakehead_snakehead_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CommonUnityRspMsg.ProtoReflect.Descriptor instead.
func (*CommonUnityRspMsg) Descriptor() ([]byte, []int) {
	return file_snakehead_snakehead_proto_rawDescGZIP(), []int{3}
}

func (x *CommonUnityRspMsg) GetHead() *UnityRspHead {
	if x != nil {
		return x.Head
	}
	return nil
}

func (x *CommonUnityRspMsg) GetBody() []byte {
	if x != nil {
		return x.Body
	}
	return nil
}

var File_snakehead_snakehead_proto protoreflect.FileDescriptor

var file_snakehead_snakehead_proto_rawDesc = []byte{
	0x0a, 0x19, 0x73, 0x6e, 0x61, 0x6b, 0x65, 0x68, 0x65, 0x61, 0x64, 0x2f, 0x73, 0x6e, 0x61, 0x6b,
	0x65, 0x68, 0x65, 0x61, 0x64, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x09, 0x73, 0x6e, 0x61,
	0x6b, 0x65, 0x68, 0x65, 0x61, 0x64, 0x22, 0x7d, 0x0a, 0x0c, 0x55, 0x6e, 0x69, 0x74, 0x79, 0x52,
	0x65, 0x71, 0x48, 0x65, 0x61, 0x64, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x03, 0x75, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x10, 0x0a, 0x03,
	0x72, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x03, 0x72, 0x69, 0x64, 0x12, 0x10,
	0x0a, 0x03, 0x70, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x03, 0x70, 0x69, 0x64,
	0x12, 0x23, 0x0a, 0x04, 0x6c, 0x61, 0x6e, 0x67, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x0f,
	0x2e, 0x73, 0x6e, 0x61, 0x6b, 0x65, 0x68, 0x65, 0x61, 0x64, 0x2e, 0x4c, 0x61, 0x6e, 0x67, 0x52,
	0x04, 0x6c, 0x61, 0x6e, 0x67, 0x22, 0x7e, 0x0a, 0x0c, 0x55, 0x6e, 0x69, 0x74, 0x79, 0x52, 0x73,
	0x70, 0x48, 0x65, 0x61, 0x64, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x03, 0x75, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x72,
	0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x03, 0x72, 0x69, 0x64, 0x12, 0x12, 0x0a,
	0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x63, 0x6f, 0x64,
	0x65, 0x12, 0x10, 0x0a, 0x03, 0x6d, 0x73, 0x67, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03,
	0x6d, 0x73, 0x67, 0x12, 0x10, 0x0a, 0x03, 0x70, 0x69, 0x64, 0x18, 0x07, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x03, 0x70, 0x69, 0x64, 0x22, 0x54, 0x0a, 0x11, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x55,
	0x6e, 0x69, 0x74, 0x79, 0x52, 0x65, 0x71, 0x4d, 0x73, 0x67, 0x12, 0x2b, 0x0a, 0x04, 0x68, 0x65,
	0x61, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x73, 0x6e, 0x61, 0x6b, 0x65,
	0x68, 0x65, 0x61, 0x64, 0x2e, 0x55, 0x6e, 0x69, 0x74, 0x79, 0x52, 0x65, 0x71, 0x48, 0x65, 0x61,
	0x64, 0x52, 0x04, 0x68, 0x65, 0x61, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x62, 0x6f, 0x64, 0x79, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x04, 0x62, 0x6f, 0x64, 0x79, 0x22, 0x54, 0x0a, 0x11, 0x43,
	0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x55, 0x6e, 0x69, 0x74, 0x79, 0x52, 0x73, 0x70, 0x4d, 0x73, 0x67,
	0x12, 0x2b, 0x0a, 0x04, 0x68, 0x65, 0x61, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17,
	0x2e, 0x73, 0x6e, 0x61, 0x6b, 0x65, 0x68, 0x65, 0x61, 0x64, 0x2e, 0x55, 0x6e, 0x69, 0x74, 0x79,
	0x52, 0x73, 0x70, 0x48, 0x65, 0x61, 0x64, 0x52, 0x04, 0x68, 0x65, 0x61, 0x64, 0x12, 0x12, 0x0a,
	0x04, 0x62, 0x6f, 0x64, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x04, 0x62, 0x6f, 0x64,
	0x79, 0x2a, 0x3b, 0x0a, 0x04, 0x4c, 0x61, 0x6e, 0x67, 0x12, 0x05, 0x0a, 0x01, 0x5f, 0x10, 0x00,
	0x12, 0x09, 0x0a, 0x05, 0x7a, 0x68, 0x5f, 0x43, 0x4e, 0x10, 0x08, 0x12, 0x09, 0x0a, 0x05, 0x7a,
	0x68, 0x5f, 0x54, 0x43, 0x10, 0x09, 0x12, 0x06, 0x0a, 0x02, 0x65, 0x6e, 0x10, 0x0e, 0x12, 0x06,
	0x0a, 0x02, 0x6a, 0x61, 0x10, 0x1b, 0x12, 0x06, 0x0a, 0x02, 0x6b, 0x6f, 0x10, 0x1c, 0x2a, 0x61,
	0x0a, 0x08, 0x47, 0x61, 0x6d, 0x65, 0x4d, 0x6f, 0x64, 0x65, 0x12, 0x09, 0x0a, 0x05, 0x55, 0x6e,
	0x64, 0x65, 0x66, 0x10, 0x00, 0x12, 0x12, 0x0a, 0x0d, 0x55, 0x6e, 0x69, 0x74, 0x79, 0x50, 0x6c,
	0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x10, 0x84, 0x07, 0x12, 0x14, 0x0a, 0x0f, 0x55, 0x6e, 0x69,
	0x74, 0x79, 0x51, 0x75, 0x61, 0x6c, 0x69, 0x66, 0x79, 0x69, 0x6e, 0x67, 0x10, 0x85, 0x07, 0x12,
	0x10, 0x0a, 0x0b, 0x55, 0x6e, 0x69, 0x74, 0x79, 0x4b, 0x75, 0x72, 0x6f, 0x6d, 0x69, 0x10, 0x86,
	0x07, 0x12, 0x0e, 0x0a, 0x09, 0x55, 0x6e, 0x69, 0x74, 0x79, 0x47, 0x6f, 0x61, 0x74, 0x10, 0x8a,
	0x07, 0x2a, 0x73, 0x0a, 0x07, 0x52, 0x73, 0x70, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x0d, 0x0a, 0x09,
	0x55, 0x6e, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x64, 0x10, 0x00, 0x12, 0x07, 0x0a, 0x02, 0x4f,
	0x6b, 0x10, 0xc8, 0x01, 0x12, 0x08, 0x0a, 0x03, 0x45, 0x72, 0x72, 0x10, 0xf4, 0x03, 0x12, 0x0b,
	0x0a, 0x06, 0x55, 0x6e, 0x41, 0x75, 0x74, 0x68, 0x10, 0x91, 0x03, 0x12, 0x0b, 0x0a, 0x06, 0x4e,
	0x6f, 0x47, 0x61, 0x6d, 0x65, 0x10, 0x9a, 0x03, 0x12, 0x0c, 0x0a, 0x07, 0x42, 0x61, 0x64, 0x50,
	0x69, 0x6e, 0x67, 0x10, 0x9b, 0x03, 0x12, 0x0b, 0x0a, 0x06, 0x55, 0x6e, 0x42, 0x69, 0x6e, 0x64,
	0x10, 0x9c, 0x03, 0x12, 0x11, 0x0a, 0x0c, 0x52, 0x6f, 0x6f, 0x6d, 0x4e, 0x6f, 0x74, 0x45, 0x78,
	0x69, 0x73, 0x74, 0x10, 0xf5, 0x03, 0x32, 0x58, 0x0a, 0x07, 0x47, 0x61, 0x74, 0x65, 0x77, 0x61,
	0x79, 0x12, 0x4d, 0x0a, 0x09, 0x75, 0x6e, 0x69, 0x74, 0x79, 0x47, 0x72, 0x70, 0x63, 0x12, 0x1c,
	0x2e, 0x73, 0x6e, 0x61, 0x6b, 0x65, 0x68, 0x65, 0x61, 0x64, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x6f,
	0x6e, 0x55, 0x6e, 0x69, 0x74, 0x79, 0x52, 0x65, 0x71, 0x4d, 0x73, 0x67, 0x1a, 0x1c, 0x2e, 0x73,
	0x6e, 0x61, 0x6b, 0x65, 0x68, 0x65, 0x61, 0x64, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x55,
	0x6e, 0x69, 0x74, 0x79, 0x52, 0x73, 0x70, 0x4d, 0x73, 0x67, 0x22, 0x00, 0x28, 0x01, 0x30, 0x01,
	0x42, 0x2b, 0x5a, 0x29, 0x67, 0x69, 0x74, 0x2e, 0x31, 0x37, 0x7a, 0x6a, 0x68, 0x2e, 0x63, 0x6f,
	0x6d, 0x2f, 0x73, 0x6e, 0x61, 0x6b, 0x65, 0x2f, 0x73, 0x6e, 0x61, 0x6b, 0x65, 0x5f, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x2f, 0x73, 0x6e, 0x61, 0x6b, 0x65, 0x68, 0x65, 0x61, 0x64, 0x62, 0x06, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_snakehead_snakehead_proto_rawDescOnce sync.Once
	file_snakehead_snakehead_proto_rawDescData = file_snakehead_snakehead_proto_rawDesc
)

func file_snakehead_snakehead_proto_rawDescGZIP() []byte {
	file_snakehead_snakehead_proto_rawDescOnce.Do(func() {
		file_snakehead_snakehead_proto_rawDescData = protoimpl.X.CompressGZIP(file_snakehead_snakehead_proto_rawDescData)
	})
	return file_snakehead_snakehead_proto_rawDescData
}

var file_snakehead_snakehead_proto_enumTypes = make([]protoimpl.EnumInfo, 3)
var file_snakehead_snakehead_proto_msgTypes = make([]protoimpl.MessageInfo, 4)
var file_snakehead_snakehead_proto_goTypes = []interface{}{
	(Lang)(0),                 // 0: snakehead.Lang
	(GameMode)(0),             // 1: snakehead.GameMode
	(RspCode)(0),              // 2: snakehead.RspCode
	(*UnityReqHead)(nil),      // 3: snakehead.UnityReqHead
	(*UnityRspHead)(nil),      // 4: snakehead.UnityRspHead
	(*CommonUnityReqMsg)(nil), // 5: snakehead.CommonUnityReqMsg
	(*CommonUnityRspMsg)(nil), // 6: snakehead.CommonUnityRspMsg
}
var file_snakehead_snakehead_proto_depIdxs = []int32{
	0, // 0: snakehead.UnityReqHead.lang:type_name -> snakehead.Lang
	3, // 1: snakehead.CommonUnityReqMsg.head:type_name -> snakehead.UnityReqHead
	4, // 2: snakehead.CommonUnityRspMsg.head:type_name -> snakehead.UnityRspHead
	5, // 3: snakehead.Gateway.unityGrpc:input_type -> snakehead.CommonUnityReqMsg
	6, // 4: snakehead.Gateway.unityGrpc:output_type -> snakehead.CommonUnityRspMsg
	4, // [4:5] is the sub-list for method output_type
	3, // [3:4] is the sub-list for method input_type
	3, // [3:3] is the sub-list for extension type_name
	3, // [3:3] is the sub-list for extension extendee
	0, // [0:3] is the sub-list for field type_name
}

func init() { file_snakehead_snakehead_proto_init() }
func file_snakehead_snakehead_proto_init() {
	if File_snakehead_snakehead_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_snakehead_snakehead_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UnityReqHead); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_snakehead_snakehead_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UnityRspHead); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_snakehead_snakehead_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CommonUnityReqMsg); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_snakehead_snakehead_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CommonUnityRspMsg); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_snakehead_snakehead_proto_rawDesc,
			NumEnums:      3,
			NumMessages:   4,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_snakehead_snakehead_proto_goTypes,
		DependencyIndexes: file_snakehead_snakehead_proto_depIdxs,
		EnumInfos:         file_snakehead_snakehead_proto_enumTypes,
		MessageInfos:      file_snakehead_snakehead_proto_msgTypes,
	}.Build()
	File_snakehead_snakehead_proto = out.File
	file_snakehead_snakehead_proto_rawDesc = nil
	file_snakehead_snakehead_proto_goTypes = nil
	file_snakehead_snakehead_proto_depIdxs = nil
}
